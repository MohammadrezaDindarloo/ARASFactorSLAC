// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

#include <sym/pose3.h>
#include <sym/rot3.h>

namespace sym {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: FK_residual_func_cost1
 *
 * Args:
 *     fh1: Scalar
 *     fv1: Scalar
 *     DeltaRot: Rot3
 *     TransformationMatrix: Pose3
 *     encoder: Matrix41
 *     p_a: Matrix31
 *     p_b: Matrix31
 *     p_c: Matrix31
 *     p_d: Matrix31
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix41
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 4, 1> FkResidualFuncCost1(
    const Scalar fh1, const Scalar fv1, const sym::Rot3<Scalar>& DeltaRot,
    const sym::Pose3<Scalar>& TransformationMatrix, const Eigen::Matrix<Scalar, 4, 1>& encoder,
    const Eigen::Matrix<Scalar, 3, 1>& p_a, const Eigen::Matrix<Scalar, 3, 1>& p_b,
    const Eigen::Matrix<Scalar, 3, 1>& p_c, const Eigen::Matrix<Scalar, 3, 1>& p_d,
    const Scalar epsilon) {
  // Total ops: 480

  // Unused inputs
  (void)encoder;
  (void)epsilon;

  // Input arrays
  const Eigen::Matrix<Scalar, 4, 1>& _DeltaRot = DeltaRot.Data();
  const Eigen::Matrix<Scalar, 7, 1>& _TransformationMatrix = TransformationMatrix.Data();

  // Intermediate terms (158)
  const Scalar _tmp0 =
      _DeltaRot[0] * _TransformationMatrix[3] - _DeltaRot[1] * _TransformationMatrix[2] +
      _DeltaRot[2] * _TransformationMatrix[1] + _DeltaRot[3] * _TransformationMatrix[0];
  const Scalar _tmp1 =
      _DeltaRot[0] * _TransformationMatrix[2] + _DeltaRot[1] * _TransformationMatrix[3] -
      _DeltaRot[2] * _TransformationMatrix[0] + _DeltaRot[3] * _TransformationMatrix[1];
  const Scalar _tmp2 = 2 * _tmp0 * _tmp1;
  const Scalar _tmp3 =
      -_DeltaRot[0] * _TransformationMatrix[1] + _DeltaRot[1] * _TransformationMatrix[0] +
      _DeltaRot[2] * _TransformationMatrix[3] + _DeltaRot[3] * _TransformationMatrix[2];
  const Scalar _tmp4 =
      -2 * _DeltaRot[0] * _TransformationMatrix[0] - 2 * _DeltaRot[1] * _TransformationMatrix[1] -
      2 * _DeltaRot[2] * _TransformationMatrix[2] + 2 * _DeltaRot[3] * _TransformationMatrix[3];
  const Scalar _tmp5 = _tmp3 * _tmp4;
  const Scalar _tmp6 = Scalar(0.20999999999999999) * _tmp2 + Scalar(0.20999999999999999) * _tmp5;
  const Scalar _tmp7 = -_tmp6;
  const Scalar _tmp8 = 2 * _tmp3;
  const Scalar _tmp9 = _tmp1 * _tmp8;
  const Scalar _tmp10 = _tmp0 * _tmp4;
  const Scalar _tmp11 = -_tmp10 + _tmp9;
  const Scalar _tmp12 = -Scalar(0.010999999999999999) * _tmp11;
  const Scalar _tmp13 = -2 * std::pow(_tmp0, Scalar(2));
  const Scalar _tmp14 = -2 * std::pow(_tmp3, Scalar(2));
  const Scalar _tmp15 = Scalar(0.20999999999999999) * _tmp13 +
                        Scalar(0.20999999999999999) * _tmp14 + Scalar(0.20999999999999999);
  const Scalar _tmp16 = _tmp12 - _tmp15;
  const Scalar _tmp17 = _tmp16 + _tmp7;
  const Scalar _tmp18 = _TransformationMatrix[5] + _tmp17;
  const Scalar _tmp19 = 1 - 2 * std::pow(_tmp1, Scalar(2));
  const Scalar _tmp20 = Scalar(0.20999999999999999) * _tmp14 + Scalar(0.20999999999999999) * _tmp19;
  const Scalar _tmp21 = -_tmp20;
  const Scalar _tmp22 = _tmp0 * _tmp8;
  const Scalar _tmp23 = _tmp1 * _tmp4;
  const Scalar _tmp24 = _tmp22 + _tmp23;
  const Scalar _tmp25 = -Scalar(0.010999999999999999) * _tmp24;
  const Scalar _tmp26 = Scalar(0.20999999999999999) * _tmp2 - Scalar(0.20999999999999999) * _tmp5;
  const Scalar _tmp27 = _tmp25 - _tmp26;
  const Scalar _tmp28 = _tmp21 + _tmp27;
  const Scalar _tmp29 = _TransformationMatrix[4] + _tmp28;
  const Scalar _tmp30 = Scalar(1.0) / (fh1);
  const Scalar _tmp31 = std::asinh(_tmp30 * fv1);
  const Scalar _tmp32 = Scalar(9.6622558468725703) * fh1;
  const Scalar _tmp33 = Scalar(0.1034955) * _tmp30;
  const Scalar _tmp34 = Scalar(0.20999999999999999) * _tmp22 - Scalar(0.20999999999999999) * _tmp23;
  const Scalar _tmp35 = -_tmp34;
  const Scalar _tmp36 =
      -Scalar(0.010999999999999999) * _tmp13 - Scalar(0.010999999999999999) * _tmp19;
  const Scalar _tmp37 = Scalar(0.20999999999999999) * _tmp10 + Scalar(0.20999999999999999) * _tmp9;
  const Scalar _tmp38 = _tmp36 - _tmp37;
  const Scalar _tmp39 = _tmp35 + _tmp38;
  const Scalar _tmp40 = _tmp12 + _tmp15;
  const Scalar _tmp41 = _tmp40 + _tmp7;
  const Scalar _tmp42 = _TransformationMatrix[5] + _tmp41;
  const Scalar _tmp43 = _tmp42 - p_d(1, 0);
  const Scalar _tmp44 = _tmp25 + _tmp26;
  const Scalar _tmp45 = _tmp21 + _tmp44;
  const Scalar _tmp46 = _TransformationMatrix[4] + _tmp45;
  const Scalar _tmp47 = _tmp46 - p_d(0, 0);
  const Scalar _tmp48 = std::pow(Scalar(std::pow(_tmp43, Scalar(2)) + std::pow(_tmp47, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp49 = _tmp43 * _tmp48;
  const Scalar _tmp50 = _tmp16 + _tmp6;
  const Scalar _tmp51 = _TransformationMatrix[5] + _tmp50;
  const Scalar _tmp52 = _tmp51 - p_b(1, 0);
  const Scalar _tmp53 = _tmp20 + _tmp27;
  const Scalar _tmp54 = _TransformationMatrix[4] + _tmp53;
  const Scalar _tmp55 = _tmp54 - p_b(0, 0);
  const Scalar _tmp56 = Scalar(1.0) / (_tmp55);
  const Scalar _tmp57 = _tmp52 * _tmp56;
  const Scalar _tmp58 = _tmp47 * _tmp48;
  const Scalar _tmp59 = -_tmp49 + _tmp57 * _tmp58;
  const Scalar _tmp60 = _tmp36 + _tmp37;
  const Scalar _tmp61 = _tmp35 + _tmp60;
  const Scalar _tmp62 = _tmp34 + _tmp38;
  const Scalar _tmp63 = _tmp34 + _tmp60;
  const Scalar _tmp64 = _tmp20 + _tmp44;
  const Scalar _tmp65 = _TransformationMatrix[4] + _tmp64;
  const Scalar _tmp66 = _tmp65 - p_c(0, 0);
  const Scalar _tmp67 = _tmp40 + _tmp6;
  const Scalar _tmp68 = _TransformationMatrix[5] + _tmp67;
  const Scalar _tmp69 = _tmp68 - p_c(1, 0);
  const Scalar _tmp70 = std::pow(Scalar(std::pow(_tmp66, Scalar(2)) + std::pow(_tmp69, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp71 = _tmp66 * _tmp70;
  const Scalar _tmp72 = _tmp62 * _tmp71 - _tmp63 * _tmp71;
  const Scalar _tmp73 = _tmp69 * _tmp70;
  const Scalar _tmp74 = Scalar(1.0) / (_tmp57 * _tmp71 - _tmp73);
  const Scalar _tmp75 = _tmp59 * _tmp74;
  const Scalar _tmp76 = _tmp57 * _tmp62;
  const Scalar _tmp77 = _tmp74 * (_tmp63 * _tmp73 - _tmp71 * _tmp76);
  const Scalar _tmp78 = _tmp49 * _tmp61 - _tmp58 * _tmp76 - _tmp59 * _tmp77;
  const Scalar _tmp79 = Scalar(1.0) * _tmp50;
  const Scalar _tmp80 = -_tmp79;
  const Scalar _tmp81 = Scalar(1.0) / (_tmp67 + _tmp80);
  const Scalar _tmp82 = Scalar(1.0) * _tmp53;
  const Scalar _tmp83 = _tmp81 * (-_tmp64 + _tmp82);
  const Scalar _tmp84 = -_tmp58 * _tmp61 + _tmp58 * _tmp62 - _tmp72 * _tmp75 - _tmp78 * _tmp83;
  const Scalar _tmp85 = Scalar(1.0) / (_tmp84);
  const Scalar _tmp86 = Scalar(1.0) * _tmp74;
  const Scalar _tmp87 = Scalar(1.0) * _tmp77;
  const Scalar _tmp88 = -_tmp72 * _tmp86 + _tmp83 * _tmp87;
  const Scalar _tmp89 =
      std::sqrt(Scalar(std::pow(_tmp52, Scalar(2)) + std::pow(_tmp55, Scalar(2))));
  const Scalar _tmp90 = Scalar(1.0) / (_tmp89);
  const Scalar _tmp91 = _tmp56 * _tmp89;
  const Scalar _tmp92 = _tmp91 * (-_tmp50 * _tmp55 * _tmp90 + _tmp52 * _tmp53 * _tmp90);
  const Scalar _tmp93 = -_tmp64 * _tmp73 + _tmp67 * _tmp71 + _tmp71 * _tmp92;
  const Scalar _tmp94 = _tmp41 * _tmp58 - _tmp45 * _tmp49 + _tmp58 * _tmp92 - _tmp75 * _tmp93;
  const Scalar _tmp95 = _tmp85 * _tmp94;
  const Scalar _tmp96 = Scalar(1.0) / (_tmp94);
  const Scalar _tmp97 = _tmp84 * _tmp96;
  const Scalar _tmp98 = _tmp97 * (-_tmp86 * _tmp93 - _tmp88 * _tmp95);
  const Scalar _tmp99 = _tmp85 * (_tmp88 + _tmp98);
  const Scalar _tmp100 = -_tmp59 * _tmp99 + Scalar(1.0);
  const Scalar _tmp101 = _tmp71 * _tmp74;
  const Scalar _tmp102 = _tmp29 - p_a(0, 0);
  const Scalar _tmp103 = _tmp18 - p_a(1, 0);
  const Scalar _tmp104 =
      std::pow(Scalar(std::pow(_tmp102, Scalar(2)) + std::pow(_tmp103, Scalar(2))),
               Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp105 = _tmp103 * _tmp104;
  const Scalar _tmp106 = _tmp105 * fh1;
  const Scalar _tmp107 = _tmp57 * _tmp74;
  const Scalar _tmp108 = _tmp57 * _tmp77 + _tmp76;
  const Scalar _tmp109 = _tmp107 * _tmp72 - _tmp108 * _tmp83 - _tmp62;
  const Scalar _tmp110 = _tmp97 * (_tmp107 * _tmp93 - _tmp109 * _tmp95 - _tmp92);
  const Scalar _tmp111 = _tmp85 * (_tmp109 + _tmp110);
  const Scalar _tmp112 = -_tmp111 * _tmp59 - _tmp57;
  const Scalar _tmp113 = _tmp102 * _tmp104;
  const Scalar _tmp114 = _tmp113 * fh1;
  const Scalar _tmp115 = Scalar(19.620000000000001) - fv1;
  const Scalar _tmp116 = _tmp79 * _tmp83 + _tmp82;
  const Scalar _tmp117 = 0;
  const Scalar _tmp118 = _tmp71 * _tmp75;
  const Scalar _tmp119 = Scalar(1.0) * _tmp96;
  const Scalar _tmp120 = fh1 * (_tmp105 * _tmp28 - _tmp113 * _tmp17);
  const Scalar _tmp121 = -_tmp106 * _tmp91 * (_tmp100 * _tmp101 + _tmp58 * _tmp99) -
                         _tmp114 * _tmp91 * (_tmp101 * _tmp112 + _tmp111 * _tmp58 + Scalar(1.0)) -
                         _tmp115 * _tmp91 * (-_tmp117 * _tmp118 + _tmp117 * _tmp58) -
                         _tmp120 * _tmp91 * (-_tmp118 * _tmp119 + _tmp119 * _tmp58);
  const Scalar _tmp122 = Scalar(1.0) / (_tmp121);
  const Scalar _tmp123 = Scalar(0.1034955) * _tmp122;
  const Scalar _tmp124 = _tmp39 * fh1;
  const Scalar _tmp125 = -_tmp105 * _tmp124 - Scalar(2.3544) * _tmp11 - _tmp17 * fv1;
  const Scalar _tmp126 = _tmp41 + _tmp80;
  const Scalar _tmp127 = _tmp126 * _tmp83;
  const Scalar _tmp128 = Scalar(1.0) / (-_tmp127 - _tmp45 + _tmp82);
  const Scalar _tmp129 = Scalar(1.0) * _tmp128;
  const Scalar _tmp130 = _tmp129 * _tmp83;
  const Scalar _tmp131 = _tmp127 * _tmp129 + Scalar(1.0);
  const Scalar _tmp132 = Scalar(1.0) * _tmp81;
  const Scalar _tmp133 = _tmp129 * _tmp97;
  const Scalar _tmp134 = -_tmp119 * _tmp78 + _tmp126 * _tmp133;
  const Scalar _tmp135 = _tmp126 * _tmp128;
  const Scalar _tmp136 = _tmp108 + _tmp110 * _tmp135 - _tmp111 * _tmp78;
  const Scalar _tmp137 = _tmp135 * _tmp98 - _tmp78 * _tmp99 - _tmp87;
  const Scalar _tmp138 = _tmp116 * _tmp128;
  const Scalar _tmp139 = _tmp81 * (-_tmp117 * _tmp78 - _tmp126 * _tmp138 + _tmp80);
  const Scalar _tmp140 = _tmp126 * _tmp81;
  const Scalar _tmp141 = _tmp113 * _tmp124 + Scalar(2.3544) * _tmp24 + _tmp28 * fv1;
  const Scalar _tmp142 =
      std::asinh(_tmp122 * (Scalar(1.0) * _tmp106 * (_tmp129 * _tmp98 - _tmp132 * _tmp137) +
                            Scalar(1.0) * _tmp114 * (_tmp110 * _tmp129 - _tmp132 * _tmp136) +
                            Scalar(1.0) * _tmp115 *
                                (-_tmp116 * _tmp129 - Scalar(1.0) * _tmp139 + Scalar(1.0)) +
                            Scalar(1.0) * _tmp120 * (-_tmp132 * _tmp134 + _tmp133) +
                            Scalar(1.0) * _tmp125 * (_tmp130 - _tmp131 * _tmp132) +
                            Scalar(1.0) * _tmp141 * (_tmp129 * _tmp140 - _tmp129)));
  const Scalar _tmp143 = Scalar(9.6622558468725703) * _tmp121;
  const Scalar _tmp144 = _tmp119 * _tmp120;
  const Scalar _tmp145 = _tmp115 * _tmp117;
  const Scalar _tmp146 =
      _tmp100 * _tmp106 * _tmp74 + _tmp112 * _tmp114 * _tmp74 - _tmp144 * _tmp75 - _tmp145 * _tmp75;
  const Scalar _tmp147 = Scalar(1.0) / (_tmp146);
  const Scalar _tmp148 = _tmp81 * fh1;
  const Scalar _tmp149 = _tmp129 * _tmp141;
  const Scalar _tmp150 = std::asinh(
      _tmp147 * (_tmp105 * _tmp137 * _tmp148 + _tmp113 * _tmp136 * _tmp148 + _tmp115 * _tmp139 +
                 _tmp120 * _tmp134 * _tmp81 + _tmp125 * _tmp131 * _tmp81 - _tmp140 * _tmp149));
  const Scalar _tmp151 = Scalar(9.6622558468725703) * _tmp146;
  const Scalar _tmp152 = Scalar(0.1034955) * _tmp147;
  const Scalar _tmp153 = _tmp106 * _tmp99 + _tmp111 * _tmp114 + _tmp144 + _tmp145;
  const Scalar _tmp154 = Scalar(1.0) / (_tmp153);
  const Scalar _tmp155 =
      std::asinh(_tmp154 * (-_tmp106 * _tmp128 * _tmp98 - _tmp110 * _tmp114 * _tmp128 +
                            _tmp115 * _tmp138 - _tmp120 * _tmp133 - _tmp125 * _tmp130 + _tmp149));
  const Scalar _tmp156 = Scalar(9.6622558468725703) * _tmp153;
  const Scalar _tmp157 = Scalar(0.1034955) * _tmp154;

  // Output terms (1)
  Eigen::Matrix<Scalar, 4, 1> _res;

  _res(0, 0) =
      _TransformationMatrix[6] -
      _tmp32 * (_tmp33 * p_a(2, 0) + std::cosh(Scalar(1.0) * _tmp31) -
                std::cosh(_tmp33 *
                          (-_tmp31 * _tmp32 -
                           std::sqrt(Scalar(std::pow(Scalar(-_tmp18 + p_a(1, 0)), Scalar(2)) +
                                            std::pow(Scalar(-_tmp29 + p_a(0, 0)), Scalar(2))))))) +
      _tmp39;
  _res(1, 0) =
      _TransformationMatrix[6] -
      _tmp143 * (_tmp123 * p_b(2, 0) + std::cosh(Scalar(1.0) * _tmp142) -
                 std::cosh(_tmp123 *
                           (-_tmp142 * _tmp143 -
                            std::sqrt(Scalar(std::pow(Scalar(-_tmp51 + p_b(1, 0)), Scalar(2)) +
                                             std::pow(Scalar(-_tmp54 + p_b(0, 0)), Scalar(2))))))) +
      _tmp62;
  _res(2, 0) =
      _TransformationMatrix[6] -
      _tmp151 * (_tmp152 * p_c(2, 0) + std::cosh(Scalar(1.0) * _tmp150) -
                 std::cosh(_tmp152 *
                           (-_tmp150 * _tmp151 -
                            std::sqrt(Scalar(std::pow(Scalar(-_tmp65 + p_c(0, 0)), Scalar(2)) +
                                             std::pow(Scalar(-_tmp68 + p_c(1, 0)), Scalar(2))))))) +
      _tmp63;
  _res(3, 0) =
      _TransformationMatrix[6] -
      _tmp156 * (_tmp157 * p_d(2, 0) + std::cosh(Scalar(1.0) * _tmp155) -
                 std::cosh(_tmp157 *
                           (-_tmp155 * _tmp156 -
                            std::sqrt(Scalar(std::pow(Scalar(-_tmp42 + p_d(1, 0)), Scalar(2)) +
                                             std::pow(Scalar(-_tmp46 + p_d(0, 0)), Scalar(2))))))) +
      _tmp61;

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
