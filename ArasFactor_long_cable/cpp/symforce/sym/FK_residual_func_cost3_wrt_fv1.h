// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

#include <sym/pose3.h>
#include <sym/rot3.h>

namespace sym {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: FK_residual_func_cost3_wrt_fv1
 *
 * Args:
 *     fh1: Scalar
 *     fv1: Scalar
 *     DeltaRot: Rot3
 *     TransformationMatrix: Pose3
 *     encoder: Matrix41
 *     offset: Matrix41
 *     p_a: Matrix31
 *     p_b: Matrix31
 *     p_c: Matrix31
 *     p_d: Matrix31
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix41
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 4, 1> FkResidualFuncCost3WrtFv1(
    const Scalar fh1, const Scalar fv1, const sym::Rot3<Scalar>& DeltaRot,
    const sym::Pose3<Scalar>& TransformationMatrix, const Eigen::Matrix<Scalar, 4, 1>& encoder,
    const Eigen::Matrix<Scalar, 4, 1>& offset, const Eigen::Matrix<Scalar, 3, 1>& p_a,
    const Eigen::Matrix<Scalar, 3, 1>& p_b, const Eigen::Matrix<Scalar, 3, 1>& p_c,
    const Eigen::Matrix<Scalar, 3, 1>& p_d, const Scalar epsilon) {
  // Total ops: 573

  // Unused inputs
  (void)encoder;
  (void)offset;
  (void)epsilon;

  // Input arrays
  const Eigen::Matrix<Scalar, 4, 1>& _DeltaRot = DeltaRot.Data();
  const Eigen::Matrix<Scalar, 7, 1>& _TransformationMatrix = TransformationMatrix.Data();

  // Intermediate terms (187)
  const Scalar _tmp0 = Scalar(1.0) / (fh1);
  const Scalar _tmp1 = std::asinh(_tmp0 * fv1);
  const Scalar _tmp2 = Scalar(1.0) * _tmp0 /
                       std::sqrt(Scalar(1 + std::pow(fv1, Scalar(2)) / std::pow(fh1, Scalar(2))));
  const Scalar _tmp3 =
      _DeltaRot[0] * _TransformationMatrix[3] - _DeltaRot[1] * _TransformationMatrix[2] +
      _DeltaRot[2] * _TransformationMatrix[1] + _DeltaRot[3] * _TransformationMatrix[0];
  const Scalar _tmp4 =
      _DeltaRot[0] * _TransformationMatrix[2] + _DeltaRot[1] * _TransformationMatrix[3] -
      _DeltaRot[2] * _TransformationMatrix[0] + _DeltaRot[3] * _TransformationMatrix[1];
  const Scalar _tmp5 = 2 * _tmp3 * _tmp4;
  const Scalar _tmp6 =
      -_DeltaRot[0] * _TransformationMatrix[1] + _DeltaRot[1] * _TransformationMatrix[0] +
      _DeltaRot[2] * _TransformationMatrix[3] + _DeltaRot[3] * _TransformationMatrix[2];
  const Scalar _tmp7 =
      -2 * _DeltaRot[0] * _TransformationMatrix[0] - 2 * _DeltaRot[1] * _TransformationMatrix[1] -
      2 * _DeltaRot[2] * _TransformationMatrix[2] + 2 * _DeltaRot[3] * _TransformationMatrix[3];
  const Scalar _tmp8 = _tmp6 * _tmp7;
  const Scalar _tmp9 = Scalar(0.20999999999999999) * _tmp5 + Scalar(0.20999999999999999) * _tmp8;
  const Scalar _tmp10 = -_tmp9;
  const Scalar _tmp11 = -2 * std::pow(_tmp3, Scalar(2));
  const Scalar _tmp12 = 1 - 2 * std::pow(_tmp6, Scalar(2));
  const Scalar _tmp13 = Scalar(0.20999999999999999) * _tmp11 + Scalar(0.20999999999999999) * _tmp12;
  const Scalar _tmp14 = 2 * _tmp6;
  const Scalar _tmp15 = _tmp14 * _tmp4;
  const Scalar _tmp16 = _tmp3 * _tmp7;
  const Scalar _tmp17 = _tmp15 - _tmp16;
  const Scalar _tmp18 = Scalar(0.010999999999999999) * _tmp17;
  const Scalar _tmp19 = -_tmp18;
  const Scalar _tmp20 = -_tmp13 + _tmp19;
  const Scalar _tmp21 = _tmp10 + _tmp20;
  const Scalar _tmp22 = _TransformationMatrix[5] + _tmp21;
  const Scalar _tmp23 = Scalar(0.20999999999999999) * _tmp5 - Scalar(0.20999999999999999) * _tmp8;
  const Scalar _tmp24 = -_tmp23;
  const Scalar _tmp25 = -2 * std::pow(_tmp4, Scalar(2));
  const Scalar _tmp26 = Scalar(0.20999999999999999) * _tmp12 + Scalar(0.20999999999999999) * _tmp25;
  const Scalar _tmp27 = _tmp14 * _tmp3;
  const Scalar _tmp28 = _tmp4 * _tmp7;
  const Scalar _tmp29 = _tmp27 + _tmp28;
  const Scalar _tmp30 = -Scalar(0.010999999999999999) * _tmp29;
  const Scalar _tmp31 = -_tmp26 + _tmp30;
  const Scalar _tmp32 = _tmp24 + _tmp31;
  const Scalar _tmp33 = _TransformationMatrix[4] + _tmp32;
  const Scalar _tmp34 = Scalar(9.6622558468725703) * fh1;
  const Scalar _tmp35 = _tmp33 - p_a(0, 0);
  const Scalar _tmp36 = _tmp22 - p_a(1, 0);
  const Scalar _tmp37 = std::pow(Scalar(std::pow(_tmp35, Scalar(2)) + std::pow(_tmp36, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp38 = _tmp36 * _tmp37;
  const Scalar _tmp39 = Scalar(0.20999999999999999) * _tmp15 + Scalar(0.20999999999999999) * _tmp16;
  const Scalar _tmp40 = -_tmp39;
  const Scalar _tmp41 = -Scalar(0.010999999999999999) * _tmp11 -
                        Scalar(0.010999999999999999) * _tmp25 + Scalar(-0.010999999999999999);
  const Scalar _tmp42 = Scalar(0.20999999999999999) * _tmp27 - Scalar(0.20999999999999999) * _tmp28;
  const Scalar _tmp43 = _tmp41 - _tmp42;
  const Scalar _tmp44 = fh1 * (_tmp40 + _tmp43);
  const Scalar _tmp45 = -Scalar(2.3544) * _tmp17 - _tmp21 * fv1 - _tmp38 * _tmp44;
  const Scalar _tmp46 = _tmp23 + _tmp31;
  const Scalar _tmp47 = _tmp26 + _tmp30;
  const Scalar _tmp48 = _tmp24 + _tmp47;
  const Scalar _tmp49 = Scalar(1.0) * _tmp48;
  const Scalar _tmp50 = _tmp20 + _tmp9;
  const Scalar _tmp51 = Scalar(1.0) * _tmp50;
  const Scalar _tmp52 = -_tmp51;
  const Scalar _tmp53 = _tmp13 + _tmp19;
  const Scalar _tmp54 = _tmp10 + _tmp53;
  const Scalar _tmp55 = _tmp52 + _tmp54;
  const Scalar _tmp56 = _tmp53 + _tmp9;
  const Scalar _tmp57 = Scalar(1.0) / (_tmp52 + _tmp56);
  const Scalar _tmp58 = _tmp23 + _tmp47;
  const Scalar _tmp59 = _tmp57 * (_tmp49 - _tmp58);
  const Scalar _tmp60 = _tmp55 * _tmp59;
  const Scalar _tmp61 = Scalar(1.0) / (-_tmp46 + _tmp49 - _tmp60);
  const Scalar _tmp62 = Scalar(1.0) * _tmp61;
  const Scalar _tmp63 = _tmp59 * _tmp62;
  const Scalar _tmp64 = _tmp57 * (_tmp60 * _tmp62 + Scalar(1.0));
  const Scalar _tmp65 = Scalar(1.0) * _tmp63 - Scalar(1.0) * _tmp64;
  const Scalar _tmp66 = _tmp39 + _tmp43;
  const Scalar _tmp67 = _TransformationMatrix[5] + _tmp54;
  const Scalar _tmp68 = _tmp67 - p_d(1, 0);
  const Scalar _tmp69 = _TransformationMatrix[4] + _tmp46;
  const Scalar _tmp70 = _tmp69 - p_d(0, 0);
  const Scalar _tmp71 = std::pow(Scalar(std::pow(_tmp68, Scalar(2)) + std::pow(_tmp70, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp72 = _tmp70 * _tmp71;
  const Scalar _tmp73 = _tmp41 + _tmp42;
  const Scalar _tmp74 = _tmp40 + _tmp73;
  const Scalar _tmp75 = _tmp39 + _tmp73;
  const Scalar _tmp76 = _TransformationMatrix[4] + _tmp58;
  const Scalar _tmp77 = _tmp76 - p_c(0, 0);
  const Scalar _tmp78 = _TransformationMatrix[5] + _tmp56;
  const Scalar _tmp79 = _tmp78 - p_c(1, 0);
  const Scalar _tmp80 = std::pow(Scalar(std::pow(_tmp77, Scalar(2)) + std::pow(_tmp79, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp81 = _tmp77 * _tmp80;
  const Scalar _tmp82 = _tmp74 * _tmp81 - _tmp75 * _tmp81;
  const Scalar _tmp83 = _tmp68 * _tmp71;
  const Scalar _tmp84 = _TransformationMatrix[5] + _tmp50;
  const Scalar _tmp85 = _tmp84 - p_b(1, 0);
  const Scalar _tmp86 = _TransformationMatrix[4] + _tmp48;
  const Scalar _tmp87 = _tmp86 - p_b(0, 0);
  const Scalar _tmp88 = Scalar(1.0) / (_tmp87);
  const Scalar _tmp89 = _tmp85 * _tmp88;
  const Scalar _tmp90 = _tmp72 * _tmp89 - _tmp83;
  const Scalar _tmp91 = _tmp79 * _tmp80;
  const Scalar _tmp92 = Scalar(1.0) / (_tmp81 * _tmp89 - _tmp91);
  const Scalar _tmp93 = _tmp90 * _tmp92;
  const Scalar _tmp94 = _tmp74 * _tmp89;
  const Scalar _tmp95 = _tmp92 * (_tmp75 * _tmp91 - _tmp81 * _tmp94);
  const Scalar _tmp96 = _tmp66 * _tmp83 - _tmp72 * _tmp94 - _tmp90 * _tmp95;
  const Scalar _tmp97 = -_tmp59 * _tmp96 - _tmp66 * _tmp72 + _tmp72 * _tmp74 - _tmp82 * _tmp93;
  const Scalar _tmp98 =
      std::sqrt(Scalar(std::pow(_tmp85, Scalar(2)) + std::pow(_tmp87, Scalar(2))));
  const Scalar _tmp99 = Scalar(1.0) / (_tmp98);
  const Scalar _tmp100 = _tmp88 * _tmp98;
  const Scalar _tmp101 = _tmp100 * (_tmp48 * _tmp85 * _tmp99 - _tmp50 * _tmp87 * _tmp99);
  const Scalar _tmp102 = _tmp101 * _tmp81 + _tmp56 * _tmp81 - _tmp58 * _tmp91;
  const Scalar _tmp103 = _tmp101 * _tmp72 - _tmp102 * _tmp93 - _tmp46 * _tmp83 + _tmp54 * _tmp72;
  const Scalar _tmp104 = Scalar(1.0) / (_tmp103);
  const Scalar _tmp105 = _tmp104 * _tmp97;
  const Scalar _tmp106 = _tmp105 * _tmp62;
  const Scalar _tmp107 = Scalar(1.0) * _tmp104;
  const Scalar _tmp108 = _tmp106 * _tmp55 - _tmp107 * _tmp96;
  const Scalar _tmp109 = Scalar(1.0) * _tmp57;
  const Scalar _tmp110 = _tmp35 * _tmp37;
  const Scalar _tmp111 = fh1 * (-_tmp110 * _tmp21 + _tmp32 * _tmp38);
  const Scalar _tmp112 = Scalar(1.0) / (_tmp97);
  const Scalar _tmp113 = _tmp89 * _tmp92;
  const Scalar _tmp114 = _tmp89 * _tmp95 + _tmp94;
  const Scalar _tmp115 = _tmp113 * _tmp82 - _tmp114 * _tmp59 - _tmp74;
  const Scalar _tmp116 = _tmp103 * _tmp112;
  const Scalar _tmp117 = _tmp105 * (-_tmp101 + _tmp102 * _tmp113 - _tmp115 * _tmp116);
  const Scalar _tmp118 = _tmp112 * (_tmp115 + _tmp117);
  const Scalar _tmp119 = _tmp55 * _tmp61;
  const Scalar _tmp120 = _tmp114 + _tmp117 * _tmp119 - _tmp118 * _tmp96;
  const Scalar _tmp121 = _tmp110 * fh1;
  const Scalar _tmp122 = Scalar(1.0) * _tmp92;
  const Scalar _tmp123 = Scalar(1.0) * _tmp95;
  const Scalar _tmp124 = -_tmp122 * _tmp82 + _tmp123 * _tmp59;
  const Scalar _tmp125 = _tmp105 * (-_tmp102 * _tmp122 - _tmp116 * _tmp124);
  const Scalar _tmp126 = _tmp112 * (_tmp124 + _tmp125);
  const Scalar _tmp127 = _tmp119 * _tmp125 - _tmp123 - _tmp126 * _tmp96;
  const Scalar _tmp128 = _tmp38 * fh1;
  const Scalar _tmp129 = Scalar(19.620000000000001) - fv1;
  const Scalar _tmp130 = _tmp49 + _tmp51 * _tmp59;
  const Scalar _tmp131 = 0;
  const Scalar _tmp132 = _tmp130 * _tmp61;
  const Scalar _tmp133 = _tmp57 * (-_tmp131 * _tmp96 - _tmp132 * _tmp55 + _tmp52);
  const Scalar _tmp134 = -Scalar(1.0) * _tmp132 - Scalar(1.0) * _tmp133 + Scalar(1.0);
  const Scalar _tmp135 = _tmp110 * _tmp44 + Scalar(2.3544) * _tmp29 + _tmp32 * fv1;
  const Scalar _tmp136 = _tmp55 * _tmp57;
  const Scalar _tmp137 = Scalar(1.0) * _tmp136 * _tmp62 - Scalar(1.0) * _tmp62;
  const Scalar _tmp138 = Scalar(1.0) * _tmp111 * (_tmp106 - _tmp108 * _tmp109) +
                         Scalar(1.0) * _tmp121 * (-_tmp109 * _tmp120 + _tmp117 * _tmp62) +
                         Scalar(1.0) * _tmp128 * (-_tmp109 * _tmp127 + _tmp125 * _tmp62) +
                         _tmp129 * _tmp134 + _tmp135 * _tmp137 + _tmp45 * _tmp65;
  const Scalar _tmp139 = -_tmp126 * _tmp90 + Scalar(1.0);
  const Scalar _tmp140 = _tmp81 * _tmp92;
  const Scalar _tmp141 = -_tmp118 * _tmp90 - _tmp89;
  const Scalar _tmp142 = _tmp131 * _tmp93;
  const Scalar _tmp143 = _tmp100 * (_tmp131 * _tmp72 - _tmp142 * _tmp81);
  const Scalar _tmp144 = -_tmp100 * _tmp111 * (_tmp107 * _tmp72 - _tmp107 * _tmp81 * _tmp93) -
                         _tmp100 * _tmp121 * (_tmp118 * _tmp72 + _tmp140 * _tmp141 + Scalar(1.0)) -
                         _tmp100 * _tmp128 * (_tmp126 * _tmp72 + _tmp139 * _tmp140) -
                         _tmp129 * _tmp143;
  const Scalar _tmp145 = Scalar(1.0) / (_tmp144);
  const Scalar _tmp146 = std::asinh(_tmp138 * _tmp145);
  const Scalar _tmp147 = Scalar(1.0) * _tmp146;
  const Scalar _tmp148 = std::pow(_tmp144, Scalar(-2));
  const Scalar _tmp149 = _tmp13 + _tmp18 + _tmp9;
  const Scalar _tmp150 = _tmp143 * _tmp148;
  const Scalar _tmp151 =
      (-_tmp138 * _tmp150 + _tmp145 * (-_tmp134 + _tmp137 * _tmp32 + _tmp149 * _tmp65)) /
      std::sqrt(Scalar(std::pow(_tmp138, Scalar(2)) * _tmp148 + 1));
  const Scalar _tmp152 = Scalar(9.6622558468725703) * _tmp143;
  const Scalar _tmp153 = Scalar(9.6622558468725703) * _tmp144;
  const Scalar _tmp154 = Scalar(0.1034955) * _tmp145;
  const Scalar _tmp155 =
      -_tmp146 * _tmp153 - std::sqrt(Scalar(std::pow(Scalar(-_tmp84 + p_b(1, 0)), Scalar(2)) +
                                            std::pow(Scalar(-_tmp86 + p_b(0, 0)), Scalar(2))));
  const Scalar _tmp156 = _tmp154 * _tmp155;
  const Scalar _tmp157 = _tmp107 * _tmp111;
  const Scalar _tmp158 = _tmp129 * _tmp131;
  const Scalar _tmp159 =
      _tmp121 * _tmp141 * _tmp92 + _tmp128 * _tmp139 * _tmp92 - _tmp157 * _tmp93 - _tmp158 * _tmp93;
  const Scalar _tmp160 = Scalar(1.0) / (_tmp159);
  const Scalar _tmp161 = _tmp135 * _tmp62;
  const Scalar _tmp162 = _tmp108 * _tmp111 * _tmp57 + _tmp120 * _tmp121 * _tmp57 +
                         _tmp127 * _tmp128 * _tmp57 + _tmp129 * _tmp133 - _tmp136 * _tmp161 +
                         _tmp45 * _tmp64;
  const Scalar _tmp163 = std::asinh(_tmp160 * _tmp162);
  const Scalar _tmp164 = Scalar(1.0) * _tmp163;
  const Scalar _tmp165 = Scalar(9.6622558468725703) * _tmp159;
  const Scalar _tmp166 =
      -_tmp163 * _tmp165 - std::sqrt(Scalar(std::pow(Scalar(-_tmp76 + p_c(0, 0)), Scalar(2)) +
                                            std::pow(Scalar(-_tmp78 + p_c(1, 0)), Scalar(2))));
  const Scalar _tmp167 = Scalar(0.1034955) * _tmp160;
  const Scalar _tmp168 = _tmp166 * _tmp167;
  const Scalar _tmp169 = Scalar(9.6622558468725703) * _tmp131;
  const Scalar _tmp170 = _tmp169 * _tmp93;
  const Scalar _tmp171 = std::pow(_tmp159, Scalar(-2));
  const Scalar _tmp172 = _tmp142 * _tmp171;
  const Scalar _tmp173 = _tmp32 * _tmp62;
  const Scalar _tmp174 =
      (_tmp160 * (-_tmp133 - _tmp136 * _tmp173 + _tmp149 * _tmp64) - _tmp162 * _tmp172) /
      std::sqrt(Scalar(std::pow(_tmp162, Scalar(2)) * _tmp171 + 1));
  const Scalar _tmp175 = _tmp118 * _tmp121 + _tmp126 * _tmp128 + _tmp157 + _tmp158;
  const Scalar _tmp176 = Scalar(1.0) / (_tmp175);
  const Scalar _tmp177 = -_tmp106 * _tmp111 - _tmp117 * _tmp121 * _tmp61 -
                         _tmp125 * _tmp128 * _tmp61 + _tmp129 * _tmp132 + _tmp161 - _tmp45 * _tmp63;
  const Scalar _tmp178 = std::asinh(_tmp176 * _tmp177);
  const Scalar _tmp179 = Scalar(9.6622558468725703) * _tmp175;
  const Scalar _tmp180 =
      -_tmp178 * _tmp179 - std::sqrt(Scalar(std::pow(Scalar(-_tmp67 + p_d(1, 0)), Scalar(2)) +
                                            std::pow(Scalar(-_tmp69 + p_d(0, 0)), Scalar(2))));
  const Scalar _tmp181 = std::pow(_tmp175, Scalar(-2));
  const Scalar _tmp182 = _tmp131 * _tmp181;
  const Scalar _tmp183 = (_tmp176 * (-_tmp132 - _tmp149 * _tmp63 + _tmp173) + _tmp177 * _tmp182) /
                         std::sqrt(Scalar(std::pow(_tmp177, Scalar(2)) * _tmp181 + 1));
  const Scalar _tmp184 = Scalar(0.1034955) * _tmp176;
  const Scalar _tmp185 = _tmp180 * _tmp184;
  const Scalar _tmp186 = Scalar(1.0) * _tmp178;

  // Output terms (1)
  Eigen::Matrix<Scalar, 4, 1> _res;

  _res(0, 0) =
      _tmp34 *
      (-_tmp2 * std::cosh(Scalar(1.0) * _tmp1) +
       _tmp2 * std::cosh(Scalar(0.1034955) * _tmp0 *
                         (-_tmp1 * _tmp34 -
                          std::sqrt(Scalar(std::pow(Scalar(-_tmp22 + p_a(1, 0)), Scalar(2)) +
                                           std::pow(Scalar(-_tmp33 + p_a(0, 0)), Scalar(2)))))));
  _res(1, 0) = _tmp152 * (-std::sinh(_tmp147) - std::sinh(_tmp156)) +
               _tmp153 * (-Scalar(1.0) * _tmp151 * std::cosh(_tmp147) -
                          (-Scalar(0.1034955) * _tmp150 * _tmp155 +
                           _tmp154 * (-_tmp146 * _tmp152 - _tmp151 * _tmp153)) *
                              std::cosh(_tmp156));
  _res(2, 0) = _tmp165 * (-Scalar(1.0) * _tmp174 * std::cosh(_tmp164) -
                          (-Scalar(0.1034955) * _tmp166 * _tmp172 +
                           _tmp167 * (-_tmp163 * _tmp170 - _tmp165 * _tmp174)) *
                              std::cosh(_tmp168)) +
               _tmp170 * (-std::sinh(_tmp164) - std::sinh(_tmp168));
  _res(3, 0) = -_tmp169 * (-std::sinh(_tmp185) - std::sinh(_tmp186)) +
               _tmp179 * (-Scalar(1.0) * _tmp183 * std::cosh(_tmp186) -
                          (Scalar(0.1034955) * _tmp180 * _tmp182 +
                           _tmp184 * (_tmp169 * _tmp178 - _tmp179 * _tmp183)) *
                              std::cosh(_tmp185));

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
