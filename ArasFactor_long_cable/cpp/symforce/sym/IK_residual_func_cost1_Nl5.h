// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

#include <sym/rot3.h>

namespace sym {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: IK_residual_func_cost1_Nl5
 *
 * Args:
 *     fh1: Scalar
 *     fv1: Scalar
 *     DeltaRot: Rot3
 *     position_vector: Matrix31
 *     Rot_init: Rot3
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix41
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 4, 1> IkResidualFuncCost1Nl5(
    const Scalar fh1, const Scalar fv1, const sym::Rot3<Scalar>& DeltaRot,
    const Eigen::Matrix<Scalar, 3, 1>& position_vector, const sym::Rot3<Scalar>& Rot_init,
    const Scalar epsilon) {
  // Total ops: 504

  // Unused inputs
  (void)epsilon;

  // Input arrays
  const Eigen::Matrix<Scalar, 4, 1>& _DeltaRot = DeltaRot.Data();
  const Eigen::Matrix<Scalar, 4, 1>& _Rot_init = Rot_init.Data();

  // Intermediate terms (159)
  const Scalar _tmp0 = Scalar(1.0) / (fh1);
  const Scalar _tmp1 = std::asinh(_tmp0 * fv1);
  const Scalar _tmp2 = _DeltaRot[0] * _Rot_init[3] - _DeltaRot[1] * _Rot_init[2] +
                       _DeltaRot[2] * _Rot_init[1] + _DeltaRot[3] * _Rot_init[0];
  const Scalar _tmp3 = -2 * std::pow(_tmp2, Scalar(2));
  const Scalar _tmp4 = -_DeltaRot[0] * _Rot_init[1] + _DeltaRot[1] * _Rot_init[0] +
                       _DeltaRot[2] * _Rot_init[3] + _DeltaRot[3] * _Rot_init[2];
  const Scalar _tmp5 = -2 * std::pow(_tmp4, Scalar(2));
  const Scalar _tmp6 = Scalar(0.20999999999999999) * _tmp3 + Scalar(0.20999999999999999) * _tmp5 +
                       Scalar(0.20999999999999999);
  const Scalar _tmp7 = -_tmp6;
  const Scalar _tmp8 = _DeltaRot[0] * _Rot_init[2] + _DeltaRot[1] * _Rot_init[3] -
                       _DeltaRot[2] * _Rot_init[0] + _DeltaRot[3] * _Rot_init[1];
  const Scalar _tmp9 = 2 * _tmp2;
  const Scalar _tmp10 = _tmp8 * _tmp9;
  const Scalar _tmp11 = -_DeltaRot[0] * _Rot_init[0] - _DeltaRot[1] * _Rot_init[1] -
                        _DeltaRot[2] * _Rot_init[2] + _DeltaRot[3] * _Rot_init[3];
  const Scalar _tmp12 = 2 * _tmp4;
  const Scalar _tmp13 = _tmp11 * _tmp12;
  const Scalar _tmp14 = Scalar(0.20999999999999999) * _tmp10 + Scalar(0.20999999999999999) * _tmp13;
  const Scalar _tmp15 = _tmp12 * _tmp8;
  const Scalar _tmp16 = _tmp11 * _tmp9;
  const Scalar _tmp17 = _tmp15 - _tmp16;
  const Scalar _tmp18 = -Scalar(0.010999999999999999) * _tmp17;
  const Scalar _tmp19 = -_tmp14 + _tmp18;
  const Scalar _tmp20 = _tmp19 + _tmp7;
  const Scalar _tmp21 = _tmp20 + position_vector(1, 0);
  const Scalar _tmp22 = 1 - 2 * std::pow(_tmp8, Scalar(2));
  const Scalar _tmp23 = Scalar(0.20999999999999999) * _tmp22 + Scalar(0.20999999999999999) * _tmp5;
  const Scalar _tmp24 = -_tmp23;
  const Scalar _tmp25 = _tmp4 * _tmp9;
  const Scalar _tmp26 = 2 * _tmp11 * _tmp8;
  const Scalar _tmp27 = _tmp25 + _tmp26;
  const Scalar _tmp28 = -Scalar(0.010999999999999999) * _tmp27;
  const Scalar _tmp29 = Scalar(0.20999999999999999) * _tmp10 - Scalar(0.20999999999999999) * _tmp13;
  const Scalar _tmp30 = _tmp28 - _tmp29;
  const Scalar _tmp31 = _tmp24 + _tmp30;
  const Scalar _tmp32 = _tmp31 + position_vector(0, 0);
  const Scalar _tmp33 = Scalar(9.6622558468725703) * fh1;
  const Scalar _tmp34 = Scalar(0.20999999999999999) * _tmp25 - Scalar(0.20999999999999999) * _tmp26;
  const Scalar _tmp35 = -_tmp34;
  const Scalar _tmp36 =
      -Scalar(0.010999999999999999) * _tmp22 - Scalar(0.010999999999999999) * _tmp3;
  const Scalar _tmp37 = Scalar(0.20999999999999999) * _tmp15 + Scalar(0.20999999999999999) * _tmp16;
  const Scalar _tmp38 = _tmp36 - _tmp37;
  const Scalar _tmp39 = _tmp35 + _tmp38;
  const Scalar _tmp40 = _tmp14 + _tmp18;
  const Scalar _tmp41 = _tmp40 + _tmp7;
  const Scalar _tmp42 = _tmp41 + position_vector(1, 0);
  const Scalar _tmp43 = _tmp42 + Scalar(110.0);
  const Scalar _tmp44 = _tmp23 + _tmp30;
  const Scalar _tmp45 = _tmp44 + position_vector(0, 0);
  const Scalar _tmp46 = _tmp45 + Scalar(-125.0);
  const Scalar _tmp47 = std::pow(Scalar(std::pow(_tmp43, Scalar(2)) + std::pow(_tmp46, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp48 = _tmp46 * _tmp47;
  const Scalar _tmp49 = _tmp19 + _tmp6;
  const Scalar _tmp50 = _tmp49 + position_vector(1, 0);
  const Scalar _tmp51 = _tmp50 + Scalar(-110.0);
  const Scalar _tmp52 = _tmp28 + _tmp29;
  const Scalar _tmp53 = _tmp24 + _tmp52;
  const Scalar _tmp54 = _tmp53 + position_vector(0, 0);
  const Scalar _tmp55 = _tmp54 + Scalar(125.0);
  const Scalar _tmp56 =
      std::sqrt(Scalar(std::pow(_tmp51, Scalar(2)) + std::pow(_tmp55, Scalar(2))));
  const Scalar _tmp57 = Scalar(1.0) / (_tmp56);
  const Scalar _tmp58 = Scalar(1.0) / (_tmp55);
  const Scalar _tmp59 = _tmp56 * _tmp58;
  const Scalar _tmp60 = _tmp59 * (-_tmp49 * _tmp55 * _tmp57 + _tmp51 * _tmp53 * _tmp57);
  const Scalar _tmp61 = _tmp43 * _tmp47;
  const Scalar _tmp62 = _tmp40 + _tmp6;
  const Scalar _tmp63 = _tmp62 + position_vector(1, 0);
  const Scalar _tmp64 = _tmp63 + Scalar(-110.0);
  const Scalar _tmp65 = _tmp23 + _tmp52;
  const Scalar _tmp66 = _tmp65 + position_vector(0, 0);
  const Scalar _tmp67 = _tmp66 + Scalar(-125.0);
  const Scalar _tmp68 = std::pow(Scalar(std::pow(_tmp64, Scalar(2)) + std::pow(_tmp67, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp69 = _tmp67 * _tmp68;
  const Scalar _tmp70 = _tmp64 * _tmp68;
  const Scalar _tmp71 = _tmp60 * _tmp69 + _tmp62 * _tmp69 - _tmp65 * _tmp70;
  const Scalar _tmp72 = _tmp51 * _tmp58;
  const Scalar _tmp73 = _tmp48 * _tmp72 - _tmp61;
  const Scalar _tmp74 = Scalar(1.0) / (_tmp69 * _tmp72 - _tmp70);
  const Scalar _tmp75 = _tmp73 * _tmp74;
  const Scalar _tmp76 = _tmp41 * _tmp48 - _tmp44 * _tmp61 + _tmp48 * _tmp60 - _tmp71 * _tmp75;
  const Scalar _tmp77 = Scalar(1.0) / (_tmp76);
  const Scalar _tmp78 = Scalar(1.0) * _tmp77;
  const Scalar _tmp79 = _tmp21 + Scalar(110.0);
  const Scalar _tmp80 = _tmp32 + Scalar(125.0);
  const Scalar _tmp81 = std::pow(Scalar(std::pow(_tmp79, Scalar(2)) + std::pow(_tmp80, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp82 = _tmp79 * _tmp81;
  const Scalar _tmp83 = _tmp80 * _tmp81;
  const Scalar _tmp84 = fh1 * (-_tmp20 * _tmp83 + _tmp31 * _tmp82);
  const Scalar _tmp85 = Scalar(19.620000000000001) - fv1;
  const Scalar _tmp86 = _tmp34 + _tmp38;
  const Scalar _tmp87 = _tmp36 + _tmp37;
  const Scalar _tmp88 = _tmp35 + _tmp87;
  const Scalar _tmp89 = _tmp48 * _tmp88;
  const Scalar _tmp90 = _tmp69 * _tmp88;
  const Scalar _tmp91 = _tmp34 + _tmp87;
  const Scalar _tmp92 = _tmp70 * _tmp91 - _tmp72 * _tmp90;
  const Scalar _tmp93 = _tmp61 * _tmp86 - _tmp72 * _tmp89 - _tmp75 * _tmp92;
  const Scalar _tmp94 = Scalar(1.0) * _tmp49;
  const Scalar _tmp95 = -_tmp94;
  const Scalar _tmp96 = Scalar(1.0) / (_tmp62 + _tmp95);
  const Scalar _tmp97 = Scalar(1.0) * _tmp53;
  const Scalar _tmp98 = -_tmp65 + _tmp97;
  const Scalar _tmp99 = _tmp96 * _tmp98;
  const Scalar _tmp100 = -_tmp69 * _tmp91 + _tmp90;
  const Scalar _tmp101 = -_tmp100 * _tmp75 - _tmp48 * _tmp86 + _tmp89 - _tmp93 * _tmp99;
  const Scalar _tmp102 = Scalar(1.0) / (_tmp101);
  const Scalar _tmp103 = _tmp94 * _tmp99 + _tmp97;
  const Scalar _tmp104 = 0;
  const Scalar _tmp105 = _tmp102 * _tmp104;
  const Scalar _tmp106 = _tmp69 * _tmp74;
  const Scalar _tmp107 = _tmp102 * _tmp73;
  const Scalar _tmp108 = _tmp104 * _tmp107;
  const Scalar _tmp109 = _tmp72 * _tmp74;
  const Scalar _tmp110 = _tmp109 * _tmp92 + _tmp72 * _tmp88;
  const Scalar _tmp111 = _tmp100 * _tmp109 - _tmp110 * _tmp99 - _tmp88;
  const Scalar _tmp112 = _tmp102 * _tmp76;
  const Scalar _tmp113 = _tmp101 * _tmp77;
  const Scalar _tmp114 = _tmp113 * (_tmp109 * _tmp71 - _tmp111 * _tmp112 - _tmp60);
  const Scalar _tmp115 = _tmp111 + _tmp114;
  const Scalar _tmp116 = _tmp102 * _tmp48;
  const Scalar _tmp117 = -_tmp107 * _tmp115 - _tmp72;
  const Scalar _tmp118 = _tmp83 * fh1;
  const Scalar _tmp119 = Scalar(1.0) * _tmp74;
  const Scalar _tmp120 = Scalar(1.0) * _tmp96;
  const Scalar _tmp121 = -_tmp100 * _tmp119 + _tmp120 * _tmp74 * _tmp92 * _tmp98;
  const Scalar _tmp122 = _tmp113 * (-_tmp112 * _tmp121 - _tmp119 * _tmp71);
  const Scalar _tmp123 = _tmp121 + _tmp122;
  const Scalar _tmp124 = -_tmp107 * _tmp123 + Scalar(1.0);
  const Scalar _tmp125 = _tmp82 * fh1;
  const Scalar _tmp126 = -_tmp118 * _tmp59 * (_tmp106 * _tmp117 + _tmp115 * _tmp116 + Scalar(1.0)) -
                         _tmp125 * _tmp59 * (_tmp106 * _tmp124 + _tmp116 * _tmp123) -
                         _tmp59 * _tmp84 * (_tmp48 * _tmp78 - _tmp69 * _tmp75 * _tmp78) -
                         _tmp59 * _tmp85 * (_tmp105 * _tmp48 - _tmp106 * _tmp108);
  const Scalar _tmp127 = Scalar(1.0) / (_tmp126);
  const Scalar _tmp128 = _tmp41 + _tmp95;
  const Scalar _tmp129 = _tmp128 * _tmp99;
  const Scalar _tmp130 = Scalar(1.0) / (-_tmp129 - _tmp44 + _tmp97);
  const Scalar _tmp131 = Scalar(1.0) * _tmp130;
  const Scalar _tmp132 = _tmp102 * _tmp93;
  const Scalar _tmp133 = _tmp103 * _tmp130;
  const Scalar _tmp134 = -_tmp104 * _tmp132 - _tmp128 * _tmp133 + _tmp95;
  const Scalar _tmp135 = _tmp128 * _tmp130;
  const Scalar _tmp136 = -_tmp119 * _tmp92 + _tmp122 * _tmp135 - _tmp123 * _tmp132;
  const Scalar _tmp137 = Scalar(1.0) * fh1;
  const Scalar _tmp138 = _tmp129 * _tmp131 + Scalar(1.0);
  const Scalar _tmp139 = _tmp131 * _tmp99;
  const Scalar _tmp140 = _tmp39 * fh1;
  const Scalar _tmp141 = -_tmp140 * _tmp82 - Scalar(2.3544) * _tmp17 - _tmp20 * fv1;
  const Scalar _tmp142 = _tmp140 * _tmp83 + Scalar(2.3544) * _tmp27 + _tmp31 * fv1;
  const Scalar _tmp143 = _tmp128 * _tmp96;
  const Scalar _tmp144 = _tmp113 * _tmp131;
  const Scalar _tmp145 = _tmp128 * _tmp144 - _tmp78 * _tmp93;
  const Scalar _tmp146 = _tmp110 + _tmp114 * _tmp135 - _tmp115 * _tmp132;
  const Scalar _tmp147 = std::asinh(
      _tmp127 * (_tmp137 * _tmp82 * (-_tmp120 * _tmp136 + _tmp122 * _tmp131) +
                 _tmp137 * _tmp83 * (_tmp114 * _tmp131 - _tmp120 * _tmp146) +
                 Scalar(1.0) * _tmp141 * (-_tmp120 * _tmp138 + _tmp139) +
                 Scalar(1.0) * _tmp142 * (_tmp131 * _tmp143 - _tmp131) +
                 Scalar(1.0) * _tmp84 * (-_tmp120 * _tmp145 + _tmp144) +
                 Scalar(1.0) * _tmp85 * (-_tmp103 * _tmp131 - _tmp120 * _tmp134 + Scalar(1.0))));
  const Scalar _tmp148 = Scalar(9.6622558468725703) * _tmp126;
  const Scalar _tmp149 = _tmp78 * _tmp84;
  const Scalar _tmp150 = -_tmp108 * _tmp74 * _tmp85 + _tmp117 * _tmp118 * _tmp74 +
                         _tmp124 * _tmp125 * _tmp74 - _tmp149 * _tmp75;
  const Scalar _tmp151 = Scalar(1.0) / (_tmp150);
  const Scalar _tmp152 = _tmp131 * _tmp142;
  const Scalar _tmp153 =
      std::asinh(_tmp151 * (_tmp118 * _tmp146 * _tmp96 + _tmp125 * _tmp136 * _tmp96 +
                            _tmp134 * _tmp85 * _tmp96 + _tmp138 * _tmp141 * _tmp96 -
                            _tmp143 * _tmp152 + _tmp145 * _tmp84 * _tmp96));
  const Scalar _tmp154 = Scalar(9.6622558468725703) * _tmp150;
  const Scalar _tmp155 =
      _tmp102 * _tmp115 * _tmp118 + _tmp102 * _tmp123 * _tmp125 + _tmp105 * _tmp85 + _tmp149;
  const Scalar _tmp156 = Scalar(1.0) / (_tmp155);
  const Scalar _tmp157 =
      std::asinh(_tmp156 * (-_tmp114 * _tmp118 * _tmp130 - _tmp122 * _tmp125 * _tmp130 +
                            _tmp133 * _tmp85 - _tmp139 * _tmp141 - _tmp144 * _tmp84 + _tmp152));
  const Scalar _tmp158 = Scalar(9.6622558468725703) * _tmp155;

  // Output terms (1)
  Eigen::Matrix<Scalar, 4, 1> _res;

  _res(0, 0) =
      -_tmp33 *
          (Scalar(4.967784) * _tmp0 + std::cosh(Scalar(1.0) * _tmp1) -
           std::cosh(Scalar(0.1034955) * _tmp0 *
                     (-_tmp1 * _tmp33 -
                      Scalar(125.0) *
                          std::sqrt(Scalar(
                              Scalar(0.77439999999999998) *
                                  std::pow(Scalar(-Scalar(0.0090909090909090905) * _tmp21 - 1),
                                           Scalar(2)) +
                              std::pow(Scalar(-Scalar(0.0080000000000000002) * _tmp32 - 1),
                                       Scalar(2))))))) +
      _tmp39 + position_vector(2, 0);
  _res(1, 0) =
      -_tmp148 *
          (Scalar(4.967784) * _tmp127 + std::cosh(Scalar(1.0) * _tmp147) -
           std::cosh(
               Scalar(0.1034955) * _tmp127 *
               (-_tmp147 * _tmp148 -
                Scalar(125.0) * std::sqrt(Scalar(
                                    Scalar(0.77439999999999998) *
                                        std::pow(Scalar(1 - Scalar(0.0090909090909090905) * _tmp50),
                                                 Scalar(2)) +
                                    std::pow(Scalar(-Scalar(0.0080000000000000002) * _tmp54 - 1),
                                             Scalar(2))))))) +
      _tmp88 + position_vector(2, 0);
  _res(2, 0) =
      -_tmp154 *
          (Scalar(4.967784) * _tmp151 + std::cosh(Scalar(1.0) * _tmp153) -
           std::cosh(
               Scalar(0.1034955) * _tmp151 *
               (-_tmp153 * _tmp154 -
                Scalar(125.0) * std::sqrt(Scalar(
                                    Scalar(0.77439999999999998) *
                                        std::pow(Scalar(1 - Scalar(0.0090909090909090905) * _tmp63),
                                                 Scalar(2)) +
                                    std::pow(Scalar(1 - Scalar(0.0080000000000000002) * _tmp66),
                                             Scalar(2))))))) +
      _tmp91 + position_vector(2, 0);
  _res(3, 0) =
      -_tmp158 *
          (Scalar(4.967784) * _tmp156 + std::cosh(Scalar(1.0) * _tmp157) -
           std::cosh(
               Scalar(0.1034955) * _tmp156 *
               (-_tmp157 * _tmp158 -
                Scalar(125.0) *
                    std::sqrt(Scalar(
                        std::pow(Scalar(1 - Scalar(0.0080000000000000002) * _tmp45), Scalar(2)) +
                        Scalar(0.77439999999999998) *
                            std::pow(Scalar(-Scalar(0.0090909090909090905) * _tmp42 - 1),
                                     Scalar(2))))))) +
      _tmp86 + position_vector(2, 0);

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
