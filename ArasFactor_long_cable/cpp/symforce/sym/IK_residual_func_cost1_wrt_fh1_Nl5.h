// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

#include <sym/rot3.h>

namespace sym {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: IK_residual_func_cost1_wrt_fh1_Nl5
 *
 * Args:
 *     fh1: Scalar
 *     fv1: Scalar
 *     DeltaRot: Rot3
 *     position_vector: Matrix31
 *     Rot_init: Rot3
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix41
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 4, 1> IkResidualFuncCost1WrtFh1Nl5(
    const Scalar fh1, const Scalar fv1, const sym::Rot3<Scalar>& DeltaRot,
    const Eigen::Matrix<Scalar, 3, 1>& position_vector, const sym::Rot3<Scalar>& Rot_init,
    const Scalar epsilon) {
  // Total ops: 654

  // Unused inputs
  (void)epsilon;

  // Input arrays
  const Eigen::Matrix<Scalar, 4, 1>& _DeltaRot = DeltaRot.Data();
  const Eigen::Matrix<Scalar, 4, 1>& _Rot_init = Rot_init.Data();

  // Intermediate terms (215)
  const Scalar _tmp0 = Scalar(1.0) / (fh1);
  const Scalar _tmp1 = _tmp0 * fv1;
  const Scalar _tmp2 = std::asinh(_tmp1);
  const Scalar _tmp3 = Scalar(1.0) * _tmp2;
  const Scalar _tmp4 = std::pow(fh1, Scalar(-2));
  const Scalar _tmp5 = _DeltaRot[0] * _Rot_init[3] - _DeltaRot[1] * _Rot_init[2] +
                       _DeltaRot[2] * _Rot_init[1] + _DeltaRot[3] * _Rot_init[0];
  const Scalar _tmp6 = -2 * std::pow(_tmp5, Scalar(2));
  const Scalar _tmp7 = -_DeltaRot[0] * _Rot_init[1] + _DeltaRot[1] * _Rot_init[0] +
                       _DeltaRot[2] * _Rot_init[3] + _DeltaRot[3] * _Rot_init[2];
  const Scalar _tmp8 = 1 - 2 * std::pow(_tmp7, Scalar(2));
  const Scalar _tmp9 = Scalar(0.20999999999999999) * _tmp6 + Scalar(0.20999999999999999) * _tmp8;
  const Scalar _tmp10 = -_tmp9;
  const Scalar _tmp11 = _DeltaRot[0] * _Rot_init[2] + _DeltaRot[1] * _Rot_init[3] -
                        _DeltaRot[2] * _Rot_init[0] + _DeltaRot[3] * _Rot_init[1];
  const Scalar _tmp12 = 2 * _tmp11 * _tmp5;
  const Scalar _tmp13 = -2 * _DeltaRot[0] * _Rot_init[0] - 2 * _DeltaRot[1] * _Rot_init[1] -
                        2 * _DeltaRot[2] * _Rot_init[2] + 2 * _DeltaRot[3] * _Rot_init[3];
  const Scalar _tmp14 = _tmp13 * _tmp7;
  const Scalar _tmp15 = Scalar(0.20999999999999999) * _tmp12 + Scalar(0.20999999999999999) * _tmp14;
  const Scalar _tmp16 = 2 * _tmp7;
  const Scalar _tmp17 = _tmp11 * _tmp16;
  const Scalar _tmp18 = _tmp13 * _tmp5;
  const Scalar _tmp19 = _tmp17 - _tmp18;
  const Scalar _tmp20 = -Scalar(0.010999999999999999) * _tmp19;
  const Scalar _tmp21 = -_tmp15 + _tmp20;
  const Scalar _tmp22 = _tmp10 + _tmp21;
  const Scalar _tmp23 = _tmp22 + position_vector(1, 0);
  const Scalar _tmp24 = -2 * std::pow(_tmp11, Scalar(2));
  const Scalar _tmp25 = Scalar(0.20999999999999999) * _tmp24 + Scalar(0.20999999999999999) * _tmp8;
  const Scalar _tmp26 = -_tmp25;
  const Scalar _tmp27 = _tmp16 * _tmp5;
  const Scalar _tmp28 = _tmp11 * _tmp13;
  const Scalar _tmp29 = _tmp27 + _tmp28;
  const Scalar _tmp30 = -Scalar(0.010999999999999999) * _tmp29;
  const Scalar _tmp31 = Scalar(0.20999999999999999) * _tmp12 - Scalar(0.20999999999999999) * _tmp14;
  const Scalar _tmp32 = _tmp30 - _tmp31;
  const Scalar _tmp33 = _tmp26 + _tmp32;
  const Scalar _tmp34 = _tmp33 + position_vector(0, 0);
  const Scalar _tmp35 = Scalar(9.6622558468725703) * _tmp2;
  const Scalar _tmp36 =
      -Scalar(0.1034955) * _tmp35 * fh1 -
      Scalar(12.936937500000001) *
          std::sqrt(
              Scalar(Scalar(0.77439999999999998) *
                         std::pow(Scalar(-Scalar(0.0090909090909090905) * _tmp23 - 1), Scalar(2)) +
                     std::pow(Scalar(-Scalar(0.0080000000000000002) * _tmp34 - 1), Scalar(2))));
  const Scalar _tmp37 = _tmp0 * _tmp36;
  const Scalar _tmp38 =
      std::pow(Scalar(_tmp4 * std::pow(fv1, Scalar(2)) + 1), Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp39 = _tmp30 + _tmp31;
  const Scalar _tmp40 = _tmp26 + _tmp39;
  const Scalar _tmp41 = _tmp40 + position_vector(0, 0);
  const Scalar _tmp42 = _tmp21 + _tmp9;
  const Scalar _tmp43 = _tmp42 + position_vector(1, 0);
  const Scalar _tmp44 = _tmp23 + Scalar(110.0);
  const Scalar _tmp45 = _tmp34 + Scalar(125.0);
  const Scalar _tmp46 = std::pow(Scalar(std::pow(_tmp44, Scalar(2)) + std::pow(_tmp45, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp47 = _tmp44 * _tmp46;
  const Scalar _tmp48 = _tmp45 * _tmp46;
  const Scalar _tmp49 = -_tmp22 * _tmp48 + _tmp33 * _tmp47;
  const Scalar _tmp50 = _tmp15 + _tmp20;
  const Scalar _tmp51 = _tmp10 + _tmp50;
  const Scalar _tmp52 = _tmp51 + position_vector(1, 0);
  const Scalar _tmp53 = _tmp52 + Scalar(110.0);
  const Scalar _tmp54 = _tmp25 + _tmp32;
  const Scalar _tmp55 = _tmp54 + position_vector(0, 0);
  const Scalar _tmp56 = _tmp55 + Scalar(-125.0);
  const Scalar _tmp57 = std::pow(Scalar(std::pow(_tmp53, Scalar(2)) + std::pow(_tmp56, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp58 = _tmp56 * _tmp57;
  const Scalar _tmp59 = _tmp43 + Scalar(-110.0);
  const Scalar _tmp60 = _tmp41 + Scalar(125.0);
  const Scalar _tmp61 =
      std::sqrt(Scalar(std::pow(_tmp59, Scalar(2)) + std::pow(_tmp60, Scalar(2))));
  const Scalar _tmp62 = Scalar(1.0) / (_tmp61);
  const Scalar _tmp63 = Scalar(1.0) / (_tmp60);
  const Scalar _tmp64 = _tmp61 * _tmp63;
  const Scalar _tmp65 = _tmp64 * (_tmp40 * _tmp59 * _tmp62 - _tmp42 * _tmp60 * _tmp62);
  const Scalar _tmp66 = _tmp53 * _tmp57;
  const Scalar _tmp67 = _tmp50 + _tmp9;
  const Scalar _tmp68 = _tmp67 + position_vector(1, 0);
  const Scalar _tmp69 = _tmp68 + Scalar(-110.0);
  const Scalar _tmp70 = _tmp25 + _tmp39;
  const Scalar _tmp71 = _tmp70 + position_vector(0, 0);
  const Scalar _tmp72 = _tmp71 + Scalar(-125.0);
  const Scalar _tmp73 = std::pow(Scalar(std::pow(_tmp69, Scalar(2)) + std::pow(_tmp72, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp74 = _tmp72 * _tmp73;
  const Scalar _tmp75 = _tmp69 * _tmp73;
  const Scalar _tmp76 = _tmp65 * _tmp74 + _tmp67 * _tmp74 - _tmp70 * _tmp75;
  const Scalar _tmp77 = _tmp59 * _tmp63;
  const Scalar _tmp78 = _tmp58 * _tmp77 - _tmp66;
  const Scalar _tmp79 = Scalar(1.0) / (_tmp74 * _tmp77 - _tmp75);
  const Scalar _tmp80 = _tmp78 * _tmp79;
  const Scalar _tmp81 = _tmp51 * _tmp58 - _tmp54 * _tmp66 + _tmp58 * _tmp65 - _tmp76 * _tmp80;
  const Scalar _tmp82 = Scalar(1.0) / (_tmp81);
  const Scalar _tmp83 = Scalar(1.0) * _tmp82;
  const Scalar _tmp84 = _tmp74 * _tmp80;
  const Scalar _tmp85 = _tmp49 * _tmp64 * (_tmp58 * _tmp83 - _tmp83 * _tmp84);
  const Scalar _tmp86 = Scalar(19.620000000000001) - fv1;
  const Scalar _tmp87 = Scalar(0.20999999999999999) * _tmp17 + Scalar(0.20999999999999999) * _tmp18;
  const Scalar _tmp88 = -_tmp87;
  const Scalar _tmp89 = -Scalar(0.010999999999999999) * _tmp24 -
                        Scalar(0.010999999999999999) * _tmp6 + Scalar(-0.010999999999999999);
  const Scalar _tmp90 = Scalar(0.20999999999999999) * _tmp27 - Scalar(0.20999999999999999) * _tmp28;
  const Scalar _tmp91 = _tmp89 + _tmp90;
  const Scalar _tmp92 = _tmp88 + _tmp91;
  const Scalar _tmp93 = _tmp89 - _tmp90;
  const Scalar _tmp94 = _tmp87 + _tmp93;
  const Scalar _tmp95 = _tmp58 * _tmp94;
  const Scalar _tmp96 = _tmp74 * _tmp94;
  const Scalar _tmp97 = _tmp87 + _tmp91;
  const Scalar _tmp98 = _tmp75 * _tmp97 - _tmp77 * _tmp96;
  const Scalar _tmp99 = _tmp66 * _tmp92 - _tmp77 * _tmp95 - _tmp80 * _tmp98;
  const Scalar _tmp100 = Scalar(1.0) * _tmp42;
  const Scalar _tmp101 = -_tmp100;
  const Scalar _tmp102 = Scalar(1.0) / (_tmp101 + _tmp67);
  const Scalar _tmp103 = Scalar(1.0) * _tmp40;
  const Scalar _tmp104 = _tmp102 * (_tmp103 - _tmp70);
  const Scalar _tmp105 = -_tmp74 * _tmp97 + _tmp96;
  const Scalar _tmp106 = -_tmp104 * _tmp99 - _tmp105 * _tmp80 - _tmp58 * _tmp92 + _tmp95;
  const Scalar _tmp107 = Scalar(1.0) / (_tmp106);
  const Scalar _tmp108 = _tmp100 * _tmp104 + _tmp103;
  const Scalar _tmp109 = 0;
  const Scalar _tmp110 = _tmp107 * _tmp109;
  const Scalar _tmp111 = _tmp77 * _tmp79;
  const Scalar _tmp112 = _tmp111 * _tmp98 + _tmp77 * _tmp94;
  const Scalar _tmp113 = -_tmp104 * _tmp112 + _tmp105 * _tmp111 - _tmp94;
  const Scalar _tmp114 = _tmp107 * _tmp81;
  const Scalar _tmp115 = _tmp106 * _tmp82;
  const Scalar _tmp116 = _tmp115 * (_tmp111 * _tmp76 - _tmp113 * _tmp114 - _tmp65);
  const Scalar _tmp117 = _tmp113 + _tmp116;
  const Scalar _tmp118 = _tmp107 * _tmp58;
  const Scalar _tmp119 = _tmp107 * _tmp78;
  const Scalar _tmp120 = _tmp79 * (-_tmp117 * _tmp119 - _tmp77);
  const Scalar _tmp121 = _tmp48 * _tmp64 * (_tmp117 * _tmp118 + _tmp120 * _tmp74 + Scalar(1.0));
  const Scalar _tmp122 = Scalar(1.0) * _tmp79;
  const Scalar _tmp123 = _tmp122 * _tmp98;
  const Scalar _tmp124 = _tmp104 * _tmp123 - _tmp105 * _tmp122;
  const Scalar _tmp125 = _tmp115 * (-_tmp114 * _tmp124 - _tmp122 * _tmp76);
  const Scalar _tmp126 = _tmp124 + _tmp125;
  const Scalar _tmp127 = _tmp79 * (-_tmp119 * _tmp126 + Scalar(1.0));
  const Scalar _tmp128 = _tmp47 * _tmp64 * (_tmp118 * _tmp126 + _tmp127 * _tmp74);
  const Scalar _tmp129 = -_tmp121 * fh1 - _tmp128 * fh1 -
                         _tmp64 * _tmp86 * (_tmp110 * _tmp58 - _tmp110 * _tmp84) - _tmp85 * fh1;
  const Scalar _tmp130 = Scalar(1.0) / (_tmp129);
  const Scalar _tmp131 = _tmp101 + _tmp51;
  const Scalar _tmp132 = _tmp104 * _tmp131;
  const Scalar _tmp133 = Scalar(1.0) / (_tmp103 - _tmp132 - _tmp54);
  const Scalar _tmp134 = Scalar(1.0) * _tmp133;
  const Scalar _tmp135 = _tmp107 * _tmp99;
  const Scalar _tmp136 = _tmp108 * _tmp133;
  const Scalar _tmp137 = _tmp101 - _tmp109 * _tmp135 - _tmp131 * _tmp136;
  const Scalar _tmp138 = Scalar(1.0) * _tmp102;
  const Scalar _tmp139 = _tmp131 * _tmp133;
  const Scalar _tmp140 = -_tmp123 + _tmp125 * _tmp139 - _tmp126 * _tmp135;
  const Scalar _tmp141 = Scalar(1.0) * _tmp47 * (_tmp125 * _tmp134 - _tmp138 * _tmp140);
  const Scalar _tmp142 = _tmp88 + _tmp93;
  const Scalar _tmp143 = _tmp142 * fh1;
  const Scalar _tmp144 = -_tmp143 * _tmp47 - Scalar(2.3544) * _tmp19 - _tmp22 * fv1;
  const Scalar _tmp145 = _tmp132 * _tmp134 + Scalar(1.0);
  const Scalar _tmp146 = _tmp104 * _tmp134;
  const Scalar _tmp147 = -Scalar(1.0) * _tmp138 * _tmp145 + Scalar(1.0) * _tmp146;
  const Scalar _tmp148 = _tmp143 * _tmp48 + Scalar(2.3544) * _tmp29 + _tmp33 * fv1;
  const Scalar _tmp149 = _tmp102 * _tmp131;
  const Scalar _tmp150 = _tmp134 * _tmp149;
  const Scalar _tmp151 = -Scalar(1.0) * _tmp134 + Scalar(1.0) * _tmp150;
  const Scalar _tmp152 = _tmp115 * _tmp134;
  const Scalar _tmp153 = _tmp131 * _tmp152 - _tmp83 * _tmp99;
  const Scalar _tmp154 = Scalar(1.0) * _tmp49;
  const Scalar _tmp155 = _tmp154 * (-_tmp138 * _tmp153 + _tmp152);
  const Scalar _tmp156 = _tmp112 + _tmp116 * _tmp139 - _tmp117 * _tmp135;
  const Scalar _tmp157 = Scalar(1.0) * _tmp48 * (_tmp116 * _tmp134 - _tmp138 * _tmp156);
  const Scalar _tmp158 =
      _tmp141 * fh1 + _tmp144 * _tmp147 + _tmp148 * _tmp151 + _tmp155 * fh1 + _tmp157 * fh1 +
      Scalar(1.0) * _tmp86 * (-_tmp108 * _tmp134 - _tmp137 * _tmp138 + Scalar(1.0));
  const Scalar _tmp159 = std::asinh(_tmp130 * _tmp158);
  const Scalar _tmp160 = Scalar(9.6622558468725703) * _tmp129;
  const Scalar _tmp161 =
      -_tmp159 * _tmp160 -
      Scalar(125.0) *
          std::sqrt(
              Scalar(Scalar(0.77439999999999998) *
                         std::pow(Scalar(1 - Scalar(0.0090909090909090905) * _tmp43), Scalar(2)) +
                     std::pow(Scalar(-Scalar(0.0080000000000000002) * _tmp41 - 1), Scalar(2))));
  const Scalar _tmp162 = Scalar(0.1034955) * _tmp130;
  const Scalar _tmp163 = _tmp161 * _tmp162;
  const Scalar _tmp164 = Scalar(1.0) * _tmp159;
  const Scalar _tmp165 = -_tmp121 - _tmp128 - _tmp85;
  const Scalar _tmp166 = Scalar(9.6622558468725703) * _tmp165;
  const Scalar _tmp167 = std::pow(_tmp129, Scalar(-2));
  const Scalar _tmp168 = _tmp142 * _tmp48;
  const Scalar _tmp169 = _tmp142 * _tmp47;
  const Scalar _tmp170 = _tmp165 * _tmp167;
  const Scalar _tmp171 =
      (_tmp130 * (_tmp141 - _tmp147 * _tmp169 + _tmp151 * _tmp168 + _tmp155 + _tmp157) -
       _tmp158 * _tmp170) /
      std::sqrt(Scalar(std::pow(_tmp158, Scalar(2)) * _tmp167 + 1));
  const Scalar _tmp172 = _tmp154 * _tmp82;
  const Scalar _tmp173 = _tmp172 * fh1;
  const Scalar _tmp174 = _tmp120 * _tmp48;
  const Scalar _tmp175 = _tmp110 * _tmp86;
  const Scalar _tmp176 = _tmp127 * _tmp47;
  const Scalar _tmp177 = -_tmp173 * _tmp80 + _tmp174 * fh1 - _tmp175 * _tmp80 + _tmp176 * fh1;
  const Scalar _tmp178 = Scalar(1.0) / (_tmp177);
  const Scalar _tmp179 = _tmp102 * _tmp140 * _tmp47;
  const Scalar _tmp180 = _tmp102 * _tmp145;
  const Scalar _tmp181 = _tmp102 * _tmp153 * _tmp49;
  const Scalar _tmp182 = _tmp134 * _tmp148;
  const Scalar _tmp183 = _tmp102 * _tmp156 * _tmp48;
  const Scalar _tmp184 = _tmp102 * _tmp137 * _tmp86 + _tmp144 * _tmp180 - _tmp149 * _tmp182 +
                         _tmp179 * fh1 + _tmp181 * fh1 + _tmp183 * fh1;
  const Scalar _tmp185 = std::asinh(_tmp178 * _tmp184);
  const Scalar _tmp186 = Scalar(1.0) * _tmp185;
  const Scalar _tmp187 = std::pow(_tmp177, Scalar(-2));
  const Scalar _tmp188 = -_tmp172 * _tmp80 + _tmp174 + _tmp176;
  const Scalar _tmp189 = _tmp187 * _tmp188;
  const Scalar _tmp190 =
      (_tmp178 * (-_tmp150 * _tmp168 - _tmp169 * _tmp180 + _tmp179 + _tmp181 + _tmp183) -
       _tmp184 * _tmp189) /
      std::sqrt(Scalar(std::pow(_tmp184, Scalar(2)) * _tmp187 + 1));
  const Scalar _tmp191 = Scalar(9.6622558468725703) * _tmp177;
  const Scalar _tmp192 =
      -_tmp185 * _tmp191 -
      Scalar(125.0) *
          std::sqrt(
              Scalar(Scalar(0.77439999999999998) *
                         std::pow(Scalar(1 - Scalar(0.0090909090909090905) * _tmp68), Scalar(2)) +
                     std::pow(Scalar(1 - Scalar(0.0080000000000000002) * _tmp71), Scalar(2))));
  const Scalar _tmp193 = Scalar(9.6622558468725703) * _tmp188;
  const Scalar _tmp194 = Scalar(0.1034955) * _tmp178;
  const Scalar _tmp195 = _tmp192 * _tmp194;
  const Scalar _tmp196 = _tmp116 * _tmp133 * _tmp48;
  const Scalar _tmp197 = _tmp152 * _tmp49;
  const Scalar _tmp198 = _tmp125 * _tmp133 * _tmp47;
  const Scalar _tmp199 = _tmp136 * _tmp86 - _tmp144 * _tmp146 + _tmp182 - _tmp196 * fh1 -
                         _tmp197 * fh1 - _tmp198 * fh1;
  const Scalar _tmp200 = _tmp107 * _tmp117 * _tmp48;
  const Scalar _tmp201 = _tmp107 * _tmp126 * _tmp47;
  const Scalar _tmp202 = _tmp173 + _tmp175 + _tmp200 * fh1 + _tmp201 * fh1;
  const Scalar _tmp203 = Scalar(1.0) / (_tmp202);
  const Scalar _tmp204 = std::asinh(_tmp199 * _tmp203);
  const Scalar _tmp205 = Scalar(1.0) * _tmp204;
  const Scalar _tmp206 = Scalar(9.6622558468725703) * _tmp202;
  const Scalar _tmp207 =
      -_tmp204 * _tmp206 -
      Scalar(125.0) *
          std::sqrt(
              Scalar(std::pow(Scalar(1 - Scalar(0.0080000000000000002) * _tmp55), Scalar(2)) +
                     Scalar(0.77439999999999998) *
                         std::pow(Scalar(-Scalar(0.0090909090909090905) * _tmp52 - 1), Scalar(2))));
  const Scalar _tmp208 = Scalar(0.1034955) * _tmp203;
  const Scalar _tmp209 = _tmp207 * _tmp208;
  const Scalar _tmp210 = _tmp172 + _tmp200 + _tmp201;
  const Scalar _tmp211 = Scalar(9.6622558468725703) * _tmp210;
  const Scalar _tmp212 = std::pow(_tmp202, Scalar(-2));
  const Scalar _tmp213 = _tmp210 * _tmp212;
  const Scalar _tmp214 = (-_tmp199 * _tmp213 + _tmp203 * (_tmp134 * _tmp168 + _tmp146 * _tmp169 -
                                                          _tmp196 - _tmp197 - _tmp198)) /
                         std::sqrt(Scalar(std::pow(_tmp199, Scalar(2)) * _tmp212 + 1));

  // Output terms (1)
  Eigen::Matrix<Scalar, 4, 1> _res;

  _res(0, 0) =
      -Scalar(48.000000000000007) * _tmp0 -
      Scalar(9.6622558468725703) * fh1 *
          (-Scalar(1.0) * _tmp38 * _tmp4 * fv1 * std::sinh(_tmp3) - Scalar(4.967784) * _tmp4 -
           (Scalar(0.1034955) * _tmp0 * (Scalar(9.6622558468725703) * _tmp1 * _tmp38 - _tmp35) -
            _tmp36 * _tmp4) *
               std::sinh(_tmp37)) -
      Scalar(9.6622558468725703) * std::cosh(_tmp3) +
      Scalar(9.6622558468725703) * std::cosh(_tmp37);
  _res(1, 0) =
      -_tmp160 * (-Scalar(4.967784) * _tmp170 + Scalar(1.0) * _tmp171 * std::sinh(_tmp164) -
                  (-Scalar(0.1034955) * _tmp161 * _tmp170 +
                   _tmp162 * (-_tmp159 * _tmp166 - _tmp160 * _tmp171)) *
                      std::sinh(_tmp163)) -
      _tmp166 * (Scalar(4.967784) * _tmp130 - std::cosh(_tmp163) + std::cosh(_tmp164));
  _res(2, 0) =
      -_tmp191 * (-Scalar(4.967784) * _tmp189 + Scalar(1.0) * _tmp190 * std::sinh(_tmp186) -
                  (-Scalar(0.1034955) * _tmp189 * _tmp192 +
                   _tmp194 * (-_tmp185 * _tmp193 - _tmp190 * _tmp191)) *
                      std::sinh(_tmp195)) -
      _tmp193 * (Scalar(4.967784) * _tmp178 + std::cosh(_tmp186) - std::cosh(_tmp195));
  _res(3, 0) =
      -_tmp206 * (-Scalar(4.967784) * _tmp213 + Scalar(1.0) * _tmp214 * std::sinh(_tmp205) -
                  (-Scalar(0.1034955) * _tmp207 * _tmp213 +
                   _tmp208 * (-_tmp204 * _tmp211 - _tmp206 * _tmp214)) *
                      std::sinh(_tmp209)) -
      _tmp211 * (Scalar(4.967784) * _tmp203 + std::cosh(_tmp205) - std::cosh(_tmp209));

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
