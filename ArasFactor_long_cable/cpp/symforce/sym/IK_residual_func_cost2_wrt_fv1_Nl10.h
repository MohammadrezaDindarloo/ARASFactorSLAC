// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

#include <sym/rot3.h>

namespace sym {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: IK_residual_func_cost2_wrt_fv1_Nl10
 *
 * Args:
 *     fh1: Scalar
 *     fv1: Scalar
 *     DeltaRot: Rot3
 *     position_vector: Matrix31
 *     Rot_init: Rot3
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix41
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 4, 1> IkResidualFuncCost2WrtFv1Nl10(
    const Scalar fh1, const Scalar fv1, const sym::Rot3<Scalar>& DeltaRot,
    const Eigen::Matrix<Scalar, 3, 1>& position_vector, const sym::Rot3<Scalar>& Rot_init,
    const Scalar epsilon) {
  // Total ops: 598

  // Unused inputs
  (void)epsilon;

  // Input arrays
  const Eigen::Matrix<Scalar, 4, 1>& _DeltaRot = DeltaRot.Data();
  const Eigen::Matrix<Scalar, 4, 1>& _Rot_init = Rot_init.Data();

  // Intermediate terms (189)
  const Scalar _tmp0 = Scalar(1.0) / (fh1);
  const Scalar _tmp1 = std::asinh(_tmp0 * fv1);
  const Scalar _tmp2 = Scalar(1.0) * _tmp0 /
                       std::sqrt(Scalar(1 + std::pow(fv1, Scalar(2)) / std::pow(fh1, Scalar(2))));
  const Scalar _tmp3 = _DeltaRot[0] * _Rot_init[3] - _DeltaRot[1] * _Rot_init[2] +
                       _DeltaRot[2] * _Rot_init[1] + _DeltaRot[3] * _Rot_init[0];
  const Scalar _tmp4 = _DeltaRot[0] * _Rot_init[2] + _DeltaRot[1] * _Rot_init[3] -
                       _DeltaRot[2] * _Rot_init[0] + _DeltaRot[3] * _Rot_init[1];
  const Scalar _tmp5 = 2 * _tmp4;
  const Scalar _tmp6 = _tmp3 * _tmp5;
  const Scalar _tmp7 = -_DeltaRot[0] * _Rot_init[1] + _DeltaRot[1] * _Rot_init[0] +
                       _DeltaRot[2] * _Rot_init[3] + _DeltaRot[3] * _Rot_init[2];
  const Scalar _tmp8 = -2 * _DeltaRot[0] * _Rot_init[0] - 2 * _DeltaRot[1] * _Rot_init[1] -
                       2 * _DeltaRot[2] * _Rot_init[2] + 2 * _DeltaRot[3] * _Rot_init[3];
  const Scalar _tmp9 = _tmp7 * _tmp8;
  const Scalar _tmp10 = Scalar(0.20999999999999999) * _tmp6 + Scalar(0.20999999999999999) * _tmp9;
  const Scalar _tmp11 = -2 * std::pow(_tmp3, Scalar(2));
  const Scalar _tmp12 = 1 - 2 * std::pow(_tmp7, Scalar(2));
  const Scalar _tmp13 = Scalar(0.20999999999999999) * _tmp11 + Scalar(0.20999999999999999) * _tmp12;
  const Scalar _tmp14 = _tmp5 * _tmp7;
  const Scalar _tmp15 = _tmp3 * _tmp8;
  const Scalar _tmp16 = _tmp14 - _tmp15;
  const Scalar _tmp17 = Scalar(0.010999999999999999) * _tmp16;
  const Scalar _tmp18 = -_tmp17;
  const Scalar _tmp19 = -_tmp13 + _tmp18;
  const Scalar _tmp20 = _tmp10 + _tmp19;
  const Scalar _tmp21 = _tmp20 + position_vector(1, 0);
  const Scalar _tmp22 = -2 * std::pow(_tmp4, Scalar(2));
  const Scalar _tmp23 = Scalar(0.20999999999999999) * _tmp12 + Scalar(0.20999999999999999) * _tmp22;
  const Scalar _tmp24 = 2 * _tmp3 * _tmp7;
  const Scalar _tmp25 = _tmp4 * _tmp8;
  const Scalar _tmp26 = _tmp24 + _tmp25;
  const Scalar _tmp27 = -Scalar(0.010999999999999999) * _tmp26;
  const Scalar _tmp28 = Scalar(0.20999999999999999) * _tmp6 - Scalar(0.20999999999999999) * _tmp9;
  const Scalar _tmp29 = _tmp27 - _tmp28;
  const Scalar _tmp30 = _tmp23 + _tmp29;
  const Scalar _tmp31 = _tmp30 + position_vector(0, 0);
  const Scalar _tmp32 = Scalar(9.6622558468725703) * fh1;
  const Scalar _tmp33 = Scalar(19.620000000000001) - fv1;
  const Scalar _tmp34 = _tmp10 + _tmp13 + _tmp18;
  const Scalar _tmp35 = _tmp34 + position_vector(1, 0);
  const Scalar _tmp36 = _tmp35 + Scalar(-110.0);
  const Scalar _tmp37 = _tmp27 + _tmp28;
  const Scalar _tmp38 = _tmp23 + _tmp37;
  const Scalar _tmp39 = _tmp38 + position_vector(0, 0);
  const Scalar _tmp40 = _tmp39 + Scalar(-125.0);
  const Scalar _tmp41 = std::pow(Scalar(std::pow(_tmp36, Scalar(2)) + std::pow(_tmp40, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp42 = _tmp40 * _tmp41;
  const Scalar _tmp43 = Scalar(0.20999999999999999) * _tmp14 + Scalar(0.20999999999999999) * _tmp15;
  const Scalar _tmp44 = -Scalar(0.010999999999999999) * _tmp11 -
                        Scalar(0.010999999999999999) * _tmp22 + Scalar(-0.010999999999999999);
  const Scalar _tmp45 = Scalar(0.20999999999999999) * _tmp24 - Scalar(0.20999999999999999) * _tmp25;
  const Scalar _tmp46 = _tmp44 + _tmp45;
  const Scalar _tmp47 = _tmp43 + _tmp46;
  const Scalar _tmp48 = _tmp44 - _tmp45;
  const Scalar _tmp49 = _tmp43 + _tmp48;
  const Scalar _tmp50 = -_tmp10;
  const Scalar _tmp51 = _tmp19 + _tmp50;
  const Scalar _tmp52 = _tmp51 + position_vector(1, 0);
  const Scalar _tmp53 = _tmp52 + Scalar(110.0);
  const Scalar _tmp54 = -_tmp23;
  const Scalar _tmp55 = _tmp29 + _tmp54;
  const Scalar _tmp56 = _tmp55 + position_vector(0, 0);
  const Scalar _tmp57 = _tmp56 + Scalar(125.0);
  const Scalar _tmp58 = std::pow(Scalar(std::pow(_tmp53, Scalar(2)) + std::pow(_tmp57, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp59 = _tmp57 * _tmp58;
  const Scalar _tmp60 = _tmp49 * _tmp59;
  const Scalar _tmp61 = -_tmp43;
  const Scalar _tmp62 = _tmp48 + _tmp61;
  const Scalar _tmp63 = -_tmp59 * _tmp62 + _tmp60;
  const Scalar _tmp64 = _tmp13 + _tmp50;
  const Scalar _tmp65 = _tmp18 + _tmp64;
  const Scalar _tmp66 = _tmp65 + position_vector(1, 0);
  const Scalar _tmp67 = _tmp66 + Scalar(-110.0);
  const Scalar _tmp68 = _tmp37 + _tmp54;
  const Scalar _tmp69 = _tmp68 + position_vector(0, 0);
  const Scalar _tmp70 = _tmp69 + Scalar(125.0);
  const Scalar _tmp71 = Scalar(1.0) / (_tmp70);
  const Scalar _tmp72 = _tmp67 * _tmp71;
  const Scalar _tmp73 = _tmp53 * _tmp58;
  const Scalar _tmp74 = Scalar(1.0) / (_tmp59 * _tmp72 - _tmp73);
  const Scalar _tmp75 = _tmp36 * _tmp41;
  const Scalar _tmp76 = _tmp42 * _tmp72 - _tmp75;
  const Scalar _tmp77 = _tmp74 * _tmp76;
  const Scalar _tmp78 = _tmp42 * _tmp49;
  const Scalar _tmp79 = -_tmp60 * _tmp72 + _tmp62 * _tmp73;
  const Scalar _tmp80 = _tmp47 * _tmp75 - _tmp72 * _tmp78 - _tmp77 * _tmp79;
  const Scalar _tmp81 = Scalar(1.0) * _tmp65;
  const Scalar _tmp82 = -_tmp81;
  const Scalar _tmp83 = Scalar(1.0) / (_tmp51 + _tmp82);
  const Scalar _tmp84 = Scalar(1.0) * _tmp68;
  const Scalar _tmp85 = -_tmp55 + _tmp84;
  const Scalar _tmp86 = _tmp83 * _tmp85;
  const Scalar _tmp87 = -_tmp42 * _tmp47 - _tmp63 * _tmp77 + _tmp78 - _tmp80 * _tmp86;
  const Scalar _tmp88 = Scalar(1.0) / (_tmp87);
  const Scalar _tmp89 = _tmp81 * _tmp86 + _tmp84;
  const Scalar _tmp90 = 0;
  const Scalar _tmp91 = _tmp77 * _tmp90;
  const Scalar _tmp92 =
      std::sqrt(Scalar(std::pow(_tmp67, Scalar(2)) + std::pow(_tmp70, Scalar(2))));
  const Scalar _tmp93 = _tmp71 * _tmp92;
  const Scalar _tmp94 = _tmp93 * (_tmp42 * _tmp90 - _tmp59 * _tmp91);
  const Scalar _tmp95 = Scalar(1.0) / (_tmp92);
  const Scalar _tmp96 = _tmp93 * (-_tmp65 * _tmp70 * _tmp95 + _tmp67 * _tmp68 * _tmp95);
  const Scalar _tmp97 = _tmp74 * (_tmp51 * _tmp59 - _tmp55 * _tmp73 + _tmp59 * _tmp96);
  const Scalar _tmp98 = _tmp34 * _tmp42 - _tmp38 * _tmp75 + _tmp42 * _tmp96 - _tmp76 * _tmp97;
  const Scalar _tmp99 = Scalar(1.0) / (_tmp98);
  const Scalar _tmp100 = Scalar(1.0) * _tmp99;
  const Scalar _tmp101 = Scalar(1.0) * _tmp74;
  const Scalar _tmp102 = _tmp101 * _tmp76 * _tmp99;
  const Scalar _tmp103 = _tmp21 + Scalar(110.0);
  const Scalar _tmp104 = _tmp31 + Scalar(-125.0);
  const Scalar _tmp105 =
      std::pow(Scalar(std::pow(_tmp103, Scalar(2)) + std::pow(_tmp104, Scalar(2))),
               Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp106 = _tmp103 * _tmp105;
  const Scalar _tmp107 = _tmp104 * _tmp105;
  const Scalar _tmp108 = fh1 * (_tmp106 * _tmp30 - _tmp107 * _tmp20);
  const Scalar _tmp109 = Scalar(1.0) * _tmp83;
  const Scalar _tmp110 = -_tmp101 * _tmp63 + _tmp109 * _tmp74 * _tmp79 * _tmp85;
  const Scalar _tmp111 = _tmp88 * _tmp98;
  const Scalar _tmp112 = _tmp87 * _tmp99;
  const Scalar _tmp113 = _tmp112 * (-_tmp110 * _tmp111 - Scalar(1.0) * _tmp97);
  const Scalar _tmp114 = _tmp88 * (_tmp110 + _tmp113);
  const Scalar _tmp115 = -_tmp114 * _tmp76 + Scalar(1.0);
  const Scalar _tmp116 = _tmp59 * _tmp74;
  const Scalar _tmp117 = _tmp106 * fh1;
  const Scalar _tmp118 = _tmp72 * _tmp74;
  const Scalar _tmp119 = _tmp118 * _tmp79 + _tmp49 * _tmp72;
  const Scalar _tmp120 = _tmp118 * _tmp63 - _tmp119 * _tmp86 - _tmp49;
  const Scalar _tmp121 = _tmp112 * (-_tmp111 * _tmp120 + _tmp72 * _tmp97 - _tmp96);
  const Scalar _tmp122 = _tmp88 * (_tmp120 + _tmp121);
  const Scalar _tmp123 = -_tmp122 * _tmp76 - _tmp72;
  const Scalar _tmp124 = _tmp107 * fh1;
  const Scalar _tmp125 = -_tmp108 * _tmp93 * (_tmp100 * _tmp42 - _tmp102 * _tmp59) -
                         _tmp117 * _tmp93 * (_tmp114 * _tmp42 + _tmp115 * _tmp116) -
                         _tmp124 * _tmp93 * (_tmp116 * _tmp123 + _tmp122 * _tmp42 + Scalar(1.0)) -
                         _tmp33 * _tmp94;
  const Scalar _tmp126 = Scalar(1.0) / (_tmp125);
  const Scalar _tmp127 = fh1 * (_tmp46 + _tmp61);
  const Scalar _tmp128 = -_tmp106 * _tmp127 - Scalar(2.3544) * _tmp16 - _tmp20 * fv1;
  const Scalar _tmp129 = _tmp34 + _tmp82;
  const Scalar _tmp130 = _tmp129 * _tmp86;
  const Scalar _tmp131 = Scalar(1.0) / (-_tmp130 - _tmp38 + _tmp84);
  const Scalar _tmp132 = Scalar(1.0) * _tmp131;
  const Scalar _tmp133 = _tmp132 * _tmp86;
  const Scalar _tmp134 = _tmp130 * _tmp132 + Scalar(1.0);
  const Scalar _tmp135 = -Scalar(1.0) * _tmp109 * _tmp134 + Scalar(1.0) * _tmp133;
  const Scalar _tmp136 = _tmp112 * _tmp132;
  const Scalar _tmp137 = -_tmp100 * _tmp80 + _tmp129 * _tmp136;
  const Scalar _tmp138 = _tmp129 * _tmp131;
  const Scalar _tmp139 = _tmp119 + _tmp121 * _tmp138 - _tmp122 * _tmp80;
  const Scalar _tmp140 = _tmp107 * _tmp127 + Scalar(2.3544) * _tmp26 + _tmp30 * fv1;
  const Scalar _tmp141 = _tmp129 * _tmp83;
  const Scalar _tmp142 = Scalar(1.0) * _tmp132 * _tmp141 - Scalar(1.0) * _tmp132;
  const Scalar _tmp143 = _tmp131 * _tmp89;
  const Scalar _tmp144 = _tmp83 * (-_tmp129 * _tmp143 - _tmp80 * _tmp90 + _tmp82);
  const Scalar _tmp145 = -Scalar(1.0) * _tmp132 * _tmp89 - Scalar(1.0) * _tmp144 + Scalar(1.0);
  const Scalar _tmp146 = -_tmp101 * _tmp79 + _tmp113 * _tmp138 - _tmp114 * _tmp80;
  const Scalar _tmp147 = Scalar(1.0) * _tmp108 * (-_tmp109 * _tmp137 + _tmp136) +
                         Scalar(1.0) * _tmp117 * (-_tmp109 * _tmp146 + _tmp113 * _tmp132) +
                         Scalar(1.0) * _tmp124 * (-_tmp109 * _tmp139 + _tmp121 * _tmp132) +
                         _tmp128 * _tmp135 + _tmp140 * _tmp142 + _tmp145 * _tmp33;
  const Scalar _tmp148 = std::asinh(_tmp126 * _tmp147);
  const Scalar _tmp149 = Scalar(1.0) * _tmp148;
  const Scalar _tmp150 = std::pow(_tmp125, Scalar(-2));
  const Scalar _tmp151 = _tmp17 + _tmp64;
  const Scalar _tmp152 = _tmp150 * _tmp94;
  const Scalar _tmp153 =
      (_tmp126 * (_tmp135 * _tmp151 + _tmp142 * _tmp30 - _tmp145) - _tmp147 * _tmp152) /
      std::sqrt(Scalar(std::pow(_tmp147, Scalar(2)) * _tmp150 + 1));
  const Scalar _tmp154 = Scalar(9.6622558468725703) * _tmp94;
  const Scalar _tmp155 = Scalar(9.6622558468725703) * _tmp125;
  const Scalar _tmp156 = Scalar(0.1034955) * _tmp126;
  const Scalar _tmp157 =
      -_tmp148 * _tmp155 -
      Scalar(125.0) *
          std::sqrt(
              Scalar(Scalar(0.77439999999999998) *
                         std::pow(Scalar(1 - Scalar(0.0090909090909090905) * _tmp66), Scalar(2)) +
                     std::pow(Scalar(-Scalar(0.0080000000000000002) * _tmp69 - 1), Scalar(2))));
  const Scalar _tmp158 = _tmp156 * _tmp157;
  const Scalar _tmp159 = _tmp33 * _tmp90;
  const Scalar _tmp160 = -_tmp102 * _tmp108 + _tmp115 * _tmp117 * _tmp74 +
                         _tmp123 * _tmp124 * _tmp74 - _tmp159 * _tmp77;
  const Scalar _tmp161 = Scalar(1.0) / (_tmp160);
  const Scalar _tmp162 = _tmp132 * _tmp140;
  const Scalar _tmp163 = _tmp134 * _tmp83;
  const Scalar _tmp164 = _tmp108 * _tmp137 * _tmp83 + _tmp117 * _tmp146 * _tmp83 +
                         _tmp124 * _tmp139 * _tmp83 + _tmp128 * _tmp163 - _tmp141 * _tmp162 +
                         _tmp144 * _tmp33;
  const Scalar _tmp165 = std::asinh(_tmp161 * _tmp164);
  const Scalar _tmp166 = Scalar(9.6622558468725703) * _tmp160;
  const Scalar _tmp167 =
      -_tmp165 * _tmp166 -
      Scalar(125.0) *
          std::sqrt(
              Scalar(Scalar(0.77439999999999998) *
                         std::pow(Scalar(-Scalar(0.0090909090909090905) * _tmp52 - 1), Scalar(2)) +
                     std::pow(Scalar(-Scalar(0.0080000000000000002) * _tmp56 - 1), Scalar(2))));
  const Scalar _tmp168 = Scalar(0.1034955) * _tmp161;
  const Scalar _tmp169 = _tmp167 * _tmp168;
  const Scalar _tmp170 = std::pow(_tmp160, Scalar(-2));
  const Scalar _tmp171 = _tmp170 * _tmp91;
  const Scalar _tmp172 = _tmp132 * _tmp30;
  const Scalar _tmp173 =
      (_tmp161 * (-_tmp141 * _tmp172 - _tmp144 + _tmp151 * _tmp163) - _tmp164 * _tmp171) /
      std::sqrt(Scalar(std::pow(_tmp164, Scalar(2)) * _tmp170 + 1));
  const Scalar _tmp174 = Scalar(9.6622558468725703) * _tmp90;
  const Scalar _tmp175 = _tmp174 * _tmp77;
  const Scalar _tmp176 = Scalar(1.0) * _tmp165;
  const Scalar _tmp177 = -_tmp108 * _tmp136 - _tmp113 * _tmp117 * _tmp131 -
                         _tmp121 * _tmp124 * _tmp131 - _tmp128 * _tmp133 + _tmp143 * _tmp33 +
                         _tmp162;
  const Scalar _tmp178 = _tmp100 * _tmp108 + _tmp114 * _tmp117 + _tmp122 * _tmp124 + _tmp159;
  const Scalar _tmp179 = Scalar(1.0) / (_tmp178);
  const Scalar _tmp180 = std::asinh(_tmp177 * _tmp179);
  const Scalar _tmp181 = Scalar(1.0) * _tmp180;
  const Scalar _tmp182 = Scalar(9.6622558468725703) * _tmp178;
  const Scalar _tmp183 =
      -_tmp180 * _tmp182 -
      Scalar(125.0) *
          std::sqrt(
              Scalar(Scalar(0.77439999999999998) *
                         std::pow(Scalar(1 - Scalar(0.0090909090909090905) * _tmp35), Scalar(2)) +
                     std::pow(Scalar(1 - Scalar(0.0080000000000000002) * _tmp39), Scalar(2))));
  const Scalar _tmp184 = Scalar(0.1034955) * _tmp179;
  const Scalar _tmp185 = _tmp183 * _tmp184;
  const Scalar _tmp186 = std::pow(_tmp178, Scalar(-2));
  const Scalar _tmp187 = _tmp186 * _tmp90;
  const Scalar _tmp188 = (_tmp177 * _tmp187 + _tmp179 * (-_tmp133 * _tmp151 - _tmp143 + _tmp172)) /
                         std::sqrt(Scalar(std::pow(_tmp177, Scalar(2)) * _tmp186 + 1));

  // Output terms (1)
  Eigen::Matrix<Scalar, 4, 1> _res;

  _res(0, 0) =
      _tmp32 *
      (-_tmp2 * std::cosh(Scalar(1.0) * _tmp1) +
       _tmp2 * std::cosh(Scalar(0.1034955) * _tmp0 *
                         (-_tmp1 * _tmp32 -
                          Scalar(125.0) *
                              std::sqrt(Scalar(
                                  std::pow(Scalar(1 - Scalar(0.0080000000000000002) * _tmp31),
                                           Scalar(2)) +
                                  Scalar(0.77439999999999998) *
                                      std::pow(Scalar(-Scalar(0.0090909090909090905) * _tmp21 - 1),
                                               Scalar(2)))))));
  _res(1, 0) = _tmp154 * (-std::sinh(_tmp149) - std::sinh(_tmp158)) +
               _tmp155 * (-Scalar(1.0) * _tmp153 * std::cosh(_tmp149) -
                          (-Scalar(0.1034955) * _tmp152 * _tmp157 +
                           _tmp156 * (-_tmp148 * _tmp154 - _tmp153 * _tmp155)) *
                              std::cosh(_tmp158));
  _res(2, 0) = _tmp166 * (-Scalar(1.0) * _tmp173 * std::cosh(_tmp176) -
                          (-Scalar(0.1034955) * _tmp167 * _tmp171 +
                           _tmp168 * (-_tmp165 * _tmp175 - _tmp166 * _tmp173)) *
                              std::cosh(_tmp169)) +
               _tmp175 * (-std::sinh(_tmp169) - std::sinh(_tmp176));
  _res(3, 0) = -_tmp174 * (-std::sinh(_tmp181) - std::sinh(_tmp185)) +
               _tmp182 * (-Scalar(1.0) * _tmp188 * std::cosh(_tmp181) -
                          (Scalar(0.1034955) * _tmp183 * _tmp187 +
                           _tmp184 * (_tmp174 * _tmp180 - _tmp182 * _tmp188)) *
                              std::cosh(_tmp185));

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
