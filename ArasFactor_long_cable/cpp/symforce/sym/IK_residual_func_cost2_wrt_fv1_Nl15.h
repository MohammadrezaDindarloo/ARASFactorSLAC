// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

#include <sym/rot3.h>

namespace sym {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: IK_residual_func_cost2_wrt_fv1_Nl15
 *
 * Args:
 *     fh1: Scalar
 *     fv1: Scalar
 *     DeltaRot: Rot3
 *     position_vector: Matrix31
 *     Rot_init: Rot3
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix41
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 4, 1> IkResidualFuncCost2WrtFv1Nl15(
    const Scalar fh1, const Scalar fv1, const sym::Rot3<Scalar>& DeltaRot,
    const Eigen::Matrix<Scalar, 3, 1>& position_vector, const sym::Rot3<Scalar>& Rot_init,
    const Scalar epsilon) {
  // Total ops: 597

  // Unused inputs
  (void)epsilon;

  // Input arrays
  const Eigen::Matrix<Scalar, 4, 1>& _DeltaRot = DeltaRot.Data();
  const Eigen::Matrix<Scalar, 4, 1>& _Rot_init = Rot_init.Data();

  // Intermediate terms (190)
  const Scalar _tmp0 = Scalar(1.0) / (fh1);
  const Scalar _tmp1 = std::asinh(_tmp0 * fv1);
  const Scalar _tmp2 = Scalar(1.0) * _tmp0 /
                       std::sqrt(Scalar(1 + std::pow(fv1, Scalar(2)) / std::pow(fh1, Scalar(2))));
  const Scalar _tmp3 = _DeltaRot[0] * _Rot_init[2] + _DeltaRot[1] * _Rot_init[3] -
                       _DeltaRot[2] * _Rot_init[0] + _DeltaRot[3] * _Rot_init[1];
  const Scalar _tmp4 = -2 * std::pow(_tmp3, Scalar(2));
  const Scalar _tmp5 = -_DeltaRot[0] * _Rot_init[1] + _DeltaRot[1] * _Rot_init[0] +
                       _DeltaRot[2] * _Rot_init[3] + _DeltaRot[3] * _Rot_init[2];
  const Scalar _tmp6 = 1 - 2 * std::pow(_tmp5, Scalar(2));
  const Scalar _tmp7 = Scalar(0.20999999999999999) * _tmp4 + Scalar(0.20999999999999999) * _tmp6;
  const Scalar _tmp8 = _DeltaRot[0] * _Rot_init[3] - _DeltaRot[1] * _Rot_init[2] +
                       _DeltaRot[2] * _Rot_init[1] + _DeltaRot[3] * _Rot_init[0];
  const Scalar _tmp9 = 2 * _tmp5 * _tmp8;
  const Scalar _tmp10 = -2 * _DeltaRot[0] * _Rot_init[0] - 2 * _DeltaRot[1] * _Rot_init[1] -
                        2 * _DeltaRot[2] * _Rot_init[2] + 2 * _DeltaRot[3] * _Rot_init[3];
  const Scalar _tmp11 = _tmp10 * _tmp3;
  const Scalar _tmp12 = _tmp11 + _tmp9;
  const Scalar _tmp13 = -Scalar(0.010999999999999999) * _tmp12;
  const Scalar _tmp14 = 2 * _tmp3;
  const Scalar _tmp15 = _tmp14 * _tmp8;
  const Scalar _tmp16 = _tmp10 * _tmp5;
  const Scalar _tmp17 = Scalar(0.20999999999999999) * _tmp15 - Scalar(0.20999999999999999) * _tmp16;
  const Scalar _tmp18 = _tmp13 + _tmp17;
  const Scalar _tmp19 = _tmp18 + _tmp7;
  const Scalar _tmp20 = _tmp19 + position_vector(0, 0);
  const Scalar _tmp21 = Scalar(0.20999999999999999) * _tmp15 + Scalar(0.20999999999999999) * _tmp16;
  const Scalar _tmp22 = _tmp14 * _tmp5;
  const Scalar _tmp23 = _tmp10 * _tmp8;
  const Scalar _tmp24 = _tmp22 - _tmp23;
  const Scalar _tmp25 = Scalar(0.010999999999999999) * _tmp24;
  const Scalar _tmp26 = -_tmp25;
  const Scalar _tmp27 = -2 * std::pow(_tmp8, Scalar(2));
  const Scalar _tmp28 = Scalar(0.20999999999999999) * _tmp27 + Scalar(0.20999999999999999) * _tmp6;
  const Scalar _tmp29 = _tmp26 + _tmp28;
  const Scalar _tmp30 = _tmp21 + _tmp29;
  const Scalar _tmp31 = _tmp30 + position_vector(1, 0);
  const Scalar _tmp32 = Scalar(9.6622558468725703) * fh1;
  const Scalar _tmp33 = -_tmp28;
  const Scalar _tmp34 = _tmp26 + _tmp33;
  const Scalar _tmp35 = _tmp21 + _tmp34;
  const Scalar _tmp36 = _tmp35 + position_vector(1, 0);
  const Scalar _tmp37 = _tmp13 - _tmp17;
  const Scalar _tmp38 = _tmp37 + _tmp7;
  const Scalar _tmp39 = _tmp38 + position_vector(0, 0);
  const Scalar _tmp40 = -_tmp21;
  const Scalar _tmp41 = _tmp34 + _tmp40;
  const Scalar _tmp42 = _tmp41 + position_vector(1, 0);
  const Scalar _tmp43 = _tmp42 + Scalar(110.0);
  const Scalar _tmp44 = -_tmp7;
  const Scalar _tmp45 = _tmp37 + _tmp44;
  const Scalar _tmp46 = _tmp45 + position_vector(0, 0);
  const Scalar _tmp47 = _tmp46 + Scalar(125.0);
  const Scalar _tmp48 = std::pow(Scalar(std::pow(_tmp43, Scalar(2)) + std::pow(_tmp47, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp49 = _tmp47 * _tmp48;
  const Scalar _tmp50 = _tmp36 + Scalar(110.0);
  const Scalar _tmp51 = _tmp39 + Scalar(-125.0);
  const Scalar _tmp52 =
      std::sqrt(Scalar(std::pow(_tmp50, Scalar(2)) + std::pow(_tmp51, Scalar(2))));
  const Scalar _tmp53 = Scalar(1.0) / (_tmp52);
  const Scalar _tmp54 = Scalar(1.0) / (_tmp51);
  const Scalar _tmp55 = _tmp52 * _tmp54;
  const Scalar _tmp56 = _tmp55 * (-_tmp35 * _tmp51 * _tmp53 + _tmp38 * _tmp50 * _tmp53);
  const Scalar _tmp57 = _tmp50 * _tmp54;
  const Scalar _tmp58 = _tmp43 * _tmp48;
  const Scalar _tmp59 = _tmp49 * _tmp57 - _tmp58;
  const Scalar _tmp60 = _tmp29 + _tmp40;
  const Scalar _tmp61 = _tmp60 + position_vector(1, 0);
  const Scalar _tmp62 = _tmp61 + Scalar(-110.0);
  const Scalar _tmp63 = _tmp18 + _tmp44;
  const Scalar _tmp64 = _tmp63 + position_vector(0, 0);
  const Scalar _tmp65 = _tmp64 + Scalar(125.0);
  const Scalar _tmp66 = std::pow(Scalar(std::pow(_tmp62, Scalar(2)) + std::pow(_tmp65, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp67 = _tmp62 * _tmp66;
  const Scalar _tmp68 = _tmp65 * _tmp66;
  const Scalar _tmp69 = Scalar(1.0) / (_tmp57 * _tmp68 - _tmp67);
  const Scalar _tmp70 = _tmp69 * (_tmp56 * _tmp68 + _tmp60 * _tmp68 - _tmp63 * _tmp67);
  const Scalar _tmp71 = _tmp41 * _tmp49 - _tmp45 * _tmp58 + _tmp49 * _tmp56 - _tmp59 * _tmp70;
  const Scalar _tmp72 = Scalar(1.0) / (_tmp71);
  const Scalar _tmp73 = Scalar(1.0) * _tmp72;
  const Scalar _tmp74 = _tmp68 * _tmp69;
  const Scalar _tmp75 = _tmp59 * _tmp74;
  const Scalar _tmp76 = _tmp31 + Scalar(-110.0);
  const Scalar _tmp77 = _tmp20 + Scalar(-125.0);
  const Scalar _tmp78 = std::pow(Scalar(std::pow(_tmp76, Scalar(2)) + std::pow(_tmp77, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp79 = _tmp77 * _tmp78;
  const Scalar _tmp80 = _tmp76 * _tmp78;
  const Scalar _tmp81 = fh1 * (_tmp19 * _tmp80 - _tmp30 * _tmp79);
  const Scalar _tmp82 = Scalar(19.620000000000001) - fv1;
  const Scalar _tmp83 = -Scalar(0.20999999999999999) * _tmp11 + Scalar(0.20999999999999999) * _tmp9;
  const Scalar _tmp84 = -Scalar(0.010999999999999999) * _tmp27 -
                        Scalar(0.010999999999999999) * _tmp4 + Scalar(-0.010999999999999999);
  const Scalar _tmp85 = Scalar(0.20999999999999999) * _tmp22 + Scalar(0.20999999999999999) * _tmp23;
  const Scalar _tmp86 = _tmp84 - _tmp85;
  const Scalar _tmp87 = _tmp83 + _tmp86;
  const Scalar _tmp88 = -_tmp83;
  const Scalar _tmp89 = _tmp86 + _tmp88;
  const Scalar _tmp90 = _tmp84 + _tmp85;
  const Scalar _tmp91 = _tmp88 + _tmp90;
  const Scalar _tmp92 = _tmp68 * _tmp87;
  const Scalar _tmp93 = _tmp69 * (-_tmp57 * _tmp92 + _tmp67 * _tmp91);
  const Scalar _tmp94 = _tmp57 * _tmp87;
  const Scalar _tmp95 = -_tmp49 * _tmp94 + _tmp58 * _tmp89 - _tmp59 * _tmp93;
  const Scalar _tmp96 = Scalar(1.0) * _tmp35;
  const Scalar _tmp97 = -_tmp96;
  const Scalar _tmp98 = Scalar(1.0) / (_tmp60 + _tmp97);
  const Scalar _tmp99 = Scalar(1.0) * _tmp38;
  const Scalar _tmp100 = -_tmp63 + _tmp99;
  const Scalar _tmp101 = _tmp100 * _tmp98;
  const Scalar _tmp102 = _tmp69 * (-_tmp68 * _tmp91 + _tmp92);
  const Scalar _tmp103 = -_tmp101 * _tmp95 - _tmp102 * _tmp59 + _tmp49 * _tmp87 - _tmp49 * _tmp89;
  const Scalar _tmp104 = Scalar(1.0) / (_tmp103);
  const Scalar _tmp105 = _tmp101 * _tmp96 + _tmp99;
  const Scalar _tmp106 = 0;
  const Scalar _tmp107 = _tmp104 * _tmp106;
  const Scalar _tmp108 = _tmp55 * (_tmp107 * _tmp49 - _tmp107 * _tmp75);
  const Scalar _tmp109 = _tmp57 * _tmp93 + _tmp94;
  const Scalar _tmp110 = -_tmp101 * _tmp109 + _tmp102 * _tmp57 - _tmp87;
  const Scalar _tmp111 = _tmp104 * _tmp71;
  const Scalar _tmp112 = _tmp103 * _tmp72;
  const Scalar _tmp113 = _tmp112 * (-_tmp110 * _tmp111 - _tmp56 + _tmp57 * _tmp70);
  const Scalar _tmp114 = _tmp110 + _tmp113;
  const Scalar _tmp115 = _tmp104 * _tmp114;
  const Scalar _tmp116 = -_tmp115 * _tmp59 - _tmp57;
  const Scalar _tmp117 = _tmp79 * fh1;
  const Scalar _tmp118 = Scalar(1.0) * _tmp98;
  const Scalar _tmp119 = _tmp100 * _tmp118 * _tmp93 - Scalar(1.0) * _tmp102;
  const Scalar _tmp120 = _tmp112 * (-_tmp111 * _tmp119 - Scalar(1.0) * _tmp70);
  const Scalar _tmp121 = _tmp104 * (_tmp119 + _tmp120);
  const Scalar _tmp122 = -_tmp121 * _tmp59 + Scalar(1.0);
  const Scalar _tmp123 = _tmp80 * fh1;
  const Scalar _tmp124 = -_tmp108 * _tmp82 -
                         _tmp117 * _tmp55 * (_tmp115 * _tmp49 + _tmp116 * _tmp74 + Scalar(1.0)) -
                         _tmp123 * _tmp55 * (_tmp121 * _tmp49 + _tmp122 * _tmp74) -
                         _tmp55 * _tmp81 * (_tmp49 * _tmp73 - _tmp73 * _tmp75);
  const Scalar _tmp125 = Scalar(1.0) / (_tmp124);
  const Scalar _tmp126 = _tmp41 + _tmp97;
  const Scalar _tmp127 = _tmp101 * _tmp126;
  const Scalar _tmp128 = Scalar(1.0) / (-_tmp127 - _tmp45 + _tmp99);
  const Scalar _tmp129 = _tmp105 * _tmp128;
  const Scalar _tmp130 = _tmp104 * _tmp95;
  const Scalar _tmp131 = _tmp98 * (-_tmp106 * _tmp130 - _tmp126 * _tmp129 + _tmp97);
  const Scalar _tmp132 = -Scalar(1.0) * _tmp129 - Scalar(1.0) * _tmp131 + Scalar(1.0);
  const Scalar _tmp133 = _tmp126 * _tmp128;
  const Scalar _tmp134 = _tmp120 * _tmp133 - _tmp121 * _tmp95 - Scalar(1.0) * _tmp93;
  const Scalar _tmp135 = Scalar(1.0) * _tmp128;
  const Scalar _tmp136 = _tmp112 * _tmp135;
  const Scalar _tmp137 = _tmp126 * _tmp136 - _tmp73 * _tmp95;
  const Scalar _tmp138 = fh1 * (_tmp83 + _tmp90);
  const Scalar _tmp139 = Scalar(2.3544) * _tmp12 + _tmp138 * _tmp79 + _tmp19 * fv1;
  const Scalar _tmp140 = _tmp126 * _tmp98;
  const Scalar _tmp141 = Scalar(1.0) * _tmp135 * _tmp140 - Scalar(1.0) * _tmp135;
  const Scalar _tmp142 = -_tmp138 * _tmp80 - Scalar(2.3544) * _tmp24 - _tmp30 * fv1;
  const Scalar _tmp143 = _tmp98 * (_tmp127 * _tmp135 + Scalar(1.0));
  const Scalar _tmp144 = _tmp101 * _tmp135;
  const Scalar _tmp145 = -Scalar(1.0) * _tmp143 + Scalar(1.0) * _tmp144;
  const Scalar _tmp146 = _tmp109 + _tmp113 * _tmp133 - _tmp114 * _tmp130;
  const Scalar _tmp147 = Scalar(1.0) * _tmp117 * (_tmp113 * _tmp135 - _tmp118 * _tmp146) +
                         Scalar(1.0) * _tmp123 * (-_tmp118 * _tmp134 + _tmp120 * _tmp135) +
                         _tmp132 * _tmp82 + _tmp139 * _tmp141 + _tmp142 * _tmp145 +
                         Scalar(1.0) * _tmp81 * (-_tmp118 * _tmp137 + _tmp136);
  const Scalar _tmp148 = std::asinh(_tmp125 * _tmp147);
  const Scalar _tmp149 = Scalar(9.6622558468725703) * _tmp124;
  const Scalar _tmp150 =
      -_tmp148 * _tmp149 -
      Scalar(125.0) *
          std::sqrt(
              Scalar(std::pow(Scalar(1 - Scalar(0.0080000000000000002) * _tmp39), Scalar(2)) +
                     Scalar(0.77439999999999998) *
                         std::pow(Scalar(-Scalar(0.0090909090909090905) * _tmp36 - 1), Scalar(2))));
  const Scalar _tmp151 = Scalar(0.1034955) * _tmp125;
  const Scalar _tmp152 = _tmp150 * _tmp151;
  const Scalar _tmp153 = Scalar(1.0) * _tmp148;
  const Scalar _tmp154 = Scalar(9.6622558468725703) * _tmp108;
  const Scalar _tmp155 = std::pow(_tmp124, Scalar(-2));
  const Scalar _tmp156 = _tmp108 * _tmp155;
  const Scalar _tmp157 = _tmp25 + _tmp33 + _tmp40;
  const Scalar _tmp158 =
      (_tmp125 * (-_tmp132 + _tmp141 * _tmp19 + _tmp145 * _tmp157) - _tmp147 * _tmp156) /
      std::sqrt(Scalar(std::pow(_tmp147, Scalar(2)) * _tmp155 + 1));
  const Scalar _tmp159 = _tmp135 * _tmp139;
  const Scalar _tmp160 = _tmp117 * _tmp146 * _tmp98 + _tmp123 * _tmp134 * _tmp98 +
                         _tmp131 * _tmp82 + _tmp137 * _tmp81 * _tmp98 - _tmp140 * _tmp159 +
                         _tmp142 * _tmp143;
  const Scalar _tmp161 = _tmp73 * _tmp81;
  const Scalar _tmp162 = _tmp59 * _tmp69;
  const Scalar _tmp163 = _tmp107 * _tmp82;
  const Scalar _tmp164 = _tmp116 * _tmp117 * _tmp69 + _tmp122 * _tmp123 * _tmp69 -
                         _tmp161 * _tmp162 - _tmp162 * _tmp163;
  const Scalar _tmp165 = Scalar(1.0) / (_tmp164);
  const Scalar _tmp166 = std::asinh(_tmp160 * _tmp165);
  const Scalar _tmp167 = Scalar(1.0) * _tmp166;
  const Scalar _tmp168 = Scalar(9.6622558468725703) * _tmp164;
  const Scalar _tmp169 =
      -_tmp166 * _tmp168 -
      Scalar(125.0) *
          std::sqrt(
              Scalar(Scalar(0.77439999999999998) *
                         std::pow(Scalar(1 - Scalar(0.0090909090909090905) * _tmp61), Scalar(2)) +
                     std::pow(Scalar(-Scalar(0.0080000000000000002) * _tmp64 - 1), Scalar(2))));
  const Scalar _tmp170 = Scalar(0.1034955) * _tmp165;
  const Scalar _tmp171 = _tmp169 * _tmp170;
  const Scalar _tmp172 = Scalar(9.6622558468725703) * _tmp107;
  const Scalar _tmp173 = _tmp162 * _tmp172;
  const Scalar _tmp174 = _tmp135 * _tmp19;
  const Scalar _tmp175 = std::pow(_tmp164, Scalar(-2));
  const Scalar _tmp176 = _tmp107 * _tmp162 * _tmp175;
  const Scalar _tmp177 =
      (-_tmp160 * _tmp176 + _tmp165 * (-_tmp131 - _tmp140 * _tmp174 + _tmp143 * _tmp157)) /
      std::sqrt(Scalar(std::pow(_tmp160, Scalar(2)) * _tmp175 + 1));
  const Scalar _tmp178 = _tmp115 * _tmp117 + _tmp121 * _tmp123 + _tmp161 + _tmp163;
  const Scalar _tmp179 = Scalar(1.0) / (_tmp178);
  const Scalar _tmp180 = -_tmp113 * _tmp117 * _tmp128 - _tmp120 * _tmp123 * _tmp128 +
                         _tmp129 * _tmp82 - _tmp136 * _tmp81 - _tmp142 * _tmp144 + _tmp159;
  const Scalar _tmp181 = std::asinh(_tmp179 * _tmp180);
  const Scalar _tmp182 = Scalar(1.0) * _tmp181;
  const Scalar _tmp183 = std::pow(_tmp178, Scalar(-2));
  const Scalar _tmp184 = _tmp107 * _tmp183;
  const Scalar _tmp185 = (_tmp179 * (-_tmp129 - _tmp144 * _tmp157 + _tmp174) + _tmp180 * _tmp184) /
                         std::sqrt(Scalar(std::pow(_tmp180, Scalar(2)) * _tmp183 + 1));
  const Scalar _tmp186 = Scalar(9.6622558468725703) * _tmp178;
  const Scalar _tmp187 =
      -_tmp181 * _tmp186 -
      Scalar(125.0) *
          std::sqrt(
              Scalar(Scalar(0.77439999999999998) *
                         std::pow(Scalar(-Scalar(0.0090909090909090905) * _tmp42 - 1), Scalar(2)) +
                     std::pow(Scalar(-Scalar(0.0080000000000000002) * _tmp46 - 1), Scalar(2))));
  const Scalar _tmp188 = Scalar(0.1034955) * _tmp179;
  const Scalar _tmp189 = _tmp187 * _tmp188;

  // Output terms (1)
  Eigen::Matrix<Scalar, 4, 1> _res;

  _res(0, 0) =
      _tmp32 *
      (-_tmp2 * std::cosh(Scalar(1.0) * _tmp1) +
       _tmp2 * std::cosh(Scalar(0.1034955) * _tmp0 *
                         (-_tmp1 * _tmp32 -
                          Scalar(125.0) *
                              std::sqrt(Scalar(
                                  std::pow(Scalar(1 - Scalar(0.0080000000000000002) * _tmp20),
                                           Scalar(2)) +
                                  Scalar(0.77439999999999998) *
                                      std::pow(Scalar(1 - Scalar(0.0090909090909090905) * _tmp31),
                                               Scalar(2)))))));
  _res(1, 0) = _tmp149 * (-Scalar(1.0) * _tmp158 * std::cosh(_tmp153) -
                          (-Scalar(0.1034955) * _tmp150 * _tmp156 +
                           _tmp151 * (-_tmp148 * _tmp154 - _tmp149 * _tmp158)) *
                              std::cosh(_tmp152)) +
               _tmp154 * (-std::sinh(_tmp152) - std::sinh(_tmp153));
  _res(2, 0) = _tmp168 * (-Scalar(1.0) * _tmp177 * std::cosh(_tmp167) -
                          (-Scalar(0.1034955) * _tmp169 * _tmp176 +
                           _tmp170 * (-_tmp166 * _tmp173 - _tmp168 * _tmp177)) *
                              std::cosh(_tmp171)) +
               _tmp173 * (-std::sinh(_tmp167) - std::sinh(_tmp171));
  _res(3, 0) = -_tmp172 * (-std::sinh(_tmp182) - std::sinh(_tmp189)) +
               _tmp186 * (-Scalar(1.0) * _tmp185 * std::cosh(_tmp182) -
                          (Scalar(0.1034955) * _tmp184 * _tmp187 +
                           _tmp188 * (_tmp172 * _tmp181 - _tmp185 * _tmp186)) *
                              std::cosh(_tmp189));

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
