// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

#include <sym/rot3.h>

namespace sym {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: IK_residual_func_cost2_wrt_fv1_Nl21
 *
 * Args:
 *     fh1: Scalar
 *     fv1: Scalar
 *     DeltaRot: Rot3
 *     position_vector: Matrix31
 *     Rot_init: Rot3
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix41
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 4, 1> IkResidualFuncCost2WrtFv1Nl21(
    const Scalar fh1, const Scalar fv1, const sym::Rot3<Scalar>& DeltaRot,
    const Eigen::Matrix<Scalar, 3, 1>& position_vector, const sym::Rot3<Scalar>& Rot_init,
    const Scalar epsilon) {
  // Total ops: 599

  // Unused inputs
  (void)epsilon;

  // Input arrays
  const Eigen::Matrix<Scalar, 4, 1>& _DeltaRot = DeltaRot.Data();
  const Eigen::Matrix<Scalar, 4, 1>& _Rot_init = Rot_init.Data();

  // Intermediate terms (193)
  const Scalar _tmp0 = Scalar(1.0) / (fh1);
  const Scalar _tmp1 = std::asinh(_tmp0 * fv1);
  const Scalar _tmp2 = Scalar(1.0) * _tmp0 /
                       std::sqrt(Scalar(1 + std::pow(fv1, Scalar(2)) / std::pow(fh1, Scalar(2))));
  const Scalar _tmp3 = _DeltaRot[0] * _Rot_init[2] + _DeltaRot[1] * _Rot_init[3] -
                       _DeltaRot[2] * _Rot_init[0] + _DeltaRot[3] * _Rot_init[1];
  const Scalar _tmp4 = _DeltaRot[0] * _Rot_init[3] - _DeltaRot[1] * _Rot_init[2] +
                       _DeltaRot[2] * _Rot_init[1] + _DeltaRot[3] * _Rot_init[0];
  const Scalar _tmp5 = 2 * _tmp3 * _tmp4;
  const Scalar _tmp6 = -_DeltaRot[0] * _Rot_init[1] + _DeltaRot[1] * _Rot_init[0] +
                       _DeltaRot[2] * _Rot_init[3] + _DeltaRot[3] * _Rot_init[2];
  const Scalar _tmp7 = -2 * _DeltaRot[0] * _Rot_init[0] - 2 * _DeltaRot[1] * _Rot_init[1] -
                       2 * _DeltaRot[2] * _Rot_init[2] + 2 * _DeltaRot[3] * _Rot_init[3];
  const Scalar _tmp8 = _tmp6 * _tmp7;
  const Scalar _tmp9 = Scalar(0.20999999999999999) * _tmp5 - Scalar(0.20999999999999999) * _tmp8;
  const Scalar _tmp10 = -2 * std::pow(_tmp6, Scalar(2));
  const Scalar _tmp11 = 1 - 2 * std::pow(_tmp3, Scalar(2));
  const Scalar _tmp12 = Scalar(0.20999999999999999) * _tmp10 + Scalar(0.20999999999999999) * _tmp11;
  const Scalar _tmp13 = 2 * _tmp6;
  const Scalar _tmp14 = _tmp13 * _tmp4;
  const Scalar _tmp15 = _tmp3 * _tmp7;
  const Scalar _tmp16 = _tmp14 + _tmp15;
  const Scalar _tmp17 = -Scalar(0.010999999999999999) * _tmp16;
  const Scalar _tmp18 = -_tmp12 + _tmp17;
  const Scalar _tmp19 = _tmp18 + _tmp9;
  const Scalar _tmp20 = _tmp19 + position_vector(0, 0);
  const Scalar _tmp21 = Scalar(0.20999999999999999) * _tmp5 + Scalar(0.20999999999999999) * _tmp8;
  const Scalar _tmp22 = -_tmp21;
  const Scalar _tmp23 = -2 * std::pow(_tmp4, Scalar(2));
  const Scalar _tmp24 = Scalar(0.20999999999999999) * _tmp10 +
                        Scalar(0.20999999999999999) * _tmp23 + Scalar(0.20999999999999999);
  const Scalar _tmp25 = _tmp13 * _tmp3;
  const Scalar _tmp26 = _tmp4 * _tmp7;
  const Scalar _tmp27 = _tmp25 - _tmp26;
  const Scalar _tmp28 = Scalar(0.010999999999999999) * _tmp27;
  const Scalar _tmp29 = -_tmp28;
  const Scalar _tmp30 = _tmp24 + _tmp29;
  const Scalar _tmp31 = _tmp22 + _tmp30;
  const Scalar _tmp32 = _tmp31 + position_vector(1, 0);
  const Scalar _tmp33 = Scalar(9.6622558468725703) * fh1;
  const Scalar _tmp34 = -_tmp24;
  const Scalar _tmp35 = _tmp21 + _tmp34;
  const Scalar _tmp36 = _tmp29 + _tmp35;
  const Scalar _tmp37 = _tmp36 + position_vector(1, 0);
  const Scalar _tmp38 = -_tmp9;
  const Scalar _tmp39 = _tmp12 + _tmp17;
  const Scalar _tmp40 = _tmp38 + _tmp39;
  const Scalar _tmp41 = _tmp40 + position_vector(0, 0);
  const Scalar _tmp42 = Scalar(0.20999999999999999) * _tmp25 + Scalar(0.20999999999999999) * _tmp26;
  const Scalar _tmp43 =
      -Scalar(0.010999999999999999) * _tmp11 - Scalar(0.010999999999999999) * _tmp23;
  const Scalar _tmp44 = Scalar(0.20999999999999999) * _tmp14 - Scalar(0.20999999999999999) * _tmp15;
  const Scalar _tmp45 = _tmp43 + _tmp44;
  const Scalar _tmp46 = _tmp42 + _tmp45;
  const Scalar _tmp47 = _tmp21 + _tmp30;
  const Scalar _tmp48 = _tmp47 + position_vector(1, 0);
  const Scalar _tmp49 = _tmp48 + Scalar(-110.0);
  const Scalar _tmp50 = _tmp39 + _tmp9;
  const Scalar _tmp51 = _tmp50 + position_vector(0, 0);
  const Scalar _tmp52 = _tmp51 + Scalar(-125.0);
  const Scalar _tmp53 = std::pow(Scalar(std::pow(_tmp49, Scalar(2)) + std::pow(_tmp52, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp54 = _tmp52 * _tmp53;
  const Scalar _tmp55 = -_tmp42;
  const Scalar _tmp56 = _tmp45 + _tmp55;
  const Scalar _tmp57 = _tmp54 * _tmp56;
  const Scalar _tmp58 = -_tmp46 * _tmp54 + _tmp57;
  const Scalar _tmp59 = _tmp41 + Scalar(-125.0);
  const Scalar _tmp60 = Scalar(1.0) / (_tmp59);
  const Scalar _tmp61 = _tmp37 + Scalar(110.0);
  const Scalar _tmp62 = _tmp60 * _tmp61;
  const Scalar _tmp63 = _tmp49 * _tmp53;
  const Scalar _tmp64 = Scalar(1.0) / (_tmp54 * _tmp62 - _tmp63);
  const Scalar _tmp65 = Scalar(1.0) * _tmp64;
  const Scalar _tmp66 = _tmp46 * _tmp63 - _tmp57 * _tmp62;
  const Scalar _tmp67 = _tmp65 * _tmp66;
  const Scalar _tmp68 = Scalar(1.0) * _tmp36;
  const Scalar _tmp69 = -_tmp68;
  const Scalar _tmp70 = Scalar(1.0) / (_tmp47 + _tmp69);
  const Scalar _tmp71 = Scalar(1.0) * _tmp40;
  const Scalar _tmp72 = _tmp70 * (-_tmp50 + _tmp71);
  const Scalar _tmp73 = -_tmp58 * _tmp65 + _tmp67 * _tmp72;
  const Scalar _tmp74 = _tmp22 + _tmp29 + _tmp34;
  const Scalar _tmp75 = _tmp74 + position_vector(1, 0);
  const Scalar _tmp76 = _tmp75 + Scalar(110.0);
  const Scalar _tmp77 = _tmp18 + _tmp38;
  const Scalar _tmp78 = _tmp77 + position_vector(0, 0);
  const Scalar _tmp79 = _tmp78 + Scalar(125.0);
  const Scalar _tmp80 = std::pow(Scalar(std::pow(_tmp76, Scalar(2)) + std::pow(_tmp79, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp81 = _tmp79 * _tmp80;
  const Scalar _tmp82 = _tmp56 * _tmp81;
  const Scalar _tmp83 = _tmp43 - _tmp44;
  const Scalar _tmp84 = _tmp55 + _tmp83;
  const Scalar _tmp85 = _tmp76 * _tmp80;
  const Scalar _tmp86 = _tmp62 * _tmp81 - _tmp85;
  const Scalar _tmp87 = _tmp64 * _tmp86;
  const Scalar _tmp88 = -_tmp62 * _tmp82 - _tmp66 * _tmp87 + _tmp84 * _tmp85;
  const Scalar _tmp89 = -_tmp58 * _tmp87 - _tmp72 * _tmp88 - _tmp81 * _tmp84 + _tmp82;
  const Scalar _tmp90 = Scalar(1.0) / (_tmp89);
  const Scalar _tmp91 =
      std::sqrt(Scalar(std::pow(_tmp59, Scalar(2)) + std::pow(_tmp61, Scalar(2))));
  const Scalar _tmp92 = Scalar(1.0) / (_tmp91);
  const Scalar _tmp93 = _tmp60 * _tmp91;
  const Scalar _tmp94 = _tmp93 * (-_tmp36 * _tmp59 * _tmp92 + _tmp40 * _tmp61 * _tmp92);
  const Scalar _tmp95 = _tmp47 * _tmp54 - _tmp50 * _tmp63 + _tmp54 * _tmp94;
  const Scalar _tmp96 = _tmp74 * _tmp81 - _tmp77 * _tmp85 + _tmp81 * _tmp94 - _tmp87 * _tmp95;
  const Scalar _tmp97 = _tmp90 * _tmp96;
  const Scalar _tmp98 = Scalar(1.0) / (_tmp96);
  const Scalar _tmp99 = _tmp89 * _tmp98;
  const Scalar _tmp100 = _tmp99 * (-_tmp65 * _tmp95 - _tmp73 * _tmp97);
  const Scalar _tmp101 = _tmp100 + _tmp73;
  const Scalar _tmp102 = _tmp81 * _tmp90;
  const Scalar _tmp103 = _tmp86 * _tmp90;
  const Scalar _tmp104 = -_tmp101 * _tmp103 + Scalar(1.0);
  const Scalar _tmp105 = _tmp54 * _tmp64;
  const Scalar _tmp106 = _tmp32 + Scalar(-110.0);
  const Scalar _tmp107 = _tmp20 + Scalar(125.0);
  const Scalar _tmp108 =
      std::pow(Scalar(std::pow(_tmp106, Scalar(2)) + std::pow(_tmp107, Scalar(2))),
               Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp109 = _tmp106 * _tmp108;
  const Scalar _tmp110 = _tmp109 * fh1;
  const Scalar _tmp111 = _tmp62 * _tmp64;
  const Scalar _tmp112 = _tmp111 * _tmp66 + _tmp56 * _tmp62;
  const Scalar _tmp113 = _tmp111 * _tmp58 - _tmp112 * _tmp72 - _tmp56;
  const Scalar _tmp114 = _tmp99 * (_tmp111 * _tmp95 - _tmp113 * _tmp97 - _tmp94);
  const Scalar _tmp115 = _tmp113 + _tmp114;
  const Scalar _tmp116 = -_tmp103 * _tmp115 - _tmp62;
  const Scalar _tmp117 = _tmp107 * _tmp108;
  const Scalar _tmp118 = _tmp117 * fh1;
  const Scalar _tmp119 = _tmp65 * _tmp86 * _tmp98;
  const Scalar _tmp120 = Scalar(1.0) * _tmp98;
  const Scalar _tmp121 = fh1 * (_tmp109 * _tmp19 - _tmp117 * _tmp31);
  const Scalar _tmp122 = Scalar(19.620000000000001) - fv1;
  const Scalar _tmp123 = _tmp68 * _tmp72 + _tmp71;
  const Scalar _tmp124 = 0;
  const Scalar _tmp125 = _tmp124 * _tmp90;
  const Scalar _tmp126 = _tmp125 * _tmp87;
  const Scalar _tmp127 = _tmp93 * (_tmp125 * _tmp81 - _tmp126 * _tmp54);
  const Scalar _tmp128 = -_tmp110 * _tmp93 * (_tmp101 * _tmp102 + _tmp104 * _tmp105) -
                         _tmp118 * _tmp93 * (_tmp102 * _tmp115 + _tmp105 * _tmp116 + Scalar(1.0)) -
                         _tmp121 * _tmp93 * (-_tmp119 * _tmp54 + _tmp120 * _tmp81) -
                         _tmp122 * _tmp127;
  const Scalar _tmp129 = Scalar(1.0) / (_tmp128);
  const Scalar _tmp130 = _tmp69 + _tmp74;
  const Scalar _tmp131 = _tmp130 * _tmp72;
  const Scalar _tmp132 = Scalar(1.0) / (-_tmp131 + _tmp71 - _tmp77);
  const Scalar _tmp133 = Scalar(1.0) * _tmp132;
  const Scalar _tmp134 = _tmp88 * _tmp90;
  const Scalar _tmp135 = _tmp130 * _tmp132;
  const Scalar _tmp136 = _tmp112 + _tmp114 * _tmp135 - _tmp115 * _tmp134;
  const Scalar _tmp137 = Scalar(1.0) * _tmp70;
  const Scalar _tmp138 = _tmp100 * _tmp135 - _tmp101 * _tmp134 - _tmp67;
  const Scalar _tmp139 = fh1 * (_tmp42 + _tmp83);
  const Scalar _tmp140 = -_tmp109 * _tmp139 - Scalar(2.3544) * _tmp27 - _tmp31 * fv1;
  const Scalar _tmp141 = _tmp133 * _tmp72;
  const Scalar _tmp142 = _tmp70 * (_tmp131 * _tmp133 + Scalar(1.0));
  const Scalar _tmp143 = Scalar(1.0) * _tmp141 - Scalar(1.0) * _tmp142;
  const Scalar _tmp144 = _tmp133 * _tmp99;
  const Scalar _tmp145 = -_tmp120 * _tmp88 + _tmp130 * _tmp144;
  const Scalar _tmp146 = _tmp123 * _tmp132;
  const Scalar _tmp147 = _tmp70 * (-_tmp124 * _tmp134 - _tmp130 * _tmp146 + _tmp69);
  const Scalar _tmp148 = -Scalar(1.0) * _tmp123 * _tmp133 - Scalar(1.0) * _tmp147 + Scalar(1.0);
  const Scalar _tmp149 = _tmp117 * _tmp139 + Scalar(2.3544) * _tmp16 + _tmp19 * fv1;
  const Scalar _tmp150 = _tmp130 * _tmp70;
  const Scalar _tmp151 = Scalar(1.0) * _tmp133 * _tmp150 - Scalar(1.0) * _tmp133;
  const Scalar _tmp152 = Scalar(1.0) * _tmp110 * (_tmp100 * _tmp133 - _tmp137 * _tmp138) +
                         Scalar(1.0) * _tmp118 * (_tmp114 * _tmp133 - _tmp136 * _tmp137) +
                         Scalar(1.0) * _tmp121 * (-_tmp137 * _tmp145 + _tmp144) +
                         _tmp122 * _tmp148 + _tmp140 * _tmp143 + _tmp149 * _tmp151;
  const Scalar _tmp153 = std::asinh(_tmp129 * _tmp152);
  const Scalar _tmp154 = Scalar(9.6622558468725703) * _tmp128;
  const Scalar _tmp155 =
      -_tmp153 * _tmp154 -
      Scalar(125.0) *
          std::sqrt(
              Scalar(std::pow(Scalar(1 - Scalar(0.0080000000000000002) * _tmp41), Scalar(2)) +
                     Scalar(0.77439999999999998) *
                         std::pow(Scalar(-Scalar(0.0090909090909090905) * _tmp37 - 1), Scalar(2))));
  const Scalar _tmp156 = Scalar(0.1034955) * _tmp129;
  const Scalar _tmp157 = _tmp155 * _tmp156;
  const Scalar _tmp158 = Scalar(1.0) * _tmp153;
  const Scalar _tmp159 = Scalar(9.6622558468725703) * _tmp127;
  const Scalar _tmp160 = std::pow(_tmp128, Scalar(-2));
  const Scalar _tmp161 = _tmp127 * _tmp160;
  const Scalar _tmp162 = _tmp28 + _tmp35;
  const Scalar _tmp163 =
      (_tmp129 * (_tmp143 * _tmp162 - _tmp148 + _tmp151 * _tmp19) - _tmp152 * _tmp161) /
      std::sqrt(Scalar(std::pow(_tmp152, Scalar(2)) * _tmp160 + 1));
  const Scalar _tmp164 = _tmp133 * _tmp149;
  const Scalar _tmp165 = _tmp110 * _tmp138 * _tmp70 + _tmp118 * _tmp136 * _tmp70 +
                         _tmp121 * _tmp145 * _tmp70 + _tmp122 * _tmp147 + _tmp140 * _tmp142 -
                         _tmp150 * _tmp164;
  const Scalar _tmp166 = _tmp122 * _tmp125;
  const Scalar _tmp167 = _tmp104 * _tmp110 * _tmp64 + _tmp116 * _tmp118 * _tmp64 -
                         _tmp119 * _tmp121 - _tmp166 * _tmp87;
  const Scalar _tmp168 = Scalar(1.0) / (_tmp167);
  const Scalar _tmp169 = std::asinh(_tmp165 * _tmp168);
  const Scalar _tmp170 = Scalar(1.0) * _tmp169;
  const Scalar _tmp171 = Scalar(9.6622558468725703) * _tmp167;
  const Scalar _tmp172 =
      -_tmp169 * _tmp171 -
      Scalar(125.0) *
          std::sqrt(
              Scalar(Scalar(0.77439999999999998) *
                         std::pow(Scalar(1 - Scalar(0.0090909090909090905) * _tmp48), Scalar(2)) +
                     std::pow(Scalar(1 - Scalar(0.0080000000000000002) * _tmp51), Scalar(2))));
  const Scalar _tmp173 = Scalar(0.1034955) * _tmp168;
  const Scalar _tmp174 = _tmp172 * _tmp173;
  const Scalar _tmp175 = Scalar(9.6622558468725703) * _tmp125;
  const Scalar _tmp176 = _tmp175 * _tmp87;
  const Scalar _tmp177 = std::pow(_tmp167, Scalar(-2));
  const Scalar _tmp178 = _tmp126 * _tmp177;
  const Scalar _tmp179 = _tmp133 * _tmp19;
  const Scalar _tmp180 =
      (-_tmp165 * _tmp178 + _tmp168 * (_tmp142 * _tmp162 - _tmp147 - _tmp150 * _tmp179)) /
      std::sqrt(Scalar(std::pow(_tmp165, Scalar(2)) * _tmp177 + 1));
  const Scalar _tmp181 = -_tmp100 * _tmp110 * _tmp132 - _tmp114 * _tmp118 * _tmp132 -
                         _tmp121 * _tmp144 + _tmp122 * _tmp146 - _tmp140 * _tmp141 + _tmp164;
  const Scalar _tmp182 =
      _tmp101 * _tmp110 * _tmp90 + _tmp115 * _tmp118 * _tmp90 + _tmp120 * _tmp121 + _tmp166;
  const Scalar _tmp183 = Scalar(1.0) / (_tmp182);
  const Scalar _tmp184 = std::asinh(_tmp181 * _tmp183);
  const Scalar _tmp185 = Scalar(9.6622558468725703) * _tmp182;
  const Scalar _tmp186 =
      -_tmp184 * _tmp185 -
      Scalar(125.0) *
          std::sqrt(
              Scalar(Scalar(0.77439999999999998) *
                         std::pow(Scalar(-Scalar(0.0090909090909090905) * _tmp75 - 1), Scalar(2)) +
                     std::pow(Scalar(-Scalar(0.0080000000000000002) * _tmp78 - 1), Scalar(2))));
  const Scalar _tmp187 = Scalar(0.1034955) * _tmp183;
  const Scalar _tmp188 = _tmp186 * _tmp187;
  const Scalar _tmp189 = Scalar(1.0) * _tmp184;
  const Scalar _tmp190 = std::pow(_tmp182, Scalar(-2));
  const Scalar _tmp191 = _tmp125 * _tmp190;
  const Scalar _tmp192 = (_tmp181 * _tmp191 + _tmp183 * (-_tmp141 * _tmp162 - _tmp146 + _tmp179)) /
                         std::sqrt(Scalar(std::pow(_tmp181, Scalar(2)) * _tmp190 + 1));

  // Output terms (1)
  Eigen::Matrix<Scalar, 4, 1> _res;

  _res(0, 0) =
      _tmp33 *
      (-_tmp2 * std::cosh(Scalar(1.0) * _tmp1) +
       _tmp2 * std::cosh(Scalar(0.1034955) * _tmp0 *
                         (-_tmp1 * _tmp33 -
                          Scalar(125.0) *
                              std::sqrt(Scalar(
                                  Scalar(0.77439999999999998) *
                                      std::pow(Scalar(1 - Scalar(0.0090909090909090905) * _tmp32),
                                               Scalar(2)) +
                                  std::pow(Scalar(-Scalar(0.0080000000000000002) * _tmp20 - 1),
                                           Scalar(2)))))));
  _res(1, 0) = _tmp154 * (-Scalar(1.0) * _tmp163 * std::cosh(_tmp158) -
                          (-Scalar(0.1034955) * _tmp155 * _tmp161 +
                           _tmp156 * (-_tmp153 * _tmp159 - _tmp154 * _tmp163)) *
                              std::cosh(_tmp157)) +
               _tmp159 * (-std::sinh(_tmp157) - std::sinh(_tmp158));
  _res(2, 0) = _tmp171 * (-Scalar(1.0) * _tmp180 * std::cosh(_tmp170) -
                          (-Scalar(0.1034955) * _tmp172 * _tmp178 +
                           _tmp173 * (-_tmp169 * _tmp176 - _tmp171 * _tmp180)) *
                              std::cosh(_tmp174)) +
               _tmp176 * (-std::sinh(_tmp170) - std::sinh(_tmp174));
  _res(3, 0) = -_tmp175 * (-std::sinh(_tmp188) - std::sinh(_tmp189)) +
               _tmp185 * (-Scalar(1.0) * _tmp192 * std::cosh(_tmp189) -
                          (Scalar(0.1034955) * _tmp186 * _tmp191 +
                           _tmp187 * (_tmp175 * _tmp184 - _tmp185 * _tmp192)) *
                              std::cosh(_tmp188));

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
