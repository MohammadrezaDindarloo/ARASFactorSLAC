// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

#include <sym/rot3.h>

namespace sym {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: IK_residual_func_cost2_wrt_fv1_Nl23
 *
 * Args:
 *     fh1: Scalar
 *     fv1: Scalar
 *     DeltaRot: Rot3
 *     position_vector: Matrix31
 *     Rot_init: Rot3
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix41
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 4, 1> IkResidualFuncCost2WrtFv1Nl23(
    const Scalar fh1, const Scalar fv1, const sym::Rot3<Scalar>& DeltaRot,
    const Eigen::Matrix<Scalar, 3, 1>& position_vector, const sym::Rot3<Scalar>& Rot_init,
    const Scalar epsilon) {
  // Total ops: 597

  // Unused inputs
  (void)epsilon;

  // Input arrays
  const Eigen::Matrix<Scalar, 4, 1>& _DeltaRot = DeltaRot.Data();
  const Eigen::Matrix<Scalar, 4, 1>& _Rot_init = Rot_init.Data();

  // Intermediate terms (192)
  const Scalar _tmp0 = Scalar(1.0) / (fh1);
  const Scalar _tmp1 = std::asinh(_tmp0 * fv1);
  const Scalar _tmp2 = Scalar(1.0) * _tmp0 /
                       std::sqrt(Scalar(1 + std::pow(fv1, Scalar(2)) / std::pow(fh1, Scalar(2))));
  const Scalar _tmp3 = _DeltaRot[0] * _Rot_init[2] + _DeltaRot[1] * _Rot_init[3] -
                       _DeltaRot[2] * _Rot_init[0] + _DeltaRot[3] * _Rot_init[1];
  const Scalar _tmp4 = -2 * std::pow(_tmp3, Scalar(2));
  const Scalar _tmp5 = -_DeltaRot[0] * _Rot_init[1] + _DeltaRot[1] * _Rot_init[0] +
                       _DeltaRot[2] * _Rot_init[3] + _DeltaRot[3] * _Rot_init[2];
  const Scalar _tmp6 = 1 - 2 * std::pow(_tmp5, Scalar(2));
  const Scalar _tmp7 = Scalar(0.20999999999999999) * _tmp4 + Scalar(0.20999999999999999) * _tmp6;
  const Scalar _tmp8 = -_tmp7;
  const Scalar _tmp9 = _DeltaRot[0] * _Rot_init[3] - _DeltaRot[1] * _Rot_init[2] +
                       _DeltaRot[2] * _Rot_init[1] + _DeltaRot[3] * _Rot_init[0];
  const Scalar _tmp10 = 2 * _tmp5 * _tmp9;
  const Scalar _tmp11 = -2 * _DeltaRot[0] * _Rot_init[0] - 2 * _DeltaRot[1] * _Rot_init[1] -
                        2 * _DeltaRot[2] * _Rot_init[2] + 2 * _DeltaRot[3] * _Rot_init[3];
  const Scalar _tmp12 = _tmp11 * _tmp3;
  const Scalar _tmp13 = _tmp10 + _tmp12;
  const Scalar _tmp14 = -Scalar(0.010999999999999999) * _tmp13;
  const Scalar _tmp15 = 2 * _tmp3;
  const Scalar _tmp16 = _tmp15 * _tmp9;
  const Scalar _tmp17 = _tmp11 * _tmp5;
  const Scalar _tmp18 = Scalar(0.20999999999999999) * _tmp16 - Scalar(0.20999999999999999) * _tmp17;
  const Scalar _tmp19 = _tmp14 + _tmp18;
  const Scalar _tmp20 = _tmp19 + _tmp8;
  const Scalar _tmp21 = _tmp20 + position_vector(0, 0);
  const Scalar _tmp22 = -2 * std::pow(_tmp9, Scalar(2));
  const Scalar _tmp23 = Scalar(0.20999999999999999) * _tmp22 + Scalar(0.20999999999999999) * _tmp6;
  const Scalar _tmp24 = Scalar(0.20999999999999999) * _tmp16 + Scalar(0.20999999999999999) * _tmp17;
  const Scalar _tmp25 = _tmp15 * _tmp5;
  const Scalar _tmp26 = _tmp11 * _tmp9;
  const Scalar _tmp27 = _tmp25 - _tmp26;
  const Scalar _tmp28 = Scalar(0.010999999999999999) * _tmp27;
  const Scalar _tmp29 = -_tmp28;
  const Scalar _tmp30 = -_tmp24 + _tmp29;
  const Scalar _tmp31 = _tmp23 + _tmp30;
  const Scalar _tmp32 = _tmp31 + position_vector(1, 0);
  const Scalar _tmp33 = Scalar(9.6622558468725703) * fh1;
  const Scalar _tmp34 = _tmp21 + Scalar(125.0);
  const Scalar _tmp35 = _tmp32 + Scalar(-110.0);
  const Scalar _tmp36 = std::pow(Scalar(std::pow(_tmp34, Scalar(2)) + std::pow(_tmp35, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp37 = _tmp34 * _tmp36;
  const Scalar _tmp38 = Scalar(0.20999999999999999) * _tmp10 - Scalar(0.20999999999999999) * _tmp12;
  const Scalar _tmp39 = -_tmp38;
  const Scalar _tmp40 = -Scalar(0.010999999999999999) * _tmp22 -
                        Scalar(0.010999999999999999) * _tmp4 + Scalar(-0.010999999999999999);
  const Scalar _tmp41 = Scalar(0.20999999999999999) * _tmp25 + Scalar(0.20999999999999999) * _tmp26;
  const Scalar _tmp42 = _tmp40 + _tmp41;
  const Scalar _tmp43 = fh1 * (_tmp39 + _tmp42);
  const Scalar _tmp44 = Scalar(2.3544) * _tmp13 + _tmp20 * fv1 + _tmp37 * _tmp43;
  const Scalar _tmp45 = _tmp23 + _tmp24 + _tmp29;
  const Scalar _tmp46 = Scalar(1.0) * _tmp45;
  const Scalar _tmp47 = -_tmp46;
  const Scalar _tmp48 = -_tmp23;
  const Scalar _tmp49 = _tmp30 + _tmp48;
  const Scalar _tmp50 = _tmp47 + _tmp49;
  const Scalar _tmp51 = _tmp24 + _tmp48;
  const Scalar _tmp52 = _tmp29 + _tmp51;
  const Scalar _tmp53 = Scalar(1.0) / (_tmp47 + _tmp52);
  const Scalar _tmp54 = _tmp14 - _tmp18;
  const Scalar _tmp55 = _tmp54 + _tmp7;
  const Scalar _tmp56 = _tmp19 + _tmp7;
  const Scalar _tmp57 = Scalar(1.0) * _tmp56;
  const Scalar _tmp58 = _tmp53 * (-_tmp55 + _tmp57);
  const Scalar _tmp59 = _tmp50 * _tmp58;
  const Scalar _tmp60 = _tmp54 + _tmp8;
  const Scalar _tmp61 = Scalar(1.0) / (_tmp57 - _tmp59 - _tmp60);
  const Scalar _tmp62 = Scalar(1.0) * _tmp61;
  const Scalar _tmp63 = _tmp50 * _tmp53;
  const Scalar _tmp64 = Scalar(1.0) * _tmp62 * _tmp63 - Scalar(1.0) * _tmp62;
  const Scalar _tmp65 = _tmp40 - _tmp41;
  const Scalar _tmp66 = _tmp38 + _tmp65;
  const Scalar _tmp67 = _tmp52 + position_vector(1, 0);
  const Scalar _tmp68 = _tmp67 + Scalar(110.0);
  const Scalar _tmp69 = _tmp55 + position_vector(0, 0);
  const Scalar _tmp70 = _tmp69 + Scalar(-125.0);
  const Scalar _tmp71 = std::pow(Scalar(std::pow(_tmp68, Scalar(2)) + std::pow(_tmp70, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp72 = _tmp68 * _tmp71;
  const Scalar _tmp73 = _tmp45 + position_vector(1, 0);
  const Scalar _tmp74 = _tmp73 + Scalar(-110.0);
  const Scalar _tmp75 = _tmp56 + position_vector(0, 0);
  const Scalar _tmp76 = _tmp75 + Scalar(-125.0);
  const Scalar _tmp77 = Scalar(1.0) / (_tmp76);
  const Scalar _tmp78 = _tmp74 * _tmp77;
  const Scalar _tmp79 = _tmp38 + _tmp42;
  const Scalar _tmp80 = _tmp70 * _tmp71;
  const Scalar _tmp81 = _tmp79 * _tmp80;
  const Scalar _tmp82 = _tmp66 * _tmp72 - _tmp78 * _tmp81;
  const Scalar _tmp83 = Scalar(1.0) / (-_tmp72 + _tmp78 * _tmp80);
  const Scalar _tmp84 = Scalar(1.0) * _tmp83;
  const Scalar _tmp85 = _tmp82 * _tmp84;
  const Scalar _tmp86 = -_tmp66 * _tmp80 + _tmp81;
  const Scalar _tmp87 = _tmp58 * _tmp85 - _tmp84 * _tmp86;
  const Scalar _tmp88 = _tmp49 + position_vector(1, 0);
  const Scalar _tmp89 = _tmp88 + Scalar(110.0);
  const Scalar _tmp90 = _tmp60 + position_vector(0, 0);
  const Scalar _tmp91 = _tmp90 + Scalar(125.0);
  const Scalar _tmp92 = std::pow(Scalar(std::pow(_tmp89, Scalar(2)) + std::pow(_tmp91, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp93 = _tmp91 * _tmp92;
  const Scalar _tmp94 = _tmp89 * _tmp92;
  const Scalar _tmp95 = _tmp78 * _tmp93 - _tmp94;
  const Scalar _tmp96 = _tmp83 * _tmp95;
  const Scalar _tmp97 = _tmp39 + _tmp65;
  const Scalar _tmp98 = _tmp79 * _tmp93;
  const Scalar _tmp99 = -_tmp78 * _tmp98 - _tmp82 * _tmp96 + _tmp94 * _tmp97;
  const Scalar _tmp100 = -_tmp58 * _tmp99 - _tmp86 * _tmp96 - _tmp93 * _tmp97 + _tmp98;
  const Scalar _tmp101 = Scalar(1.0) / (_tmp100);
  const Scalar _tmp102 =
      std::sqrt(Scalar(std::pow(_tmp74, Scalar(2)) + std::pow(_tmp76, Scalar(2))));
  const Scalar _tmp103 = Scalar(1.0) / (_tmp102);
  const Scalar _tmp104 = _tmp102 * _tmp77;
  const Scalar _tmp105 = _tmp104 * (-_tmp103 * _tmp45 * _tmp76 + _tmp103 * _tmp56 * _tmp74);
  const Scalar _tmp106 = _tmp105 * _tmp80 + _tmp52 * _tmp80 - _tmp55 * _tmp72;
  const Scalar _tmp107 = _tmp105 * _tmp93 - _tmp106 * _tmp96 + _tmp49 * _tmp93 - _tmp60 * _tmp94;
  const Scalar _tmp108 = _tmp101 * _tmp107;
  const Scalar _tmp109 = Scalar(1.0) / (_tmp107);
  const Scalar _tmp110 = _tmp100 * _tmp109;
  const Scalar _tmp111 = _tmp110 * (-_tmp106 * _tmp84 - _tmp108 * _tmp87);
  const Scalar _tmp112 = _tmp111 + _tmp87;
  const Scalar _tmp113 = _tmp101 * _tmp99;
  const Scalar _tmp114 = _tmp50 * _tmp61;
  const Scalar _tmp115 = _tmp111 * _tmp114 - _tmp112 * _tmp113 - _tmp85;
  const Scalar _tmp116 = Scalar(1.0) * _tmp53;
  const Scalar _tmp117 = _tmp35 * _tmp36;
  const Scalar _tmp118 = _tmp117 * fh1;
  const Scalar _tmp119 = _tmp78 * _tmp83;
  const Scalar _tmp120 = _tmp119 * _tmp82 + _tmp78 * _tmp79;
  const Scalar _tmp121 = _tmp119 * _tmp86 - _tmp120 * _tmp58 - _tmp79;
  const Scalar _tmp122 = _tmp110 * (-_tmp105 + _tmp106 * _tmp119 - _tmp108 * _tmp121);
  const Scalar _tmp123 = _tmp121 + _tmp122;
  const Scalar _tmp124 = -_tmp113 * _tmp123 + _tmp114 * _tmp122 + _tmp120;
  const Scalar _tmp125 = _tmp37 * fh1;
  const Scalar _tmp126 = -_tmp117 * _tmp43 - Scalar(2.3544) * _tmp27 - _tmp31 * fv1;
  const Scalar _tmp127 = _tmp53 * (_tmp59 * _tmp62 + Scalar(1.0));
  const Scalar _tmp128 = _tmp58 * _tmp62;
  const Scalar _tmp129 = -Scalar(1.0) * _tmp127 + Scalar(1.0) * _tmp128;
  const Scalar _tmp130 = Scalar(19.620000000000001) - fv1;
  const Scalar _tmp131 = _tmp46 * _tmp58 + _tmp57;
  const Scalar _tmp132 = _tmp131 * _tmp61;
  const Scalar _tmp133 = 0;
  const Scalar _tmp134 = _tmp53 * (-_tmp132 * _tmp50 - _tmp133 * _tmp99 + _tmp47);
  const Scalar _tmp135 = -Scalar(1.0) * _tmp132 - Scalar(1.0) * _tmp134 + Scalar(1.0);
  const Scalar _tmp136 = _tmp110 * _tmp62;
  const Scalar _tmp137 = Scalar(1.0) * _tmp109;
  const Scalar _tmp138 = _tmp136 * _tmp50 - _tmp137 * _tmp99;
  const Scalar _tmp139 = fh1 * (_tmp117 * _tmp20 - _tmp31 * _tmp37);
  const Scalar _tmp140 = Scalar(1.0) * _tmp118 * (_tmp111 * _tmp62 - _tmp115 * _tmp116) +
                         Scalar(1.0) * _tmp125 * (-_tmp116 * _tmp124 + _tmp122 * _tmp62) +
                         _tmp126 * _tmp129 + _tmp130 * _tmp135 +
                         Scalar(1.0) * _tmp139 * (-_tmp116 * _tmp138 + _tmp136) + _tmp44 * _tmp64;
  const Scalar _tmp141 = _tmp109 * _tmp84 * _tmp95;
  const Scalar _tmp142 = _tmp133 * _tmp96;
  const Scalar _tmp143 = _tmp104 * (_tmp133 * _tmp93 - _tmp142 * _tmp80);
  const Scalar _tmp144 = _tmp101 * _tmp93;
  const Scalar _tmp145 = _tmp101 * _tmp95;
  const Scalar _tmp146 = -_tmp112 * _tmp145 + Scalar(1.0);
  const Scalar _tmp147 = _tmp80 * _tmp83;
  const Scalar _tmp148 = -_tmp123 * _tmp145 - _tmp78;
  const Scalar _tmp149 = -_tmp104 * _tmp118 * (_tmp112 * _tmp144 + _tmp146 * _tmp147) -
                         _tmp104 * _tmp125 * (_tmp123 * _tmp144 + _tmp147 * _tmp148 + Scalar(1.0)) -
                         _tmp104 * _tmp139 * (_tmp137 * _tmp93 - _tmp141 * _tmp80) -
                         _tmp130 * _tmp143;
  const Scalar _tmp150 = Scalar(1.0) / (_tmp149);
  const Scalar _tmp151 = std::asinh(_tmp140 * _tmp150);
  const Scalar _tmp152 = Scalar(1.0) * _tmp151;
  const Scalar _tmp153 = Scalar(9.6622558468725703) * _tmp149;
  const Scalar _tmp154 =
      -_tmp151 * _tmp153 -
      Scalar(125.0) *
          std::sqrt(
              Scalar(Scalar(0.77439999999999998) *
                         std::pow(Scalar(1 - Scalar(0.0090909090909090905) * _tmp73), Scalar(2)) +
                     std::pow(Scalar(1 - Scalar(0.0080000000000000002) * _tmp75), Scalar(2))));
  const Scalar _tmp155 = Scalar(0.1034955) * _tmp150;
  const Scalar _tmp156 = _tmp154 * _tmp155;
  const Scalar _tmp157 = Scalar(9.6622558468725703) * _tmp143;
  const Scalar _tmp158 = _tmp28 + _tmp51;
  const Scalar _tmp159 = std::pow(_tmp149, Scalar(-2));
  const Scalar _tmp160 = _tmp143 * _tmp159;
  const Scalar _tmp161 =
      (-_tmp140 * _tmp160 + _tmp150 * (_tmp129 * _tmp158 - _tmp135 + _tmp20 * _tmp64)) /
      std::sqrt(Scalar(std::pow(_tmp140, Scalar(2)) * _tmp159 + 1));
  const Scalar _tmp162 = _tmp83 * fh1;
  const Scalar _tmp163 = _tmp130 * _tmp133;
  const Scalar _tmp164 = _tmp117 * _tmp146 * _tmp162 - _tmp139 * _tmp141 +
                         _tmp148 * _tmp162 * _tmp37 - _tmp163 * _tmp96;
  const Scalar _tmp165 = Scalar(1.0) / (_tmp164);
  const Scalar _tmp166 = _tmp44 * _tmp62;
  const Scalar _tmp167 = _tmp115 * _tmp118 * _tmp53 + _tmp124 * _tmp125 * _tmp53 +
                         _tmp126 * _tmp127 + _tmp130 * _tmp134 + _tmp138 * _tmp139 * _tmp53 -
                         _tmp166 * _tmp63;
  const Scalar _tmp168 = std::asinh(_tmp165 * _tmp167);
  const Scalar _tmp169 = Scalar(9.6622558468725703) * _tmp164;
  const Scalar _tmp170 =
      -_tmp168 * _tmp169 -
      Scalar(125.0) *
          std::sqrt(
              Scalar(std::pow(Scalar(1 - Scalar(0.0080000000000000002) * _tmp69), Scalar(2)) +
                     Scalar(0.77439999999999998) *
                         std::pow(Scalar(-Scalar(0.0090909090909090905) * _tmp67 - 1), Scalar(2))));
  const Scalar _tmp171 = Scalar(0.1034955) * _tmp165;
  const Scalar _tmp172 = _tmp170 * _tmp171;
  const Scalar _tmp173 = Scalar(1.0) * _tmp168;
  const Scalar _tmp174 = Scalar(9.6622558468725703) * _tmp133;
  const Scalar _tmp175 = _tmp174 * _tmp96;
  const Scalar _tmp176 = std::pow(_tmp164, Scalar(-2));
  const Scalar _tmp177 = _tmp142 * _tmp176;
  const Scalar _tmp178 = _tmp20 * _tmp62;
  const Scalar _tmp179 =
      (_tmp165 * (_tmp127 * _tmp158 - _tmp134 - _tmp178 * _tmp63) - _tmp167 * _tmp177) /
      std::sqrt(Scalar(std::pow(_tmp167, Scalar(2)) * _tmp176 + 1));
  const Scalar _tmp180 =
      _tmp101 * _tmp112 * _tmp118 + _tmp101 * _tmp123 * _tmp125 + _tmp137 * _tmp139 + _tmp163;
  const Scalar _tmp181 = Scalar(1.0) / (_tmp180);
  const Scalar _tmp182 = -_tmp111 * _tmp118 * _tmp61 - _tmp122 * _tmp125 * _tmp61 -
                         _tmp126 * _tmp128 + _tmp130 * _tmp132 - _tmp136 * _tmp139 + _tmp166;
  const Scalar _tmp183 = std::asinh(_tmp181 * _tmp182);
  const Scalar _tmp184 = Scalar(1.0) * _tmp183;
  const Scalar _tmp185 = Scalar(9.6622558468725703) * _tmp180;
  const Scalar _tmp186 =
      -_tmp183 * _tmp185 -
      Scalar(125.0) *
          std::sqrt(
              Scalar(Scalar(0.77439999999999998) *
                         std::pow(Scalar(-Scalar(0.0090909090909090905) * _tmp88 - 1), Scalar(2)) +
                     std::pow(Scalar(-Scalar(0.0080000000000000002) * _tmp90 - 1), Scalar(2))));
  const Scalar _tmp187 = Scalar(0.1034955) * _tmp181;
  const Scalar _tmp188 = _tmp186 * _tmp187;
  const Scalar _tmp189 = std::pow(_tmp180, Scalar(-2));
  const Scalar _tmp190 = _tmp133 * _tmp189;
  const Scalar _tmp191 = (_tmp181 * (-_tmp128 * _tmp158 - _tmp132 + _tmp178) + _tmp182 * _tmp190) /
                         std::sqrt(Scalar(std::pow(_tmp182, Scalar(2)) * _tmp189 + 1));

  // Output terms (1)
  Eigen::Matrix<Scalar, 4, 1> _res;

  _res(0, 0) =
      _tmp33 *
      (-_tmp2 * std::cosh(Scalar(1.0) * _tmp1) +
       _tmp2 * std::cosh(Scalar(0.1034955) * _tmp0 *
                         (-_tmp1 * _tmp33 -
                          Scalar(125.0) *
                              std::sqrt(Scalar(
                                  Scalar(0.77439999999999998) *
                                      std::pow(Scalar(1 - Scalar(0.0090909090909090905) * _tmp32),
                                               Scalar(2)) +
                                  std::pow(Scalar(-Scalar(0.0080000000000000002) * _tmp21 - 1),
                                           Scalar(2)))))));
  _res(1, 0) = _tmp153 * (-Scalar(1.0) * _tmp161 * std::cosh(_tmp152) -
                          (-Scalar(0.1034955) * _tmp154 * _tmp160 +
                           _tmp155 * (-_tmp151 * _tmp157 - _tmp153 * _tmp161)) *
                              std::cosh(_tmp156)) +
               _tmp157 * (-std::sinh(_tmp152) - std::sinh(_tmp156));
  _res(2, 0) = _tmp169 * (-Scalar(1.0) * _tmp179 * std::cosh(_tmp173) -
                          (-Scalar(0.1034955) * _tmp170 * _tmp177 +
                           _tmp171 * (-_tmp168 * _tmp175 - _tmp169 * _tmp179)) *
                              std::cosh(_tmp172)) +
               _tmp175 * (-std::sinh(_tmp172) - std::sinh(_tmp173));
  _res(3, 0) = -_tmp174 * (-std::sinh(_tmp184) - std::sinh(_tmp188)) +
               _tmp185 * (-Scalar(1.0) * _tmp191 * std::cosh(_tmp184) -
                          (Scalar(0.1034955) * _tmp186 * _tmp190 +
                           _tmp187 * (_tmp174 * _tmp183 - _tmp185 * _tmp191)) *
                              std::cosh(_tmp188));

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
