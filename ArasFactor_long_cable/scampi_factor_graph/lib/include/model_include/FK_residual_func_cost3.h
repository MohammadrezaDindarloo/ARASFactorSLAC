// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

#include <sym/pose3.h>
#include <sym/rot3.h>

namespace sym {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: FK_residual_func_cost3
 *
 * Args:
 *     fh1: Scalar
 *     fv1: Scalar
 *     DeltaRot: Rot3
 *     TransformationMatrix: Pose3
 *     encoder: Matrix41
 *     offset: Matrix41
 *     p_a: Matrix31
 *     p_b: Matrix31
 *     p_c: Matrix31
 *     p_d: Matrix31
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix41
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 4, 1> FkResidualFuncCost3(
    const Scalar fh1, const Scalar fv1, const sym::Rot3<Scalar>& DeltaRot,
    const sym::Pose3<Scalar>& TransformationMatrix, const Eigen::Matrix<Scalar, 4, 1>& encoder,
    const Eigen::Matrix<Scalar, 4, 1>& offset, const Eigen::Matrix<Scalar, 3, 1>& p_a,
    const Eigen::Matrix<Scalar, 3, 1>& p_b, const Eigen::Matrix<Scalar, 3, 1>& p_c,
    const Eigen::Matrix<Scalar, 3, 1>& p_d, const Scalar epsilon) {
  // Total ops: 476

  // Unused inputs
  (void)epsilon;

  // Input arrays
  const Eigen::Matrix<Scalar, 4, 1>& _DeltaRot = DeltaRot.Data();
  const Eigen::Matrix<Scalar, 7, 1>& _TransformationMatrix = TransformationMatrix.Data();

  // Intermediate terms (153)
  const Scalar _tmp0 = Scalar(1.0) / (fh1);
  const Scalar _tmp1 =
      _DeltaRot[0] * _TransformationMatrix[3] - _DeltaRot[1] * _TransformationMatrix[2] +
      _DeltaRot[2] * _TransformationMatrix[1] + _DeltaRot[3] * _TransformationMatrix[0];
  const Scalar _tmp2 = -2 * std::pow(_tmp1, Scalar(2));
  const Scalar _tmp3 =
      -_DeltaRot[0] * _TransformationMatrix[1] + _DeltaRot[1] * _TransformationMatrix[0] +
      _DeltaRot[2] * _TransformationMatrix[3] + _DeltaRot[3] * _TransformationMatrix[2];
  const Scalar _tmp4 = -2 * std::pow(_tmp3, Scalar(2));
  const Scalar _tmp5 = Scalar(0.20999999999999999) * _tmp2 + Scalar(0.20999999999999999) * _tmp4 +
                       Scalar(0.20999999999999999);
  const Scalar _tmp6 = -_tmp5;
  const Scalar _tmp7 =
      _DeltaRot[0] * _TransformationMatrix[2] + _DeltaRot[1] * _TransformationMatrix[3] -
      _DeltaRot[2] * _TransformationMatrix[0] + _DeltaRot[3] * _TransformationMatrix[1];
  const Scalar _tmp8 = 2 * _tmp3;
  const Scalar _tmp9 = _tmp7 * _tmp8;
  const Scalar _tmp10 =
      -2 * _DeltaRot[0] * _TransformationMatrix[0] - 2 * _DeltaRot[1] * _TransformationMatrix[1] -
      2 * _DeltaRot[2] * _TransformationMatrix[2] + 2 * _DeltaRot[3] * _TransformationMatrix[3];
  const Scalar _tmp11 = _tmp1 * _tmp10;
  const Scalar _tmp12 = -_tmp11 + _tmp9;
  const Scalar _tmp13 = -Scalar(0.010999999999999999) * _tmp12;
  const Scalar _tmp14 = 2 * _tmp1 * _tmp7;
  const Scalar _tmp15 = _tmp10 * _tmp3;
  const Scalar _tmp16 = Scalar(0.20999999999999999) * _tmp14 + Scalar(0.20999999999999999) * _tmp15;
  const Scalar _tmp17 = _tmp13 - _tmp16;
  const Scalar _tmp18 = _tmp17 + _tmp6;
  const Scalar _tmp19 = _TransformationMatrix[5] + _tmp18;
  const Scalar _tmp20 = Scalar(0.20999999999999999) * _tmp14 - Scalar(0.20999999999999999) * _tmp15;
  const Scalar _tmp21 = -_tmp20;
  const Scalar _tmp22 = 1 - 2 * std::pow(_tmp7, Scalar(2));
  const Scalar _tmp23 = Scalar(0.20999999999999999) * _tmp22 + Scalar(0.20999999999999999) * _tmp4;
  const Scalar _tmp24 = _tmp1 * _tmp8;
  const Scalar _tmp25 = _tmp10 * _tmp7;
  const Scalar _tmp26 = _tmp24 + _tmp25;
  const Scalar _tmp27 = -Scalar(0.010999999999999999) * _tmp26;
  const Scalar _tmp28 = -_tmp23 + _tmp27;
  const Scalar _tmp29 = _tmp21 + _tmp28;
  const Scalar _tmp30 = _TransformationMatrix[4] + _tmp29;
  const Scalar _tmp31 = std::asinh(_tmp0 * fv1);
  const Scalar _tmp32 = Scalar(9.6622558468725703) * fh1;
  const Scalar _tmp33 = _tmp30 - p_a(0, 0);
  const Scalar _tmp34 = _tmp19 - p_a(1, 0);
  const Scalar _tmp35 = std::pow(Scalar(std::pow(_tmp33, Scalar(2)) + std::pow(_tmp34, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp36 = _tmp34 * _tmp35;
  const Scalar _tmp37 = Scalar(0.20999999999999999) * _tmp11 + Scalar(0.20999999999999999) * _tmp9;
  const Scalar _tmp38 = -_tmp37;
  const Scalar _tmp39 =
      -Scalar(0.010999999999999999) * _tmp2 - Scalar(0.010999999999999999) * _tmp22;
  const Scalar _tmp40 = Scalar(0.20999999999999999) * _tmp24 - Scalar(0.20999999999999999) * _tmp25;
  const Scalar _tmp41 = _tmp39 - _tmp40;
  const Scalar _tmp42 = fh1 * (_tmp38 + _tmp41);
  const Scalar _tmp43 = -Scalar(2.3544) * _tmp12 - _tmp18 * fv1 - _tmp36 * _tmp42;
  const Scalar _tmp44 = _tmp20 + _tmp28;
  const Scalar _tmp45 = _tmp23 + _tmp27;
  const Scalar _tmp46 = _tmp21 + _tmp45;
  const Scalar _tmp47 = Scalar(1.0) * _tmp46;
  const Scalar _tmp48 = _tmp13 + _tmp16;
  const Scalar _tmp49 = _tmp48 + _tmp6;
  const Scalar _tmp50 = Scalar(1.0) * _tmp49;
  const Scalar _tmp51 = -_tmp50;
  const Scalar _tmp52 = _tmp17 + _tmp5;
  const Scalar _tmp53 = _tmp51 + _tmp52;
  const Scalar _tmp54 = _tmp48 + _tmp5;
  const Scalar _tmp55 = Scalar(1.0) / (_tmp51 + _tmp54);
  const Scalar _tmp56 = _tmp20 + _tmp45;
  const Scalar _tmp57 = _tmp55 * (_tmp47 - _tmp56);
  const Scalar _tmp58 = _tmp53 * _tmp57;
  const Scalar _tmp59 = Scalar(1.0) / (-_tmp44 + _tmp47 - _tmp58);
  const Scalar _tmp60 = Scalar(1.0) * _tmp59;
  const Scalar _tmp61 = _tmp57 * _tmp60;
  const Scalar _tmp62 = _tmp58 * _tmp60 + Scalar(1.0);
  const Scalar _tmp63 = Scalar(1.0) * _tmp55;
  const Scalar _tmp64 = _TransformationMatrix[5] + _tmp52;
  const Scalar _tmp65 = _tmp64 - p_d(1, 0);
  const Scalar _tmp66 = _TransformationMatrix[4] + _tmp44;
  const Scalar _tmp67 = _tmp66 - p_d(0, 0);
  const Scalar _tmp68 = std::pow(Scalar(std::pow(_tmp65, Scalar(2)) + std::pow(_tmp67, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp69 = _tmp65 * _tmp68;
  const Scalar _tmp70 = _tmp67 * _tmp68;
  const Scalar _tmp71 = _TransformationMatrix[4] + _tmp56;
  const Scalar _tmp72 = _tmp71 - p_c(0, 0);
  const Scalar _tmp73 = _TransformationMatrix[5] + _tmp54;
  const Scalar _tmp74 = _tmp73 - p_c(1, 0);
  const Scalar _tmp75 = std::pow(Scalar(std::pow(_tmp72, Scalar(2)) + std::pow(_tmp74, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp76 = _tmp74 * _tmp75;
  const Scalar _tmp77 = _tmp72 * _tmp75;
  const Scalar _tmp78 = _TransformationMatrix[5] + _tmp49;
  const Scalar _tmp79 = _tmp78 - p_b(1, 0);
  const Scalar _tmp80 = _TransformationMatrix[4] + _tmp46;
  const Scalar _tmp81 = _tmp80 - p_b(0, 0);
  const Scalar _tmp82 =
      std::sqrt(Scalar(std::pow(_tmp79, Scalar(2)) + std::pow(_tmp81, Scalar(2))));
  const Scalar _tmp83 = Scalar(1.0) / (_tmp82);
  const Scalar _tmp84 = Scalar(1.0) / (_tmp81);
  const Scalar _tmp85 = _tmp82 * _tmp84;
  const Scalar _tmp86 = _tmp85 * (_tmp46 * _tmp79 * _tmp83 - _tmp49 * _tmp81 * _tmp83);
  const Scalar _tmp87 = _tmp54 * _tmp77 - _tmp56 * _tmp76 + _tmp77 * _tmp86;
  const Scalar _tmp88 = _tmp79 * _tmp84;
  const Scalar _tmp89 = -_tmp69 + _tmp70 * _tmp88;
  const Scalar _tmp90 = Scalar(1.0) / (-_tmp76 + _tmp77 * _tmp88);
  const Scalar _tmp91 = _tmp89 * _tmp90;
  const Scalar _tmp92 = -_tmp44 * _tmp69 + _tmp52 * _tmp70 + _tmp70 * _tmp86 - _tmp87 * _tmp91;
  const Scalar _tmp93 = Scalar(1.0) / (_tmp92);
  const Scalar _tmp94 = _tmp37 + _tmp41;
  const Scalar _tmp95 = _tmp39 + _tmp40;
  const Scalar _tmp96 = _tmp38 + _tmp95;
  const Scalar _tmp97 = _tmp37 + _tmp95;
  const Scalar _tmp98 = _tmp77 * _tmp96 - _tmp77 * _tmp97;
  const Scalar _tmp99 = _tmp88 * _tmp96;
  const Scalar _tmp100 = _tmp90 * (_tmp76 * _tmp97 - _tmp77 * _tmp99);
  const Scalar _tmp101 = -_tmp100 * _tmp89 + _tmp69 * _tmp94 - _tmp70 * _tmp99;
  const Scalar _tmp102 = -_tmp101 * _tmp57 - _tmp70 * _tmp94 + _tmp70 * _tmp96 - _tmp91 * _tmp98;
  const Scalar _tmp103 = _tmp102 * _tmp93;
  const Scalar _tmp104 = _tmp103 * _tmp60;
  const Scalar _tmp105 = Scalar(1.0) * _tmp93;
  const Scalar _tmp106 = -_tmp101 * _tmp105 + _tmp104 * _tmp53;
  const Scalar _tmp107 = _tmp33 * _tmp35;
  const Scalar _tmp108 = fh1 * (-_tmp107 * _tmp18 + _tmp29 * _tmp36);
  const Scalar _tmp109 = Scalar(1.0) / (_tmp102);
  const Scalar _tmp110 = _tmp88 * _tmp90;
  const Scalar _tmp111 = _tmp100 * _tmp88 + _tmp99;
  const Scalar _tmp112 = _tmp110 * _tmp98 - _tmp111 * _tmp57 - _tmp96;
  const Scalar _tmp113 = _tmp109 * _tmp92;
  const Scalar _tmp114 = _tmp103 * (_tmp110 * _tmp87 - _tmp112 * _tmp113 - _tmp86);
  const Scalar _tmp115 = _tmp109 * (_tmp112 + _tmp114);
  const Scalar _tmp116 = _tmp53 * _tmp59;
  const Scalar _tmp117 = -_tmp101 * _tmp115 + _tmp111 + _tmp114 * _tmp116;
  const Scalar _tmp118 = _tmp107 * fh1;
  const Scalar _tmp119 = Scalar(1.0) * _tmp90;
  const Scalar _tmp120 = Scalar(1.0) * _tmp100;
  const Scalar _tmp121 = -_tmp119 * _tmp98 + _tmp120 * _tmp57;
  const Scalar _tmp122 = _tmp103 * (-_tmp113 * _tmp121 - _tmp119 * _tmp87);
  const Scalar _tmp123 = _tmp109 * (_tmp121 + _tmp122);
  const Scalar _tmp124 = -_tmp101 * _tmp123 + _tmp116 * _tmp122 - _tmp120;
  const Scalar _tmp125 = _tmp36 * fh1;
  const Scalar _tmp126 = _tmp47 + _tmp50 * _tmp57;
  const Scalar _tmp127 = 0;
  const Scalar _tmp128 = _tmp126 * _tmp59;
  const Scalar _tmp129 = _tmp55 * (-_tmp101 * _tmp127 - _tmp128 * _tmp53 + _tmp51);
  const Scalar _tmp130 = Scalar(19.620000000000001) - fv1;
  const Scalar _tmp131 = _tmp53 * _tmp55;
  const Scalar _tmp132 = _tmp107 * _tmp42 + Scalar(2.3544) * _tmp26 + _tmp29 * fv1;
  const Scalar _tmp133 = -_tmp123 * _tmp89 + Scalar(1.0);
  const Scalar _tmp134 = _tmp77 * _tmp90;
  const Scalar _tmp135 = -_tmp115 * _tmp89 - _tmp88;
  const Scalar _tmp136 = _tmp77 * _tmp91;
  const Scalar _tmp137 = -_tmp108 * _tmp85 * (-_tmp105 * _tmp136 + _tmp105 * _tmp70) -
                         _tmp118 * _tmp85 * (_tmp115 * _tmp70 + _tmp134 * _tmp135 + Scalar(1.0)) -
                         _tmp125 * _tmp85 * (_tmp123 * _tmp70 + _tmp133 * _tmp134) -
                         _tmp130 * _tmp85 * (-_tmp127 * _tmp136 + _tmp127 * _tmp70);
  const Scalar _tmp138 = Scalar(1.0) / (_tmp137);
  const Scalar _tmp139 = std::asinh(
      _tmp138 * (Scalar(1.0) * _tmp108 * (_tmp104 - _tmp106 * _tmp63) +
                 Scalar(1.0) * _tmp118 * (_tmp114 * _tmp60 - _tmp117 * _tmp63) +
                 Scalar(1.0) * _tmp125 * (_tmp122 * _tmp60 - _tmp124 * _tmp63) +
                 Scalar(1.0) * _tmp130 * (-_tmp126 * _tmp60 - Scalar(1.0) * _tmp129 + Scalar(1.0)) +
                 Scalar(1.0) * _tmp132 * (_tmp131 * _tmp60 - _tmp60) +
                 Scalar(1.0) * _tmp43 * (_tmp61 - _tmp62 * _tmp63)));
  const Scalar _tmp140 = Scalar(9.6622558468725703) * _tmp137;
  const Scalar _tmp141 = _tmp105 * _tmp108;
  const Scalar _tmp142 = _tmp127 * _tmp130;
  const Scalar _tmp143 =
      _tmp118 * _tmp135 * _tmp90 + _tmp125 * _tmp133 * _tmp90 - _tmp141 * _tmp91 - _tmp142 * _tmp91;
  const Scalar _tmp144 = Scalar(1.0) / (_tmp143);
  const Scalar _tmp145 = _tmp55 * fh1;
  const Scalar _tmp146 = _tmp132 * _tmp60;
  const Scalar _tmp147 =
      std::asinh(_tmp144 * (_tmp106 * _tmp108 * _tmp55 + _tmp107 * _tmp117 * _tmp145 +
                            _tmp124 * _tmp145 * _tmp36 + _tmp129 * _tmp130 - _tmp131 * _tmp146 +
                            _tmp43 * _tmp55 * _tmp62));
  const Scalar _tmp148 = Scalar(9.6622558468725703) * _tmp143;
  const Scalar _tmp149 = _tmp115 * _tmp118 + _tmp123 * _tmp125 + _tmp141 + _tmp142;
  const Scalar _tmp150 = Scalar(1.0) / (_tmp149);
  const Scalar _tmp151 = std::asinh(_tmp150 * (-_tmp104 * _tmp108 - _tmp114 * _tmp118 * _tmp59 -
                                               _tmp122 * _tmp125 * _tmp59 + _tmp128 * _tmp130 +
                                               _tmp146 - _tmp43 * _tmp61));
  const Scalar _tmp152 = Scalar(9.6622558468725703) * _tmp149;

  // Output terms (1)
  Eigen::Matrix<Scalar, 4, 1> _res;

  _res(0, 0) =
      _tmp32 * (-std::sinh(Scalar(1.0) * _tmp31) -
                std::sinh(Scalar(0.1034955) * _tmp0 *
                          (-_tmp31 * _tmp32 -
                           std::sqrt(Scalar(std::pow(Scalar(-_tmp19 + p_a(1, 0)), Scalar(2)) +
                                            std::pow(Scalar(-_tmp30 + p_a(0, 0)), Scalar(2))))))) -
      encoder(0, 0) + offset(0, 0);
  _res(1, 0) =
      _tmp140 * (-std::sinh(Scalar(1.0) * _tmp139) -
                 std::sinh(Scalar(0.1034955) * _tmp138 *
                           (-_tmp139 * _tmp140 -
                            std::sqrt(Scalar(std::pow(Scalar(-_tmp78 + p_b(1, 0)), Scalar(2)) +
                                             std::pow(Scalar(-_tmp80 + p_b(0, 0)), Scalar(2))))))) -
      encoder(1, 0) + offset(1, 0);
  _res(2, 0) =
      _tmp148 * (-std::sinh(Scalar(1.0) * _tmp147) -
                 std::sinh(Scalar(0.1034955) * _tmp144 *
                           (-_tmp147 * _tmp148 -
                            std::sqrt(Scalar(std::pow(Scalar(-_tmp71 + p_c(0, 0)), Scalar(2)) +
                                             std::pow(Scalar(-_tmp73 + p_c(1, 0)), Scalar(2))))))) -
      encoder(2, 0) + offset(2, 0);
  _res(3, 0) =
      _tmp152 * (-std::sinh(Scalar(1.0) * _tmp151) -
                 std::sinh(Scalar(0.1034955) * _tmp150 *
                           (-_tmp151 * _tmp152 -
                            std::sqrt(Scalar(std::pow(Scalar(-_tmp64 + p_d(1, 0)), Scalar(2)) +
                                             std::pow(Scalar(-_tmp66 + p_d(0, 0)), Scalar(2))))))) -
      encoder(3, 0) + offset(3, 0);

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
