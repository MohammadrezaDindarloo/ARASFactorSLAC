// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

#include <sym/rot3.h>

namespace sym {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: IK_residual_func_cost1_Nl11
 *
 * Args:
 *     fh1: Scalar
 *     fv1: Scalar
 *     DeltaRot: Rot3
 *     position_vector: Matrix31
 *     Rot_init: Rot3
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix41
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 4, 1> IkResidualFuncCost1Nl11(
    const Scalar fh1, const Scalar fv1, const sym::Rot3<Scalar>& DeltaRot,
    const Eigen::Matrix<Scalar, 3, 1>& position_vector, const sym::Rot3<Scalar>& Rot_init,
    const Scalar epsilon) {
  // Total ops: 497

  // Unused inputs
  (void)epsilon;

  // Input arrays
  const Eigen::Matrix<Scalar, 4, 1>& _DeltaRot = DeltaRot.Data();
  const Eigen::Matrix<Scalar, 4, 1>& _Rot_init = Rot_init.Data();

  // Intermediate terms (155)
  const Scalar _tmp0 = Scalar(1.0) / (fh1);
  const Scalar _tmp1 = _DeltaRot[0] * _Rot_init[3] - _DeltaRot[1] * _Rot_init[2] +
                       _DeltaRot[2] * _Rot_init[1] + _DeltaRot[3] * _Rot_init[0];
  const Scalar _tmp2 = -2 * std::pow(_tmp1, Scalar(2));
  const Scalar _tmp3 = -_DeltaRot[0] * _Rot_init[1] + _DeltaRot[1] * _Rot_init[0] +
                       _DeltaRot[2] * _Rot_init[3] + _DeltaRot[3] * _Rot_init[2];
  const Scalar _tmp4 = -2 * std::pow(_tmp3, Scalar(2));
  const Scalar _tmp5 = Scalar(0.20999999999999999) * _tmp2 + Scalar(0.20999999999999999) * _tmp4 +
                       Scalar(0.20999999999999999);
  const Scalar _tmp6 = -_tmp5;
  const Scalar _tmp7 = _DeltaRot[0] * _Rot_init[2] + _DeltaRot[1] * _Rot_init[3] -
                       _DeltaRot[2] * _Rot_init[0] + _DeltaRot[3] * _Rot_init[1];
  const Scalar _tmp8 = 2 * _tmp7;
  const Scalar _tmp9 = _tmp3 * _tmp8;
  const Scalar _tmp10 = -_DeltaRot[0] * _Rot_init[0] - _DeltaRot[1] * _Rot_init[1] -
                        _DeltaRot[2] * _Rot_init[2] + _DeltaRot[3] * _Rot_init[3];
  const Scalar _tmp11 = 2 * _tmp1;
  const Scalar _tmp12 = _tmp10 * _tmp11;
  const Scalar _tmp13 = -_tmp12 + _tmp9;
  const Scalar _tmp14 = -Scalar(0.010999999999999999) * _tmp13;
  const Scalar _tmp15 = _tmp1 * _tmp8;
  const Scalar _tmp16 = 2 * _tmp10 * _tmp3;
  const Scalar _tmp17 = Scalar(0.20999999999999999) * _tmp15 + Scalar(0.20999999999999999) * _tmp16;
  const Scalar _tmp18 = _tmp14 + _tmp17;
  const Scalar _tmp19 = _tmp18 + _tmp6;
  const Scalar _tmp20 = _tmp19 + position_vector(1, 0);
  const Scalar _tmp21 = 1 - 2 * std::pow(_tmp7, Scalar(2));
  const Scalar _tmp22 = Scalar(0.20999999999999999) * _tmp21 + Scalar(0.20999999999999999) * _tmp4;
  const Scalar _tmp23 = _tmp11 * _tmp3;
  const Scalar _tmp24 = _tmp10 * _tmp8;
  const Scalar _tmp25 = _tmp23 + _tmp24;
  const Scalar _tmp26 = -Scalar(0.010999999999999999) * _tmp25;
  const Scalar _tmp27 = Scalar(0.20999999999999999) * _tmp15 - Scalar(0.20999999999999999) * _tmp16;
  const Scalar _tmp28 = _tmp26 - _tmp27;
  const Scalar _tmp29 = _tmp22 + _tmp28;
  const Scalar _tmp30 = _tmp29 + position_vector(0, 0);
  const Scalar _tmp31 = std::asinh(_tmp0 * fv1);
  const Scalar _tmp32 = Scalar(9.6622558468725703) * fh1;
  const Scalar _tmp33 = Scalar(0.20999999999999999) * _tmp23 - Scalar(0.20999999999999999) * _tmp24;
  const Scalar _tmp34 =
      -Scalar(0.010999999999999999) * _tmp2 - Scalar(0.010999999999999999) * _tmp21;
  const Scalar _tmp35 = Scalar(0.20999999999999999) * _tmp12 + Scalar(0.20999999999999999) * _tmp9;
  const Scalar _tmp36 = _tmp34 - _tmp35;
  const Scalar _tmp37 = _tmp33 + _tmp36;
  const Scalar _tmp38 = _tmp14 - _tmp17;
  const Scalar _tmp39 = _tmp38 + _tmp5;
  const Scalar _tmp40 = _tmp39 + position_vector(1, 0);
  const Scalar _tmp41 = _tmp40 + Scalar(-110.0);
  const Scalar _tmp42 = -_tmp22;
  const Scalar _tmp43 = _tmp26 + _tmp27;
  const Scalar _tmp44 = _tmp42 + _tmp43;
  const Scalar _tmp45 = _tmp44 + position_vector(0, 0);
  const Scalar _tmp46 = _tmp45 + Scalar(125.0);
  const Scalar _tmp47 = Scalar(1.0) / (_tmp46);
  const Scalar _tmp48 = _tmp41 * _tmp47;
  const Scalar _tmp49 = _tmp38 + _tmp6;
  const Scalar _tmp50 = _tmp49 + position_vector(1, 0);
  const Scalar _tmp51 = _tmp50 + Scalar(110.0);
  const Scalar _tmp52 = _tmp28 + _tmp42;
  const Scalar _tmp53 = _tmp52 + position_vector(0, 0);
  const Scalar _tmp54 = _tmp53 + Scalar(125.0);
  const Scalar _tmp55 = std::pow(Scalar(std::pow(_tmp51, Scalar(2)) + std::pow(_tmp54, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp56 = _tmp54 * _tmp55;
  const Scalar _tmp57 = _tmp51 * _tmp55;
  const Scalar _tmp58 = _tmp48 * _tmp56 - _tmp57;
  const Scalar _tmp59 = -_tmp33;
  const Scalar _tmp60 = _tmp34 + _tmp35;
  const Scalar _tmp61 = _tmp59 + _tmp60;
  const Scalar _tmp62 = _tmp18 + _tmp5;
  const Scalar _tmp63 = _tmp62 + position_vector(1, 0);
  const Scalar _tmp64 = _tmp63 + Scalar(-110.0);
  const Scalar _tmp65 = _tmp22 + _tmp43;
  const Scalar _tmp66 = _tmp65 + position_vector(0, 0);
  const Scalar _tmp67 = _tmp66 + Scalar(-125.0);
  const Scalar _tmp68 = std::pow(Scalar(std::pow(_tmp64, Scalar(2)) + std::pow(_tmp67, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp69 = _tmp67 * _tmp68;
  const Scalar _tmp70 = _tmp61 * _tmp69;
  const Scalar _tmp71 = _tmp33 + _tmp60;
  const Scalar _tmp72 = _tmp64 * _tmp68;
  const Scalar _tmp73 = -_tmp48 * _tmp70 + _tmp71 * _tmp72;
  const Scalar _tmp74 = Scalar(1.0) / (_tmp48 * _tmp69 - _tmp72);
  const Scalar _tmp75 = _tmp48 * _tmp74;
  const Scalar _tmp76 = _tmp48 * _tmp61 + _tmp73 * _tmp75;
  const Scalar _tmp77 = Scalar(1.0) * _tmp39;
  const Scalar _tmp78 = -_tmp77;
  const Scalar _tmp79 = Scalar(1.0) / (_tmp62 + _tmp78);
  const Scalar _tmp80 = Scalar(1.0) * _tmp44;
  const Scalar _tmp81 = -_tmp65 + _tmp80;
  const Scalar _tmp82 = _tmp79 * _tmp81;
  const Scalar _tmp83 = -_tmp69 * _tmp71 + _tmp70;
  const Scalar _tmp84 = -_tmp61 + _tmp75 * _tmp83 - _tmp76 * _tmp82;
  const Scalar _tmp85 = _tmp56 * _tmp61;
  const Scalar _tmp86 = _tmp36 + _tmp59;
  const Scalar _tmp87 = _tmp58 * _tmp74;
  const Scalar _tmp88 = -_tmp48 * _tmp85 + _tmp57 * _tmp86 - _tmp73 * _tmp87;
  const Scalar _tmp89 = -_tmp56 * _tmp86 - _tmp82 * _tmp88 - _tmp83 * _tmp87 + _tmp85;
  const Scalar _tmp90 = Scalar(1.0) / (_tmp89);
  const Scalar _tmp91 =
      std::sqrt(Scalar(std::pow(_tmp41, Scalar(2)) + std::pow(_tmp46, Scalar(2))));
  const Scalar _tmp92 = Scalar(1.0) / (_tmp91);
  const Scalar _tmp93 = _tmp47 * _tmp91;
  const Scalar _tmp94 = _tmp93 * (-_tmp39 * _tmp46 * _tmp92 + _tmp41 * _tmp44 * _tmp92);
  const Scalar _tmp95 = _tmp62 * _tmp69 - _tmp65 * _tmp72 + _tmp69 * _tmp94;
  const Scalar _tmp96 = _tmp49 * _tmp56 - _tmp52 * _tmp57 + _tmp56 * _tmp94 - _tmp87 * _tmp95;
  const Scalar _tmp97 = _tmp90 * _tmp96;
  const Scalar _tmp98 = Scalar(1.0) / (_tmp96);
  const Scalar _tmp99 = _tmp89 * _tmp98;
  const Scalar _tmp100 = _tmp99 * (_tmp75 * _tmp95 - _tmp84 * _tmp97 - _tmp94);
  const Scalar _tmp101 = _tmp90 * (_tmp100 + _tmp84);
  const Scalar _tmp102 = -_tmp101 * _tmp58 - _tmp48;
  const Scalar _tmp103 = _tmp69 * _tmp74;
  const Scalar _tmp104 = _tmp30 + Scalar(-125.0);
  const Scalar _tmp105 = _tmp20 + Scalar(110.0);
  const Scalar _tmp106 =
      std::pow(Scalar(std::pow(_tmp104, Scalar(2)) + std::pow(_tmp105, Scalar(2))),
               Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp107 = _tmp104 * _tmp106;
  const Scalar _tmp108 = _tmp107 * fh1;
  const Scalar _tmp109 = Scalar(1.0) * _tmp74;
  const Scalar _tmp110 = Scalar(1.0) * _tmp79;
  const Scalar _tmp111 = -_tmp109 * _tmp83 + _tmp110 * _tmp73 * _tmp74 * _tmp81;
  const Scalar _tmp112 = _tmp99 * (-_tmp109 * _tmp95 - _tmp111 * _tmp97);
  const Scalar _tmp113 = _tmp90 * (_tmp111 + _tmp112);
  const Scalar _tmp114 = -_tmp113 * _tmp58 + Scalar(1.0);
  const Scalar _tmp115 = _tmp105 * _tmp106;
  const Scalar _tmp116 = _tmp115 * fh1;
  const Scalar _tmp117 = Scalar(1.0) * _tmp98;
  const Scalar _tmp118 = _tmp69 * _tmp87;
  const Scalar _tmp119 = fh1 * (-_tmp107 * _tmp19 + _tmp115 * _tmp29);
  const Scalar _tmp120 = Scalar(19.620000000000001) - fv1;
  const Scalar _tmp121 = _tmp77 * _tmp82 + _tmp80;
  const Scalar _tmp122 = 0;
  const Scalar _tmp123 = -_tmp108 * _tmp93 * (_tmp101 * _tmp56 + _tmp102 * _tmp103 + Scalar(1.0)) -
                         _tmp116 * _tmp93 * (_tmp103 * _tmp114 + _tmp113 * _tmp56) -
                         _tmp119 * _tmp93 * (-_tmp117 * _tmp118 + _tmp117 * _tmp56) -
                         _tmp120 * _tmp93 * (-_tmp118 * _tmp122 + _tmp122 * _tmp56);
  const Scalar _tmp124 = Scalar(1.0) / (_tmp123);
  const Scalar _tmp125 = _tmp49 + _tmp78;
  const Scalar _tmp126 = _tmp125 * _tmp82;
  const Scalar _tmp127 = Scalar(1.0) / (-_tmp126 - _tmp52 + _tmp80);
  const Scalar _tmp128 = Scalar(1.0) * _tmp127;
  const Scalar _tmp129 = _tmp128 * _tmp99;
  const Scalar _tmp130 = -_tmp117 * _tmp88 + _tmp125 * _tmp129;
  const Scalar _tmp131 = _tmp125 * _tmp127;
  const Scalar _tmp132 = _tmp100 * _tmp131 - _tmp101 * _tmp88 + _tmp76;
  const Scalar _tmp133 = -_tmp109 * _tmp73 + _tmp112 * _tmp131 - _tmp113 * _tmp88;
  const Scalar _tmp134 = _tmp128 * _tmp82;
  const Scalar _tmp135 = _tmp126 * _tmp128 + Scalar(1.0);
  const Scalar _tmp136 = _tmp37 * fh1;
  const Scalar _tmp137 = -_tmp115 * _tmp136 - Scalar(2.3544) * _tmp13 - _tmp19 * fv1;
  const Scalar _tmp138 = _tmp125 * _tmp79;
  const Scalar _tmp139 = _tmp107 * _tmp136 + Scalar(2.3544) * _tmp25 + _tmp29 * fv1;
  const Scalar _tmp140 = _tmp121 * _tmp127;
  const Scalar _tmp141 = -_tmp122 * _tmp88 - _tmp125 * _tmp140 + _tmp78;
  const Scalar _tmp142 = std::asinh(
      _tmp124 * (Scalar(1.0) * _tmp108 * (_tmp100 * _tmp128 - _tmp110 * _tmp132) +
                 Scalar(1.0) * _tmp116 * (-_tmp110 * _tmp133 + _tmp112 * _tmp128) +
                 Scalar(1.0) * _tmp119 * (-_tmp110 * _tmp130 + _tmp129) +
                 Scalar(1.0) * _tmp120 * (-_tmp110 * _tmp141 - _tmp121 * _tmp128 + Scalar(1.0)) +
                 Scalar(1.0) * _tmp137 * (-_tmp110 * _tmp135 + _tmp134) +
                 Scalar(1.0) * _tmp139 * (_tmp128 * _tmp138 - _tmp128)));
  const Scalar _tmp143 = Scalar(9.6622558468725703) * _tmp123;
  const Scalar _tmp144 = _tmp117 * _tmp119;
  const Scalar _tmp145 = _tmp120 * _tmp122;
  const Scalar _tmp146 =
      _tmp102 * _tmp108 * _tmp74 + _tmp114 * _tmp116 * _tmp74 - _tmp144 * _tmp87 - _tmp145 * _tmp87;
  const Scalar _tmp147 = Scalar(1.0) / (_tmp146);
  const Scalar _tmp148 = _tmp128 * _tmp139;
  const Scalar _tmp149 =
      std::asinh(_tmp147 * (_tmp108 * _tmp132 * _tmp79 + _tmp116 * _tmp133 * _tmp79 +
                            _tmp119 * _tmp130 * _tmp79 + _tmp120 * _tmp141 * _tmp79 +
                            _tmp135 * _tmp137 * _tmp79 - _tmp138 * _tmp148));
  const Scalar _tmp150 = Scalar(9.6622558468725703) * _tmp146;
  const Scalar _tmp151 = _tmp101 * _tmp108 + _tmp113 * _tmp116 + _tmp144 + _tmp145;
  const Scalar _tmp152 = Scalar(1.0) / (_tmp151);
  const Scalar _tmp153 =
      std::asinh(_tmp152 * (-_tmp100 * _tmp108 * _tmp127 - _tmp112 * _tmp116 * _tmp127 -
                            _tmp119 * _tmp129 + _tmp120 * _tmp140 - _tmp134 * _tmp137 + _tmp148));
  const Scalar _tmp154 = Scalar(9.6622558468725703) * _tmp151;

  // Output terms (1)
  Eigen::Matrix<Scalar, 4, 1> _res;

  _res(0, 0) =
      -_tmp32 *
          (Scalar(4.967784) * _tmp0 + std::cosh(Scalar(1.0) * _tmp31) -
           std::cosh(
               Scalar(0.1034955) * _tmp0 *
               (-_tmp31 * _tmp32 -
                Scalar(125.0) *
                    std::sqrt(Scalar(
                        std::pow(Scalar(1 - Scalar(0.0080000000000000002) * _tmp30), Scalar(2)) +
                        Scalar(0.77439999999999998) *
                            std::pow(Scalar(-Scalar(0.0090909090909090905) * _tmp20 - 1),
                                     Scalar(2))))))) +
      _tmp37 + position_vector(2, 0);
  _res(1, 0) =
      -_tmp143 *
          (Scalar(4.967784) * _tmp124 + std::cosh(Scalar(1.0) * _tmp142) -
           std::cosh(
               Scalar(0.1034955) * _tmp124 *
               (-_tmp142 * _tmp143 -
                Scalar(125.0) * std::sqrt(Scalar(
                                    Scalar(0.77439999999999998) *
                                        std::pow(Scalar(1 - Scalar(0.0090909090909090905) * _tmp40),
                                                 Scalar(2)) +
                                    std::pow(Scalar(-Scalar(0.0080000000000000002) * _tmp45 - 1),
                                             Scalar(2))))))) +
      _tmp61 + position_vector(2, 0);
  _res(2, 0) =
      -_tmp150 *
          (Scalar(4.967784) * _tmp147 + std::cosh(Scalar(1.0) * _tmp149) -
           std::cosh(
               Scalar(0.1034955) * _tmp147 *
               (-_tmp149 * _tmp150 -
                Scalar(125.0) * std::sqrt(Scalar(
                                    Scalar(0.77439999999999998) *
                                        std::pow(Scalar(1 - Scalar(0.0090909090909090905) * _tmp63),
                                                 Scalar(2)) +
                                    std::pow(Scalar(1 - Scalar(0.0080000000000000002) * _tmp66),
                                             Scalar(2))))))) +
      _tmp71 + position_vector(2, 0);
  _res(3, 0) =
      -_tmp154 *
          (Scalar(4.967784) * _tmp152 + std::cosh(Scalar(1.0) * _tmp153) -
           std::cosh(Scalar(0.1034955) * _tmp152 *
                     (-_tmp153 * _tmp154 -
                      Scalar(125.0) *
                          std::sqrt(Scalar(
                              Scalar(0.77439999999999998) *
                                  std::pow(Scalar(-Scalar(0.0090909090909090905) * _tmp50 - 1),
                                           Scalar(2)) +
                              std::pow(Scalar(-Scalar(0.0080000000000000002) * _tmp53 - 1),
                                       Scalar(2))))))) +
      _tmp86 + position_vector(2, 0);

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
