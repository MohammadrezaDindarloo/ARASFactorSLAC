// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

#include <sym/rot3.h>

namespace sym {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: IK_residual_func_cost1_Nl21
 *
 * Args:
 *     fh1: Scalar
 *     fv1: Scalar
 *     DeltaRot: Rot3
 *     position_vector: Matrix31
 *     Rot_init: Rot3
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix41
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 4, 1> IkResidualFuncCost1Nl21(
    const Scalar fh1, const Scalar fv1, const sym::Rot3<Scalar>& DeltaRot,
    const Eigen::Matrix<Scalar, 3, 1>& position_vector, const sym::Rot3<Scalar>& Rot_init,
    const Scalar epsilon) {
  // Total ops: 503

  // Unused inputs
  (void)epsilon;

  // Input arrays
  const Eigen::Matrix<Scalar, 4, 1>& _DeltaRot = DeltaRot.Data();
  const Eigen::Matrix<Scalar, 4, 1>& _Rot_init = Rot_init.Data();

  // Intermediate terms (155)
  const Scalar _tmp0 = Scalar(1.0) / (fh1);
  const Scalar _tmp1 = _DeltaRot[0] * _Rot_init[2] + _DeltaRot[1] * _Rot_init[3] -
                       _DeltaRot[2] * _Rot_init[0] + _DeltaRot[3] * _Rot_init[1];
  const Scalar _tmp2 = _DeltaRot[0] * _Rot_init[3] - _DeltaRot[1] * _Rot_init[2] +
                       _DeltaRot[2] * _Rot_init[1] + _DeltaRot[3] * _Rot_init[0];
  const Scalar _tmp3 = 2 * _tmp1 * _tmp2;
  const Scalar _tmp4 = -_DeltaRot[0] * _Rot_init[1] + _DeltaRot[1] * _Rot_init[0] +
                       _DeltaRot[2] * _Rot_init[3] + _DeltaRot[3] * _Rot_init[2];
  const Scalar _tmp5 = -2 * _DeltaRot[0] * _Rot_init[0] - 2 * _DeltaRot[1] * _Rot_init[1] -
                       2 * _DeltaRot[2] * _Rot_init[2] + 2 * _DeltaRot[3] * _Rot_init[3];
  const Scalar _tmp6 = _tmp4 * _tmp5;
  const Scalar _tmp7 = Scalar(0.20999999999999999) * _tmp3 - Scalar(0.20999999999999999) * _tmp6;
  const Scalar _tmp8 = -2 * std::pow(_tmp1, Scalar(2));
  const Scalar _tmp9 = 1 - 2 * std::pow(_tmp4, Scalar(2));
  const Scalar _tmp10 = Scalar(0.20999999999999999) * _tmp8 + Scalar(0.20999999999999999) * _tmp9;
  const Scalar _tmp11 = 2 * _tmp4;
  const Scalar _tmp12 = _tmp11 * _tmp2;
  const Scalar _tmp13 = _tmp1 * _tmp5;
  const Scalar _tmp14 = _tmp12 + _tmp13;
  const Scalar _tmp15 = -Scalar(0.010999999999999999) * _tmp14;
  const Scalar _tmp16 = -_tmp10 + _tmp15;
  const Scalar _tmp17 = _tmp16 + _tmp7;
  const Scalar _tmp18 = _tmp17 + position_vector(0, 0);
  const Scalar _tmp19 = Scalar(0.20999999999999999) * _tmp3 + Scalar(0.20999999999999999) * _tmp6;
  const Scalar _tmp20 = -_tmp19;
  const Scalar _tmp21 = _tmp1 * _tmp11;
  const Scalar _tmp22 = _tmp2 * _tmp5;
  const Scalar _tmp23 = _tmp21 - _tmp22;
  const Scalar _tmp24 = -Scalar(0.010999999999999999) * _tmp23;
  const Scalar _tmp25 = -2 * std::pow(_tmp2, Scalar(2));
  const Scalar _tmp26 = Scalar(0.20999999999999999) * _tmp25 + Scalar(0.20999999999999999) * _tmp9;
  const Scalar _tmp27 = _tmp24 + _tmp26;
  const Scalar _tmp28 = _tmp20 + _tmp27;
  const Scalar _tmp29 = _tmp28 + position_vector(1, 0);
  const Scalar _tmp30 = std::asinh(_tmp0 * fv1);
  const Scalar _tmp31 = Scalar(9.6622558468725703) * fh1;
  const Scalar _tmp32 = Scalar(0.20999999999999999) * _tmp12 - Scalar(0.20999999999999999) * _tmp13;
  const Scalar _tmp33 = -_tmp32;
  const Scalar _tmp34 = -Scalar(0.010999999999999999) * _tmp25 -
                        Scalar(0.010999999999999999) * _tmp8 + Scalar(-0.010999999999999999);
  const Scalar _tmp35 = Scalar(0.20999999999999999) * _tmp21 + Scalar(0.20999999999999999) * _tmp22;
  const Scalar _tmp36 = _tmp34 + _tmp35;
  const Scalar _tmp37 = _tmp33 + _tmp36;
  const Scalar _tmp38 = _tmp24 - _tmp26;
  const Scalar _tmp39 = _tmp20 + _tmp38;
  const Scalar _tmp40 = _tmp39 + position_vector(1, 0);
  const Scalar _tmp41 = _tmp40 + Scalar(110.0);
  const Scalar _tmp42 = -_tmp7;
  const Scalar _tmp43 = _tmp16 + _tmp42;
  const Scalar _tmp44 = _tmp43 + position_vector(0, 0);
  const Scalar _tmp45 = _tmp44 + Scalar(125.0);
  const Scalar _tmp46 = std::pow(Scalar(std::pow(_tmp41, Scalar(2)) + std::pow(_tmp45, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp47 = _tmp45 * _tmp46;
  const Scalar _tmp48 = _tmp34 - _tmp35;
  const Scalar _tmp49 = _tmp32 + _tmp48;
  const Scalar _tmp50 = _tmp47 * _tmp49;
  const Scalar _tmp51 = _tmp33 + _tmp48;
  const Scalar _tmp52 = _tmp41 * _tmp46;
  const Scalar _tmp53 = _tmp10 + _tmp15;
  const Scalar _tmp54 = _tmp42 + _tmp53;
  const Scalar _tmp55 = _tmp54 + position_vector(0, 0);
  const Scalar _tmp56 = _tmp55 + Scalar(-125.0);
  const Scalar _tmp57 = Scalar(1.0) / (_tmp56);
  const Scalar _tmp58 = _tmp19 + _tmp38;
  const Scalar _tmp59 = _tmp58 + position_vector(1, 0);
  const Scalar _tmp60 = _tmp59 + Scalar(110.0);
  const Scalar _tmp61 = _tmp57 * _tmp60;
  const Scalar _tmp62 = _tmp47 * _tmp61 - _tmp52;
  const Scalar _tmp63 = _tmp19 + _tmp27;
  const Scalar _tmp64 = _tmp63 + position_vector(1, 0);
  const Scalar _tmp65 = _tmp64 + Scalar(-110.0);
  const Scalar _tmp66 = _tmp53 + _tmp7;
  const Scalar _tmp67 = _tmp66 + position_vector(0, 0);
  const Scalar _tmp68 = _tmp67 + Scalar(-125.0);
  const Scalar _tmp69 = std::pow(Scalar(std::pow(_tmp65, Scalar(2)) + std::pow(_tmp68, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp70 = _tmp68 * _tmp69;
  const Scalar _tmp71 = _tmp65 * _tmp69;
  const Scalar _tmp72 = Scalar(1.0) / (_tmp61 * _tmp70 - _tmp71);
  const Scalar _tmp73 = _tmp49 * _tmp61;
  const Scalar _tmp74 = _tmp32 + _tmp36;
  const Scalar _tmp75 = _tmp72 * (-_tmp70 * _tmp73 + _tmp71 * _tmp74);
  const Scalar _tmp76 = -_tmp50 * _tmp61 + _tmp51 * _tmp52 - _tmp62 * _tmp75;
  const Scalar _tmp77 = Scalar(1.0) * _tmp58;
  const Scalar _tmp78 = -_tmp77;
  const Scalar _tmp79 = Scalar(1.0) / (_tmp63 + _tmp78);
  const Scalar _tmp80 = Scalar(1.0) * _tmp54;
  const Scalar _tmp81 = -_tmp66 + _tmp80;
  const Scalar _tmp82 = _tmp79 * _tmp81;
  const Scalar _tmp83 = _tmp72 * (_tmp49 * _tmp70 - _tmp70 * _tmp74);
  const Scalar _tmp84 = -_tmp47 * _tmp51 + _tmp50 - _tmp62 * _tmp83 - _tmp76 * _tmp82;
  const Scalar _tmp85 = Scalar(1.0) / (_tmp84);
  const Scalar _tmp86 = Scalar(1.0) * _tmp79;
  const Scalar _tmp87 = _tmp75 * _tmp81 * _tmp86 - Scalar(1.0) * _tmp83;
  const Scalar _tmp88 =
      std::sqrt(Scalar(std::pow(_tmp56, Scalar(2)) + std::pow(_tmp60, Scalar(2))));
  const Scalar _tmp89 = Scalar(1.0) / (_tmp88);
  const Scalar _tmp90 = _tmp57 * _tmp88;
  const Scalar _tmp91 = _tmp90 * (_tmp54 * _tmp60 * _tmp89 - _tmp56 * _tmp58 * _tmp89);
  const Scalar _tmp92 = _tmp72 * (_tmp63 * _tmp70 - _tmp66 * _tmp71 + _tmp70 * _tmp91);
  const Scalar _tmp93 = _tmp39 * _tmp47 - _tmp43 * _tmp52 + _tmp47 * _tmp91 - _tmp62 * _tmp92;
  const Scalar _tmp94 = _tmp85 * _tmp93;
  const Scalar _tmp95 = Scalar(1.0) / (_tmp93);
  const Scalar _tmp96 = _tmp84 * _tmp95;
  const Scalar _tmp97 = _tmp96 * (-_tmp87 * _tmp94 - Scalar(1.0) * _tmp92);
  const Scalar _tmp98 = _tmp87 + _tmp97;
  const Scalar _tmp99 = _tmp85 * _tmp98;
  const Scalar _tmp100 = -_tmp62 * _tmp99 + Scalar(1.0);
  const Scalar _tmp101 = _tmp70 * _tmp72;
  const Scalar _tmp102 = _tmp29 + Scalar(-110.0);
  const Scalar _tmp103 = _tmp18 + Scalar(125.0);
  const Scalar _tmp104 =
      std::pow(Scalar(std::pow(_tmp102, Scalar(2)) + std::pow(_tmp103, Scalar(2))),
               Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp105 = _tmp102 * _tmp104;
  const Scalar _tmp106 = _tmp105 * fh1;
  const Scalar _tmp107 = _tmp61 * _tmp75 + _tmp73;
  const Scalar _tmp108 = -_tmp107 * _tmp82 - _tmp49 + _tmp61 * _tmp83;
  const Scalar _tmp109 = _tmp96 * (-_tmp108 * _tmp94 + _tmp61 * _tmp92 - _tmp91);
  const Scalar _tmp110 = _tmp85 * (_tmp108 + _tmp109);
  const Scalar _tmp111 = -_tmp110 * _tmp62 - _tmp61;
  const Scalar _tmp112 = _tmp103 * _tmp104;
  const Scalar _tmp113 = _tmp112 * fh1;
  const Scalar _tmp114 = Scalar(1.0) * _tmp95;
  const Scalar _tmp115 = _tmp101 * _tmp62;
  const Scalar _tmp116 = fh1 * (_tmp105 * _tmp17 - _tmp112 * _tmp28);
  const Scalar _tmp117 = Scalar(19.620000000000001) - fv1;
  const Scalar _tmp118 = _tmp77 * _tmp82 + _tmp80;
  const Scalar _tmp119 = 0;
  const Scalar _tmp120 = _tmp119 * _tmp85;
  const Scalar _tmp121 = -_tmp106 * _tmp90 * (_tmp100 * _tmp101 + _tmp47 * _tmp99) -
                         _tmp113 * _tmp90 * (_tmp101 * _tmp111 + _tmp110 * _tmp47 + Scalar(1.0)) -
                         _tmp116 * _tmp90 * (-_tmp114 * _tmp115 + _tmp114 * _tmp47) -
                         _tmp117 * _tmp90 * (-_tmp115 * _tmp120 + _tmp120 * _tmp47);
  const Scalar _tmp122 = Scalar(1.0) / (_tmp121);
  const Scalar _tmp123 = _tmp39 + _tmp78;
  const Scalar _tmp124 = _tmp123 * _tmp82;
  const Scalar _tmp125 = Scalar(1.0) / (-_tmp124 - _tmp43 + _tmp80);
  const Scalar _tmp126 = Scalar(1.0) * _tmp125;
  const Scalar _tmp127 = _tmp123 * _tmp125;
  const Scalar _tmp128 = _tmp107 + _tmp109 * _tmp127 - _tmp110 * _tmp76;
  const Scalar _tmp129 = _tmp76 * _tmp85;
  const Scalar _tmp130 = _tmp127 * _tmp97 - _tmp129 * _tmp98 - Scalar(1.0) * _tmp75;
  const Scalar _tmp131 = _tmp126 * _tmp82;
  const Scalar _tmp132 = _tmp124 * _tmp126 + Scalar(1.0);
  const Scalar _tmp133 = _tmp37 * fh1;
  const Scalar _tmp134 = -_tmp105 * _tmp133 - Scalar(2.3544) * _tmp23 - _tmp28 * fv1;
  const Scalar _tmp135 = _tmp123 * _tmp126;
  const Scalar _tmp136 = -_tmp114 * _tmp76 + _tmp135 * _tmp96;
  const Scalar _tmp137 = _tmp126 * _tmp96;
  const Scalar _tmp138 = _tmp118 * _tmp125;
  const Scalar _tmp139 = -_tmp119 * _tmp129 - _tmp123 * _tmp138 + _tmp78;
  const Scalar _tmp140 = _tmp112 * _tmp133 + Scalar(2.3544) * _tmp14 + _tmp17 * fv1;
  const Scalar _tmp141 = std::asinh(
      _tmp122 * (Scalar(1.0) * _tmp106 * (_tmp126 * _tmp97 - _tmp130 * _tmp86) +
                 Scalar(1.0) * _tmp113 * (_tmp109 * _tmp126 - _tmp128 * _tmp86) +
                 Scalar(1.0) * _tmp116 * (-_tmp136 * _tmp86 + _tmp137) +
                 Scalar(1.0) * _tmp117 * (-_tmp118 * _tmp126 - _tmp139 * _tmp86 + Scalar(1.0)) +
                 Scalar(1.0) * _tmp134 * (_tmp131 - _tmp132 * _tmp86) +
                 Scalar(1.0) * _tmp140 * (-_tmp126 + _tmp135 * _tmp79)));
  const Scalar _tmp142 = Scalar(9.6622558468725703) * _tmp121;
  const Scalar _tmp143 = _tmp114 * _tmp116;
  const Scalar _tmp144 = _tmp62 * _tmp72;
  const Scalar _tmp145 = _tmp117 * _tmp120;
  const Scalar _tmp146 = _tmp100 * _tmp106 * _tmp72 + _tmp111 * _tmp113 * _tmp72 -
                         _tmp143 * _tmp144 - _tmp144 * _tmp145;
  const Scalar _tmp147 = Scalar(1.0) / (_tmp146);
  const Scalar _tmp148 = _tmp126 * _tmp140;
  const Scalar _tmp149 =
      std::asinh(_tmp147 * (_tmp106 * _tmp130 * _tmp79 + _tmp113 * _tmp128 * _tmp79 +
                            _tmp116 * _tmp136 * _tmp79 + _tmp117 * _tmp139 * _tmp79 -
                            _tmp123 * _tmp148 * _tmp79 + _tmp132 * _tmp134 * _tmp79));
  const Scalar _tmp150 = Scalar(9.6622558468725703) * _tmp146;
  const Scalar _tmp151 = _tmp106 * _tmp99 + _tmp110 * _tmp113 + _tmp143 + _tmp145;
  const Scalar _tmp152 = Scalar(1.0) / (_tmp151);
  const Scalar _tmp153 =
      std::asinh(_tmp152 * (-_tmp106 * _tmp125 * _tmp97 - _tmp109 * _tmp113 * _tmp125 -
                            _tmp116 * _tmp137 + _tmp117 * _tmp138 - _tmp131 * _tmp134 + _tmp148));
  const Scalar _tmp154 = Scalar(9.6622558468725703) * _tmp151;

  // Output terms (1)
  Eigen::Matrix<Scalar, 4, 1> _res;

  _res(0, 0) =
      -_tmp31 * (Scalar(4.967784) * _tmp0 + std::cosh(Scalar(1.0) * _tmp30) -
                 std::cosh(Scalar(0.1034955) * _tmp0 *
                           (-_tmp30 * _tmp31 -
                            Scalar(125.0) *
                                std::sqrt(Scalar(
                                    Scalar(0.77439999999999998) *
                                        std::pow(Scalar(1 - Scalar(0.0090909090909090905) * _tmp29),
                                                 Scalar(2)) +
                                    std::pow(Scalar(-Scalar(0.0080000000000000002) * _tmp18 - 1),
                                             Scalar(2))))))) +
      _tmp37 + position_vector(2, 0);
  _res(1, 0) =
      -_tmp142 *
          (Scalar(4.967784) * _tmp122 + std::cosh(Scalar(1.0) * _tmp141) -
           std::cosh(
               Scalar(0.1034955) * _tmp122 *
               (-_tmp141 * _tmp142 -
                Scalar(125.0) *
                    std::sqrt(Scalar(
                        std::pow(Scalar(1 - Scalar(0.0080000000000000002) * _tmp55), Scalar(2)) +
                        Scalar(0.77439999999999998) *
                            std::pow(Scalar(-Scalar(0.0090909090909090905) * _tmp59 - 1),
                                     Scalar(2))))))) +
      _tmp49 + position_vector(2, 0);
  _res(2, 0) =
      -_tmp150 *
          (Scalar(4.967784) * _tmp147 + std::cosh(Scalar(1.0) * _tmp149) -
           std::cosh(
               Scalar(0.1034955) * _tmp147 *
               (-_tmp149 * _tmp150 -
                Scalar(125.0) * std::sqrt(Scalar(
                                    Scalar(0.77439999999999998) *
                                        std::pow(Scalar(1 - Scalar(0.0090909090909090905) * _tmp64),
                                                 Scalar(2)) +
                                    std::pow(Scalar(1 - Scalar(0.0080000000000000002) * _tmp67),
                                             Scalar(2))))))) +
      _tmp74 + position_vector(2, 0);
  _res(3, 0) =
      -_tmp154 *
          (Scalar(4.967784) * _tmp152 + std::cosh(Scalar(1.0) * _tmp153) -
           std::cosh(Scalar(0.1034955) * _tmp152 *
                     (-_tmp153 * _tmp154 -
                      Scalar(125.0) *
                          std::sqrt(Scalar(
                              Scalar(0.77439999999999998) *
                                  std::pow(Scalar(-Scalar(0.0090909090909090905) * _tmp40 - 1),
                                           Scalar(2)) +
                              std::pow(Scalar(-Scalar(0.0080000000000000002) * _tmp44 - 1),
                                       Scalar(2))))))) +
      _tmp51 + position_vector(2, 0);

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
