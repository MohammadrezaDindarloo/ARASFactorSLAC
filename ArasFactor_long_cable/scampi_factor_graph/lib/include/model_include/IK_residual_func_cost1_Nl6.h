// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

#include <sym/rot3.h>

namespace sym {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: IK_residual_func_cost1_Nl6
 *
 * Args:
 *     fh1: Scalar
 *     fv1: Scalar
 *     DeltaRot: Rot3
 *     position_vector: Matrix31
 *     Rot_init: Rot3
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix41
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 4, 1> IkResidualFuncCost1Nl6(
    const Scalar fh1, const Scalar fv1, const sym::Rot3<Scalar>& DeltaRot,
    const Eigen::Matrix<Scalar, 3, 1>& position_vector, const sym::Rot3<Scalar>& Rot_init,
    const Scalar epsilon) {
  // Total ops: 501

  // Unused inputs
  (void)epsilon;

  // Input arrays
  const Eigen::Matrix<Scalar, 4, 1>& _DeltaRot = DeltaRot.Data();
  const Eigen::Matrix<Scalar, 4, 1>& _Rot_init = Rot_init.Data();

  // Intermediate terms (155)
  const Scalar _tmp0 = Scalar(1.0) / (fh1);
  const Scalar _tmp1 = _DeltaRot[0] * _Rot_init[3] - _DeltaRot[1] * _Rot_init[2] +
                       _DeltaRot[2] * _Rot_init[1] + _DeltaRot[3] * _Rot_init[0];
  const Scalar _tmp2 = -2 * std::pow(_tmp1, Scalar(2));
  const Scalar _tmp3 = -_DeltaRot[0] * _Rot_init[1] + _DeltaRot[1] * _Rot_init[0] +
                       _DeltaRot[2] * _Rot_init[3] + _DeltaRot[3] * _Rot_init[2];
  const Scalar _tmp4 = 1 - 2 * std::pow(_tmp3, Scalar(2));
  const Scalar _tmp5 = Scalar(0.20999999999999999) * _tmp2 + Scalar(0.20999999999999999) * _tmp4;
  const Scalar _tmp6 = -_tmp5;
  const Scalar _tmp7 = _DeltaRot[0] * _Rot_init[2] + _DeltaRot[1] * _Rot_init[3] -
                       _DeltaRot[2] * _Rot_init[0] + _DeltaRot[3] * _Rot_init[1];
  const Scalar _tmp8 = 2 * _tmp7;
  const Scalar _tmp9 = _tmp3 * _tmp8;
  const Scalar _tmp10 = -2 * _DeltaRot[0] * _Rot_init[0] - 2 * _DeltaRot[1] * _Rot_init[1] -
                        2 * _DeltaRot[2] * _Rot_init[2] + 2 * _DeltaRot[3] * _Rot_init[3];
  const Scalar _tmp11 = _tmp1 * _tmp10;
  const Scalar _tmp12 = -_tmp11 + _tmp9;
  const Scalar _tmp13 = -Scalar(0.010999999999999999) * _tmp12;
  const Scalar _tmp14 = _tmp1 * _tmp8;
  const Scalar _tmp15 = _tmp10 * _tmp3;
  const Scalar _tmp16 = Scalar(0.20999999999999999) * _tmp14 + Scalar(0.20999999999999999) * _tmp15;
  const Scalar _tmp17 = _tmp13 + _tmp16;
  const Scalar _tmp18 = _tmp17 + _tmp6;
  const Scalar _tmp19 = _tmp18 + position_vector(1, 0);
  const Scalar _tmp20 = -2 * std::pow(_tmp7, Scalar(2));
  const Scalar _tmp21 = Scalar(0.20999999999999999) * _tmp20 + Scalar(0.20999999999999999) * _tmp4;
  const Scalar _tmp22 = 2 * _tmp1 * _tmp3;
  const Scalar _tmp23 = _tmp10 * _tmp7;
  const Scalar _tmp24 = _tmp22 + _tmp23;
  const Scalar _tmp25 = -Scalar(0.010999999999999999) * _tmp24;
  const Scalar _tmp26 = Scalar(0.20999999999999999) * _tmp14 - Scalar(0.20999999999999999) * _tmp15;
  const Scalar _tmp27 = _tmp25 - _tmp26;
  const Scalar _tmp28 = _tmp21 + _tmp27;
  const Scalar _tmp29 = _tmp28 + position_vector(0, 0);
  const Scalar _tmp30 = std::asinh(_tmp0 * fv1);
  const Scalar _tmp31 = Scalar(9.6622558468725703) * fh1;
  const Scalar _tmp32 = Scalar(0.20999999999999999) * _tmp22 - Scalar(0.20999999999999999) * _tmp23;
  const Scalar _tmp33 = -Scalar(0.010999999999999999) * _tmp2 -
                        Scalar(0.010999999999999999) * _tmp20 + Scalar(-0.010999999999999999);
  const Scalar _tmp34 = Scalar(0.20999999999999999) * _tmp11 + Scalar(0.20999999999999999) * _tmp9;
  const Scalar _tmp35 = _tmp33 - _tmp34;
  const Scalar _tmp36 = _tmp32 + _tmp35;
  const Scalar _tmp37 = -_tmp21;
  const Scalar _tmp38 = _tmp25 + _tmp26;
  const Scalar _tmp39 = _tmp37 + _tmp38;
  const Scalar _tmp40 = _tmp39 + position_vector(0, 0);
  const Scalar _tmp41 = _tmp40 + Scalar(125.0);
  const Scalar _tmp42 = _tmp13 - _tmp16;
  const Scalar _tmp43 = _tmp42 + _tmp5;
  const Scalar _tmp44 = _tmp43 + position_vector(1, 0);
  const Scalar _tmp45 = _tmp44 + Scalar(-110.0);
  const Scalar _tmp46 = std::pow(Scalar(std::pow(_tmp41, Scalar(2)) + std::pow(_tmp45, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp47 = _tmp41 * _tmp46;
  const Scalar _tmp48 = -_tmp32;
  const Scalar _tmp49 = _tmp33 + _tmp34;
  const Scalar _tmp50 = _tmp48 + _tmp49;
  const Scalar _tmp51 = _tmp42 + _tmp6;
  const Scalar _tmp52 = _tmp51 + position_vector(1, 0);
  const Scalar _tmp53 = _tmp52 + Scalar(110.0);
  const Scalar _tmp54 = _tmp27 + _tmp37;
  const Scalar _tmp55 = _tmp54 + position_vector(0, 0);
  const Scalar _tmp56 = _tmp55 + Scalar(125.0);
  const Scalar _tmp57 = Scalar(1.0) / (_tmp56);
  const Scalar _tmp58 = _tmp53 * _tmp57;
  const Scalar _tmp59 = _tmp35 + _tmp48;
  const Scalar _tmp60 = _tmp47 * _tmp59;
  const Scalar _tmp61 = _tmp32 + _tmp49;
  const Scalar _tmp62 = _tmp17 + _tmp5;
  const Scalar _tmp63 = _tmp62 + position_vector(1, 0);
  const Scalar _tmp64 = _tmp63 + Scalar(-110.0);
  const Scalar _tmp65 = _tmp21 + _tmp38;
  const Scalar _tmp66 = _tmp65 + position_vector(0, 0);
  const Scalar _tmp67 = _tmp66 + Scalar(-125.0);
  const Scalar _tmp68 = std::pow(Scalar(std::pow(_tmp64, Scalar(2)) + std::pow(_tmp67, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp69 = _tmp64 * _tmp68;
  const Scalar _tmp70 = _tmp58 * _tmp59;
  const Scalar _tmp71 = _tmp67 * _tmp68;
  const Scalar _tmp72 = _tmp61 * _tmp69 - _tmp70 * _tmp71;
  const Scalar _tmp73 = Scalar(1.0) / (_tmp58 * _tmp71 - _tmp69);
  const Scalar _tmp74 = _tmp45 * _tmp46;
  const Scalar _tmp75 = _tmp47 * _tmp58 - _tmp74;
  const Scalar _tmp76 = _tmp73 * _tmp75;
  const Scalar _tmp77 = _tmp50 * _tmp74 - _tmp58 * _tmp60 - _tmp72 * _tmp76;
  const Scalar _tmp78 = Scalar(1.0) * _tmp54;
  const Scalar _tmp79 = Scalar(1.0) * _tmp51;
  const Scalar _tmp80 = -_tmp79;
  const Scalar _tmp81 = Scalar(1.0) / (_tmp62 + _tmp80);
  const Scalar _tmp82 = _tmp81 * (-_tmp65 + _tmp78);
  const Scalar _tmp83 = _tmp59 * _tmp71 - _tmp61 * _tmp71;
  const Scalar _tmp84 = -_tmp47 * _tmp50 + _tmp60 - _tmp76 * _tmp83 - _tmp77 * _tmp82;
  const Scalar _tmp85 = Scalar(1.0) / (_tmp84);
  const Scalar _tmp86 = Scalar(1.0) * _tmp73;
  const Scalar _tmp87 = _tmp72 * _tmp86;
  const Scalar _tmp88 = _tmp82 * _tmp87 - _tmp83 * _tmp86;
  const Scalar _tmp89 =
      std::sqrt(Scalar(std::pow(_tmp53, Scalar(2)) + std::pow(_tmp56, Scalar(2))));
  const Scalar _tmp90 = Scalar(1.0) / (_tmp89);
  const Scalar _tmp91 = _tmp57 * _tmp89;
  const Scalar _tmp92 = _tmp91 * (-_tmp51 * _tmp56 * _tmp90 + _tmp53 * _tmp54 * _tmp90);
  const Scalar _tmp93 = _tmp73 * (_tmp62 * _tmp71 - _tmp65 * _tmp69 + _tmp71 * _tmp92);
  const Scalar _tmp94 = -_tmp39 * _tmp74 + _tmp43 * _tmp47 + _tmp47 * _tmp92 - _tmp75 * _tmp93;
  const Scalar _tmp95 = _tmp85 * _tmp94;
  const Scalar _tmp96 = Scalar(1.0) / (_tmp94);
  const Scalar _tmp97 = _tmp84 * _tmp96;
  const Scalar _tmp98 = _tmp97 * (-_tmp88 * _tmp95 - Scalar(1.0) * _tmp93);
  const Scalar _tmp99 = _tmp85 * (_tmp88 + _tmp98);
  const Scalar _tmp100 = -_tmp75 * _tmp99 + Scalar(1.0);
  const Scalar _tmp101 = _tmp71 * _tmp73;
  const Scalar _tmp102 = _tmp19 + Scalar(110.0);
  const Scalar _tmp103 = _tmp29 + Scalar(-125.0);
  const Scalar _tmp104 =
      std::pow(Scalar(std::pow(_tmp102, Scalar(2)) + std::pow(_tmp103, Scalar(2))),
               Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp105 = _tmp102 * _tmp104;
  const Scalar _tmp106 = _tmp105 * fh1;
  const Scalar _tmp107 = Scalar(1.0) * _tmp96;
  const Scalar _tmp108 = _tmp71 * _tmp76;
  const Scalar _tmp109 = _tmp103 * _tmp104;
  const Scalar _tmp110 = fh1 * (_tmp105 * _tmp28 - _tmp109 * _tmp18);
  const Scalar _tmp111 = _tmp58 * _tmp73;
  const Scalar _tmp112 = _tmp111 * _tmp72 + _tmp70;
  const Scalar _tmp113 = _tmp111 * _tmp83 - _tmp112 * _tmp82 - _tmp59;
  const Scalar _tmp114 = _tmp97 * (-_tmp113 * _tmp95 + _tmp58 * _tmp93 - _tmp92);
  const Scalar _tmp115 = _tmp85 * (_tmp113 + _tmp114);
  const Scalar _tmp116 = -_tmp115 * _tmp75 - _tmp58;
  const Scalar _tmp117 = _tmp109 * fh1;
  const Scalar _tmp118 = Scalar(19.620000000000001) - fv1;
  const Scalar _tmp119 = _tmp78 + _tmp79 * _tmp82;
  const Scalar _tmp120 = 0;
  const Scalar _tmp121 = -_tmp106 * _tmp91 * (_tmp100 * _tmp101 + _tmp47 * _tmp99) -
                         _tmp110 * _tmp91 * (-_tmp107 * _tmp108 + _tmp107 * _tmp47) -
                         _tmp117 * _tmp91 * (_tmp101 * _tmp116 + _tmp115 * _tmp47 + Scalar(1.0)) -
                         _tmp118 * _tmp91 * (-_tmp108 * _tmp120 + _tmp120 * _tmp47);
  const Scalar _tmp122 = Scalar(1.0) / (_tmp121);
  const Scalar _tmp123 = _tmp43 + _tmp80;
  const Scalar _tmp124 = _tmp123 * _tmp82;
  const Scalar _tmp125 = Scalar(1.0) / (-_tmp124 - _tmp39 + _tmp78);
  const Scalar _tmp126 = _tmp123 * _tmp125;
  const Scalar _tmp127 = _tmp112 + _tmp114 * _tmp126 - _tmp115 * _tmp77;
  const Scalar _tmp128 = Scalar(1.0) * _tmp81;
  const Scalar _tmp129 = Scalar(1.0) * _tmp125;
  const Scalar _tmp130 = Scalar(1.0) * fh1;
  const Scalar _tmp131 = _tmp123 * _tmp129;
  const Scalar _tmp132 = _tmp36 * fh1;
  const Scalar _tmp133 = _tmp109 * _tmp132 + Scalar(2.3544) * _tmp24 + _tmp28 * fv1;
  const Scalar _tmp134 = _tmp124 * _tmp129 + Scalar(1.0);
  const Scalar _tmp135 = _tmp129 * _tmp82;
  const Scalar _tmp136 = -_tmp105 * _tmp132 - Scalar(2.3544) * _tmp12 - _tmp18 * fv1;
  const Scalar _tmp137 = -_tmp107 * _tmp77 + _tmp131 * _tmp97;
  const Scalar _tmp138 = _tmp129 * _tmp97;
  const Scalar _tmp139 = _tmp119 * _tmp125;
  const Scalar _tmp140 = -_tmp120 * _tmp77 - _tmp123 * _tmp139 + _tmp80;
  const Scalar _tmp141 = _tmp126 * _tmp98 - _tmp77 * _tmp99 - _tmp87;
  const Scalar _tmp142 = std::asinh(
      _tmp122 * (_tmp105 * _tmp130 * (-_tmp128 * _tmp141 + _tmp129 * _tmp98) +
                 _tmp109 * _tmp130 * (_tmp114 * _tmp129 - _tmp127 * _tmp128) +
                 Scalar(1.0) * _tmp110 * (-_tmp128 * _tmp137 + _tmp138) +
                 Scalar(1.0) * _tmp118 * (-_tmp119 * _tmp129 - _tmp128 * _tmp140 + Scalar(1.0)) +
                 Scalar(1.0) * _tmp133 * (-_tmp129 + _tmp131 * _tmp81) +
                 Scalar(1.0) * _tmp136 * (-_tmp128 * _tmp134 + _tmp135)));
  const Scalar _tmp143 = Scalar(9.6622558468725703) * _tmp121;
  const Scalar _tmp144 = _tmp107 * _tmp110;
  const Scalar _tmp145 = _tmp118 * _tmp120;
  const Scalar _tmp146 =
      _tmp100 * _tmp106 * _tmp73 + _tmp116 * _tmp117 * _tmp73 - _tmp144 * _tmp76 - _tmp145 * _tmp76;
  const Scalar _tmp147 = Scalar(1.0) / (_tmp146);
  const Scalar _tmp148 = _tmp129 * _tmp133;
  const Scalar _tmp149 =
      std::asinh(_tmp147 * (_tmp106 * _tmp141 * _tmp81 + _tmp110 * _tmp137 * _tmp81 +
                            _tmp117 * _tmp127 * _tmp81 + _tmp118 * _tmp140 * _tmp81 -
                            _tmp123 * _tmp148 * _tmp81 + _tmp134 * _tmp136 * _tmp81));
  const Scalar _tmp150 = Scalar(9.6622558468725703) * _tmp146;
  const Scalar _tmp151 = _tmp106 * _tmp99 + _tmp115 * _tmp117 + _tmp144 + _tmp145;
  const Scalar _tmp152 = Scalar(1.0) / (_tmp151);
  const Scalar _tmp153 = std::asinh(_tmp152 * (-_tmp106 * _tmp125 * _tmp98 - _tmp110 * _tmp138 -
                                               _tmp114 * _tmp117 * _tmp125 + _tmp118 * _tmp139 -
                                               _tmp135 * _tmp136 + _tmp148));
  const Scalar _tmp154 = Scalar(9.6622558468725703) * _tmp151;

  // Output terms (1)
  Eigen::Matrix<Scalar, 4, 1> _res;

  _res(0, 0) =
      -_tmp31 *
          (Scalar(4.967784) * _tmp0 + std::cosh(Scalar(1.0) * _tmp30) -
           std::cosh(
               Scalar(0.1034955) * _tmp0 *
               (-_tmp30 * _tmp31 -
                Scalar(125.0) *
                    std::sqrt(Scalar(
                        std::pow(Scalar(1 - Scalar(0.0080000000000000002) * _tmp29), Scalar(2)) +
                        Scalar(0.77439999999999998) *
                            std::pow(Scalar(-Scalar(0.0090909090909090905) * _tmp19 - 1),
                                     Scalar(2))))))) +
      _tmp36 + position_vector(2, 0);
  _res(1, 0) =
      -_tmp143 *
          (Scalar(4.967784) * _tmp122 + std::cosh(Scalar(1.0) * _tmp142) -
           std::cosh(Scalar(0.1034955) * _tmp122 *
                     (-_tmp142 * _tmp143 -
                      Scalar(125.0) *
                          std::sqrt(Scalar(
                              Scalar(0.77439999999999998) *
                                  std::pow(Scalar(-Scalar(0.0090909090909090905) * _tmp52 - 1),
                                           Scalar(2)) +
                              std::pow(Scalar(-Scalar(0.0080000000000000002) * _tmp55 - 1),
                                       Scalar(2))))))) +
      _tmp59 + position_vector(2, 0);
  _res(2, 0) =
      -_tmp150 *
          (Scalar(4.967784) * _tmp147 + std::cosh(Scalar(1.0) * _tmp149) -
           std::cosh(
               Scalar(0.1034955) * _tmp147 *
               (-_tmp149 * _tmp150 -
                Scalar(125.0) * std::sqrt(Scalar(
                                    Scalar(0.77439999999999998) *
                                        std::pow(Scalar(1 - Scalar(0.0090909090909090905) * _tmp63),
                                                 Scalar(2)) +
                                    std::pow(Scalar(1 - Scalar(0.0080000000000000002) * _tmp66),
                                             Scalar(2))))))) +
      _tmp61 + position_vector(2, 0);
  _res(3, 0) =
      -_tmp154 *
          (Scalar(4.967784) * _tmp152 + std::cosh(Scalar(1.0) * _tmp153) -
           std::cosh(
               Scalar(0.1034955) * _tmp152 *
               (-_tmp153 * _tmp154 -
                Scalar(125.0) * std::sqrt(Scalar(
                                    Scalar(0.77439999999999998) *
                                        std::pow(Scalar(1 - Scalar(0.0090909090909090905) * _tmp44),
                                                 Scalar(2)) +
                                    std::pow(Scalar(-Scalar(0.0080000000000000002) * _tmp40 - 1),
                                             Scalar(2))))))) +
      _tmp50 + position_vector(2, 0);

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
