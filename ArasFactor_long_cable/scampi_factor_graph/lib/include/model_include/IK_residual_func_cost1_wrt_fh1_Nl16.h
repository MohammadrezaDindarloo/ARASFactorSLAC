// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

#include <sym/rot3.h>

namespace sym {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: IK_residual_func_cost1_wrt_fh1_Nl16
 *
 * Args:
 *     fh1: Scalar
 *     fv1: Scalar
 *     DeltaRot: Rot3
 *     position_vector: Matrix31
 *     Rot_init: Rot3
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix41
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 4, 1> IkResidualFuncCost1WrtFh1Nl16(
    const Scalar fh1, const Scalar fv1, const sym::Rot3<Scalar>& DeltaRot,
    const Eigen::Matrix<Scalar, 3, 1>& position_vector, const sym::Rot3<Scalar>& Rot_init,
    const Scalar epsilon) {
  // Total ops: 659

  // Unused inputs
  (void)epsilon;

  // Input arrays
  const Eigen::Matrix<Scalar, 4, 1>& _DeltaRot = DeltaRot.Data();
  const Eigen::Matrix<Scalar, 4, 1>& _Rot_init = Rot_init.Data();

  // Intermediate terms (213)
  const Scalar _tmp0 = Scalar(1.0) / (fh1);
  const Scalar _tmp1 = _DeltaRot[0] * _Rot_init[2] + _DeltaRot[1] * _Rot_init[3] -
                       _DeltaRot[2] * _Rot_init[0] + _DeltaRot[3] * _Rot_init[1];
  const Scalar _tmp2 = -2 * std::pow(_tmp1, Scalar(2));
  const Scalar _tmp3 = -_DeltaRot[0] * _Rot_init[1] + _DeltaRot[1] * _Rot_init[0] +
                       _DeltaRot[2] * _Rot_init[3] + _DeltaRot[3] * _Rot_init[2];
  const Scalar _tmp4 = -2 * std::pow(_tmp3, Scalar(2));
  const Scalar _tmp5 = Scalar(0.20999999999999999) * _tmp2 + Scalar(0.20999999999999999) * _tmp4 +
                       Scalar(0.20999999999999999);
  const Scalar _tmp6 = _DeltaRot[0] * _Rot_init[3] - _DeltaRot[1] * _Rot_init[2] +
                       _DeltaRot[2] * _Rot_init[1] + _DeltaRot[3] * _Rot_init[0];
  const Scalar _tmp7 = 2 * _tmp3 * _tmp6;
  const Scalar _tmp8 = -2 * _DeltaRot[0] * _Rot_init[0] - 2 * _DeltaRot[1] * _Rot_init[1] -
                       2 * _DeltaRot[2] * _Rot_init[2] + 2 * _DeltaRot[3] * _Rot_init[3];
  const Scalar _tmp9 = _tmp1 * _tmp8;
  const Scalar _tmp10 = _tmp7 + _tmp9;
  const Scalar _tmp11 = -Scalar(0.010999999999999999) * _tmp10;
  const Scalar _tmp12 = 2 * _tmp1;
  const Scalar _tmp13 = _tmp12 * _tmp6;
  const Scalar _tmp14 = _tmp3 * _tmp8;
  const Scalar _tmp15 = Scalar(0.20999999999999999) * _tmp13 - Scalar(0.20999999999999999) * _tmp14;
  const Scalar _tmp16 = _tmp11 + _tmp15;
  const Scalar _tmp17 = _tmp16 + _tmp5;
  const Scalar _tmp18 = _tmp17 + position_vector(0, 0);
  const Scalar _tmp19 = Scalar(0.20999999999999999) * _tmp13 + Scalar(0.20999999999999999) * _tmp14;
  const Scalar _tmp20 = 1 - 2 * std::pow(_tmp6, Scalar(2));
  const Scalar _tmp21 = Scalar(0.20999999999999999) * _tmp20 + Scalar(0.20999999999999999) * _tmp4;
  const Scalar _tmp22 = _tmp12 * _tmp3;
  const Scalar _tmp23 = _tmp6 * _tmp8;
  const Scalar _tmp24 = _tmp22 - _tmp23;
  const Scalar _tmp25 = -Scalar(0.010999999999999999) * _tmp24;
  const Scalar _tmp26 = _tmp21 + _tmp25;
  const Scalar _tmp27 = _tmp19 + _tmp26;
  const Scalar _tmp28 = _tmp27 + position_vector(1, 0);
  const Scalar _tmp29 = _tmp0 * fv1;
  const Scalar _tmp30 = std::asinh(_tmp29);
  const Scalar _tmp31 = Scalar(9.6622558468725703) * _tmp30;
  const Scalar _tmp32 =
      -Scalar(0.1034955) * _tmp31 * fh1 -
      Scalar(12.936937500000001) *
          std::sqrt(
              Scalar(std::pow(Scalar(1 - Scalar(0.0080000000000000002) * _tmp18), Scalar(2)) +
                     Scalar(0.77439999999999998) *
                         std::pow(Scalar(1 - Scalar(0.0090909090909090905) * _tmp28), Scalar(2))));
  const Scalar _tmp33 = _tmp0 * _tmp32;
  const Scalar _tmp34 = Scalar(1.0) * _tmp30;
  const Scalar _tmp35 = std::pow(fh1, Scalar(-2));
  const Scalar _tmp36 =
      std::pow(Scalar(_tmp35 * std::pow(fv1, Scalar(2)) + 1), Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp37 = -_tmp5;
  const Scalar _tmp38 = _tmp16 + _tmp37;
  const Scalar _tmp39 = _tmp38 + position_vector(0, 0);
  const Scalar _tmp40 = -_tmp19;
  const Scalar _tmp41 = _tmp26 + _tmp40;
  const Scalar _tmp42 = _tmp41 + position_vector(1, 0);
  const Scalar _tmp43 = _tmp28 + Scalar(-110.0);
  const Scalar _tmp44 = _tmp18 + Scalar(-125.0);
  const Scalar _tmp45 = std::pow(Scalar(std::pow(_tmp43, Scalar(2)) + std::pow(_tmp44, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp46 = _tmp44 * _tmp45;
  const Scalar _tmp47 = _tmp43 * _tmp45;
  const Scalar _tmp48 = _tmp17 * _tmp47 - _tmp27 * _tmp46;
  const Scalar _tmp49 = -_tmp21 + _tmp25;
  const Scalar _tmp50 = _tmp19 + _tmp49;
  const Scalar _tmp51 = _tmp50 + position_vector(1, 0);
  const Scalar _tmp52 = _tmp51 + Scalar(110.0);
  const Scalar _tmp53 = _tmp11 - _tmp15;
  const Scalar _tmp54 = _tmp5 + _tmp53;
  const Scalar _tmp55 = _tmp54 + position_vector(0, 0);
  const Scalar _tmp56 = _tmp55 + Scalar(-125.0);
  const Scalar _tmp57 = std::pow(Scalar(std::pow(_tmp52, Scalar(2)) + std::pow(_tmp56, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp58 = _tmp56 * _tmp57;
  const Scalar _tmp59 = _tmp52 * _tmp57;
  const Scalar _tmp60 = _tmp42 + Scalar(-110.0);
  const Scalar _tmp61 = _tmp39 + Scalar(125.0);
  const Scalar _tmp62 = Scalar(1.0) / (_tmp61);
  const Scalar _tmp63 = _tmp60 * _tmp62;
  const Scalar _tmp64 = _tmp58 * _tmp63 - _tmp59;
  const Scalar _tmp65 = _tmp40 + _tmp49;
  const Scalar _tmp66 = _tmp65 + position_vector(1, 0);
  const Scalar _tmp67 = _tmp66 + Scalar(110.0);
  const Scalar _tmp68 = _tmp37 + _tmp53;
  const Scalar _tmp69 = _tmp68 + position_vector(0, 0);
  const Scalar _tmp70 = _tmp69 + Scalar(125.0);
  const Scalar _tmp71 = std::pow(Scalar(std::pow(_tmp67, Scalar(2)) + std::pow(_tmp70, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp72 = _tmp70 * _tmp71;
  const Scalar _tmp73 = _tmp67 * _tmp71;
  const Scalar _tmp74 = Scalar(1.0) / (_tmp63 * _tmp72 - _tmp73);
  const Scalar _tmp75 =
      std::sqrt(Scalar(std::pow(_tmp60, Scalar(2)) + std::pow(_tmp61, Scalar(2))));
  const Scalar _tmp76 = Scalar(1.0) / (_tmp75);
  const Scalar _tmp77 = _tmp62 * _tmp75;
  const Scalar _tmp78 = _tmp77 * (_tmp38 * _tmp60 * _tmp76 - _tmp41 * _tmp61 * _tmp76);
  const Scalar _tmp79 = _tmp74 * (_tmp65 * _tmp72 - _tmp68 * _tmp73 + _tmp72 * _tmp78);
  const Scalar _tmp80 = _tmp50 * _tmp58 - _tmp54 * _tmp59 + _tmp58 * _tmp78 - _tmp64 * _tmp79;
  const Scalar _tmp81 = Scalar(1.0) / (_tmp80);
  const Scalar _tmp82 = Scalar(1.0) * _tmp81;
  const Scalar _tmp83 = _tmp64 * _tmp74;
  const Scalar _tmp84 = _tmp48 * _tmp77 * (_tmp58 * _tmp82 - _tmp72 * _tmp82 * _tmp83);
  const Scalar _tmp85 = Scalar(1.0) * _tmp38;
  const Scalar _tmp86 = -_tmp68 + _tmp85;
  const Scalar _tmp87 = Scalar(1.0) * _tmp41;
  const Scalar _tmp88 = -_tmp87;
  const Scalar _tmp89 = Scalar(1.0) / (_tmp65 + _tmp88);
  const Scalar _tmp90 = Scalar(1.0) * _tmp89;
  const Scalar _tmp91 = Scalar(0.20999999999999999) * _tmp7 - Scalar(0.20999999999999999) * _tmp9;
  const Scalar _tmp92 = -_tmp91;
  const Scalar _tmp93 =
      -Scalar(0.010999999999999999) * _tmp2 - Scalar(0.010999999999999999) * _tmp20;
  const Scalar _tmp94 = Scalar(0.20999999999999999) * _tmp22 + Scalar(0.20999999999999999) * _tmp23;
  const Scalar _tmp95 = _tmp93 - _tmp94;
  const Scalar _tmp96 = _tmp92 + _tmp95;
  const Scalar _tmp97 = _tmp93 + _tmp94;
  const Scalar _tmp98 = _tmp92 + _tmp97;
  const Scalar _tmp99 = _tmp72 * _tmp98;
  const Scalar _tmp100 = _tmp74 * (-_tmp63 * _tmp99 + _tmp73 * _tmp96);
  const Scalar _tmp101 = _tmp74 * (-_tmp72 * _tmp96 + _tmp99);
  const Scalar _tmp102 = _tmp100 * _tmp86 * _tmp90 - Scalar(1.0) * _tmp101;
  const Scalar _tmp103 = _tmp91 + _tmp95;
  const Scalar _tmp104 = _tmp58 * _tmp98;
  const Scalar _tmp105 = -_tmp100 * _tmp64 + _tmp103 * _tmp59 - _tmp104 * _tmp63;
  const Scalar _tmp106 = _tmp86 * _tmp89;
  const Scalar _tmp107 = -_tmp101 * _tmp64 - _tmp103 * _tmp58 + _tmp104 - _tmp105 * _tmp106;
  const Scalar _tmp108 = Scalar(1.0) / (_tmp107);
  const Scalar _tmp109 = _tmp108 * _tmp80;
  const Scalar _tmp110 = _tmp107 * _tmp81;
  const Scalar _tmp111 = _tmp110 * (-_tmp102 * _tmp109 - Scalar(1.0) * _tmp79);
  const Scalar _tmp112 = _tmp102 + _tmp111;
  const Scalar _tmp113 = _tmp108 * _tmp64;
  const Scalar _tmp114 = _tmp74 * (-_tmp112 * _tmp113 + Scalar(1.0));
  const Scalar _tmp115 = _tmp108 * _tmp112;
  const Scalar _tmp116 = _tmp47 * _tmp77 * (_tmp114 * _tmp72 + _tmp115 * _tmp58);
  const Scalar _tmp117 = Scalar(19.620000000000001) - fv1;
  const Scalar _tmp118 = _tmp106 * _tmp87 + _tmp85;
  const Scalar _tmp119 = 0;
  const Scalar _tmp120 = _tmp113 * _tmp119 * _tmp74;
  const Scalar _tmp121 = _tmp108 * _tmp119;
  const Scalar _tmp122 = _tmp100 * _tmp63 + _tmp63 * _tmp98;
  const Scalar _tmp123 = _tmp101 * _tmp63 - _tmp106 * _tmp122 - _tmp98;
  const Scalar _tmp124 = _tmp110 * (-_tmp109 * _tmp123 + _tmp63 * _tmp79 - _tmp78);
  const Scalar _tmp125 = _tmp123 + _tmp124;
  const Scalar _tmp126 = _tmp74 * (-_tmp113 * _tmp125 - _tmp63);
  const Scalar _tmp127 = _tmp108 * _tmp125;
  const Scalar _tmp128 = _tmp46 * _tmp77 * (_tmp126 * _tmp72 + _tmp127 * _tmp58 + Scalar(1.0));
  const Scalar _tmp129 = -_tmp116 * fh1 -
                         _tmp117 * _tmp77 * (-_tmp120 * _tmp72 + _tmp121 * _tmp58) - _tmp128 * fh1 -
                         _tmp84 * fh1;
  const Scalar _tmp130 = Scalar(1.0) / (_tmp129);
  const Scalar _tmp131 = _tmp50 + _tmp88;
  const Scalar _tmp132 = _tmp106 * _tmp131;
  const Scalar _tmp133 = Scalar(1.0) / (-_tmp132 - _tmp54 + _tmp85);
  const Scalar _tmp134 = _tmp131 * _tmp133;
  const Scalar _tmp135 = _tmp105 * _tmp108;
  const Scalar _tmp136 = _tmp122 + _tmp124 * _tmp134 - _tmp125 * _tmp135;
  const Scalar _tmp137 = Scalar(1.0) * _tmp133;
  const Scalar _tmp138 = Scalar(1.0) * _tmp46 * (_tmp124 * _tmp137 - _tmp136 * _tmp90);
  const Scalar _tmp139 = _tmp91 + _tmp97;
  const Scalar _tmp140 = _tmp139 * fh1;
  const Scalar _tmp141 = -_tmp140 * _tmp47 - Scalar(2.3544) * _tmp24 - _tmp27 * fv1;
  const Scalar _tmp142 = _tmp132 * _tmp137 + Scalar(1.0);
  const Scalar _tmp143 = _tmp106 * _tmp137;
  const Scalar _tmp144 = -Scalar(1.0) * _tmp142 * _tmp90 + Scalar(1.0) * _tmp143;
  const Scalar _tmp145 = -Scalar(1.0) * _tmp100 + _tmp111 * _tmp134 - _tmp112 * _tmp135;
  const Scalar _tmp146 = Scalar(1.0) * _tmp47 * (_tmp111 * _tmp137 - _tmp145 * _tmp90);
  const Scalar _tmp147 = Scalar(2.3544) * _tmp10 + _tmp140 * _tmp46 + _tmp17 * fv1;
  const Scalar _tmp148 = _tmp131 * _tmp137;
  const Scalar _tmp149 = _tmp148 * _tmp89;
  const Scalar _tmp150 = -Scalar(1.0) * _tmp137 + Scalar(1.0) * _tmp149;
  const Scalar _tmp151 = -_tmp105 * _tmp82 + _tmp110 * _tmp148;
  const Scalar _tmp152 = _tmp110 * _tmp137;
  const Scalar _tmp153 = Scalar(1.0) * _tmp48;
  const Scalar _tmp154 = _tmp153 * (-_tmp151 * _tmp90 + _tmp152);
  const Scalar _tmp155 = _tmp118 * _tmp133;
  const Scalar _tmp156 = -_tmp119 * _tmp135 - _tmp131 * _tmp155 + _tmp88;
  const Scalar _tmp157 =
      Scalar(1.0) * _tmp117 * (-_tmp118 * _tmp137 - _tmp156 * _tmp90 + Scalar(1.0)) +
      _tmp138 * fh1 + _tmp141 * _tmp144 + _tmp146 * fh1 + _tmp147 * _tmp150 + _tmp154 * fh1;
  const Scalar _tmp158 = std::asinh(_tmp130 * _tmp157);
  const Scalar _tmp159 = Scalar(9.6622558468725703) * _tmp158;
  const Scalar _tmp160 =
      -_tmp129 * _tmp159 -
      Scalar(125.0) *
          std::sqrt(
              Scalar(Scalar(0.77439999999999998) *
                         std::pow(Scalar(1 - Scalar(0.0090909090909090905) * _tmp42), Scalar(2)) +
                     std::pow(Scalar(-Scalar(0.0080000000000000002) * _tmp39 - 1), Scalar(2))));
  const Scalar _tmp161 = Scalar(0.1034955) * _tmp130;
  const Scalar _tmp162 = _tmp160 * _tmp161;
  const Scalar _tmp163 = Scalar(1.0) * _tmp158;
  const Scalar _tmp164 = -_tmp116 - _tmp128 - _tmp84;
  const Scalar _tmp165 = std::pow(_tmp129, Scalar(-2));
  const Scalar _tmp166 = _tmp164 * _tmp165;
  const Scalar _tmp167 = Scalar(9.6622558468725703) * _tmp129;
  const Scalar _tmp168 = _tmp139 * _tmp47;
  const Scalar _tmp169 = _tmp139 * _tmp46;
  const Scalar _tmp170 =
      (_tmp130 * (_tmp138 - _tmp144 * _tmp168 + _tmp146 + _tmp150 * _tmp169 + _tmp154) -
       _tmp157 * _tmp166) /
      std::sqrt(Scalar(std::pow(_tmp157, Scalar(2)) * _tmp165 + 1));
  const Scalar _tmp171 = _tmp114 * _tmp47;
  const Scalar _tmp172 = _tmp126 * _tmp46;
  const Scalar _tmp173 = _tmp153 * _tmp81;
  const Scalar _tmp174 = _tmp173 * fh1;
  const Scalar _tmp175 = -_tmp117 * _tmp120 + _tmp171 * fh1 + _tmp172 * fh1 - _tmp174 * _tmp83;
  const Scalar _tmp176 = Scalar(1.0) / (_tmp175);
  const Scalar _tmp177 = _tmp142 * _tmp89;
  const Scalar _tmp178 = _tmp136 * _tmp46 * _tmp89;
  const Scalar _tmp179 = _tmp137 * _tmp147;
  const Scalar _tmp180 = _tmp151 * _tmp48 * _tmp89;
  const Scalar _tmp181 = _tmp145 * _tmp47 * _tmp89;
  const Scalar _tmp182 = _tmp117 * _tmp156 * _tmp89 - _tmp131 * _tmp179 * _tmp89 +
                         _tmp141 * _tmp177 + _tmp178 * fh1 + _tmp180 * fh1 + _tmp181 * fh1;
  const Scalar _tmp183 = std::asinh(_tmp176 * _tmp182);
  const Scalar _tmp184 = Scalar(9.6622558468725703) * _tmp175;
  const Scalar _tmp185 =
      -_tmp183 * _tmp184 -
      Scalar(125.0) *
          std::sqrt(
              Scalar(Scalar(0.77439999999999998) *
                         std::pow(Scalar(-Scalar(0.0090909090909090905) * _tmp66 - 1), Scalar(2)) +
                     std::pow(Scalar(-Scalar(0.0080000000000000002) * _tmp69 - 1), Scalar(2))));
  const Scalar _tmp186 = Scalar(0.1034955) * _tmp176;
  const Scalar _tmp187 = _tmp185 * _tmp186;
  const Scalar _tmp188 = Scalar(1.0) * _tmp183;
  const Scalar _tmp189 = _tmp171 + _tmp172 - _tmp173 * _tmp83;
  const Scalar _tmp190 = Scalar(9.6622558468725703) * _tmp189;
  const Scalar _tmp191 = std::pow(_tmp175, Scalar(-2));
  const Scalar _tmp192 = _tmp189 * _tmp191;
  const Scalar _tmp193 =
      (_tmp176 * (-_tmp149 * _tmp169 - _tmp168 * _tmp177 + _tmp178 + _tmp180 + _tmp181) -
       _tmp182 * _tmp192) /
      std::sqrt(Scalar(std::pow(_tmp182, Scalar(2)) * _tmp191 + 1));
  const Scalar _tmp194 = _tmp127 * _tmp46;
  const Scalar _tmp195 = _tmp115 * _tmp47;
  const Scalar _tmp196 = _tmp117 * _tmp121 + _tmp174 + _tmp194 * fh1 + _tmp195 * fh1;
  const Scalar _tmp197 = Scalar(1.0) / (_tmp196);
  const Scalar _tmp198 = _tmp124 * _tmp133 * _tmp46;
  const Scalar _tmp199 = _tmp111 * _tmp133 * _tmp47;
  const Scalar _tmp200 = _tmp152 * _tmp48;
  const Scalar _tmp201 = _tmp117 * _tmp155 - _tmp141 * _tmp143 + _tmp179 - _tmp198 * fh1 -
                         _tmp199 * fh1 - _tmp200 * fh1;
  const Scalar _tmp202 = std::asinh(_tmp197 * _tmp201);
  const Scalar _tmp203 = Scalar(9.6622558468725703) * _tmp196;
  const Scalar _tmp204 =
      -_tmp202 * _tmp203 -
      Scalar(125.0) *
          std::sqrt(
              Scalar(std::pow(Scalar(1 - Scalar(0.0080000000000000002) * _tmp55), Scalar(2)) +
                     Scalar(0.77439999999999998) *
                         std::pow(Scalar(-Scalar(0.0090909090909090905) * _tmp51 - 1), Scalar(2))));
  const Scalar _tmp205 = std::pow(_tmp196, Scalar(-2));
  const Scalar _tmp206 = _tmp173 + _tmp194 + _tmp195;
  const Scalar _tmp207 = _tmp205 * _tmp206;
  const Scalar _tmp208 =
      (_tmp197 * (_tmp137 * _tmp169 + _tmp143 * _tmp168 - _tmp198 - _tmp199 - _tmp200) -
       _tmp201 * _tmp207) /
      std::sqrt(Scalar(std::pow(_tmp201, Scalar(2)) * _tmp205 + 1));
  const Scalar _tmp209 = Scalar(9.6622558468725703) * _tmp206;
  const Scalar _tmp210 = Scalar(0.1034955) * _tmp197;
  const Scalar _tmp211 = _tmp204 * _tmp210;
  const Scalar _tmp212 = Scalar(1.0) * _tmp202;

  // Output terms (1)
  Eigen::Matrix<Scalar, 4, 1> _res;

  _res(0, 0) =
      -Scalar(48.000000000000007) * _tmp0 -
      Scalar(9.6622558468725703) * fh1 *
          (-Scalar(1.0) * _tmp35 * _tmp36 * fv1 * std::sinh(_tmp34) - Scalar(4.967784) * _tmp35 -
           (Scalar(0.1034955) * _tmp0 * (Scalar(9.6622558468725703) * _tmp29 * _tmp36 - _tmp31) -
            _tmp32 * _tmp35) *
               std::sinh(_tmp33)) +
      Scalar(9.6622558468725703) * std::cosh(_tmp33) -
      Scalar(9.6622558468725703) * std::cosh(_tmp34);
  _res(1, 0) = -Scalar(9.6622558468725703) * _tmp164 *
                   (Scalar(4.967784) * _tmp130 - std::cosh(_tmp162) + std::cosh(_tmp163)) -
               _tmp167 * (-Scalar(4.967784) * _tmp166 + Scalar(1.0) * _tmp170 * std::sinh(_tmp163) -
                          (-Scalar(0.1034955) * _tmp160 * _tmp166 +
                           _tmp161 * (-_tmp159 * _tmp164 - _tmp167 * _tmp170)) *
                              std::sinh(_tmp162));
  _res(2, 0) =
      -_tmp184 * (-Scalar(4.967784) * _tmp192 + Scalar(1.0) * _tmp193 * std::sinh(_tmp188) -
                  (-Scalar(0.1034955) * _tmp185 * _tmp192 +
                   _tmp186 * (-_tmp183 * _tmp190 - _tmp184 * _tmp193)) *
                      std::sinh(_tmp187)) -
      _tmp190 * (Scalar(4.967784) * _tmp176 - std::cosh(_tmp187) + std::cosh(_tmp188));
  _res(3, 0) =
      -_tmp203 * (-Scalar(4.967784) * _tmp207 + Scalar(1.0) * _tmp208 * std::sinh(_tmp212) -
                  (-Scalar(0.1034955) * _tmp204 * _tmp207 +
                   _tmp210 * (-_tmp202 * _tmp209 - _tmp203 * _tmp208)) *
                      std::sinh(_tmp211)) -
      _tmp209 * (Scalar(4.967784) * _tmp197 - std::cosh(_tmp211) + std::cosh(_tmp212));

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
