// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

#include <sym/rot3.h>

namespace sym {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: IK_residual_func_cost1_wrt_fv1_Nl14
 *
 * Args:
 *     fh1: Scalar
 *     fv1: Scalar
 *     DeltaRot: Rot3
 *     position_vector: Matrix31
 *     Rot_init: Rot3
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix41
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 4, 1> IkResidualFuncCost1WrtFv1Nl14(
    const Scalar fh1, const Scalar fv1, const sym::Rot3<Scalar>& DeltaRot,
    const Eigen::Matrix<Scalar, 3, 1>& position_vector, const sym::Rot3<Scalar>& Rot_init,
    const Scalar epsilon) {
  // Total ops: 607

  // Unused inputs
  (void)epsilon;

  // Input arrays
  const Eigen::Matrix<Scalar, 4, 1>& _DeltaRot = DeltaRot.Data();
  const Eigen::Matrix<Scalar, 4, 1>& _Rot_init = Rot_init.Data();

  // Intermediate terms (192)
  const Scalar _tmp0 = Scalar(1.0) / (fh1);
  const Scalar _tmp1 = std::asinh(_tmp0 * fv1);
  const Scalar _tmp2 = Scalar(1.0) * _tmp0 /
                       std::sqrt(Scalar(1 + std::pow(fv1, Scalar(2)) / std::pow(fh1, Scalar(2))));
  const Scalar _tmp3 = -_DeltaRot[0] * _Rot_init[1] + _DeltaRot[1] * _Rot_init[0] +
                       _DeltaRot[2] * _Rot_init[3] + _DeltaRot[3] * _Rot_init[2];
  const Scalar _tmp4 = -2 * std::pow(_tmp3, Scalar(2));
  const Scalar _tmp5 = _DeltaRot[0] * _Rot_init[2] + _DeltaRot[1] * _Rot_init[3] -
                       _DeltaRot[2] * _Rot_init[0] + _DeltaRot[3] * _Rot_init[1];
  const Scalar _tmp6 = 1 - 2 * std::pow(_tmp5, Scalar(2));
  const Scalar _tmp7 = Scalar(0.20999999999999999) * _tmp4 + Scalar(0.20999999999999999) * _tmp6;
  const Scalar _tmp8 = _DeltaRot[0] * _Rot_init[3] - _DeltaRot[1] * _Rot_init[2] +
                       _DeltaRot[2] * _Rot_init[1] + _DeltaRot[3] * _Rot_init[0];
  const Scalar _tmp9 = 2 * _tmp3;
  const Scalar _tmp10 = _tmp8 * _tmp9;
  const Scalar _tmp11 = -2 * _DeltaRot[0] * _Rot_init[0] - 2 * _DeltaRot[1] * _Rot_init[1] -
                        2 * _DeltaRot[2] * _Rot_init[2] + 2 * _DeltaRot[3] * _Rot_init[3];
  const Scalar _tmp12 = _tmp11 * _tmp5;
  const Scalar _tmp13 = _tmp10 + _tmp12;
  const Scalar _tmp14 = -Scalar(0.010999999999999999) * _tmp13;
  const Scalar _tmp15 = 2 * _tmp5 * _tmp8;
  const Scalar _tmp16 = _tmp11 * _tmp3;
  const Scalar _tmp17 = Scalar(0.20999999999999999) * _tmp15 - Scalar(0.20999999999999999) * _tmp16;
  const Scalar _tmp18 = _tmp14 + _tmp17;
  const Scalar _tmp19 = _tmp18 + _tmp7;
  const Scalar _tmp20 = _tmp19 + position_vector(0, 0);
  const Scalar _tmp21 = Scalar(0.20999999999999999) * _tmp15 + Scalar(0.20999999999999999) * _tmp16;
  const Scalar _tmp22 = _tmp5 * _tmp9;
  const Scalar _tmp23 = _tmp11 * _tmp8;
  const Scalar _tmp24 = _tmp22 - _tmp23;
  const Scalar _tmp25 = Scalar(0.010999999999999999) * _tmp24;
  const Scalar _tmp26 = -_tmp25;
  const Scalar _tmp27 = -2 * std::pow(_tmp8, Scalar(2));
  const Scalar _tmp28 = Scalar(0.20999999999999999) * _tmp27 + Scalar(0.20999999999999999) * _tmp4 +
                        Scalar(0.20999999999999999);
  const Scalar _tmp29 = _tmp26 + _tmp28;
  const Scalar _tmp30 = _tmp21 + _tmp29;
  const Scalar _tmp31 = _tmp30 + position_vector(1, 0);
  const Scalar _tmp32 = Scalar(9.6622558468725703) * fh1;
  const Scalar _tmp33 = _tmp31 + Scalar(-110.0);
  const Scalar _tmp34 = _tmp20 + Scalar(-125.0);
  const Scalar _tmp35 = std::pow(Scalar(std::pow(_tmp33, Scalar(2)) + std::pow(_tmp34, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp36 = _tmp33 * _tmp35;
  const Scalar _tmp37 = Scalar(0.20999999999999999) * _tmp22 + Scalar(0.20999999999999999) * _tmp23;
  const Scalar _tmp38 =
      -Scalar(0.010999999999999999) * _tmp27 - Scalar(0.010999999999999999) * _tmp6;
  const Scalar _tmp39 = Scalar(0.20999999999999999) * _tmp10 - Scalar(0.20999999999999999) * _tmp12;
  const Scalar _tmp40 = _tmp38 + _tmp39;
  const Scalar _tmp41 = fh1 * (_tmp37 + _tmp40);
  const Scalar _tmp42 = -Scalar(2.3544) * _tmp24 - _tmp30 * fv1 - _tmp36 * _tmp41;
  const Scalar _tmp43 = -_tmp7;
  const Scalar _tmp44 = _tmp18 + _tmp43;
  const Scalar _tmp45 = _tmp14 - _tmp17;
  const Scalar _tmp46 = _tmp45 + _tmp7;
  const Scalar _tmp47 = Scalar(1.0) * _tmp46;
  const Scalar _tmp48 = -_tmp28;
  const Scalar _tmp49 = _tmp21 + _tmp26 + _tmp48;
  const Scalar _tmp50 = Scalar(1.0) * _tmp49;
  const Scalar _tmp51 = -_tmp50;
  const Scalar _tmp52 = -_tmp21;
  const Scalar _tmp53 = _tmp29 + _tmp52;
  const Scalar _tmp54 = _tmp51 + _tmp53;
  const Scalar _tmp55 = _tmp48 + _tmp52;
  const Scalar _tmp56 = _tmp26 + _tmp55;
  const Scalar _tmp57 = Scalar(1.0) / (_tmp51 + _tmp56);
  const Scalar _tmp58 = _tmp43 + _tmp45;
  const Scalar _tmp59 = _tmp57 * (_tmp47 - _tmp58);
  const Scalar _tmp60 = _tmp54 * _tmp59;
  const Scalar _tmp61 = Scalar(1.0) / (-_tmp44 + _tmp47 - _tmp60);
  const Scalar _tmp62 = Scalar(1.0) * _tmp61;
  const Scalar _tmp63 = _tmp60 * _tmp62 + Scalar(1.0);
  const Scalar _tmp64 = Scalar(1.0) * _tmp57;
  const Scalar _tmp65 = _tmp59 * _tmp62;
  const Scalar _tmp66 = -Scalar(1.0) * _tmp63 * _tmp64 + Scalar(1.0) * _tmp65;
  const Scalar _tmp67 = _tmp34 * _tmp35;
  const Scalar _tmp68 = Scalar(2.3544) * _tmp13 + _tmp19 * fv1 + _tmp41 * _tmp67;
  const Scalar _tmp69 = _tmp54 * _tmp57;
  const Scalar _tmp70 = Scalar(1.0) * _tmp62 * _tmp69 - Scalar(1.0) * _tmp62;
  const Scalar _tmp71 = Scalar(19.620000000000001) - fv1;
  const Scalar _tmp72 = _tmp47 + _tmp50 * _tmp59;
  const Scalar _tmp73 = _tmp38 - _tmp39;
  const Scalar _tmp74 = _tmp37 + _tmp73;
  const Scalar _tmp75 = _tmp53 + position_vector(1, 0);
  const Scalar _tmp76 = _tmp75 + Scalar(-110.0);
  const Scalar _tmp77 = _tmp44 + position_vector(0, 0);
  const Scalar _tmp78 = _tmp77 + Scalar(125.0);
  const Scalar _tmp79 = std::pow(Scalar(std::pow(_tmp76, Scalar(2)) + std::pow(_tmp78, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp80 = _tmp76 * _tmp79;
  const Scalar _tmp81 = -_tmp37;
  const Scalar _tmp82 = _tmp73 + _tmp81;
  const Scalar _tmp83 = _tmp56 + position_vector(1, 0);
  const Scalar _tmp84 = _tmp83 + Scalar(110.0);
  const Scalar _tmp85 = _tmp58 + position_vector(0, 0);
  const Scalar _tmp86 = _tmp85 + Scalar(125.0);
  const Scalar _tmp87 = std::pow(Scalar(std::pow(_tmp84, Scalar(2)) + std::pow(_tmp86, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp88 = _tmp84 * _tmp87;
  const Scalar _tmp89 = _tmp40 + _tmp81;
  const Scalar _tmp90 = _tmp46 + position_vector(0, 0);
  const Scalar _tmp91 = _tmp90 + Scalar(-125.0);
  const Scalar _tmp92 = Scalar(1.0) / (_tmp91);
  const Scalar _tmp93 = _tmp49 + position_vector(1, 0);
  const Scalar _tmp94 = _tmp93 + Scalar(110.0);
  const Scalar _tmp95 = _tmp92 * _tmp94;
  const Scalar _tmp96 = _tmp89 * _tmp95;
  const Scalar _tmp97 = _tmp86 * _tmp87;
  const Scalar _tmp98 = _tmp82 * _tmp88 - _tmp96 * _tmp97;
  const Scalar _tmp99 = Scalar(1.0) / (-_tmp88 + _tmp95 * _tmp97);
  const Scalar _tmp100 = _tmp78 * _tmp79;
  const Scalar _tmp101 = _tmp100 * _tmp95 - _tmp80;
  const Scalar _tmp102 = _tmp101 * _tmp99;
  const Scalar _tmp103 = -_tmp100 * _tmp96 - _tmp102 * _tmp98 + _tmp74 * _tmp80;
  const Scalar _tmp104 = -_tmp82 * _tmp97 + _tmp89 * _tmp97;
  const Scalar _tmp105 =
      -_tmp100 * _tmp74 + _tmp100 * _tmp89 - _tmp102 * _tmp104 - _tmp103 * _tmp59;
  const Scalar _tmp106 = Scalar(1.0) / (_tmp105);
  const Scalar _tmp107 = 0;
  const Scalar _tmp108 = _tmp61 * _tmp72;
  const Scalar _tmp109 = _tmp57 * (-_tmp103 * _tmp107 - _tmp108 * _tmp54 + _tmp51);
  const Scalar _tmp110 = -Scalar(1.0) * _tmp109 - Scalar(1.0) * _tmp62 * _tmp72 + Scalar(1.0);
  const Scalar _tmp111 =
      std::sqrt(Scalar(std::pow(_tmp91, Scalar(2)) + std::pow(_tmp94, Scalar(2))));
  const Scalar _tmp112 = Scalar(1.0) / (_tmp111);
  const Scalar _tmp113 = _tmp111 * _tmp92;
  const Scalar _tmp114 = _tmp113 * (_tmp112 * _tmp46 * _tmp94 - _tmp112 * _tmp49 * _tmp91);
  const Scalar _tmp115 = _tmp114 * _tmp97 + _tmp56 * _tmp97 - _tmp58 * _tmp88;
  const Scalar _tmp116 = Scalar(1.0) * _tmp99;
  const Scalar _tmp117 = _tmp116 * _tmp98;
  const Scalar _tmp118 = -_tmp104 * _tmp116 + _tmp117 * _tmp59;
  const Scalar _tmp119 = _tmp100 * _tmp114 + _tmp100 * _tmp53 - _tmp102 * _tmp115 - _tmp44 * _tmp80;
  const Scalar _tmp120 = _tmp106 * _tmp119;
  const Scalar _tmp121 = Scalar(1.0) / (_tmp119);
  const Scalar _tmp122 = _tmp105 * _tmp121;
  const Scalar _tmp123 = _tmp122 * (-_tmp115 * _tmp116 - _tmp118 * _tmp120);
  const Scalar _tmp124 = _tmp118 + _tmp123;
  const Scalar _tmp125 = _tmp103 * _tmp106;
  const Scalar _tmp126 = _tmp54 * _tmp61;
  const Scalar _tmp127 = -_tmp117 + _tmp123 * _tmp126 - _tmp124 * _tmp125;
  const Scalar _tmp128 = _tmp36 * fh1;
  const Scalar _tmp129 = _tmp95 * _tmp99;
  const Scalar _tmp130 = _tmp129 * _tmp98 + _tmp96;
  const Scalar _tmp131 = _tmp104 * _tmp129 - _tmp130 * _tmp59 - _tmp89;
  const Scalar _tmp132 = _tmp122 * (-_tmp114 + _tmp115 * _tmp129 - _tmp120 * _tmp131);
  const Scalar _tmp133 = _tmp131 + _tmp132;
  const Scalar _tmp134 = -_tmp125 * _tmp133 + _tmp126 * _tmp132 + _tmp130;
  const Scalar _tmp135 = _tmp67 * fh1;
  const Scalar _tmp136 = _tmp122 * _tmp62;
  const Scalar _tmp137 = Scalar(1.0) * _tmp121;
  const Scalar _tmp138 = -_tmp103 * _tmp137 + _tmp136 * _tmp54;
  const Scalar _tmp139 = fh1 * (_tmp19 * _tmp36 - _tmp30 * _tmp67);
  const Scalar _tmp140 =
      _tmp110 * _tmp71 + Scalar(1.0) * _tmp128 * (_tmp123 * _tmp62 - _tmp127 * _tmp64) +
      Scalar(1.0) * _tmp135 * (_tmp132 * _tmp62 - _tmp134 * _tmp64) +
      Scalar(1.0) * _tmp139 * (_tmp136 - _tmp138 * _tmp64) + _tmp42 * _tmp66 + _tmp68 * _tmp70;
  const Scalar _tmp141 = _tmp102 * _tmp97;
  const Scalar _tmp142 = _tmp113 * (_tmp100 * _tmp107 - _tmp107 * _tmp141);
  const Scalar _tmp143 = _tmp101 * _tmp106;
  const Scalar _tmp144 = -_tmp124 * _tmp143 + Scalar(1.0);
  const Scalar _tmp145 = _tmp97 * _tmp99;
  const Scalar _tmp146 = _tmp100 * _tmp106;
  const Scalar _tmp147 = -_tmp133 * _tmp143 - _tmp95;
  const Scalar _tmp148 = -_tmp113 * _tmp128 * (_tmp124 * _tmp146 + _tmp144 * _tmp145) -
                         _tmp113 * _tmp135 * (_tmp133 * _tmp146 + _tmp145 * _tmp147 + Scalar(1.0)) -
                         _tmp113 * _tmp139 * (_tmp100 * _tmp137 - _tmp137 * _tmp141) -
                         _tmp142 * _tmp71;
  const Scalar _tmp149 = Scalar(1.0) / (_tmp148);
  const Scalar _tmp150 = std::asinh(_tmp140 * _tmp149);
  const Scalar _tmp151 = Scalar(9.6622558468725703) * _tmp148;
  const Scalar _tmp152 =
      -_tmp150 * _tmp151 -
      Scalar(125.0) *
          std::sqrt(
              Scalar(std::pow(Scalar(1 - Scalar(0.0080000000000000002) * _tmp90), Scalar(2)) +
                     Scalar(0.77439999999999998) *
                         std::pow(Scalar(-Scalar(0.0090909090909090905) * _tmp93 - 1), Scalar(2))));
  const Scalar _tmp153 = Scalar(0.1034955) * _tmp149;
  const Scalar _tmp154 = _tmp152 * _tmp153;
  const Scalar _tmp155 = std::pow(_tmp148, Scalar(-2));
  const Scalar _tmp156 = _tmp142 * _tmp155;
  const Scalar _tmp157 = _tmp25 + _tmp55;
  const Scalar _tmp158 =
      (-_tmp140 * _tmp156 + _tmp149 * (-_tmp110 + _tmp157 * _tmp66 + _tmp19 * _tmp70)) /
      std::sqrt(Scalar(std::pow(_tmp140, Scalar(2)) * _tmp155 + 1));
  const Scalar _tmp159 = Scalar(9.6622558468725703) * _tmp142;
  const Scalar _tmp160 = Scalar(1.0) * _tmp150;
  const Scalar _tmp161 = _tmp57 * _tmp63;
  const Scalar _tmp162 = _tmp62 * _tmp68;
  const Scalar _tmp163 = _tmp109 * _tmp71 + _tmp127 * _tmp128 * _tmp57 +
                         _tmp134 * _tmp135 * _tmp57 + _tmp138 * _tmp139 * _tmp57 +
                         _tmp161 * _tmp42 - _tmp162 * _tmp69;
  const Scalar _tmp164 = _tmp137 * _tmp139;
  const Scalar _tmp165 = _tmp107 * _tmp71;
  const Scalar _tmp166 = -_tmp102 * _tmp164 - _tmp102 * _tmp165 + _tmp128 * _tmp144 * _tmp99 +
                         _tmp135 * _tmp147 * _tmp99;
  const Scalar _tmp167 = Scalar(1.0) / (_tmp166);
  const Scalar _tmp168 = std::asinh(_tmp163 * _tmp167);
  const Scalar _tmp169 = Scalar(9.6622558468725703) * _tmp166;
  const Scalar _tmp170 =
      -_tmp168 * _tmp169 -
      Scalar(125.0) *
          std::sqrt(
              Scalar(Scalar(0.77439999999999998) *
                         std::pow(Scalar(-Scalar(0.0090909090909090905) * _tmp83 - 1), Scalar(2)) +
                     std::pow(Scalar(-Scalar(0.0080000000000000002) * _tmp85 - 1), Scalar(2))));
  const Scalar _tmp171 = Scalar(0.1034955) * _tmp167;
  const Scalar _tmp172 = _tmp170 * _tmp171;
  const Scalar _tmp173 = Scalar(1.0) * _tmp168;
  const Scalar _tmp174 = Scalar(9.6622558468725703) * _tmp107;
  const Scalar _tmp175 = _tmp102 * _tmp174;
  const Scalar _tmp176 = std::pow(_tmp166, Scalar(-2));
  const Scalar _tmp177 = _tmp102 * _tmp107 * _tmp176;
  const Scalar _tmp178 = _tmp19 * _tmp62;
  const Scalar _tmp179 =
      (-_tmp163 * _tmp177 + _tmp167 * (-_tmp109 + _tmp157 * _tmp161 - _tmp178 * _tmp69)) /
      std::sqrt(Scalar(std::pow(_tmp163, Scalar(2)) * _tmp176 + 1));
  const Scalar _tmp180 = _tmp108 * _tmp71 - _tmp123 * _tmp128 * _tmp61 -
                         _tmp132 * _tmp135 * _tmp61 - _tmp136 * _tmp139 + _tmp162 - _tmp42 * _tmp65;
  const Scalar _tmp181 =
      _tmp106 * _tmp124 * _tmp128 + _tmp106 * _tmp133 * _tmp135 + _tmp164 + _tmp165;
  const Scalar _tmp182 = Scalar(1.0) / (_tmp181);
  const Scalar _tmp183 = std::asinh(_tmp180 * _tmp182);
  const Scalar _tmp184 = Scalar(9.6622558468725703) * _tmp181;
  const Scalar _tmp185 =
      -_tmp183 * _tmp184 -
      Scalar(125.0) *
          std::sqrt(
              Scalar(Scalar(0.77439999999999998) *
                         std::pow(Scalar(1 - Scalar(0.0090909090909090905) * _tmp75), Scalar(2)) +
                     std::pow(Scalar(-Scalar(0.0080000000000000002) * _tmp77 - 1), Scalar(2))));
  const Scalar _tmp186 = std::pow(_tmp181, Scalar(-2));
  const Scalar _tmp187 = _tmp107 * _tmp186;
  const Scalar _tmp188 = (_tmp180 * _tmp187 + _tmp182 * (-_tmp108 - _tmp157 * _tmp65 + _tmp178)) /
                         std::sqrt(Scalar(std::pow(_tmp180, Scalar(2)) * _tmp186 + 1));
  const Scalar _tmp189 = Scalar(0.1034955) * _tmp182;
  const Scalar _tmp190 = _tmp185 * _tmp189;
  const Scalar _tmp191 = Scalar(1.0) * _tmp183;

  // Output terms (1)
  Eigen::Matrix<Scalar, 4, 1> _res;

  _res(0, 0) =
      -_tmp32 *
      (_tmp2 * std::sinh(Scalar(1.0) * _tmp1) +
       _tmp2 * std::sinh(Scalar(0.1034955) * _tmp0 *
                         (-_tmp1 * _tmp32 -
                          Scalar(125.0) *
                              std::sqrt(Scalar(
                                  std::pow(Scalar(1 - Scalar(0.0080000000000000002) * _tmp20),
                                           Scalar(2)) +
                                  Scalar(0.77439999999999998) *
                                      std::pow(Scalar(1 - Scalar(0.0090909090909090905) * _tmp31),
                                               Scalar(2)))))));
  _res(1, 0) =
      -_tmp151 * (-Scalar(4.967784) * _tmp156 + Scalar(1.0) * _tmp158 * std::sinh(_tmp160) -
                  (-Scalar(0.1034955) * _tmp152 * _tmp156 +
                   _tmp153 * (-_tmp150 * _tmp159 - _tmp151 * _tmp158)) *
                      std::sinh(_tmp154)) -
      _tmp159 * (Scalar(4.967784) * _tmp149 - std::cosh(_tmp154) + std::cosh(_tmp160));
  _res(2, 0) =
      -_tmp169 * (-Scalar(4.967784) * _tmp177 + Scalar(1.0) * _tmp179 * std::sinh(_tmp173) -
                  (-Scalar(0.1034955) * _tmp170 * _tmp177 +
                   _tmp171 * (-_tmp168 * _tmp175 - _tmp169 * _tmp179)) *
                      std::sinh(_tmp172)) -
      _tmp175 * (Scalar(4.967784) * _tmp167 - std::cosh(_tmp172) + std::cosh(_tmp173));
  _res(3, 0) = _tmp174 * (Scalar(4.967784) * _tmp182 - std::cosh(_tmp190) + std::cosh(_tmp191)) -
               _tmp184 * (Scalar(4.967784) * _tmp187 + Scalar(1.0) * _tmp188 * std::sinh(_tmp191) -
                          (Scalar(0.1034955) * _tmp185 * _tmp187 +
                           _tmp189 * (_tmp174 * _tmp183 - _tmp184 * _tmp188)) *
                              std::sinh(_tmp190));

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
