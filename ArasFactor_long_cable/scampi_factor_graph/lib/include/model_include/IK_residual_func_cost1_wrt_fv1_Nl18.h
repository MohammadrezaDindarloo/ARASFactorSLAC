// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

#include <sym/rot3.h>

namespace sym {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: IK_residual_func_cost1_wrt_fv1_Nl18
 *
 * Args:
 *     fh1: Scalar
 *     fv1: Scalar
 *     DeltaRot: Rot3
 *     position_vector: Matrix31
 *     Rot_init: Rot3
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix41
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 4, 1> IkResidualFuncCost1WrtFv1Nl18(
    const Scalar fh1, const Scalar fv1, const sym::Rot3<Scalar>& DeltaRot,
    const Eigen::Matrix<Scalar, 3, 1>& position_vector, const sym::Rot3<Scalar>& Rot_init,
    const Scalar epsilon) {
  // Total ops: 606

  // Unused inputs
  (void)epsilon;

  // Input arrays
  const Eigen::Matrix<Scalar, 4, 1>& _DeltaRot = DeltaRot.Data();
  const Eigen::Matrix<Scalar, 4, 1>& _Rot_init = Rot_init.Data();

  // Intermediate terms (190)
  const Scalar _tmp0 = Scalar(1.0) / (fh1);
  const Scalar _tmp1 = std::asinh(_tmp0 * fv1);
  const Scalar _tmp2 = Scalar(1.0) * _tmp0 /
                       std::sqrt(Scalar(1 + std::pow(fv1, Scalar(2)) / std::pow(fh1, Scalar(2))));
  const Scalar _tmp3 = -_DeltaRot[0] * _Rot_init[1] + _DeltaRot[1] * _Rot_init[0] +
                       _DeltaRot[2] * _Rot_init[3] + _DeltaRot[3] * _Rot_init[2];
  const Scalar _tmp4 = -2 * std::pow(_tmp3, Scalar(2));
  const Scalar _tmp5 = _DeltaRot[0] * _Rot_init[2] + _DeltaRot[1] * _Rot_init[3] -
                       _DeltaRot[2] * _Rot_init[0] + _DeltaRot[3] * _Rot_init[1];
  const Scalar _tmp6 = 1 - 2 * std::pow(_tmp5, Scalar(2));
  const Scalar _tmp7 = Scalar(0.20999999999999999) * _tmp4 + Scalar(0.20999999999999999) * _tmp6;
  const Scalar _tmp8 = -_tmp7;
  const Scalar _tmp9 = _DeltaRot[0] * _Rot_init[3] - _DeltaRot[1] * _Rot_init[2] +
                       _DeltaRot[2] * _Rot_init[1] + _DeltaRot[3] * _Rot_init[0];
  const Scalar _tmp10 = 2 * _tmp3 * _tmp9;
  const Scalar _tmp11 = -2 * _DeltaRot[0] * _Rot_init[0] - 2 * _DeltaRot[1] * _Rot_init[1] -
                        2 * _DeltaRot[2] * _Rot_init[2] + 2 * _DeltaRot[3] * _Rot_init[3];
  const Scalar _tmp12 = _tmp11 * _tmp5;
  const Scalar _tmp13 = _tmp10 + _tmp12;
  const Scalar _tmp14 = -Scalar(0.010999999999999999) * _tmp13;
  const Scalar _tmp15 = 2 * _tmp5;
  const Scalar _tmp16 = _tmp15 * _tmp9;
  const Scalar _tmp17 = _tmp11 * _tmp3;
  const Scalar _tmp18 = Scalar(0.20999999999999999) * _tmp16 - Scalar(0.20999999999999999) * _tmp17;
  const Scalar _tmp19 = _tmp14 + _tmp18;
  const Scalar _tmp20 = _tmp19 + _tmp8;
  const Scalar _tmp21 = _tmp20 + position_vector(0, 0);
  const Scalar _tmp22 = Scalar(0.20999999999999999) * _tmp16 + Scalar(0.20999999999999999) * _tmp17;
  const Scalar _tmp23 = -_tmp22;
  const Scalar _tmp24 = -2 * std::pow(_tmp9, Scalar(2));
  const Scalar _tmp25 = Scalar(0.20999999999999999) * _tmp24 + Scalar(0.20999999999999999) * _tmp4 +
                        Scalar(0.20999999999999999);
  const Scalar _tmp26 = _tmp15 * _tmp3;
  const Scalar _tmp27 = _tmp11 * _tmp9;
  const Scalar _tmp28 = _tmp26 - _tmp27;
  const Scalar _tmp29 = Scalar(0.010999999999999999) * _tmp28;
  const Scalar _tmp30 = -_tmp29;
  const Scalar _tmp31 = _tmp25 + _tmp30;
  const Scalar _tmp32 = _tmp23 + _tmp31;
  const Scalar _tmp33 = _tmp32 + position_vector(1, 0);
  const Scalar _tmp34 = Scalar(9.6622558468725703) * fh1;
  const Scalar _tmp35 = _tmp21 + Scalar(125.0);
  const Scalar _tmp36 = _tmp33 + Scalar(-110.0);
  const Scalar _tmp37 = std::pow(Scalar(std::pow(_tmp35, Scalar(2)) + std::pow(_tmp36, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp38 = _tmp35 * _tmp37;
  const Scalar _tmp39 = Scalar(0.20999999999999999) * _tmp10 - Scalar(0.20999999999999999) * _tmp12;
  const Scalar _tmp40 = -_tmp39;
  const Scalar _tmp41 =
      -Scalar(0.010999999999999999) * _tmp24 - Scalar(0.010999999999999999) * _tmp6;
  const Scalar _tmp42 = Scalar(0.20999999999999999) * _tmp26 + Scalar(0.20999999999999999) * _tmp27;
  const Scalar _tmp43 = _tmp41 + _tmp42;
  const Scalar _tmp44 = fh1 * (_tmp40 + _tmp43);
  const Scalar _tmp45 = Scalar(2.3544) * _tmp13 + _tmp20 * fv1 + _tmp38 * _tmp44;
  const Scalar _tmp46 = -_tmp25;
  const Scalar _tmp47 = _tmp23 + _tmp30 + _tmp46;
  const Scalar _tmp48 = Scalar(1.0) * _tmp47;
  const Scalar _tmp49 = -_tmp48;
  const Scalar _tmp50 = _tmp22 + _tmp46;
  const Scalar _tmp51 = _tmp30 + _tmp50;
  const Scalar _tmp52 = Scalar(1.0) / (_tmp49 + _tmp51);
  const Scalar _tmp53 = _tmp22 + _tmp31;
  const Scalar _tmp54 = _tmp49 + _tmp53;
  const Scalar _tmp55 = _tmp14 - _tmp18;
  const Scalar _tmp56 = _tmp55 + _tmp7;
  const Scalar _tmp57 = _tmp55 + _tmp8;
  const Scalar _tmp58 = Scalar(1.0) * _tmp57;
  const Scalar _tmp59 = -_tmp56 + _tmp58;
  const Scalar _tmp60 = _tmp52 * _tmp59;
  const Scalar _tmp61 = _tmp54 * _tmp60;
  const Scalar _tmp62 = _tmp19 + _tmp7;
  const Scalar _tmp63 = Scalar(1.0) / (_tmp58 - _tmp61 - _tmp62);
  const Scalar _tmp64 = Scalar(1.0) * _tmp63;
  const Scalar _tmp65 = _tmp54 * _tmp64;
  const Scalar _tmp66 = Scalar(1.0) * _tmp52 * _tmp65 - Scalar(1.0) * _tmp64;
  const Scalar _tmp67 = _tmp51 + position_vector(1, 0);
  const Scalar _tmp68 = _tmp67 + Scalar(110.0);
  const Scalar _tmp69 = _tmp56 + position_vector(0, 0);
  const Scalar _tmp70 = _tmp69 + Scalar(-125.0);
  const Scalar _tmp71 = std::pow(Scalar(std::pow(_tmp68, Scalar(2)) + std::pow(_tmp70, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp72 = _tmp70 * _tmp71;
  const Scalar _tmp73 = _tmp47 + position_vector(1, 0);
  const Scalar _tmp74 = _tmp73 + Scalar(110.0);
  const Scalar _tmp75 = _tmp57 + position_vector(0, 0);
  const Scalar _tmp76 = _tmp75 + Scalar(125.0);
  const Scalar _tmp77 =
      std::sqrt(Scalar(std::pow(_tmp74, Scalar(2)) + std::pow(_tmp76, Scalar(2))));
  const Scalar _tmp78 = Scalar(1.0) / (_tmp77);
  const Scalar _tmp79 = Scalar(1.0) / (_tmp76);
  const Scalar _tmp80 = _tmp77 * _tmp79;
  const Scalar _tmp81 = _tmp80 * (-_tmp47 * _tmp76 * _tmp78 + _tmp57 * _tmp74 * _tmp78);
  const Scalar _tmp82 = _tmp68 * _tmp71;
  const Scalar _tmp83 = _tmp51 * _tmp72 - _tmp56 * _tmp82 + _tmp72 * _tmp81;
  const Scalar _tmp84 = _tmp74 * _tmp79;
  const Scalar _tmp85 = Scalar(1.0) / (_tmp72 * _tmp84 - _tmp82);
  const Scalar _tmp86 = _tmp84 * _tmp85;
  const Scalar _tmp87 = _tmp41 - _tmp42;
  const Scalar _tmp88 = _tmp39 + _tmp87;
  const Scalar _tmp89 = _tmp40 + _tmp87;
  const Scalar _tmp90 = -_tmp72 * _tmp88 + _tmp72 * _tmp89;
  const Scalar _tmp91 = _tmp84 * _tmp89;
  const Scalar _tmp92 = -_tmp72 * _tmp91 + _tmp82 * _tmp88;
  const Scalar _tmp93 = _tmp86 * _tmp92 + _tmp91;
  const Scalar _tmp94 = -_tmp60 * _tmp93 + _tmp86 * _tmp90 - _tmp89;
  const Scalar _tmp95 = _tmp53 + position_vector(1, 0);
  const Scalar _tmp96 = _tmp95 + Scalar(-110.0);
  const Scalar _tmp97 = _tmp62 + position_vector(0, 0);
  const Scalar _tmp98 = _tmp97 + Scalar(-125.0);
  const Scalar _tmp99 = std::pow(Scalar(std::pow(_tmp96, Scalar(2)) + std::pow(_tmp98, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp100 = _tmp98 * _tmp99;
  const Scalar _tmp101 = _tmp39 + _tmp43;
  const Scalar _tmp102 = _tmp96 * _tmp99;
  const Scalar _tmp103 = _tmp100 * _tmp84 - _tmp102;
  const Scalar _tmp104 = _tmp103 * _tmp85;
  const Scalar _tmp105 = -_tmp100 * _tmp91 + _tmp101 * _tmp102 - _tmp104 * _tmp92;
  const Scalar _tmp106 =
      -_tmp100 * _tmp101 + _tmp100 * _tmp89 - _tmp104 * _tmp90 - _tmp105 * _tmp60;
  const Scalar _tmp107 = Scalar(1.0) / (_tmp106);
  const Scalar _tmp108 = _tmp100 * _tmp53 + _tmp100 * _tmp81 - _tmp102 * _tmp62 - _tmp104 * _tmp83;
  const Scalar _tmp109 = _tmp107 * _tmp108;
  const Scalar _tmp110 = Scalar(1.0) / (_tmp108);
  const Scalar _tmp111 = _tmp106 * _tmp110;
  const Scalar _tmp112 = _tmp111 * (-_tmp109 * _tmp94 - _tmp81 + _tmp83 * _tmp86);
  const Scalar _tmp113 = _tmp107 * (_tmp112 + _tmp94);
  const Scalar _tmp114 = _tmp54 * _tmp63;
  const Scalar _tmp115 = -_tmp105 * _tmp113 + _tmp112 * _tmp114 + _tmp93;
  const Scalar _tmp116 = Scalar(1.0) * _tmp52;
  const Scalar _tmp117 = _tmp38 * fh1;
  const Scalar _tmp118 = Scalar(1.0) * _tmp85;
  const Scalar _tmp119 = _tmp116 * _tmp59 * _tmp85 * _tmp92 - _tmp118 * _tmp90;
  const Scalar _tmp120 = _tmp111 * (-_tmp109 * _tmp119 - _tmp118 * _tmp83);
  const Scalar _tmp121 = _tmp107 * (_tmp119 + _tmp120);
  const Scalar _tmp122 = -_tmp105 * _tmp121 + _tmp114 * _tmp120 - _tmp118 * _tmp92;
  const Scalar _tmp123 = _tmp36 * _tmp37;
  const Scalar _tmp124 = _tmp123 * fh1;
  const Scalar _tmp125 = _tmp111 * _tmp64;
  const Scalar _tmp126 = Scalar(1.0) * _tmp110;
  const Scalar _tmp127 = -_tmp105 * _tmp126 + _tmp111 * _tmp65;
  const Scalar _tmp128 = fh1 * (_tmp123 * _tmp20 - _tmp32 * _tmp38);
  const Scalar _tmp129 = -_tmp123 * _tmp44 - Scalar(2.3544) * _tmp28 - _tmp32 * fv1;
  const Scalar _tmp130 = _tmp61 * _tmp64 + Scalar(1.0);
  const Scalar _tmp131 = _tmp60 * _tmp64;
  const Scalar _tmp132 = -Scalar(1.0) * _tmp116 * _tmp130 + Scalar(1.0) * _tmp131;
  const Scalar _tmp133 = Scalar(19.620000000000001) - fv1;
  const Scalar _tmp134 = _tmp48 * _tmp60 + _tmp58;
  const Scalar _tmp135 = 0;
  const Scalar _tmp136 = _tmp134 * _tmp63;
  const Scalar _tmp137 = _tmp52 * (-_tmp105 * _tmp135 - _tmp136 * _tmp54 + _tmp49);
  const Scalar _tmp138 = -Scalar(1.0) * _tmp136 - Scalar(1.0) * _tmp137 + Scalar(1.0);
  const Scalar _tmp139 = Scalar(1.0) * _tmp117 * (_tmp112 * _tmp64 - _tmp115 * _tmp116) +
                         Scalar(1.0) * _tmp124 * (-_tmp116 * _tmp122 + _tmp120 * _tmp64) +
                         Scalar(1.0) * _tmp128 * (-_tmp116 * _tmp127 + _tmp125) +
                         _tmp129 * _tmp132 + _tmp133 * _tmp138 + _tmp45 * _tmp66;
  const Scalar _tmp140 = -_tmp103 * _tmp113 - _tmp84;
  const Scalar _tmp141 = _tmp72 * _tmp85;
  const Scalar _tmp142 = _tmp104 * _tmp135;
  const Scalar _tmp143 = _tmp80 * (_tmp100 * _tmp135 - _tmp142 * _tmp72);
  const Scalar _tmp144 = -_tmp103 * _tmp121 + Scalar(1.0);
  const Scalar _tmp145 = -_tmp117 * _tmp80 * (_tmp100 * _tmp113 + _tmp140 * _tmp141 + Scalar(1.0)) -
                         _tmp124 * _tmp80 * (_tmp100 * _tmp121 + _tmp141 * _tmp144) -
                         _tmp128 * _tmp80 * (_tmp100 * _tmp126 - _tmp104 * _tmp126 * _tmp72) -
                         _tmp133 * _tmp143;
  const Scalar _tmp146 = Scalar(1.0) / (_tmp145);
  const Scalar _tmp147 = std::asinh(_tmp139 * _tmp146);
  const Scalar _tmp148 = Scalar(1.0) * _tmp147;
  const Scalar _tmp149 = Scalar(9.6622558468725703) * _tmp145;
  const Scalar _tmp150 =
      -_tmp147 * _tmp149 -
      Scalar(125.0) *
          std::sqrt(
              Scalar(Scalar(0.77439999999999998) *
                         std::pow(Scalar(-Scalar(0.0090909090909090905) * _tmp73 - 1), Scalar(2)) +
                     std::pow(Scalar(-Scalar(0.0080000000000000002) * _tmp75 - 1), Scalar(2))));
  const Scalar _tmp151 = Scalar(0.1034955) * _tmp146;
  const Scalar _tmp152 = _tmp150 * _tmp151;
  const Scalar _tmp153 = Scalar(9.6622558468725703) * _tmp143;
  const Scalar _tmp154 = std::pow(_tmp145, Scalar(-2));
  const Scalar _tmp155 = _tmp143 * _tmp154;
  const Scalar _tmp156 = _tmp29 + _tmp50;
  const Scalar _tmp157 =
      (-_tmp139 * _tmp155 + _tmp146 * (_tmp132 * _tmp156 - _tmp138 + _tmp20 * _tmp66)) /
      std::sqrt(Scalar(std::pow(_tmp139, Scalar(2)) * _tmp154 + 1));
  const Scalar _tmp158 = _tmp126 * _tmp128;
  const Scalar _tmp159 = _tmp133 * _tmp135;
  const Scalar _tmp160 = -_tmp104 * _tmp158 - _tmp104 * _tmp159 + _tmp117 * _tmp140 * _tmp85 +
                         _tmp124 * _tmp144 * _tmp85;
  const Scalar _tmp161 = std::pow(_tmp160, Scalar(-2));
  const Scalar _tmp162 = _tmp142 * _tmp161;
  const Scalar _tmp163 = _tmp130 * _tmp52;
  const Scalar _tmp164 = _tmp45 * _tmp64;
  const Scalar _tmp165 = _tmp52 * _tmp54;
  const Scalar _tmp166 = _tmp115 * _tmp117 * _tmp52 + _tmp122 * _tmp124 * _tmp52 +
                         _tmp127 * _tmp128 * _tmp52 + _tmp129 * _tmp163 + _tmp133 * _tmp137 -
                         _tmp164 * _tmp165;
  const Scalar _tmp167 = Scalar(1.0) / (_tmp160);
  const Scalar _tmp168 = std::asinh(_tmp166 * _tmp167);
  const Scalar _tmp169 = Scalar(1.0) * _tmp168;
  const Scalar _tmp170 = _tmp20 * _tmp64;
  const Scalar _tmp171 =
      (-_tmp162 * _tmp166 + _tmp167 * (-_tmp137 + _tmp156 * _tmp163 - _tmp165 * _tmp170)) /
      std::sqrt(Scalar(_tmp161 * std::pow(_tmp166, Scalar(2)) + 1));
  const Scalar _tmp172 = Scalar(9.6622558468725703) * _tmp160;
  const Scalar _tmp173 =
      -_tmp168 * _tmp172 -
      Scalar(125.0) *
          std::sqrt(
              Scalar(std::pow(Scalar(1 - Scalar(0.0080000000000000002) * _tmp69), Scalar(2)) +
                     Scalar(0.77439999999999998) *
                         std::pow(Scalar(-Scalar(0.0090909090909090905) * _tmp67 - 1), Scalar(2))));
  const Scalar _tmp174 = Scalar(0.1034955) * _tmp167;
  const Scalar _tmp175 = _tmp173 * _tmp174;
  const Scalar _tmp176 = Scalar(9.6622558468725703) * _tmp135;
  const Scalar _tmp177 = _tmp104 * _tmp176;
  const Scalar _tmp178 = -_tmp112 * _tmp117 * _tmp63 - _tmp120 * _tmp124 * _tmp63 -
                         _tmp125 * _tmp128 - _tmp129 * _tmp131 + _tmp133 * _tmp136 + _tmp164;
  const Scalar _tmp179 = _tmp113 * _tmp117 + _tmp121 * _tmp124 + _tmp158 + _tmp159;
  const Scalar _tmp180 = Scalar(1.0) / (_tmp179);
  const Scalar _tmp181 = std::asinh(_tmp178 * _tmp180);
  const Scalar _tmp182 = Scalar(1.0) * _tmp181;
  const Scalar _tmp183 = Scalar(9.6622558468725703) * _tmp179;
  const Scalar _tmp184 =
      -_tmp181 * _tmp183 -
      Scalar(125.0) *
          std::sqrt(
              Scalar(Scalar(0.77439999999999998) *
                         std::pow(Scalar(1 - Scalar(0.0090909090909090905) * _tmp95), Scalar(2)) +
                     std::pow(Scalar(1 - Scalar(0.0080000000000000002) * _tmp97), Scalar(2))));
  const Scalar _tmp185 = Scalar(0.1034955) * _tmp180;
  const Scalar _tmp186 = _tmp184 * _tmp185;
  const Scalar _tmp187 = std::pow(_tmp179, Scalar(-2));
  const Scalar _tmp188 = _tmp135 * _tmp187;
  const Scalar _tmp189 = (_tmp178 * _tmp188 + _tmp180 * (-_tmp131 * _tmp156 - _tmp136 + _tmp170)) /
                         std::sqrt(Scalar(std::pow(_tmp178, Scalar(2)) * _tmp187 + 1));

  // Output terms (1)
  Eigen::Matrix<Scalar, 4, 1> _res;

  _res(0, 0) =
      -_tmp34 *
      (_tmp2 * std::sinh(Scalar(1.0) * _tmp1) +
       _tmp2 * std::sinh(Scalar(0.1034955) * _tmp0 *
                         (-_tmp1 * _tmp34 -
                          Scalar(125.0) *
                              std::sqrt(Scalar(
                                  Scalar(0.77439999999999998) *
                                      std::pow(Scalar(1 - Scalar(0.0090909090909090905) * _tmp33),
                                               Scalar(2)) +
                                  std::pow(Scalar(-Scalar(0.0080000000000000002) * _tmp21 - 1),
                                           Scalar(2)))))));
  _res(1, 0) =
      -_tmp149 * (-Scalar(4.967784) * _tmp155 + Scalar(1.0) * _tmp157 * std::sinh(_tmp148) -
                  (-Scalar(0.1034955) * _tmp150 * _tmp155 +
                   _tmp151 * (-_tmp147 * _tmp153 - _tmp149 * _tmp157)) *
                      std::sinh(_tmp152)) -
      _tmp153 * (Scalar(4.967784) * _tmp146 + std::cosh(_tmp148) - std::cosh(_tmp152));
  _res(2, 0) =
      -_tmp172 * (-Scalar(4.967784) * _tmp162 + Scalar(1.0) * _tmp171 * std::sinh(_tmp169) -
                  (-Scalar(0.1034955) * _tmp162 * _tmp173 +
                   _tmp174 * (-_tmp168 * _tmp177 - _tmp171 * _tmp172)) *
                      std::sinh(_tmp175)) -
      _tmp177 * (Scalar(4.967784) * _tmp167 + std::cosh(_tmp169) - std::cosh(_tmp175));
  _res(3, 0) = _tmp176 * (Scalar(4.967784) * _tmp180 + std::cosh(_tmp182) - std::cosh(_tmp186)) -
               _tmp183 * (Scalar(4.967784) * _tmp188 + Scalar(1.0) * _tmp189 * std::sinh(_tmp182) -
                          (Scalar(0.1034955) * _tmp184 * _tmp188 +
                           _tmp185 * (_tmp176 * _tmp181 - _tmp183 * _tmp189)) *
                              std::sinh(_tmp186));

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
