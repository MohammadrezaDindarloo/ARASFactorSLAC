// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

#include <sym/rot3.h>

namespace sym {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: IK_residual_func_cost2_Nl1
 *
 * Args:
 *     fh1: Scalar
 *     fv1: Scalar
 *     DeltaRot: Rot3
 *     position_vector: Matrix31
 *     Rot_init: Rot3
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix41
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 4, 1> IkResidualFuncCost2Nl1(
    const Scalar fh1, const Scalar fv1, const sym::Rot3<Scalar>& DeltaRot,
    const Eigen::Matrix<Scalar, 3, 1>& position_vector, const sym::Rot3<Scalar>& Rot_init,
    const Scalar epsilon) {
  // Total ops: 531

  // Unused inputs
  (void)epsilon;

  // Input arrays
  const Eigen::Matrix<Scalar, 4, 1>& _DeltaRot = DeltaRot.Data();
  const Eigen::Matrix<Scalar, 4, 1>& _Rot_init = Rot_init.Data();

  // Intermediate terms (159)
  const Scalar _tmp0 = Scalar(1.0) / (fh1);
  const Scalar _tmp1 = _DeltaRot[0] * _Rot_init[2] + _DeltaRot[1] * _Rot_init[3] -
                       _DeltaRot[2] * _Rot_init[0] + _DeltaRot[3] * _Rot_init[1];
  const Scalar _tmp2 = _DeltaRot[0] * _Rot_init[3] - _DeltaRot[1] * _Rot_init[2] +
                       _DeltaRot[2] * _Rot_init[1] + _DeltaRot[3] * _Rot_init[0];
  const Scalar _tmp3 = 2 * _tmp1 * _tmp2;
  const Scalar _tmp4 = -_DeltaRot[0] * _Rot_init[1] + _DeltaRot[1] * _Rot_init[0] +
                       _DeltaRot[2] * _Rot_init[3] + _DeltaRot[3] * _Rot_init[2];
  const Scalar _tmp5 = -2 * _DeltaRot[0] * _Rot_init[0] - 2 * _DeltaRot[1] * _Rot_init[1] -
                       2 * _DeltaRot[2] * _Rot_init[2] + 2 * _DeltaRot[3] * _Rot_init[3];
  const Scalar _tmp6 = _tmp4 * _tmp5;
  const Scalar _tmp7 = Scalar(0.20999999999999999) * _tmp3 + Scalar(0.20999999999999999) * _tmp6;
  const Scalar _tmp8 = -_tmp7;
  const Scalar _tmp9 = -2 * std::pow(_tmp2, Scalar(2));
  const Scalar _tmp10 = 1 - 2 * std::pow(_tmp4, Scalar(2));
  const Scalar _tmp11 = Scalar(0.20999999999999999) * _tmp10 + Scalar(0.20999999999999999) * _tmp9;
  const Scalar _tmp12 = 2 * _tmp4;
  const Scalar _tmp13 = _tmp1 * _tmp12;
  const Scalar _tmp14 = _tmp2 * _tmp5;
  const Scalar _tmp15 = _tmp13 - _tmp14;
  const Scalar _tmp16 = -Scalar(0.010999999999999999) * _tmp15;
  const Scalar _tmp17 = -_tmp11 + _tmp16;
  const Scalar _tmp18 = _tmp17 + _tmp8;
  const Scalar _tmp19 = _tmp18 + position_vector(1, 0);
  const Scalar _tmp20 = Scalar(0.20999999999999999) * _tmp3 - Scalar(0.20999999999999999) * _tmp6;
  const Scalar _tmp21 = -_tmp20;
  const Scalar _tmp22 = -2 * std::pow(_tmp1, Scalar(2));
  const Scalar _tmp23 = Scalar(0.20999999999999999) * _tmp10 + Scalar(0.20999999999999999) * _tmp22;
  const Scalar _tmp24 = _tmp12 * _tmp2;
  const Scalar _tmp25 = _tmp1 * _tmp5;
  const Scalar _tmp26 = _tmp24 + _tmp25;
  const Scalar _tmp27 = -Scalar(0.010999999999999999) * _tmp26;
  const Scalar _tmp28 = -_tmp23 + _tmp27;
  const Scalar _tmp29 = _tmp21 + _tmp28;
  const Scalar _tmp30 = _tmp29 + position_vector(0, 0);
  const Scalar _tmp31 =
      Scalar(12100.0) * std::pow(Scalar(-Scalar(0.0090909090909090905) * _tmp19 - 1), Scalar(2)) +
      Scalar(15625.0) * std::pow(Scalar(-Scalar(0.0080000000000000002) * _tmp30 - 1), Scalar(2));
  const Scalar _tmp32 = std::asinh(_tmp0 * fv1);
  const Scalar _tmp33 = Scalar(9.6622558468725703) * fh1;
  const Scalar _tmp34 = Scalar(0.20999999999999999) * _tmp13 + Scalar(0.20999999999999999) * _tmp14;
  const Scalar _tmp35 = -_tmp34;
  const Scalar _tmp36 = -Scalar(0.010999999999999999) * _tmp22 -
                        Scalar(0.010999999999999999) * _tmp9 + Scalar(-0.010999999999999999);
  const Scalar _tmp37 = Scalar(0.20999999999999999) * _tmp24 - Scalar(0.20999999999999999) * _tmp25;
  const Scalar _tmp38 = _tmp36 - _tmp37;
  const Scalar _tmp39 = _tmp35 + _tmp38;
  const Scalar _tmp40 = _tmp30 + Scalar(125.0);
  const Scalar _tmp41 = _tmp19 + Scalar(110.0);
  const Scalar _tmp42 = std::pow(Scalar(std::pow(_tmp40, Scalar(2)) + std::pow(_tmp41, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp43 = _tmp40 * _tmp42;
  const Scalar _tmp44 = _tmp39 * fh1;
  const Scalar _tmp45 = Scalar(2.3544) * _tmp26 + _tmp29 * fv1 + _tmp43 * _tmp44;
  const Scalar _tmp46 = _tmp23 + _tmp27;
  const Scalar _tmp47 = _tmp21 + _tmp46;
  const Scalar _tmp48 = Scalar(1.0) * _tmp47;
  const Scalar _tmp49 = _tmp17 + _tmp7;
  const Scalar _tmp50 = Scalar(1.0) * _tmp49;
  const Scalar _tmp51 = -_tmp50;
  const Scalar _tmp52 = _tmp11 + _tmp16;
  const Scalar _tmp53 = _tmp52 + _tmp7;
  const Scalar _tmp54 = _tmp51 + _tmp53;
  const Scalar _tmp55 = _tmp20 + _tmp28;
  const Scalar _tmp56 = _tmp52 + _tmp8;
  const Scalar _tmp57 = Scalar(1.0) / (_tmp51 + _tmp56);
  const Scalar _tmp58 = _tmp57 * (_tmp48 - _tmp55);
  const Scalar _tmp59 = _tmp54 * _tmp58;
  const Scalar _tmp60 = _tmp20 + _tmp46;
  const Scalar _tmp61 = Scalar(1.0) / (_tmp48 - _tmp59 - _tmp60);
  const Scalar _tmp62 = Scalar(1.0) * _tmp61;
  const Scalar _tmp63 = _tmp54 * _tmp57;
  const Scalar _tmp64 = Scalar(19.620000000000001) - fv1;
  const Scalar _tmp65 = _tmp48 + _tmp50 * _tmp58;
  const Scalar _tmp66 = 0;
  const Scalar _tmp67 = _tmp36 + _tmp37;
  const Scalar _tmp68 = _tmp34 + _tmp67;
  const Scalar _tmp69 = _tmp53 + position_vector(1, 0);
  const Scalar _tmp70 = _tmp69 + Scalar(-110.0);
  const Scalar _tmp71 = _tmp60 + position_vector(0, 0);
  const Scalar _tmp72 = _tmp71 + Scalar(-125.0);
  const Scalar _tmp73 = std::pow(Scalar(std::pow(_tmp70, Scalar(2)) + std::pow(_tmp72, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp74 = _tmp72 * _tmp73;
  const Scalar _tmp75 = _tmp47 + position_vector(0, 0);
  const Scalar _tmp76 = _tmp75 + Scalar(-125.0);
  const Scalar _tmp77 = Scalar(1.0) / (_tmp76);
  const Scalar _tmp78 = _tmp49 + position_vector(1, 0);
  const Scalar _tmp79 = _tmp78 + Scalar(110.0);
  const Scalar _tmp80 = _tmp77 * _tmp79;
  const Scalar _tmp81 = _tmp70 * _tmp73;
  const Scalar _tmp82 = _tmp74 * _tmp80 - _tmp81;
  const Scalar _tmp83 = _tmp34 + _tmp38;
  const Scalar _tmp84 = _tmp55 + position_vector(0, 0);
  const Scalar _tmp85 = _tmp84 + Scalar(125.0);
  const Scalar _tmp86 = _tmp56 + position_vector(1, 0);
  const Scalar _tmp87 = _tmp86 + Scalar(-110.0);
  const Scalar _tmp88 = std::pow(Scalar(std::pow(_tmp85, Scalar(2)) + std::pow(_tmp87, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp89 = _tmp85 * _tmp88;
  const Scalar _tmp90 = _tmp35 + _tmp67;
  const Scalar _tmp91 = _tmp87 * _tmp88;
  const Scalar _tmp92 = Scalar(1.0) / (_tmp80 * _tmp89 - _tmp91);
  const Scalar _tmp93 = _tmp92 * (-_tmp83 * _tmp89 + _tmp89 * _tmp90);
  const Scalar _tmp94 = _tmp80 * _tmp90;
  const Scalar _tmp95 = _tmp92 * (_tmp83 * _tmp91 - _tmp89 * _tmp94);
  const Scalar _tmp96 = _tmp68 * _tmp81 - _tmp74 * _tmp94 - _tmp82 * _tmp95;
  const Scalar _tmp97 = -_tmp58 * _tmp96 - _tmp68 * _tmp74 + _tmp74 * _tmp90 - _tmp82 * _tmp93;
  const Scalar _tmp98 = Scalar(1.0) / (_tmp97);
  const Scalar _tmp99 = _tmp96 * _tmp98;
  const Scalar _tmp100 = _tmp61 * _tmp65;
  const Scalar _tmp101 = -_tmp100 * _tmp54 + _tmp51 - _tmp66 * _tmp99;
  const Scalar _tmp102 = Scalar(1.0) * _tmp57;
  const Scalar _tmp103 = _tmp80 * _tmp95 + _tmp94;
  const Scalar _tmp104 = -_tmp103 * _tmp58 + _tmp80 * _tmp93 - _tmp90;
  const Scalar _tmp105 =
      std::sqrt(Scalar(std::pow(_tmp76, Scalar(2)) + std::pow(_tmp79, Scalar(2))));
  const Scalar _tmp106 = Scalar(1.0) / (_tmp105);
  const Scalar _tmp107 = _tmp105 * _tmp77;
  const Scalar _tmp108 = _tmp107 * (_tmp106 * _tmp47 * _tmp79 - _tmp106 * _tmp49 * _tmp76);
  const Scalar _tmp109 = _tmp92 * (_tmp108 * _tmp89 - _tmp55 * _tmp91 + _tmp56 * _tmp89);
  const Scalar _tmp110 = _tmp108 * _tmp74 - _tmp109 * _tmp82 + _tmp53 * _tmp74 - _tmp60 * _tmp81;
  const Scalar _tmp111 = _tmp110 * _tmp98;
  const Scalar _tmp112 = Scalar(1.0) / (_tmp110);
  const Scalar _tmp113 = _tmp112 * _tmp97;
  const Scalar _tmp114 = _tmp113 * (-_tmp104 * _tmp111 - _tmp108 + _tmp109 * _tmp80);
  const Scalar _tmp115 = _tmp104 + _tmp114;
  const Scalar _tmp116 = _tmp54 * _tmp61;
  const Scalar _tmp117 = _tmp103 + _tmp114 * _tmp116 - _tmp115 * _tmp99;
  const Scalar _tmp118 = _tmp43 * fh1;
  const Scalar _tmp119 = _tmp113 * _tmp62;
  const Scalar _tmp120 = Scalar(1.0) * _tmp112;
  const Scalar _tmp121 = _tmp119 * _tmp54 - _tmp120 * _tmp96;
  const Scalar _tmp122 = _tmp41 * _tmp42;
  const Scalar _tmp123 = fh1 * (_tmp122 * _tmp29 - _tmp18 * _tmp43);
  const Scalar _tmp124 = -_tmp122 * _tmp44 - Scalar(2.3544) * _tmp15 - _tmp18 * fv1;
  const Scalar _tmp125 = _tmp59 * _tmp62 + Scalar(1.0);
  const Scalar _tmp126 = _tmp58 * _tmp62;
  const Scalar _tmp127 = Scalar(1.0) * _tmp95;
  const Scalar _tmp128 = _tmp127 * _tmp58 - Scalar(1.0) * _tmp93;
  const Scalar _tmp129 = _tmp113 * (-Scalar(1.0) * _tmp109 - _tmp111 * _tmp128);
  const Scalar _tmp130 = _tmp128 + _tmp129;
  const Scalar _tmp131 = _tmp116 * _tmp129 - _tmp127 - _tmp130 * _tmp99;
  const Scalar _tmp132 = _tmp122 * fh1;
  const Scalar _tmp133 = _tmp66 * _tmp98;
  const Scalar _tmp134 = _tmp89 * _tmp92;
  const Scalar _tmp135 = _tmp134 * _tmp82;
  const Scalar _tmp136 = _tmp82 * _tmp98;
  const Scalar _tmp137 = -_tmp130 * _tmp136 + Scalar(1.0);
  const Scalar _tmp138 = _tmp74 * _tmp98;
  const Scalar _tmp139 = -_tmp115 * _tmp136 - _tmp80;
  const Scalar _tmp140 =
      -_tmp107 * _tmp118 * (_tmp115 * _tmp138 + _tmp134 * _tmp139 + Scalar(1.0)) -
      _tmp107 * _tmp123 * (-_tmp120 * _tmp135 + _tmp120 * _tmp74) -
      _tmp107 * _tmp132 * (_tmp130 * _tmp138 + _tmp134 * _tmp137) -
      _tmp107 * _tmp64 * (-_tmp133 * _tmp135 + _tmp133 * _tmp74);
  const Scalar _tmp141 = Scalar(1.0) / (_tmp140);
  const Scalar _tmp142 = std::asinh(
      _tmp141 * (Scalar(1.0) * _tmp118 * (-_tmp102 * _tmp117 + _tmp114 * _tmp62) +
                 Scalar(1.0) * _tmp123 * (-_tmp102 * _tmp121 + _tmp119) +
                 Scalar(1.0) * _tmp124 * (-_tmp102 * _tmp125 + _tmp126) +
                 Scalar(1.0) * _tmp132 * (-_tmp102 * _tmp131 + _tmp129 * _tmp62) +
                 Scalar(1.0) * _tmp45 * (_tmp62 * _tmp63 - _tmp62) +
                 Scalar(1.0) * _tmp64 * (-_tmp101 * _tmp102 - _tmp62 * _tmp65 + Scalar(1.0))));
  const Scalar _tmp143 =
      Scalar(15625.0) * std::pow(Scalar(1 - Scalar(0.0080000000000000002) * _tmp75), Scalar(2)) +
      Scalar(12100.0) * std::pow(Scalar(-Scalar(0.0090909090909090905) * _tmp78 - 1), Scalar(2));
  const Scalar _tmp144 = Scalar(9.6622558468725703) * _tmp140;
  const Scalar _tmp145 = _tmp133 * _tmp64;
  const Scalar _tmp146 = _tmp82 * _tmp92;
  const Scalar _tmp147 = _tmp120 * _tmp123;
  const Scalar _tmp148 = _tmp118 * _tmp139 * _tmp92 + _tmp132 * _tmp137 * _tmp92 -
                         _tmp145 * _tmp146 - _tmp146 * _tmp147;
  const Scalar _tmp149 = Scalar(1.0) / (_tmp148);
  const Scalar _tmp150 =
      Scalar(12100.0) * std::pow(Scalar(1 - Scalar(0.0090909090909090905) * _tmp86), Scalar(2)) +
      Scalar(15625.0) * std::pow(Scalar(-Scalar(0.0080000000000000002) * _tmp84 - 1), Scalar(2));
  const Scalar _tmp151 = _tmp45 * _tmp62;
  const Scalar _tmp152 =
      std::asinh(_tmp149 * (_tmp101 * _tmp57 * _tmp64 + _tmp117 * _tmp118 * _tmp57 +
                            _tmp121 * _tmp123 * _tmp57 + _tmp124 * _tmp125 * _tmp57 +
                            _tmp131 * _tmp132 * _tmp57 - _tmp151 * _tmp63));
  const Scalar _tmp153 = Scalar(9.6622558468725703) * _tmp148;
  const Scalar _tmp154 =
      _tmp115 * _tmp118 * _tmp98 + _tmp130 * _tmp132 * _tmp98 + _tmp145 + _tmp147;
  const Scalar _tmp155 = Scalar(1.0) / (_tmp154);
  const Scalar _tmp156 =
      std::asinh(_tmp155 * (_tmp100 * _tmp64 - _tmp114 * _tmp118 * _tmp61 - _tmp119 * _tmp123 -
                            _tmp124 * _tmp126 - _tmp129 * _tmp132 * _tmp61 + _tmp151));
  const Scalar _tmp157 =
      Scalar(12100.0) * std::pow(Scalar(1 - Scalar(0.0090909090909090905) * _tmp69), Scalar(2)) +
      Scalar(15625.0) * std::pow(Scalar(1 - Scalar(0.0080000000000000002) * _tmp71), Scalar(2));
  const Scalar _tmp158 = Scalar(9.6622558468725703) * _tmp154;

  // Output terms (1)
  Eigen::Matrix<Scalar, 4, 1> _res;

  _res(0, 0) =
      _tmp33 * (-std::sinh(Scalar(1.0) * _tmp32) -
                std::sinh(Scalar(0.1034955) * _tmp0 * (-std::sqrt(_tmp31) - _tmp32 * _tmp33))) -
      Scalar(48.0) * std::sqrt(Scalar(
                         Scalar(0.00043402777777777775) * _tmp31 +
                         std::pow(Scalar(-Scalar(0.020833333333333332) * _tmp39 -
                                         Scalar(0.020833333333333332) * position_vector(2, 0) + 1),
                                  Scalar(2))));
  _res(1, 0) =
      _tmp144 *
          (-std::sinh(Scalar(1.0) * _tmp142) -
           std::sinh(Scalar(0.1034955) * _tmp141 * (-_tmp142 * _tmp144 - std::sqrt(_tmp143)))) -
      Scalar(48.0) * std::sqrt(Scalar(
                         Scalar(0.00043402777777777775) * _tmp143 +
                         std::pow(Scalar(-Scalar(0.020833333333333332) * _tmp90 -
                                         Scalar(0.020833333333333332) * position_vector(2, 0) + 1),
                                  Scalar(2))));
  _res(2, 0) =
      _tmp153 *
          (-std::sinh(Scalar(1.0) * _tmp152) -
           std::sinh(Scalar(0.1034955) * _tmp149 * (-std::sqrt(_tmp150) - _tmp152 * _tmp153))) -
      Scalar(48.0) * std::sqrt(Scalar(
                         Scalar(0.00043402777777777775) * _tmp150 +
                         std::pow(Scalar(-Scalar(0.020833333333333332) * _tmp83 -
                                         Scalar(0.020833333333333332) * position_vector(2, 0) + 1),
                                  Scalar(2))));
  _res(3, 0) =
      _tmp158 *
          (-std::sinh(Scalar(1.0) * _tmp156) -
           std::sinh(Scalar(0.1034955) * _tmp155 * (-_tmp156 * _tmp158 - std::sqrt(_tmp157)))) -
      Scalar(48.0) * std::sqrt(Scalar(
                         Scalar(0.00043402777777777775) * _tmp157 +
                         std::pow(Scalar(-Scalar(0.020833333333333332) * _tmp68 -
                                         Scalar(0.020833333333333332) * position_vector(2, 0) + 1),
                                  Scalar(2))));

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
