// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

#include <sym/rot3.h>

namespace sym {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: IK_residual_func_cost2_Nl16
 *
 * Args:
 *     fh1: Scalar
 *     fv1: Scalar
 *     DeltaRot: Rot3
 *     position_vector: Matrix31
 *     Rot_init: Rot3
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix41
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 4, 1> IkResidualFuncCost2Nl16(
    const Scalar fh1, const Scalar fv1, const sym::Rot3<Scalar>& DeltaRot,
    const Eigen::Matrix<Scalar, 3, 1>& position_vector, const sym::Rot3<Scalar>& Rot_init,
    const Scalar epsilon) {
  // Total ops: 532

  // Unused inputs
  (void)epsilon;

  // Input arrays
  const Eigen::Matrix<Scalar, 4, 1>& _DeltaRot = DeltaRot.Data();
  const Eigen::Matrix<Scalar, 4, 1>& _Rot_init = Rot_init.Data();

  // Intermediate terms (160)
  const Scalar _tmp0 = Scalar(1.0) / (fh1);
  const Scalar _tmp1 = _DeltaRot[0] * _Rot_init[2] + _DeltaRot[1] * _Rot_init[3] -
                       _DeltaRot[2] * _Rot_init[0] + _DeltaRot[3] * _Rot_init[1];
  const Scalar _tmp2 = -2 * std::pow(_tmp1, Scalar(2));
  const Scalar _tmp3 = -_DeltaRot[0] * _Rot_init[1] + _DeltaRot[1] * _Rot_init[0] +
                       _DeltaRot[2] * _Rot_init[3] + _DeltaRot[3] * _Rot_init[2];
  const Scalar _tmp4 = 1 - 2 * std::pow(_tmp3, Scalar(2));
  const Scalar _tmp5 = Scalar(0.20999999999999999) * _tmp2 + Scalar(0.20999999999999999) * _tmp4;
  const Scalar _tmp6 = _DeltaRot[0] * _Rot_init[3] - _DeltaRot[1] * _Rot_init[2] +
                       _DeltaRot[2] * _Rot_init[1] + _DeltaRot[3] * _Rot_init[0];
  const Scalar _tmp7 = 2 * _tmp3 * _tmp6;
  const Scalar _tmp8 = -2 * _DeltaRot[0] * _Rot_init[0] - 2 * _DeltaRot[1] * _Rot_init[1] -
                       2 * _DeltaRot[2] * _Rot_init[2] + 2 * _DeltaRot[3] * _Rot_init[3];
  const Scalar _tmp9 = _tmp1 * _tmp8;
  const Scalar _tmp10 = _tmp7 + _tmp9;
  const Scalar _tmp11 = -Scalar(0.010999999999999999) * _tmp10;
  const Scalar _tmp12 = 2 * _tmp1;
  const Scalar _tmp13 = _tmp12 * _tmp6;
  const Scalar _tmp14 = _tmp3 * _tmp8;
  const Scalar _tmp15 = Scalar(0.20999999999999999) * _tmp13 - Scalar(0.20999999999999999) * _tmp14;
  const Scalar _tmp16 = _tmp11 + _tmp15;
  const Scalar _tmp17 = _tmp16 + _tmp5;
  const Scalar _tmp18 = _tmp17 + position_vector(0, 0);
  const Scalar _tmp19 = -2 * std::pow(_tmp6, Scalar(2));
  const Scalar _tmp20 = Scalar(0.20999999999999999) * _tmp19 + Scalar(0.20999999999999999) * _tmp4;
  const Scalar _tmp21 = _tmp12 * _tmp3;
  const Scalar _tmp22 = _tmp6 * _tmp8;
  const Scalar _tmp23 = _tmp21 - _tmp22;
  const Scalar _tmp24 = -Scalar(0.010999999999999999) * _tmp23;
  const Scalar _tmp25 = Scalar(0.20999999999999999) * _tmp13 + Scalar(0.20999999999999999) * _tmp14;
  const Scalar _tmp26 = _tmp24 + _tmp25;
  const Scalar _tmp27 = _tmp20 + _tmp26;
  const Scalar _tmp28 = _tmp27 + position_vector(1, 0);
  const Scalar _tmp29 =
      Scalar(15625.0) * std::pow(Scalar(1 - Scalar(0.0080000000000000002) * _tmp18), Scalar(2)) +
      Scalar(12100.0) * std::pow(Scalar(1 - Scalar(0.0090909090909090905) * _tmp28), Scalar(2));
  const Scalar _tmp30 = std::asinh(_tmp0 * fv1);
  const Scalar _tmp31 = Scalar(9.6622558468725703) * fh1;
  const Scalar _tmp32 = Scalar(0.20999999999999999) * _tmp7 - Scalar(0.20999999999999999) * _tmp9;
  const Scalar _tmp33 = -Scalar(0.010999999999999999) * _tmp19 -
                        Scalar(0.010999999999999999) * _tmp2 + Scalar(-0.010999999999999999);
  const Scalar _tmp34 = Scalar(0.20999999999999999) * _tmp21 + Scalar(0.20999999999999999) * _tmp22;
  const Scalar _tmp35 = _tmp33 + _tmp34;
  const Scalar _tmp36 = _tmp32 + _tmp35;
  const Scalar _tmp37 = -_tmp5;
  const Scalar _tmp38 = _tmp16 + _tmp37;
  const Scalar _tmp39 = _tmp38 + position_vector(0, 0);
  const Scalar _tmp40 = _tmp24 - _tmp25;
  const Scalar _tmp41 = _tmp20 + _tmp40;
  const Scalar _tmp42 = _tmp41 + position_vector(1, 0);
  const Scalar _tmp43 =
      Scalar(12100.0) * std::pow(Scalar(1 - Scalar(0.0090909090909090905) * _tmp42), Scalar(2)) +
      Scalar(15625.0) * std::pow(Scalar(-Scalar(0.0080000000000000002) * _tmp39 - 1), Scalar(2));
  const Scalar _tmp44 = -_tmp20;
  const Scalar _tmp45 = _tmp26 + _tmp44;
  const Scalar _tmp46 = _tmp45 + position_vector(1, 0);
  const Scalar _tmp47 = _tmp46 + Scalar(110.0);
  const Scalar _tmp48 = _tmp11 - _tmp15;
  const Scalar _tmp49 = _tmp48 + _tmp5;
  const Scalar _tmp50 = _tmp49 + position_vector(0, 0);
  const Scalar _tmp51 = _tmp50 + Scalar(-125.0);
  const Scalar _tmp52 = std::pow(Scalar(std::pow(_tmp47, Scalar(2)) + std::pow(_tmp51, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp53 = _tmp51 * _tmp52;
  const Scalar _tmp54 = _tmp47 * _tmp52;
  const Scalar _tmp55 = _tmp42 + Scalar(-110.0);
  const Scalar _tmp56 = _tmp39 + Scalar(125.0);
  const Scalar _tmp57 = Scalar(1.0) / (_tmp56);
  const Scalar _tmp58 = _tmp55 * _tmp57;
  const Scalar _tmp59 = _tmp53 * _tmp58 - _tmp54;
  const Scalar _tmp60 = _tmp40 + _tmp44;
  const Scalar _tmp61 = _tmp60 + position_vector(1, 0);
  const Scalar _tmp62 = _tmp61 + Scalar(110.0);
  const Scalar _tmp63 = _tmp37 + _tmp48;
  const Scalar _tmp64 = _tmp63 + position_vector(0, 0);
  const Scalar _tmp65 = _tmp64 + Scalar(125.0);
  const Scalar _tmp66 = std::pow(Scalar(std::pow(_tmp62, Scalar(2)) + std::pow(_tmp65, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp67 = _tmp65 * _tmp66;
  const Scalar _tmp68 = _tmp62 * _tmp66;
  const Scalar _tmp69 = Scalar(1.0) / (_tmp58 * _tmp67 - _tmp68);
  const Scalar _tmp70 =
      std::sqrt(Scalar(std::pow(_tmp55, Scalar(2)) + std::pow(_tmp56, Scalar(2))));
  const Scalar _tmp71 = Scalar(1.0) / (_tmp70);
  const Scalar _tmp72 = _tmp57 * _tmp70;
  const Scalar _tmp73 = _tmp72 * (_tmp38 * _tmp55 * _tmp71 - _tmp41 * _tmp56 * _tmp71);
  const Scalar _tmp74 = _tmp69 * (_tmp60 * _tmp67 - _tmp63 * _tmp68 + _tmp67 * _tmp73);
  const Scalar _tmp75 = _tmp45 * _tmp53 - _tmp49 * _tmp54 + _tmp53 * _tmp73 - _tmp59 * _tmp74;
  const Scalar _tmp76 = Scalar(1.0) / (_tmp75);
  const Scalar _tmp77 = Scalar(1.0) * _tmp76;
  const Scalar _tmp78 = _tmp67 * _tmp69;
  const Scalar _tmp79 = _tmp59 * _tmp78;
  const Scalar _tmp80 = _tmp28 + Scalar(-110.0);
  const Scalar _tmp81 = _tmp18 + Scalar(-125.0);
  const Scalar _tmp82 = std::pow(Scalar(std::pow(_tmp80, Scalar(2)) + std::pow(_tmp81, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp83 = _tmp81 * _tmp82;
  const Scalar _tmp84 = _tmp80 * _tmp82;
  const Scalar _tmp85 = fh1 * (_tmp17 * _tmp84 - _tmp27 * _tmp83);
  const Scalar _tmp86 = Scalar(1.0) * _tmp41;
  const Scalar _tmp87 = -_tmp86;
  const Scalar _tmp88 = Scalar(1.0) / (_tmp60 + _tmp87);
  const Scalar _tmp89 = Scalar(1.0) * _tmp38;
  const Scalar _tmp90 = _tmp88 * (-_tmp63 + _tmp89);
  const Scalar _tmp91 = -_tmp32;
  const Scalar _tmp92 = _tmp33 - _tmp34;
  const Scalar _tmp93 = _tmp91 + _tmp92;
  const Scalar _tmp94 = _tmp35 + _tmp91;
  const Scalar _tmp95 = _tmp58 * _tmp94;
  const Scalar _tmp96 = _tmp69 * (-_tmp67 * _tmp95 + _tmp68 * _tmp93);
  const Scalar _tmp97 = Scalar(1.0) * _tmp96;
  const Scalar _tmp98 = _tmp69 * (-_tmp67 * _tmp93 + _tmp67 * _tmp94);
  const Scalar _tmp99 = _tmp90 * _tmp97 - Scalar(1.0) * _tmp98;
  const Scalar _tmp100 = _tmp32 + _tmp92;
  const Scalar _tmp101 = _tmp53 * _tmp94;
  const Scalar _tmp102 = _tmp100 * _tmp54 - _tmp101 * _tmp58 - _tmp59 * _tmp96;
  const Scalar _tmp103 = -_tmp100 * _tmp53 + _tmp101 - _tmp102 * _tmp90 - _tmp59 * _tmp98;
  const Scalar _tmp104 = Scalar(1.0) / (_tmp103);
  const Scalar _tmp105 = _tmp104 * _tmp75;
  const Scalar _tmp106 = _tmp103 * _tmp76;
  const Scalar _tmp107 = _tmp106 * (-_tmp105 * _tmp99 - Scalar(1.0) * _tmp74);
  const Scalar _tmp108 = _tmp107 + _tmp99;
  const Scalar _tmp109 = _tmp104 * _tmp59;
  const Scalar _tmp110 = -_tmp108 * _tmp109 + Scalar(1.0);
  const Scalar _tmp111 = _tmp104 * _tmp53;
  const Scalar _tmp112 = _tmp84 * fh1;
  const Scalar _tmp113 = Scalar(19.620000000000001) - fv1;
  const Scalar _tmp114 = _tmp86 * _tmp90 + _tmp89;
  const Scalar _tmp115 = 0;
  const Scalar _tmp116 = _tmp104 * _tmp115;
  const Scalar _tmp117 = _tmp58 * _tmp96 + _tmp95;
  const Scalar _tmp118 = -_tmp117 * _tmp90 + _tmp58 * _tmp98 - _tmp94;
  const Scalar _tmp119 = _tmp106 * (-_tmp105 * _tmp118 + _tmp58 * _tmp74 - _tmp73);
  const Scalar _tmp120 = _tmp118 + _tmp119;
  const Scalar _tmp121 = -_tmp109 * _tmp120 - _tmp58;
  const Scalar _tmp122 = _tmp83 * fh1;
  const Scalar _tmp123 = -_tmp112 * _tmp72 * (_tmp108 * _tmp111 + _tmp110 * _tmp78) -
                         _tmp113 * _tmp72 * (_tmp116 * _tmp53 - _tmp116 * _tmp79) -
                         _tmp122 * _tmp72 * (_tmp111 * _tmp120 + _tmp121 * _tmp78 + Scalar(1.0)) -
                         _tmp72 * _tmp85 * (_tmp53 * _tmp77 - _tmp77 * _tmp79);
  const Scalar _tmp124 = Scalar(1.0) / (_tmp123);
  const Scalar _tmp125 = _tmp45 + _tmp87;
  const Scalar _tmp126 = _tmp125 * _tmp90;
  const Scalar _tmp127 = Scalar(1.0) / (-_tmp126 - _tmp49 + _tmp89);
  const Scalar _tmp128 = _tmp125 * _tmp127;
  const Scalar _tmp129 = _tmp102 * _tmp104;
  const Scalar _tmp130 = _tmp117 + _tmp119 * _tmp128 - _tmp120 * _tmp129;
  const Scalar _tmp131 = Scalar(1.0) * _tmp88;
  const Scalar _tmp132 = Scalar(1.0) * _tmp127;
  const Scalar _tmp133 = _tmp126 * _tmp132 + Scalar(1.0);
  const Scalar _tmp134 = _tmp132 * _tmp90;
  const Scalar _tmp135 = _tmp36 * fh1;
  const Scalar _tmp136 = -_tmp135 * _tmp84 - Scalar(2.3544) * _tmp23 - _tmp27 * fv1;
  const Scalar _tmp137 = _tmp107 * _tmp128 - _tmp108 * _tmp129 - _tmp97;
  const Scalar _tmp138 = Scalar(2.3544) * _tmp10 + _tmp135 * _tmp83 + _tmp17 * fv1;
  const Scalar _tmp139 = _tmp125 * _tmp132;
  const Scalar _tmp140 = -_tmp102 * _tmp77 + _tmp106 * _tmp139;
  const Scalar _tmp141 = _tmp106 * _tmp132;
  const Scalar _tmp142 = _tmp114 * _tmp127;
  const Scalar _tmp143 = -_tmp115 * _tmp129 - _tmp125 * _tmp142 + _tmp87;
  const Scalar _tmp144 = std::asinh(
      _tmp124 * (Scalar(1.0) * _tmp112 * (_tmp107 * _tmp132 - _tmp131 * _tmp137) +
                 Scalar(1.0) * _tmp113 * (-_tmp114 * _tmp132 - _tmp131 * _tmp143 + Scalar(1.0)) +
                 Scalar(1.0) * _tmp122 * (_tmp119 * _tmp132 - _tmp130 * _tmp131) +
                 Scalar(1.0) * _tmp136 * (-_tmp131 * _tmp133 + _tmp134) +
                 Scalar(1.0) * _tmp138 * (-_tmp132 + _tmp139 * _tmp88) +
                 Scalar(1.0) * _tmp85 * (-_tmp131 * _tmp140 + _tmp141)));
  const Scalar _tmp145 = Scalar(9.6622558468725703) * _tmp123;
  const Scalar _tmp146 =
      Scalar(12100.0) * std::pow(Scalar(-Scalar(0.0090909090909090905) * _tmp61 - 1), Scalar(2)) +
      Scalar(15625.0) * std::pow(Scalar(-Scalar(0.0080000000000000002) * _tmp64 - 1), Scalar(2));
  const Scalar _tmp147 = _tmp132 * _tmp138;
  const Scalar _tmp148 = _tmp113 * _tmp116;
  const Scalar _tmp149 = _tmp59 * _tmp69;
  const Scalar _tmp150 = _tmp77 * _tmp85;
  const Scalar _tmp151 = _tmp110 * _tmp112 * _tmp69 + _tmp121 * _tmp122 * _tmp69 -
                         _tmp148 * _tmp149 - _tmp149 * _tmp150;
  const Scalar _tmp152 = Scalar(1.0) / (_tmp151);
  const Scalar _tmp153 =
      std::asinh(_tmp152 * (_tmp112 * _tmp137 * _tmp88 + _tmp113 * _tmp143 * _tmp88 +
                            _tmp122 * _tmp130 * _tmp88 - _tmp125 * _tmp147 * _tmp88 +
                            _tmp133 * _tmp136 * _tmp88 + _tmp140 * _tmp85 * _tmp88));
  const Scalar _tmp154 = Scalar(9.6622558468725703) * _tmp151;
  const Scalar _tmp155 =
      _tmp104 * _tmp108 * _tmp112 + _tmp104 * _tmp120 * _tmp122 + _tmp148 + _tmp150;
  const Scalar _tmp156 = Scalar(1.0) / (_tmp155);
  const Scalar _tmp157 = std::asinh(_tmp156 * (-_tmp107 * _tmp112 * _tmp127 + _tmp113 * _tmp142 -
                                               _tmp119 * _tmp122 * _tmp127 - _tmp134 * _tmp136 -
                                               _tmp141 * _tmp85 + _tmp147));
  const Scalar _tmp158 = Scalar(9.6622558468725703) * _tmp155;
  const Scalar _tmp159 =
      Scalar(15625.0) * std::pow(Scalar(1 - Scalar(0.0080000000000000002) * _tmp50), Scalar(2)) +
      Scalar(12100.0) * std::pow(Scalar(-Scalar(0.0090909090909090905) * _tmp46 - 1), Scalar(2));

  // Output terms (1)
  Eigen::Matrix<Scalar, 4, 1> _res;

  _res(0, 0) =
      _tmp31 * (-std::sinh(Scalar(1.0) * _tmp30) -
                std::sinh(Scalar(0.1034955) * _tmp0 * (-std::sqrt(_tmp29) - _tmp30 * _tmp31))) -
      Scalar(48.0) * std::sqrt(Scalar(
                         Scalar(0.00043402777777777775) * _tmp29 +
                         std::pow(Scalar(-Scalar(0.020833333333333332) * _tmp36 -
                                         Scalar(0.020833333333333332) * position_vector(2, 0) + 1),
                                  Scalar(2))));
  _res(1, 0) =
      _tmp145 *
          (-std::sinh(Scalar(1.0) * _tmp144) -
           std::sinh(Scalar(0.1034955) * _tmp124 * (-_tmp144 * _tmp145 - std::sqrt(_tmp43)))) -
      Scalar(48.0) * std::sqrt(Scalar(
                         Scalar(0.00043402777777777775) * _tmp43 +
                         std::pow(Scalar(-Scalar(0.020833333333333332) * _tmp94 -
                                         Scalar(0.020833333333333332) * position_vector(2, 0) + 1),
                                  Scalar(2))));
  _res(2, 0) =
      _tmp154 *
          (-std::sinh(Scalar(1.0) * _tmp153) -
           std::sinh(Scalar(0.1034955) * _tmp152 * (-std::sqrt(_tmp146) - _tmp153 * _tmp154))) -
      Scalar(48.0) * std::sqrt(Scalar(
                         Scalar(0.00043402777777777775) * _tmp146 +
                         std::pow(Scalar(-Scalar(0.020833333333333332) * _tmp93 -
                                         Scalar(0.020833333333333332) * position_vector(2, 0) + 1),
                                  Scalar(2))));
  _res(3, 0) =
      _tmp158 *
          (-std::sinh(Scalar(1.0) * _tmp157) -
           std::sinh(Scalar(0.1034955) * _tmp156 * (-_tmp157 * _tmp158 - std::sqrt(_tmp159)))) -
      Scalar(48.0) * std::sqrt(Scalar(
                         Scalar(0.00043402777777777775) * _tmp159 +
                         std::pow(Scalar(-Scalar(0.020833333333333332) * _tmp100 -
                                         Scalar(0.020833333333333332) * position_vector(2, 0) + 1),
                                  Scalar(2))));

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
