// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

#include <sym/rot3.h>

namespace sym {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: IK_residual_func_cost2_wrt_fv1_Nl14
 *
 * Args:
 *     fh1: Scalar
 *     fv1: Scalar
 *     DeltaRot: Rot3
 *     position_vector: Matrix31
 *     Rot_init: Rot3
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix41
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 4, 1> IkResidualFuncCost2WrtFv1Nl14(
    const Scalar fh1, const Scalar fv1, const sym::Rot3<Scalar>& DeltaRot,
    const Eigen::Matrix<Scalar, 3, 1>& position_vector, const sym::Rot3<Scalar>& Rot_init,
    const Scalar epsilon) {
  // Total ops: 593

  // Unused inputs
  (void)epsilon;

  // Input arrays
  const Eigen::Matrix<Scalar, 4, 1>& _DeltaRot = DeltaRot.Data();
  const Eigen::Matrix<Scalar, 4, 1>& _Rot_init = Rot_init.Data();

  // Intermediate terms (189)
  const Scalar _tmp0 = Scalar(1.0) / (fh1);
  const Scalar _tmp1 = std::asinh(_tmp0 * fv1);
  const Scalar _tmp2 = Scalar(1.0) * _tmp0 /
                       std::sqrt(Scalar(1 + std::pow(fv1, Scalar(2)) / std::pow(fh1, Scalar(2))));
  const Scalar _tmp3 = -_DeltaRot[0] * _Rot_init[1] + _DeltaRot[1] * _Rot_init[0] +
                       _DeltaRot[2] * _Rot_init[3] + _DeltaRot[3] * _Rot_init[2];
  const Scalar _tmp4 = -2 * std::pow(_tmp3, Scalar(2));
  const Scalar _tmp5 = _DeltaRot[0] * _Rot_init[2] + _DeltaRot[1] * _Rot_init[3] -
                       _DeltaRot[2] * _Rot_init[0] + _DeltaRot[3] * _Rot_init[1];
  const Scalar _tmp6 = 1 - 2 * std::pow(_tmp5, Scalar(2));
  const Scalar _tmp7 = Scalar(0.20999999999999999) * _tmp4 + Scalar(0.20999999999999999) * _tmp6;
  const Scalar _tmp8 = _DeltaRot[0] * _Rot_init[3] - _DeltaRot[1] * _Rot_init[2] +
                       _DeltaRot[2] * _Rot_init[1] + _DeltaRot[3] * _Rot_init[0];
  const Scalar _tmp9 = 2 * _tmp3;
  const Scalar _tmp10 = _tmp8 * _tmp9;
  const Scalar _tmp11 = -_DeltaRot[0] * _Rot_init[0] - _DeltaRot[1] * _Rot_init[1] -
                        _DeltaRot[2] * _Rot_init[2] + _DeltaRot[3] * _Rot_init[3];
  const Scalar _tmp12 = 2 * _tmp5;
  const Scalar _tmp13 = _tmp11 * _tmp12;
  const Scalar _tmp14 = _tmp10 + _tmp13;
  const Scalar _tmp15 = -Scalar(0.010999999999999999) * _tmp14;
  const Scalar _tmp16 = _tmp12 * _tmp8;
  const Scalar _tmp17 = _tmp11 * _tmp9;
  const Scalar _tmp18 = Scalar(0.20999999999999999) * _tmp16 - Scalar(0.20999999999999999) * _tmp17;
  const Scalar _tmp19 = _tmp15 + _tmp18;
  const Scalar _tmp20 = _tmp19 + _tmp7;
  const Scalar _tmp21 = _tmp20 + position_vector(0, 0);
  const Scalar _tmp22 = -2 * std::pow(_tmp8, Scalar(2));
  const Scalar _tmp23 = Scalar(0.20999999999999999) * _tmp22 + Scalar(0.20999999999999999) * _tmp4 +
                        Scalar(0.20999999999999999);
  const Scalar _tmp24 = _tmp12 * _tmp3;
  const Scalar _tmp25 = 2 * _tmp11 * _tmp8;
  const Scalar _tmp26 = _tmp24 - _tmp25;
  const Scalar _tmp27 = Scalar(0.010999999999999999) * _tmp26;
  const Scalar _tmp28 = -_tmp27;
  const Scalar _tmp29 = Scalar(0.20999999999999999) * _tmp16 + Scalar(0.20999999999999999) * _tmp17;
  const Scalar _tmp30 = _tmp28 + _tmp29;
  const Scalar _tmp31 = _tmp23 + _tmp30;
  const Scalar _tmp32 = _tmp31 + position_vector(1, 0);
  const Scalar _tmp33 = Scalar(9.6622558468725703) * fh1;
  const Scalar _tmp34 = _tmp32 + Scalar(-110.0);
  const Scalar _tmp35 = _tmp21 + Scalar(-125.0);
  const Scalar _tmp36 = std::pow(Scalar(std::pow(_tmp34, Scalar(2)) + std::pow(_tmp35, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp37 = _tmp34 * _tmp36;
  const Scalar _tmp38 = Scalar(0.20999999999999999) * _tmp24 + Scalar(0.20999999999999999) * _tmp25;
  const Scalar _tmp39 =
      -Scalar(0.010999999999999999) * _tmp22 - Scalar(0.010999999999999999) * _tmp6;
  const Scalar _tmp40 = Scalar(0.20999999999999999) * _tmp10 - Scalar(0.20999999999999999) * _tmp13;
  const Scalar _tmp41 = _tmp39 + _tmp40;
  const Scalar _tmp42 = fh1 * (_tmp38 + _tmp41);
  const Scalar _tmp43 = -Scalar(2.3544) * _tmp26 - _tmp31 * fv1 - _tmp37 * _tmp42;
  const Scalar _tmp44 = -_tmp7;
  const Scalar _tmp45 = _tmp19 + _tmp44;
  const Scalar _tmp46 = _tmp15 - _tmp18;
  const Scalar _tmp47 = _tmp46 + _tmp7;
  const Scalar _tmp48 = Scalar(1.0) * _tmp47;
  const Scalar _tmp49 = -_tmp23;
  const Scalar _tmp50 = _tmp30 + _tmp49;
  const Scalar _tmp51 = Scalar(1.0) * _tmp50;
  const Scalar _tmp52 = -_tmp51;
  const Scalar _tmp53 = -_tmp29;
  const Scalar _tmp54 = _tmp28 + _tmp53;
  const Scalar _tmp55 = _tmp23 + _tmp54;
  const Scalar _tmp56 = _tmp52 + _tmp55;
  const Scalar _tmp57 = _tmp49 + _tmp54;
  const Scalar _tmp58 = Scalar(1.0) / (_tmp52 + _tmp57);
  const Scalar _tmp59 = _tmp44 + _tmp46;
  const Scalar _tmp60 = _tmp58 * (_tmp48 - _tmp59);
  const Scalar _tmp61 = _tmp56 * _tmp60;
  const Scalar _tmp62 = Scalar(1.0) / (-_tmp45 + _tmp48 - _tmp61);
  const Scalar _tmp63 = Scalar(1.0) * _tmp62;
  const Scalar _tmp64 = _tmp61 * _tmp63 + Scalar(1.0);
  const Scalar _tmp65 = Scalar(1.0) * _tmp58;
  const Scalar _tmp66 = _tmp60 * _tmp63;
  const Scalar _tmp67 = -Scalar(1.0) * _tmp64 * _tmp65 + Scalar(1.0) * _tmp66;
  const Scalar _tmp68 = _tmp35 * _tmp36;
  const Scalar _tmp69 = Scalar(2.3544) * _tmp14 + _tmp20 * fv1 + _tmp42 * _tmp68;
  const Scalar _tmp70 = _tmp56 * _tmp58;
  const Scalar _tmp71 = Scalar(1.0) * _tmp63 * _tmp70 - Scalar(1.0) * _tmp63;
  const Scalar _tmp72 = Scalar(19.620000000000001) - fv1;
  const Scalar _tmp73 = _tmp48 + _tmp51 * _tmp60;
  const Scalar _tmp74 = _tmp39 - _tmp40;
  const Scalar _tmp75 = _tmp38 + _tmp74;
  const Scalar _tmp76 = _tmp55 + position_vector(1, 0);
  const Scalar _tmp77 = _tmp76 + Scalar(-110.0);
  const Scalar _tmp78 = _tmp45 + position_vector(0, 0);
  const Scalar _tmp79 = _tmp78 + Scalar(125.0);
  const Scalar _tmp80 = std::pow(Scalar(std::pow(_tmp77, Scalar(2)) + std::pow(_tmp79, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp81 = _tmp77 * _tmp80;
  const Scalar _tmp82 = _tmp47 + position_vector(0, 0);
  const Scalar _tmp83 = _tmp82 + Scalar(-125.0);
  const Scalar _tmp84 = Scalar(1.0) / (_tmp83);
  const Scalar _tmp85 = _tmp50 + position_vector(1, 0);
  const Scalar _tmp86 = _tmp85 + Scalar(110.0);
  const Scalar _tmp87 = _tmp84 * _tmp86;
  const Scalar _tmp88 = _tmp79 * _tmp80;
  const Scalar _tmp89 = -_tmp81 + _tmp87 * _tmp88;
  const Scalar _tmp90 = _tmp57 + position_vector(1, 0);
  const Scalar _tmp91 = _tmp90 + Scalar(110.0);
  const Scalar _tmp92 = _tmp59 + position_vector(0, 0);
  const Scalar _tmp93 = _tmp92 + Scalar(125.0);
  const Scalar _tmp94 = std::pow(Scalar(std::pow(_tmp91, Scalar(2)) + std::pow(_tmp93, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp95 = _tmp93 * _tmp94;
  const Scalar _tmp96 = _tmp91 * _tmp94;
  const Scalar _tmp97 = Scalar(1.0) / (_tmp87 * _tmp95 - _tmp96);
  const Scalar _tmp98 = -_tmp38;
  const Scalar _tmp99 = _tmp74 + _tmp98;
  const Scalar _tmp100 = _tmp41 + _tmp98;
  const Scalar _tmp101 = _tmp100 * _tmp87;
  const Scalar _tmp102 = _tmp97 * (-_tmp101 * _tmp95 + _tmp96 * _tmp99);
  const Scalar _tmp103 = _tmp100 * _tmp88;
  const Scalar _tmp104 = -_tmp102 * _tmp89 - _tmp103 * _tmp87 + _tmp75 * _tmp81;
  const Scalar _tmp105 = _tmp97 * (_tmp100 * _tmp95 - _tmp95 * _tmp99);
  const Scalar _tmp106 = _tmp103 - _tmp104 * _tmp60 - _tmp105 * _tmp89 - _tmp75 * _tmp88;
  const Scalar _tmp107 = Scalar(1.0) / (_tmp106);
  const Scalar _tmp108 = 0;
  const Scalar _tmp109 = _tmp62 * _tmp73;
  const Scalar _tmp110 = _tmp58 * (-_tmp104 * _tmp108 - _tmp109 * _tmp56 + _tmp52);
  const Scalar _tmp111 = -Scalar(1.0) * _tmp110 - Scalar(1.0) * _tmp63 * _tmp73 + Scalar(1.0);
  const Scalar _tmp112 =
      std::sqrt(Scalar(std::pow(_tmp83, Scalar(2)) + std::pow(_tmp86, Scalar(2))));
  const Scalar _tmp113 = Scalar(1.0) / (_tmp112);
  const Scalar _tmp114 = _tmp112 * _tmp84;
  const Scalar _tmp115 = _tmp114 * (_tmp113 * _tmp47 * _tmp86 - _tmp113 * _tmp50 * _tmp83);
  const Scalar _tmp116 = _tmp97 * (_tmp115 * _tmp95 + _tmp57 * _tmp95 - _tmp59 * _tmp96);
  const Scalar _tmp117 = Scalar(1.0) * _tmp102;
  const Scalar _tmp118 = -Scalar(1.0) * _tmp105 + _tmp117 * _tmp60;
  const Scalar _tmp119 = _tmp115 * _tmp88 - _tmp116 * _tmp89 - _tmp45 * _tmp81 + _tmp55 * _tmp88;
  const Scalar _tmp120 = _tmp107 * _tmp119;
  const Scalar _tmp121 = Scalar(1.0) / (_tmp119);
  const Scalar _tmp122 = _tmp106 * _tmp121;
  const Scalar _tmp123 = _tmp122 * (-Scalar(1.0) * _tmp116 - _tmp118 * _tmp120);
  const Scalar _tmp124 = _tmp107 * (_tmp118 + _tmp123);
  const Scalar _tmp125 = _tmp56 * _tmp62;
  const Scalar _tmp126 = -_tmp104 * _tmp124 - _tmp117 + _tmp123 * _tmp125;
  const Scalar _tmp127 = _tmp37 * fh1;
  const Scalar _tmp128 = _tmp101 + _tmp102 * _tmp87;
  const Scalar _tmp129 = -_tmp100 + _tmp105 * _tmp87 - _tmp128 * _tmp60;
  const Scalar _tmp130 = _tmp122 * (-_tmp115 + _tmp116 * _tmp87 - _tmp120 * _tmp129);
  const Scalar _tmp131 = _tmp107 * (_tmp129 + _tmp130);
  const Scalar _tmp132 = -_tmp104 * _tmp131 + _tmp125 * _tmp130 + _tmp128;
  const Scalar _tmp133 = _tmp68 * fh1;
  const Scalar _tmp134 = _tmp122 * _tmp63;
  const Scalar _tmp135 = Scalar(1.0) * _tmp121;
  const Scalar _tmp136 = -_tmp104 * _tmp135 + _tmp134 * _tmp56;
  const Scalar _tmp137 = fh1 * (_tmp20 * _tmp37 - _tmp31 * _tmp68);
  const Scalar _tmp138 =
      _tmp111 * _tmp72 + Scalar(1.0) * _tmp127 * (_tmp123 * _tmp63 - _tmp126 * _tmp65) +
      Scalar(1.0) * _tmp133 * (_tmp130 * _tmp63 - _tmp132 * _tmp65) +
      Scalar(1.0) * _tmp137 * (_tmp134 - _tmp136 * _tmp65) + _tmp43 * _tmp67 + _tmp69 * _tmp71;
  const Scalar _tmp139 = _tmp95 * _tmp97;
  const Scalar _tmp140 = _tmp139 * _tmp89;
  const Scalar _tmp141 = _tmp114 * (-_tmp108 * _tmp140 + _tmp108 * _tmp88);
  const Scalar _tmp142 = -_tmp124 * _tmp89 + Scalar(1.0);
  const Scalar _tmp143 = -_tmp131 * _tmp89 - _tmp87;
  const Scalar _tmp144 = -_tmp114 * _tmp127 * (_tmp124 * _tmp88 + _tmp139 * _tmp142) -
                         _tmp114 * _tmp133 * (_tmp131 * _tmp88 + _tmp139 * _tmp143 + Scalar(1.0)) -
                         _tmp114 * _tmp137 * (-_tmp135 * _tmp140 + _tmp135 * _tmp88) -
                         _tmp141 * _tmp72;
  const Scalar _tmp145 = Scalar(1.0) / (_tmp144);
  const Scalar _tmp146 = std::asinh(_tmp138 * _tmp145);
  const Scalar _tmp147 = Scalar(9.6622558468725703) * _tmp144;
  const Scalar _tmp148 =
      -_tmp146 * _tmp147 -
      Scalar(125.0) *
          std::sqrt(
              Scalar(std::pow(Scalar(1 - Scalar(0.0080000000000000002) * _tmp82), Scalar(2)) +
                     Scalar(0.77439999999999998) *
                         std::pow(Scalar(-Scalar(0.0090909090909090905) * _tmp85 - 1), Scalar(2))));
  const Scalar _tmp149 = Scalar(0.1034955) * _tmp145;
  const Scalar _tmp150 = _tmp148 * _tmp149;
  const Scalar _tmp151 = std::pow(_tmp144, Scalar(-2));
  const Scalar _tmp152 = _tmp141 * _tmp151;
  const Scalar _tmp153 = _tmp27 + _tmp49 + _tmp53;
  const Scalar _tmp154 =
      (-_tmp138 * _tmp152 + _tmp145 * (-_tmp111 + _tmp153 * _tmp67 + _tmp20 * _tmp71)) /
      std::sqrt(Scalar(std::pow(_tmp138, Scalar(2)) * _tmp151 + 1));
  const Scalar _tmp155 = Scalar(9.6622558468725703) * _tmp141;
  const Scalar _tmp156 = Scalar(1.0) * _tmp146;
  const Scalar _tmp157 = _tmp58 * _tmp64;
  const Scalar _tmp158 = _tmp63 * _tmp69;
  const Scalar _tmp159 = _tmp110 * _tmp72 + _tmp126 * _tmp127 * _tmp58 +
                         _tmp132 * _tmp133 * _tmp58 + _tmp136 * _tmp137 * _tmp58 +
                         _tmp157 * _tmp43 - _tmp158 * _tmp70;
  const Scalar _tmp160 = _tmp135 * _tmp137;
  const Scalar _tmp161 = _tmp89 * _tmp97;
  const Scalar _tmp162 = _tmp108 * _tmp72;
  const Scalar _tmp163 = _tmp127 * _tmp142 * _tmp97 + _tmp133 * _tmp143 * _tmp97 -
                         _tmp160 * _tmp161 - _tmp161 * _tmp162;
  const Scalar _tmp164 = Scalar(1.0) / (_tmp163);
  const Scalar _tmp165 = std::asinh(_tmp159 * _tmp164);
  const Scalar _tmp166 = Scalar(9.6622558468725703) * _tmp163;
  const Scalar _tmp167 =
      -_tmp165 * _tmp166 -
      Scalar(125.0) *
          std::sqrt(
              Scalar(Scalar(0.77439999999999998) *
                         std::pow(Scalar(-Scalar(0.0090909090909090905) * _tmp90 - 1), Scalar(2)) +
                     std::pow(Scalar(-Scalar(0.0080000000000000002) * _tmp92 - 1), Scalar(2))));
  const Scalar _tmp168 = Scalar(0.1034955) * _tmp164;
  const Scalar _tmp169 = _tmp167 * _tmp168;
  const Scalar _tmp170 = Scalar(1.0) * _tmp165;
  const Scalar _tmp171 = Scalar(9.6622558468725703) * _tmp108;
  const Scalar _tmp172 = _tmp161 * _tmp171;
  const Scalar _tmp173 = std::pow(_tmp163, Scalar(-2));
  const Scalar _tmp174 = _tmp20 * _tmp63;
  const Scalar _tmp175 = _tmp108 * _tmp161 * _tmp173;
  const Scalar _tmp176 =
      (-_tmp159 * _tmp175 + _tmp164 * (-_tmp110 + _tmp153 * _tmp157 - _tmp174 * _tmp70)) /
      std::sqrt(Scalar(std::pow(_tmp159, Scalar(2)) * _tmp173 + 1));
  const Scalar _tmp177 = _tmp109 * _tmp72 - _tmp123 * _tmp127 * _tmp62 -
                         _tmp130 * _tmp133 * _tmp62 - _tmp134 * _tmp137 + _tmp158 - _tmp43 * _tmp66;
  const Scalar _tmp178 = _tmp124 * _tmp127 + _tmp131 * _tmp133 + _tmp160 + _tmp162;
  const Scalar _tmp179 = Scalar(1.0) / (_tmp178);
  const Scalar _tmp180 = std::asinh(_tmp177 * _tmp179);
  const Scalar _tmp181 = Scalar(9.6622558468725703) * _tmp178;
  const Scalar _tmp182 =
      -_tmp180 * _tmp181 -
      Scalar(125.0) *
          std::sqrt(
              Scalar(Scalar(0.77439999999999998) *
                         std::pow(Scalar(1 - Scalar(0.0090909090909090905) * _tmp76), Scalar(2)) +
                     std::pow(Scalar(-Scalar(0.0080000000000000002) * _tmp78 - 1), Scalar(2))));
  const Scalar _tmp183 = std::pow(_tmp178, Scalar(-2));
  const Scalar _tmp184 = _tmp108 * _tmp183;
  const Scalar _tmp185 = (_tmp177 * _tmp184 + _tmp179 * (-_tmp109 - _tmp153 * _tmp66 + _tmp174)) /
                         std::sqrt(Scalar(std::pow(_tmp177, Scalar(2)) * _tmp183 + 1));
  const Scalar _tmp186 = Scalar(0.1034955) * _tmp179;
  const Scalar _tmp187 = _tmp182 * _tmp186;
  const Scalar _tmp188 = Scalar(1.0) * _tmp180;

  // Output terms (1)
  Eigen::Matrix<Scalar, 4, 1> _res;

  _res(0, 0) =
      _tmp33 *
      (-_tmp2 * std::cosh(Scalar(1.0) * _tmp1) +
       _tmp2 * std::cosh(Scalar(0.1034955) * _tmp0 *
                         (-_tmp1 * _tmp33 -
                          Scalar(125.0) *
                              std::sqrt(Scalar(
                                  std::pow(Scalar(1 - Scalar(0.0080000000000000002) * _tmp21),
                                           Scalar(2)) +
                                  Scalar(0.77439999999999998) *
                                      std::pow(Scalar(1 - Scalar(0.0090909090909090905) * _tmp32),
                                               Scalar(2)))))));
  _res(1, 0) = _tmp147 * (-Scalar(1.0) * _tmp154 * std::cosh(_tmp156) -
                          (-Scalar(0.1034955) * _tmp148 * _tmp152 +
                           _tmp149 * (-_tmp146 * _tmp155 - _tmp147 * _tmp154)) *
                              std::cosh(_tmp150)) +
               _tmp155 * (-std::sinh(_tmp150) - std::sinh(_tmp156));
  _res(2, 0) = _tmp166 * (-Scalar(1.0) * _tmp176 * std::cosh(_tmp170) -
                          (-Scalar(0.1034955) * _tmp167 * _tmp175 +
                           _tmp168 * (-_tmp165 * _tmp172 - _tmp166 * _tmp176)) *
                              std::cosh(_tmp169)) +
               _tmp172 * (-std::sinh(_tmp169) - std::sinh(_tmp170));
  _res(3, 0) = -_tmp171 * (-std::sinh(_tmp187) - std::sinh(_tmp188)) +
               _tmp181 * (-Scalar(1.0) * _tmp185 * std::cosh(_tmp188) -
                          (Scalar(0.1034955) * _tmp182 * _tmp184 +
                           _tmp186 * (_tmp171 * _tmp180 - _tmp181 * _tmp185)) *
                              std::cosh(_tmp187));

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
