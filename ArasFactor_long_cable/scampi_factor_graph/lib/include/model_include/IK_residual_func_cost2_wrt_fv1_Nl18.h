// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

#include <sym/rot3.h>

namespace sym {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: IK_residual_func_cost2_wrt_fv1_Nl18
 *
 * Args:
 *     fh1: Scalar
 *     fv1: Scalar
 *     DeltaRot: Rot3
 *     position_vector: Matrix31
 *     Rot_init: Rot3
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix41
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 4, 1> IkResidualFuncCost2WrtFv1Nl18(
    const Scalar fh1, const Scalar fv1, const sym::Rot3<Scalar>& DeltaRot,
    const Eigen::Matrix<Scalar, 3, 1>& position_vector, const sym::Rot3<Scalar>& Rot_init,
    const Scalar epsilon) {
  // Total ops: 598

  // Unused inputs
  (void)epsilon;

  // Input arrays
  const Eigen::Matrix<Scalar, 4, 1>& _DeltaRot = DeltaRot.Data();
  const Eigen::Matrix<Scalar, 4, 1>& _Rot_init = Rot_init.Data();

  // Intermediate terms (193)
  const Scalar _tmp0 = Scalar(1.0) / (fh1);
  const Scalar _tmp1 = std::asinh(_tmp0 * fv1);
  const Scalar _tmp2 = Scalar(1.0) * _tmp0 /
                       std::sqrt(Scalar(1 + std::pow(fv1, Scalar(2)) / std::pow(fh1, Scalar(2))));
  const Scalar _tmp3 = _DeltaRot[0] * _Rot_init[2] + _DeltaRot[1] * _Rot_init[3] -
                       _DeltaRot[2] * _Rot_init[0] + _DeltaRot[3] * _Rot_init[1];
  const Scalar _tmp4 = _DeltaRot[0] * _Rot_init[3] - _DeltaRot[1] * _Rot_init[2] +
                       _DeltaRot[2] * _Rot_init[1] + _DeltaRot[3] * _Rot_init[0];
  const Scalar _tmp5 = 2 * _tmp3 * _tmp4;
  const Scalar _tmp6 = -_DeltaRot[0] * _Rot_init[1] + _DeltaRot[1] * _Rot_init[0] +
                       _DeltaRot[2] * _Rot_init[3] + _DeltaRot[3] * _Rot_init[2];
  const Scalar _tmp7 = -2 * _DeltaRot[0] * _Rot_init[0] - 2 * _DeltaRot[1] * _Rot_init[1] -
                       2 * _DeltaRot[2] * _Rot_init[2] + 2 * _DeltaRot[3] * _Rot_init[3];
  const Scalar _tmp8 = _tmp6 * _tmp7;
  const Scalar _tmp9 = Scalar(0.20999999999999999) * _tmp5 - Scalar(0.20999999999999999) * _tmp8;
  const Scalar _tmp10 = 2 * _tmp6;
  const Scalar _tmp11 = _tmp10 * _tmp4;
  const Scalar _tmp12 = _tmp3 * _tmp7;
  const Scalar _tmp13 = _tmp11 + _tmp12;
  const Scalar _tmp14 = -Scalar(0.010999999999999999) * _tmp13;
  const Scalar _tmp15 = -2 * std::pow(_tmp3, Scalar(2));
  const Scalar _tmp16 = 1 - 2 * std::pow(_tmp6, Scalar(2));
  const Scalar _tmp17 = Scalar(0.20999999999999999) * _tmp15 + Scalar(0.20999999999999999) * _tmp16;
  const Scalar _tmp18 = _tmp14 - _tmp17;
  const Scalar _tmp19 = _tmp18 + _tmp9;
  const Scalar _tmp20 = _tmp19 + position_vector(0, 0);
  const Scalar _tmp21 = Scalar(0.20999999999999999) * _tmp5 + Scalar(0.20999999999999999) * _tmp8;
  const Scalar _tmp22 = -_tmp21;
  const Scalar _tmp23 = -2 * std::pow(_tmp4, Scalar(2));
  const Scalar _tmp24 = Scalar(0.20999999999999999) * _tmp16 + Scalar(0.20999999999999999) * _tmp23;
  const Scalar _tmp25 = _tmp10 * _tmp3;
  const Scalar _tmp26 = _tmp4 * _tmp7;
  const Scalar _tmp27 = _tmp25 - _tmp26;
  const Scalar _tmp28 = Scalar(0.010999999999999999) * _tmp27;
  const Scalar _tmp29 = -_tmp28;
  const Scalar _tmp30 = _tmp24 + _tmp29;
  const Scalar _tmp31 = _tmp22 + _tmp30;
  const Scalar _tmp32 = _tmp31 + position_vector(1, 0);
  const Scalar _tmp33 = Scalar(9.6622558468725703) * fh1;
  const Scalar _tmp34 = _tmp20 + Scalar(125.0);
  const Scalar _tmp35 = _tmp32 + Scalar(-110.0);
  const Scalar _tmp36 = std::pow(Scalar(std::pow(_tmp34, Scalar(2)) + std::pow(_tmp35, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp37 = _tmp34 * _tmp36;
  const Scalar _tmp38 = Scalar(0.20999999999999999) * _tmp11 - Scalar(0.20999999999999999) * _tmp12;
  const Scalar _tmp39 = -_tmp38;
  const Scalar _tmp40 = -Scalar(0.010999999999999999) * _tmp15 -
                        Scalar(0.010999999999999999) * _tmp23 + Scalar(-0.010999999999999999);
  const Scalar _tmp41 = Scalar(0.20999999999999999) * _tmp25 + Scalar(0.20999999999999999) * _tmp26;
  const Scalar _tmp42 = _tmp40 + _tmp41;
  const Scalar _tmp43 = fh1 * (_tmp39 + _tmp42);
  const Scalar _tmp44 = Scalar(2.3544) * _tmp13 + _tmp19 * fv1 + _tmp37 * _tmp43;
  const Scalar _tmp45 = -_tmp24;
  const Scalar _tmp46 = _tmp22 + _tmp29 + _tmp45;
  const Scalar _tmp47 = Scalar(1.0) * _tmp46;
  const Scalar _tmp48 = -_tmp47;
  const Scalar _tmp49 = _tmp21 + _tmp30;
  const Scalar _tmp50 = _tmp48 + _tmp49;
  const Scalar _tmp51 = _tmp21 + _tmp45;
  const Scalar _tmp52 = _tmp29 + _tmp51;
  const Scalar _tmp53 = Scalar(1.0) / (_tmp48 + _tmp52);
  const Scalar _tmp54 = -_tmp9;
  const Scalar _tmp55 = _tmp14 + _tmp17;
  const Scalar _tmp56 = _tmp54 + _tmp55;
  const Scalar _tmp57 = _tmp18 + _tmp54;
  const Scalar _tmp58 = Scalar(1.0) * _tmp57;
  const Scalar _tmp59 = _tmp53 * (-_tmp56 + _tmp58);
  const Scalar _tmp60 = _tmp50 * _tmp59;
  const Scalar _tmp61 = _tmp55 + _tmp9;
  const Scalar _tmp62 = Scalar(1.0) / (_tmp58 - _tmp60 - _tmp61);
  const Scalar _tmp63 = Scalar(1.0) * _tmp62;
  const Scalar _tmp64 = _tmp50 * _tmp53;
  const Scalar _tmp65 = Scalar(1.0) * _tmp63 * _tmp64 - Scalar(1.0) * _tmp63;
  const Scalar _tmp66 = _tmp52 + position_vector(1, 0);
  const Scalar _tmp67 = _tmp66 + Scalar(110.0);
  const Scalar _tmp68 = _tmp56 + position_vector(0, 0);
  const Scalar _tmp69 = _tmp68 + Scalar(-125.0);
  const Scalar _tmp70 = std::pow(Scalar(std::pow(_tmp67, Scalar(2)) + std::pow(_tmp69, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp71 = _tmp69 * _tmp70;
  const Scalar _tmp72 = _tmp46 + position_vector(1, 0);
  const Scalar _tmp73 = _tmp72 + Scalar(110.0);
  const Scalar _tmp74 = _tmp57 + position_vector(0, 0);
  const Scalar _tmp75 = _tmp74 + Scalar(125.0);
  const Scalar _tmp76 =
      std::sqrt(Scalar(std::pow(_tmp73, Scalar(2)) + std::pow(_tmp75, Scalar(2))));
  const Scalar _tmp77 = Scalar(1.0) / (_tmp76);
  const Scalar _tmp78 = Scalar(1.0) / (_tmp75);
  const Scalar _tmp79 = _tmp76 * _tmp78;
  const Scalar _tmp80 = _tmp79 * (-_tmp46 * _tmp75 * _tmp77 + _tmp57 * _tmp73 * _tmp77);
  const Scalar _tmp81 = _tmp67 * _tmp70;
  const Scalar _tmp82 = _tmp52 * _tmp71 - _tmp56 * _tmp81 + _tmp71 * _tmp80;
  const Scalar _tmp83 = _tmp73 * _tmp78;
  const Scalar _tmp84 = Scalar(1.0) / (_tmp71 * _tmp83 - _tmp81);
  const Scalar _tmp85 = _tmp83 * _tmp84;
  const Scalar _tmp86 = _tmp40 - _tmp41;
  const Scalar _tmp87 = _tmp38 + _tmp86;
  const Scalar _tmp88 = _tmp39 + _tmp86;
  const Scalar _tmp89 = -_tmp71 * _tmp87 + _tmp71 * _tmp88;
  const Scalar _tmp90 = _tmp83 * _tmp88;
  const Scalar _tmp91 = -_tmp71 * _tmp90 + _tmp81 * _tmp87;
  const Scalar _tmp92 = _tmp85 * _tmp91 + _tmp90;
  const Scalar _tmp93 = -_tmp59 * _tmp92 + _tmp85 * _tmp89 - _tmp88;
  const Scalar _tmp94 = _tmp49 + position_vector(1, 0);
  const Scalar _tmp95 = _tmp94 + Scalar(-110.0);
  const Scalar _tmp96 = _tmp61 + position_vector(0, 0);
  const Scalar _tmp97 = _tmp96 + Scalar(-125.0);
  const Scalar _tmp98 = std::pow(Scalar(std::pow(_tmp95, Scalar(2)) + std::pow(_tmp97, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp99 = _tmp97 * _tmp98;
  const Scalar _tmp100 = _tmp38 + _tmp42;
  const Scalar _tmp101 = _tmp95 * _tmp98;
  const Scalar _tmp102 = -_tmp101 + _tmp83 * _tmp99;
  const Scalar _tmp103 = _tmp102 * _tmp84;
  const Scalar _tmp104 = _tmp100 * _tmp101 - _tmp103 * _tmp91 - _tmp90 * _tmp99;
  const Scalar _tmp105 = -_tmp100 * _tmp99 - _tmp103 * _tmp89 - _tmp104 * _tmp59 + _tmp88 * _tmp99;
  const Scalar _tmp106 = Scalar(1.0) / (_tmp105);
  const Scalar _tmp107 = -_tmp101 * _tmp61 - _tmp103 * _tmp82 + _tmp49 * _tmp99 + _tmp80 * _tmp99;
  const Scalar _tmp108 = _tmp106 * _tmp107;
  const Scalar _tmp109 = Scalar(1.0) / (_tmp107);
  const Scalar _tmp110 = _tmp105 * _tmp109;
  const Scalar _tmp111 = _tmp110 * (-_tmp108 * _tmp93 - _tmp80 + _tmp82 * _tmp85);
  const Scalar _tmp112 = _tmp111 + _tmp93;
  const Scalar _tmp113 = _tmp104 * _tmp106;
  const Scalar _tmp114 = _tmp50 * _tmp62;
  const Scalar _tmp115 = _tmp111 * _tmp114 - _tmp112 * _tmp113 + _tmp92;
  const Scalar _tmp116 = Scalar(1.0) * _tmp53;
  const Scalar _tmp117 = Scalar(1.0) * fh1;
  const Scalar _tmp118 = Scalar(1.0) * _tmp84;
  const Scalar _tmp119 = _tmp118 * _tmp91;
  const Scalar _tmp120 = -_tmp118 * _tmp89 + _tmp119 * _tmp59;
  const Scalar _tmp121 = _tmp110 * (-_tmp108 * _tmp120 - _tmp118 * _tmp82);
  const Scalar _tmp122 = _tmp106 * (_tmp120 + _tmp121);
  const Scalar _tmp123 = -_tmp104 * _tmp122 + _tmp114 * _tmp121 - _tmp119;
  const Scalar _tmp124 = _tmp35 * _tmp36;
  const Scalar _tmp125 = _tmp110 * _tmp63;
  const Scalar _tmp126 = Scalar(1.0) * _tmp109;
  const Scalar _tmp127 = -_tmp104 * _tmp126 + _tmp125 * _tmp50;
  const Scalar _tmp128 = fh1 * (_tmp124 * _tmp19 - _tmp31 * _tmp37);
  const Scalar _tmp129 = -_tmp124 * _tmp43 - Scalar(2.3544) * _tmp27 - _tmp31 * fv1;
  const Scalar _tmp130 = _tmp60 * _tmp63 + Scalar(1.0);
  const Scalar _tmp131 = _tmp59 * _tmp63;
  const Scalar _tmp132 = -Scalar(1.0) * _tmp116 * _tmp130 + Scalar(1.0) * _tmp131;
  const Scalar _tmp133 = Scalar(19.620000000000001) - fv1;
  const Scalar _tmp134 = _tmp47 * _tmp59 + _tmp58;
  const Scalar _tmp135 = 0;
  const Scalar _tmp136 = _tmp134 * _tmp62;
  const Scalar _tmp137 = _tmp53 * (-_tmp113 * _tmp135 - _tmp136 * _tmp50 + _tmp48);
  const Scalar _tmp138 = -Scalar(1.0) * _tmp134 * _tmp63 - Scalar(1.0) * _tmp137 + Scalar(1.0);
  const Scalar _tmp139 = _tmp117 * _tmp124 * (-_tmp116 * _tmp123 + _tmp121 * _tmp63) +
                         _tmp117 * _tmp37 * (_tmp111 * _tmp63 - _tmp115 * _tmp116) +
                         Scalar(1.0) * _tmp128 * (-_tmp116 * _tmp127 + _tmp125) +
                         _tmp129 * _tmp132 + _tmp133 * _tmp138 + _tmp44 * _tmp65;
  const Scalar _tmp140 = _tmp106 * _tmp112;
  const Scalar _tmp141 = -_tmp102 * _tmp140 - _tmp83;
  const Scalar _tmp142 = _tmp71 * _tmp84;
  const Scalar _tmp143 = _tmp37 * fh1;
  const Scalar _tmp144 = _tmp106 * _tmp135;
  const Scalar _tmp145 = _tmp103 * _tmp144;
  const Scalar _tmp146 = _tmp79 * (_tmp144 * _tmp99 - _tmp145 * _tmp71);
  const Scalar _tmp147 = -_tmp102 * _tmp122 + Scalar(1.0);
  const Scalar _tmp148 = _tmp124 * fh1;
  const Scalar _tmp149 = -_tmp128 * _tmp79 * (-_tmp103 * _tmp126 * _tmp71 + _tmp126 * _tmp99) -
                         _tmp133 * _tmp146 -
                         _tmp143 * _tmp79 * (_tmp140 * _tmp99 + _tmp141 * _tmp142 + Scalar(1.0)) -
                         _tmp148 * _tmp79 * (_tmp122 * _tmp99 + _tmp142 * _tmp147);
  const Scalar _tmp150 = Scalar(1.0) / (_tmp149);
  const Scalar _tmp151 = std::asinh(_tmp139 * _tmp150);
  const Scalar _tmp152 = Scalar(9.6622558468725703) * _tmp149;
  const Scalar _tmp153 =
      -_tmp151 * _tmp152 -
      Scalar(125.0) *
          std::sqrt(
              Scalar(Scalar(0.77439999999999998) *
                         std::pow(Scalar(-Scalar(0.0090909090909090905) * _tmp72 - 1), Scalar(2)) +
                     std::pow(Scalar(-Scalar(0.0080000000000000002) * _tmp74 - 1), Scalar(2))));
  const Scalar _tmp154 = Scalar(0.1034955) * _tmp150;
  const Scalar _tmp155 = _tmp153 * _tmp154;
  const Scalar _tmp156 = Scalar(9.6622558468725703) * _tmp146;
  const Scalar _tmp157 = std::pow(_tmp149, Scalar(-2));
  const Scalar _tmp158 = _tmp146 * _tmp157;
  const Scalar _tmp159 = _tmp28 + _tmp51;
  const Scalar _tmp160 =
      (-_tmp139 * _tmp158 + _tmp150 * (_tmp132 * _tmp159 - _tmp138 + _tmp19 * _tmp65)) /
      std::sqrt(Scalar(std::pow(_tmp139, Scalar(2)) * _tmp157 + 1));
  const Scalar _tmp161 = Scalar(1.0) * _tmp151;
  const Scalar _tmp162 = _tmp130 * _tmp53;
  const Scalar _tmp163 = _tmp44 * _tmp63;
  const Scalar _tmp164 = _tmp115 * _tmp143 * _tmp53 + _tmp123 * _tmp148 * _tmp53 +
                         _tmp127 * _tmp128 * _tmp53 + _tmp129 * _tmp162 + _tmp133 * _tmp137 -
                         _tmp163 * _tmp64;
  const Scalar _tmp165 = _tmp126 * _tmp128;
  const Scalar _tmp166 = _tmp133 * _tmp144;
  const Scalar _tmp167 = -_tmp103 * _tmp165 - _tmp103 * _tmp166 + _tmp141 * _tmp143 * _tmp84 +
                         _tmp147 * _tmp148 * _tmp84;
  const Scalar _tmp168 = Scalar(1.0) / (_tmp167);
  const Scalar _tmp169 = std::asinh(_tmp164 * _tmp168);
  const Scalar _tmp170 = Scalar(9.6622558468725703) * _tmp167;
  const Scalar _tmp171 =
      -_tmp169 * _tmp170 -
      Scalar(125.0) *
          std::sqrt(
              Scalar(std::pow(Scalar(1 - Scalar(0.0080000000000000002) * _tmp68), Scalar(2)) +
                     Scalar(0.77439999999999998) *
                         std::pow(Scalar(-Scalar(0.0090909090909090905) * _tmp66 - 1), Scalar(2))));
  const Scalar _tmp172 = Scalar(0.1034955) * _tmp168;
  const Scalar _tmp173 = _tmp171 * _tmp172;
  const Scalar _tmp174 = Scalar(1.0) * _tmp169;
  const Scalar _tmp175 = Scalar(9.6622558468725703) * _tmp144;
  const Scalar _tmp176 = _tmp103 * _tmp175;
  const Scalar _tmp177 = std::pow(_tmp167, Scalar(-2));
  const Scalar _tmp178 = _tmp19 * _tmp63;
  const Scalar _tmp179 = _tmp145 * _tmp177;
  const Scalar _tmp180 =
      (-_tmp164 * _tmp179 + _tmp168 * (-_tmp137 + _tmp159 * _tmp162 - _tmp178 * _tmp64)) /
      std::sqrt(Scalar(std::pow(_tmp164, Scalar(2)) * _tmp177 + 1));
  const Scalar _tmp181 = -_tmp111 * _tmp143 * _tmp62 - _tmp121 * _tmp148 * _tmp62 -
                         _tmp125 * _tmp128 - _tmp129 * _tmp131 + _tmp133 * _tmp136 + _tmp163;
  const Scalar _tmp182 = _tmp122 * _tmp148 + _tmp140 * _tmp143 + _tmp165 + _tmp166;
  const Scalar _tmp183 = Scalar(1.0) / (_tmp182);
  const Scalar _tmp184 = std::asinh(_tmp181 * _tmp183);
  const Scalar _tmp185 = Scalar(1.0) * _tmp184;
  const Scalar _tmp186 = std::pow(_tmp182, Scalar(-2));
  const Scalar _tmp187 = _tmp144 * _tmp186;
  const Scalar _tmp188 = (_tmp181 * _tmp187 + _tmp183 * (-_tmp131 * _tmp159 - _tmp136 + _tmp178)) /
                         std::sqrt(Scalar(std::pow(_tmp181, Scalar(2)) * _tmp186 + 1));
  const Scalar _tmp189 = Scalar(9.6622558468725703) * _tmp182;
  const Scalar _tmp190 =
      -_tmp184 * _tmp189 -
      Scalar(125.0) *
          std::sqrt(
              Scalar(Scalar(0.77439999999999998) *
                         std::pow(Scalar(1 - Scalar(0.0090909090909090905) * _tmp94), Scalar(2)) +
                     std::pow(Scalar(1 - Scalar(0.0080000000000000002) * _tmp96), Scalar(2))));
  const Scalar _tmp191 = Scalar(0.1034955) * _tmp183;
  const Scalar _tmp192 = _tmp190 * _tmp191;

  // Output terms (1)
  Eigen::Matrix<Scalar, 4, 1> _res;

  _res(0, 0) =
      _tmp33 *
      (-_tmp2 * std::cosh(Scalar(1.0) * _tmp1) +
       _tmp2 * std::cosh(Scalar(0.1034955) * _tmp0 *
                         (-_tmp1 * _tmp33 -
                          Scalar(125.0) *
                              std::sqrt(Scalar(
                                  Scalar(0.77439999999999998) *
                                      std::pow(Scalar(1 - Scalar(0.0090909090909090905) * _tmp32),
                                               Scalar(2)) +
                                  std::pow(Scalar(-Scalar(0.0080000000000000002) * _tmp20 - 1),
                                           Scalar(2)))))));
  _res(1, 0) = _tmp152 * (-Scalar(1.0) * _tmp160 * std::cosh(_tmp161) -
                          (-Scalar(0.1034955) * _tmp153 * _tmp158 +
                           _tmp154 * (-_tmp151 * _tmp156 - _tmp152 * _tmp160)) *
                              std::cosh(_tmp155)) +
               _tmp156 * (-std::sinh(_tmp155) - std::sinh(_tmp161));
  _res(2, 0) = _tmp170 * (-Scalar(1.0) * _tmp180 * std::cosh(_tmp174) -
                          (-Scalar(0.1034955) * _tmp171 * _tmp179 +
                           _tmp172 * (-_tmp169 * _tmp176 - _tmp170 * _tmp180)) *
                              std::cosh(_tmp173)) +
               _tmp176 * (-std::sinh(_tmp173) - std::sinh(_tmp174));
  _res(3, 0) = -_tmp175 * (-std::sinh(_tmp185) - std::sinh(_tmp192)) +
               _tmp189 * (-Scalar(1.0) * _tmp188 * std::cosh(_tmp185) -
                          (Scalar(0.1034955) * _tmp187 * _tmp190 +
                           _tmp191 * (_tmp175 * _tmp184 - _tmp188 * _tmp189)) *
                              std::cosh(_tmp192));

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
