// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

#include <sym/pose3.h>
#include <sym/rot3.h>

namespace sym {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: FK_residual_func_cost3_wrt_fv1
 *
 * Args:
 *     fh1: Scalar
 *     fv1: Scalar
 *     DeltaRot: Rot3
 *     TransformationMatrix: Pose3
 *     encoder: Matrix41
 *     offset: Matrix41
 *     p_a: Matrix31
 *     p_b: Matrix31
 *     p_c: Matrix31
 *     p_d: Matrix31
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix41
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 4, 1> FkResidualFuncCost3WrtFv1(
    const Scalar fh1, const Scalar fv1, const sym::Rot3<Scalar>& DeltaRot,
    const sym::Pose3<Scalar>& TransformationMatrix, const Eigen::Matrix<Scalar, 4, 1>& encoder,
    const Eigen::Matrix<Scalar, 4, 1>& offset, const Eigen::Matrix<Scalar, 3, 1>& p_a,
    const Eigen::Matrix<Scalar, 3, 1>& p_b, const Eigen::Matrix<Scalar, 3, 1>& p_c,
    const Eigen::Matrix<Scalar, 3, 1>& p_d, const Scalar epsilon) {
  // Total ops: 578

  // Unused inputs
  (void)encoder;
  (void)offset;
  (void)epsilon;

  // Input arrays
  const Eigen::Matrix<Scalar, 4, 1>& _DeltaRot = DeltaRot.Data();
  const Eigen::Matrix<Scalar, 7, 1>& _TransformationMatrix = TransformationMatrix.Data();

  // Intermediate terms (190)
  const Scalar _tmp0 = Scalar(1.0) / (fh1);
  const Scalar _tmp1 = std::asinh(_tmp0 * fv1);
  const Scalar _tmp2 = Scalar(1.0) * _tmp0 /
                       std::sqrt(Scalar(1 + std::pow(fv1, Scalar(2)) / std::pow(fh1, Scalar(2))));
  const Scalar _tmp3 =
      _DeltaRot[0] * _TransformationMatrix[3] - _DeltaRot[1] * _TransformationMatrix[2] +
      _DeltaRot[2] * _TransformationMatrix[1] + _DeltaRot[3] * _TransformationMatrix[0];
  const Scalar _tmp4 =
      _DeltaRot[0] * _TransformationMatrix[2] + _DeltaRot[1] * _TransformationMatrix[3] -
      _DeltaRot[2] * _TransformationMatrix[0] + _DeltaRot[3] * _TransformationMatrix[1];
  const Scalar _tmp5 = 2 * _tmp4;
  const Scalar _tmp6 = _tmp3 * _tmp5;
  const Scalar _tmp7 =
      -_DeltaRot[0] * _TransformationMatrix[1] + _DeltaRot[1] * _TransformationMatrix[0] +
      _DeltaRot[2] * _TransformationMatrix[3] + _DeltaRot[3] * _TransformationMatrix[2];
  const Scalar _tmp8 =
      -2 * _DeltaRot[0] * _TransformationMatrix[0] - 2 * _DeltaRot[1] * _TransformationMatrix[1] -
      2 * _DeltaRot[2] * _TransformationMatrix[2] + 2 * _DeltaRot[3] * _TransformationMatrix[3];
  const Scalar _tmp9 = _tmp7 * _tmp8;
  const Scalar _tmp10 = Scalar(0.20999999999999999) * _tmp6 + Scalar(0.20999999999999999) * _tmp9;
  const Scalar _tmp11 = -_tmp10;
  const Scalar _tmp12 = -2 * std::pow(_tmp3, Scalar(2));
  const Scalar _tmp13 = 1 - 2 * std::pow(_tmp7, Scalar(2));
  const Scalar _tmp14 = Scalar(0.20999999999999999) * _tmp12 + Scalar(0.20999999999999999) * _tmp13;
  const Scalar _tmp15 = _tmp5 * _tmp7;
  const Scalar _tmp16 = _tmp3 * _tmp8;
  const Scalar _tmp17 = _tmp15 - _tmp16;
  const Scalar _tmp18 = Scalar(0.010999999999999999) * _tmp17;
  const Scalar _tmp19 = -_tmp18;
  const Scalar _tmp20 = -_tmp14 + _tmp19;
  const Scalar _tmp21 = _tmp11 + _tmp20;
  const Scalar _tmp22 = _TransformationMatrix[5] + _tmp21;
  const Scalar _tmp23 = Scalar(0.20999999999999999) * _tmp6 - Scalar(0.20999999999999999) * _tmp9;
  const Scalar _tmp24 = -_tmp23;
  const Scalar _tmp25 = -2 * std::pow(_tmp4, Scalar(2));
  const Scalar _tmp26 = Scalar(0.20999999999999999) * _tmp13 + Scalar(0.20999999999999999) * _tmp25;
  const Scalar _tmp27 = 2 * _tmp3 * _tmp7;
  const Scalar _tmp28 = _tmp4 * _tmp8;
  const Scalar _tmp29 = _tmp27 + _tmp28;
  const Scalar _tmp30 = -Scalar(0.010999999999999999) * _tmp29;
  const Scalar _tmp31 = -_tmp26 + _tmp30;
  const Scalar _tmp32 = _tmp24 + _tmp31;
  const Scalar _tmp33 = _TransformationMatrix[4] + _tmp32;
  const Scalar _tmp34 = Scalar(1.4083112389913199) * fh1;
  const Scalar _tmp35 = Scalar(333.54000000000002) - fv1;
  const Scalar _tmp36 = Scalar(0.20999999999999999) * _tmp27 - Scalar(0.20999999999999999) * _tmp28;
  const Scalar _tmp37 = -_tmp36;
  const Scalar _tmp38 = -Scalar(0.010999999999999999) * _tmp12 -
                        Scalar(0.010999999999999999) * _tmp25 + Scalar(-0.010999999999999999);
  const Scalar _tmp39 = Scalar(0.20999999999999999) * _tmp15 + Scalar(0.20999999999999999) * _tmp16;
  const Scalar _tmp40 = _tmp38 + _tmp39;
  const Scalar _tmp41 = _tmp37 + _tmp40;
  const Scalar _tmp42 = _tmp14 + _tmp19;
  const Scalar _tmp43 = _tmp11 + _tmp42;
  const Scalar _tmp44 = _TransformationMatrix[5] + _tmp43;
  const Scalar _tmp45 = _tmp44 - p_d(1, 0);
  const Scalar _tmp46 = _tmp23 + _tmp31;
  const Scalar _tmp47 = _TransformationMatrix[4] + _tmp46;
  const Scalar _tmp48 = _tmp47 - p_d(0, 0);
  const Scalar _tmp49 = std::pow(Scalar(std::pow(_tmp45, Scalar(2)) + std::pow(_tmp48, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp50 = _tmp48 * _tmp49;
  const Scalar _tmp51 = _tmp38 - _tmp39;
  const Scalar _tmp52 = _tmp36 + _tmp51;
  const Scalar _tmp53 = _tmp45 * _tmp49;
  const Scalar _tmp54 = _tmp10 + _tmp20;
  const Scalar _tmp55 = _TransformationMatrix[5] + _tmp54;
  const Scalar _tmp56 = _tmp55 - p_b(1, 0);
  const Scalar _tmp57 = _tmp26 + _tmp30;
  const Scalar _tmp58 = _tmp24 + _tmp57;
  const Scalar _tmp59 = _TransformationMatrix[4] + _tmp58;
  const Scalar _tmp60 = _tmp59 - p_b(0, 0);
  const Scalar _tmp61 = Scalar(1.0) / (_tmp60);
  const Scalar _tmp62 = _tmp56 * _tmp61;
  const Scalar _tmp63 = _tmp50 * _tmp62 - _tmp53;
  const Scalar _tmp64 = _tmp23 + _tmp57;
  const Scalar _tmp65 = _TransformationMatrix[4] + _tmp64;
  const Scalar _tmp66 = _tmp65 - p_c(0, 0);
  const Scalar _tmp67 = _tmp10 + _tmp42;
  const Scalar _tmp68 = _TransformationMatrix[5] + _tmp67;
  const Scalar _tmp69 = _tmp68 - p_c(1, 0);
  const Scalar _tmp70 = std::pow(Scalar(std::pow(_tmp66, Scalar(2)) + std::pow(_tmp69, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp71 = _tmp66 * _tmp70;
  const Scalar _tmp72 = _tmp69 * _tmp70;
  const Scalar _tmp73 = Scalar(1.0) / (_tmp62 * _tmp71 - _tmp72);
  const Scalar _tmp74 = _tmp36 + _tmp40;
  const Scalar _tmp75 = _tmp73 * (_tmp52 * _tmp71 - _tmp71 * _tmp74);
  const Scalar _tmp76 = _tmp52 * _tmp62;
  const Scalar _tmp77 = _tmp73 * (-_tmp71 * _tmp76 + _tmp72 * _tmp74);
  const Scalar _tmp78 = _tmp41 * _tmp53 - _tmp50 * _tmp76 - _tmp63 * _tmp77;
  const Scalar _tmp79 = Scalar(1.0) * _tmp54;
  const Scalar _tmp80 = -_tmp79;
  const Scalar _tmp81 = Scalar(1.0) / (_tmp67 + _tmp80);
  const Scalar _tmp82 = Scalar(1.0) * _tmp58;
  const Scalar _tmp83 = _tmp81 * (-_tmp64 + _tmp82);
  const Scalar _tmp84 = -_tmp41 * _tmp50 + _tmp50 * _tmp52 - _tmp63 * _tmp75 - _tmp78 * _tmp83;
  const Scalar _tmp85 = Scalar(1.0) / (_tmp84);
  const Scalar _tmp86 = _tmp79 * _tmp83 + _tmp82;
  const Scalar _tmp87 = 0;
  const Scalar _tmp88 = _tmp85 * _tmp87;
  const Scalar _tmp89 = _tmp71 * _tmp73;
  const Scalar _tmp90 = _tmp63 * _tmp89;
  const Scalar _tmp91 =
      std::sqrt(Scalar(std::pow(_tmp56, Scalar(2)) + std::pow(_tmp60, Scalar(2))));
  const Scalar _tmp92 = _tmp61 * _tmp91;
  const Scalar _tmp93 = _tmp92 * (_tmp50 * _tmp88 - _tmp88 * _tmp90);
  const Scalar _tmp94 = Scalar(1.0) * _tmp77;
  const Scalar _tmp95 = -Scalar(1.0) * _tmp75 + _tmp83 * _tmp94;
  const Scalar _tmp96 = Scalar(1.0) / (_tmp91);
  const Scalar _tmp97 = _tmp92 * (-_tmp54 * _tmp60 * _tmp96 + _tmp56 * _tmp58 * _tmp96);
  const Scalar _tmp98 = _tmp73 * (-_tmp64 * _tmp72 + _tmp67 * _tmp71 + _tmp71 * _tmp97);
  const Scalar _tmp99 = _tmp43 * _tmp50 - _tmp46 * _tmp53 + _tmp50 * _tmp97 - _tmp63 * _tmp98;
  const Scalar _tmp100 = _tmp85 * _tmp99;
  const Scalar _tmp101 = Scalar(1.0) / (_tmp99);
  const Scalar _tmp102 = _tmp101 * _tmp84;
  const Scalar _tmp103 = _tmp102 * (-_tmp100 * _tmp95 - Scalar(1.0) * _tmp98);
  const Scalar _tmp104 = _tmp103 + _tmp95;
  const Scalar _tmp105 = _tmp63 * _tmp85;
  const Scalar _tmp106 = -_tmp104 * _tmp105 + Scalar(1.0);
  const Scalar _tmp107 = _tmp50 * _tmp85;
  const Scalar _tmp108 = _tmp33 - p_a(0, 0);
  const Scalar _tmp109 = _tmp22 - p_a(1, 0);
  const Scalar _tmp110 =
      std::pow(Scalar(std::pow(_tmp108, Scalar(2)) + std::pow(_tmp109, Scalar(2))),
               Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp111 = _tmp109 * _tmp110;
  const Scalar _tmp112 = _tmp111 * fh1;
  const Scalar _tmp113 = _tmp62 * _tmp77 + _tmp76;
  const Scalar _tmp114 = -_tmp113 * _tmp83 - _tmp52 + _tmp62 * _tmp75;
  const Scalar _tmp115 = _tmp102 * (-_tmp100 * _tmp114 + _tmp62 * _tmp98 - _tmp97);
  const Scalar _tmp116 = _tmp114 + _tmp115;
  const Scalar _tmp117 = -_tmp105 * _tmp116 - _tmp62;
  const Scalar _tmp118 = _tmp108 * _tmp110;
  const Scalar _tmp119 = _tmp118 * fh1;
  const Scalar _tmp120 = Scalar(1.0) * _tmp101;
  const Scalar _tmp121 = fh1 * (_tmp111 * _tmp32 - _tmp118 * _tmp21);
  const Scalar _tmp122 = -_tmp112 * _tmp92 * (_tmp104 * _tmp107 + _tmp106 * _tmp89) -
                         _tmp119 * _tmp92 * (_tmp107 * _tmp116 + _tmp117 * _tmp89 + Scalar(1.0)) -
                         _tmp121 * _tmp92 * (_tmp120 * _tmp50 - _tmp120 * _tmp90) - _tmp35 * _tmp93;
  const Scalar _tmp123 = Scalar(1.0) / (_tmp122);
  const Scalar _tmp124 = fh1 * (_tmp37 + _tmp51);
  const Scalar _tmp125 = -_tmp111 * _tmp124 - Scalar(40.024799999999999) * _tmp17 - _tmp21 * fv1;
  const Scalar _tmp126 = _tmp43 + _tmp80;
  const Scalar _tmp127 = _tmp126 * _tmp83;
  const Scalar _tmp128 = Scalar(1.0) / (-_tmp127 - _tmp46 + _tmp82);
  const Scalar _tmp129 = Scalar(1.0) * _tmp128;
  const Scalar _tmp130 = _tmp129 * _tmp83;
  const Scalar _tmp131 = _tmp81 * (_tmp127 * _tmp129 + Scalar(1.0));
  const Scalar _tmp132 = Scalar(1.0) * _tmp130 - Scalar(1.0) * _tmp131;
  const Scalar _tmp133 = _tmp102 * _tmp129;
  const Scalar _tmp134 = _tmp126 * _tmp129;
  const Scalar _tmp135 = _tmp102 * _tmp134 - _tmp120 * _tmp78;
  const Scalar _tmp136 = Scalar(1.0) * _tmp81;
  const Scalar _tmp137 = _tmp78 * _tmp85;
  const Scalar _tmp138 = _tmp126 * _tmp128;
  const Scalar _tmp139 = _tmp113 + _tmp115 * _tmp138 - _tmp116 * _tmp137;
  const Scalar _tmp140 = _tmp103 * _tmp138 - _tmp104 * _tmp137 - _tmp94;
  const Scalar _tmp141 = _tmp118 * _tmp124 + Scalar(40.024799999999999) * _tmp29 + _tmp32 * fv1;
  const Scalar _tmp142 = -Scalar(1.0) * _tmp129 + Scalar(1.0) * _tmp134 * _tmp81;
  const Scalar _tmp143 = _tmp128 * _tmp86;
  const Scalar _tmp144 = _tmp81 * (-_tmp126 * _tmp143 - _tmp137 * _tmp87 + _tmp80);
  const Scalar _tmp145 = -Scalar(1.0) * _tmp143 - Scalar(1.0) * _tmp144 + Scalar(1.0);
  const Scalar _tmp146 = Scalar(1.0) * _tmp112 * (_tmp103 * _tmp129 - _tmp136 * _tmp140) +
                         Scalar(1.0) * _tmp119 * (_tmp115 * _tmp129 - _tmp136 * _tmp139) +
                         Scalar(1.0) * _tmp121 * (_tmp133 - _tmp135 * _tmp136) + _tmp125 * _tmp132 +
                         _tmp141 * _tmp142 + _tmp145 * _tmp35;
  const Scalar _tmp147 = std::asinh(_tmp123 * _tmp146);
  const Scalar _tmp148 = Scalar(1.0) * _tmp147;
  const Scalar _tmp149 = std::pow(_tmp122, Scalar(-2));
  const Scalar _tmp150 = _tmp10 + _tmp14 + _tmp18;
  const Scalar _tmp151 = _tmp149 * _tmp93;
  const Scalar _tmp152 =
      (_tmp123 * (_tmp132 * _tmp150 + _tmp142 * _tmp32 - _tmp145) - _tmp146 * _tmp151) /
      std::sqrt(Scalar(std::pow(_tmp146, Scalar(2)) * _tmp149 + 1));
  const Scalar _tmp153 = Scalar(1.4083112389913199) * _tmp93;
  const Scalar _tmp154 = Scalar(1.4083112389913199) * _tmp122;
  const Scalar _tmp155 = Scalar(0.71007031138673404) * _tmp123;
  const Scalar _tmp156 =
      -_tmp147 * _tmp154 - std::sqrt(Scalar(std::pow(Scalar(-_tmp55 + p_b(1, 0)), Scalar(2)) +
                                            std::pow(Scalar(-_tmp59 + p_b(0, 0)), Scalar(2))));
  const Scalar _tmp157 = _tmp155 * _tmp156;
  const Scalar _tmp158 = _tmp120 * _tmp121;
  const Scalar _tmp159 = _tmp63 * _tmp73;
  const Scalar _tmp160 = _tmp35 * _tmp88;
  const Scalar _tmp161 = _tmp106 * _tmp112 * _tmp73 + _tmp117 * _tmp119 * _tmp73 -
                         _tmp158 * _tmp159 - _tmp159 * _tmp160;
  const Scalar _tmp162 = Scalar(1.4083112389913199) * _tmp161;
  const Scalar _tmp163 = _tmp129 * _tmp32;
  const Scalar _tmp164 = _tmp126 * _tmp81;
  const Scalar _tmp165 = Scalar(1.0) / (_tmp161);
  const Scalar _tmp166 = _tmp129 * _tmp141;
  const Scalar _tmp167 = _tmp112 * _tmp140 * _tmp81 + _tmp119 * _tmp139 * _tmp81 +
                         _tmp121 * _tmp135 * _tmp81 + _tmp125 * _tmp131 + _tmp144 * _tmp35 -
                         _tmp164 * _tmp166;
  const Scalar _tmp168 = std::pow(_tmp161, Scalar(-2));
  const Scalar _tmp169 = _tmp159 * _tmp168 * _tmp88;
  const Scalar _tmp170 =
      (_tmp165 * (_tmp131 * _tmp150 - _tmp144 - _tmp163 * _tmp164) - _tmp167 * _tmp169) /
      std::sqrt(Scalar(std::pow(_tmp167, Scalar(2)) * _tmp168 + 1));
  const Scalar _tmp171 = std::asinh(_tmp165 * _tmp167);
  const Scalar _tmp172 = Scalar(1.4083112389913199) * _tmp88;
  const Scalar _tmp173 = _tmp159 * _tmp172;
  const Scalar _tmp174 = Scalar(0.71007031138673404) * _tmp165;
  const Scalar _tmp175 =
      -_tmp162 * _tmp171 - std::sqrt(Scalar(std::pow(Scalar(-_tmp65 + p_c(0, 0)), Scalar(2)) +
                                            std::pow(Scalar(-_tmp68 + p_c(1, 0)), Scalar(2))));
  const Scalar _tmp176 = _tmp174 * _tmp175;
  const Scalar _tmp177 = Scalar(1.0) * _tmp171;
  const Scalar _tmp178 = -_tmp103 * _tmp112 * _tmp128 - _tmp115 * _tmp119 * _tmp128 -
                         _tmp121 * _tmp133 - _tmp125 * _tmp130 + _tmp143 * _tmp35 + _tmp166;
  const Scalar _tmp179 =
      _tmp104 * _tmp112 * _tmp85 + _tmp116 * _tmp119 * _tmp85 + _tmp158 + _tmp160;
  const Scalar _tmp180 = Scalar(1.0) / (_tmp179);
  const Scalar _tmp181 = std::asinh(_tmp178 * _tmp180);
  const Scalar _tmp182 = Scalar(1.0) * _tmp181;
  const Scalar _tmp183 = std::pow(_tmp179, Scalar(-2));
  const Scalar _tmp184 = _tmp183 * _tmp88;
  const Scalar _tmp185 = (_tmp178 * _tmp184 + _tmp180 * (-_tmp130 * _tmp150 - _tmp143 + _tmp163)) /
                         std::sqrt(Scalar(std::pow(_tmp178, Scalar(2)) * _tmp183 + 1));
  const Scalar _tmp186 = Scalar(1.4083112389913199) * _tmp179;
  const Scalar _tmp187 =
      -_tmp181 * _tmp186 - std::sqrt(Scalar(std::pow(Scalar(-_tmp44 + p_d(1, 0)), Scalar(2)) +
                                            std::pow(Scalar(-_tmp47 + p_d(0, 0)), Scalar(2))));
  const Scalar _tmp188 = Scalar(0.71007031138673404) * _tmp180;
  const Scalar _tmp189 = _tmp187 * _tmp188;

  // Output terms (1)
  Eigen::Matrix<Scalar, 4, 1> _res;

  _res(0, 0) =
      _tmp34 *
      (-_tmp2 * std::cosh(Scalar(1.0) * _tmp1) +
       _tmp2 * std::cosh(Scalar(0.71007031138673404) * _tmp0 *
                         (-_tmp1 * _tmp34 -
                          std::sqrt(Scalar(std::pow(Scalar(-_tmp22 + p_a(1, 0)), Scalar(2)) +
                                           std::pow(Scalar(-_tmp33 + p_a(0, 0)), Scalar(2)))))));
  _res(1, 0) = _tmp153 * (-std::sinh(_tmp148) - std::sinh(_tmp157)) +
               _tmp154 * (-Scalar(1.0) * _tmp152 * std::cosh(_tmp148) -
                          (-Scalar(0.71007031138673404) * _tmp151 * _tmp156 +
                           _tmp155 * (-_tmp147 * _tmp153 - _tmp152 * _tmp154)) *
                              std::cosh(_tmp157));
  _res(2, 0) = _tmp162 * (-Scalar(1.0) * _tmp170 * std::cosh(_tmp177) -
                          (-Scalar(0.71007031138673404) * _tmp169 * _tmp175 +
                           _tmp174 * (-_tmp162 * _tmp170 - _tmp171 * _tmp173)) *
                              std::cosh(_tmp176)) +
               _tmp173 * (-std::sinh(_tmp176) - std::sinh(_tmp177));
  _res(3, 0) = -_tmp172 * (-std::sinh(_tmp182) - std::sinh(_tmp189)) +
               _tmp186 * (-Scalar(1.0) * _tmp185 * std::cosh(_tmp182) -
                          (Scalar(0.71007031138673404) * _tmp184 * _tmp187 +
                           _tmp188 * (_tmp172 * _tmp181 - _tmp185 * _tmp186)) *
                              std::cosh(_tmp189));

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
