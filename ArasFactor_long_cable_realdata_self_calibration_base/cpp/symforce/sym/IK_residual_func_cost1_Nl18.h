// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

#include <sym/rot3.h>

namespace sym {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: IK_residual_func_cost1_Nl18
 *
 * Args:
 *     fh1: Scalar
 *     fv1: Scalar
 *     DeltaRot: Rot3
 *     position_vector: Matrix31
 *     encoder: Matrix41
 *     p_a: Matrix31
 *     p_b: Matrix31
 *     p_c: Matrix31
 *     p_d: Matrix31
 *     Rot_init: Rot3
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix41
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 4, 1> IkResidualFuncCost1Nl18(
    const Scalar fh1, const Scalar fv1, const sym::Rot3<Scalar>& DeltaRot,
    const Eigen::Matrix<Scalar, 3, 1>& position_vector, const Eigen::Matrix<Scalar, 4, 1>& encoder,
    const Eigen::Matrix<Scalar, 3, 1>& p_a, const Eigen::Matrix<Scalar, 3, 1>& p_b,
    const Eigen::Matrix<Scalar, 3, 1>& p_c, const Eigen::Matrix<Scalar, 3, 1>& p_d,
    const sym::Rot3<Scalar>& Rot_init, const Scalar epsilon) {
  // Total ops: 483

  // Unused inputs
  (void)encoder;
  (void)epsilon;

  // Input arrays
  const Eigen::Matrix<Scalar, 4, 1>& _DeltaRot = DeltaRot.Data();
  const Eigen::Matrix<Scalar, 4, 1>& _Rot_init = Rot_init.Data();

  // Intermediate terms (161)
  const Scalar _tmp0 = Scalar(1.0) / (fh1);
  const Scalar _tmp1 = std::asinh(_tmp0 * fv1);
  const Scalar _tmp2 = Scalar(0.71007031138673404) * _tmp0;
  const Scalar _tmp3 = _DeltaRot[0] * _Rot_init[3] - _DeltaRot[1] * _Rot_init[2] +
                       _DeltaRot[2] * _Rot_init[1] + _DeltaRot[3] * _Rot_init[0];
  const Scalar _tmp4 = -2 * std::pow(_tmp3, Scalar(2));
  const Scalar _tmp5 = -_DeltaRot[0] * _Rot_init[1] + _DeltaRot[1] * _Rot_init[0] +
                       _DeltaRot[2] * _Rot_init[3] + _DeltaRot[3] * _Rot_init[2];
  const Scalar _tmp6 = -2 * std::pow(_tmp5, Scalar(2));
  const Scalar _tmp7 = Scalar(0.20999999999999999) * _tmp4 + Scalar(0.20999999999999999) * _tmp6 +
                       Scalar(0.20999999999999999);
  const Scalar _tmp8 = _DeltaRot[0] * _Rot_init[2] + _DeltaRot[1] * _Rot_init[3] -
                       _DeltaRot[2] * _Rot_init[0] + _DeltaRot[3] * _Rot_init[1];
  const Scalar _tmp9 = 2 * _tmp8;
  const Scalar _tmp10 = _tmp3 * _tmp9;
  const Scalar _tmp11 = -2 * _DeltaRot[0] * _Rot_init[0] - 2 * _DeltaRot[1] * _Rot_init[1] -
                        2 * _DeltaRot[2] * _Rot_init[2] + 2 * _DeltaRot[3] * _Rot_init[3];
  const Scalar _tmp12 = _tmp11 * _tmp5;
  const Scalar _tmp13 = Scalar(0.20999999999999999) * _tmp10 + Scalar(0.20999999999999999) * _tmp12;
  const Scalar _tmp14 = _tmp5 * _tmp9;
  const Scalar _tmp15 = _tmp11 * _tmp3;
  const Scalar _tmp16 = _tmp14 - _tmp15;
  const Scalar _tmp17 = -Scalar(0.010999999999999999) * _tmp16;
  const Scalar _tmp18 = -_tmp13 + _tmp17;
  const Scalar _tmp19 = _tmp18 + _tmp7;
  const Scalar _tmp20 = _tmp19 + position_vector(1, 0);
  const Scalar _tmp21 = 1 - 2 * std::pow(_tmp8, Scalar(2));
  const Scalar _tmp22 = Scalar(0.20999999999999999) * _tmp21 + Scalar(0.20999999999999999) * _tmp6;
  const Scalar _tmp23 = -_tmp22;
  const Scalar _tmp24 = 2 * _tmp3 * _tmp5;
  const Scalar _tmp25 = _tmp11 * _tmp8;
  const Scalar _tmp26 = _tmp24 + _tmp25;
  const Scalar _tmp27 = -Scalar(0.010999999999999999) * _tmp26;
  const Scalar _tmp28 = Scalar(0.20999999999999999) * _tmp10 - Scalar(0.20999999999999999) * _tmp12;
  const Scalar _tmp29 = _tmp27 + _tmp28;
  const Scalar _tmp30 = _tmp23 + _tmp29;
  const Scalar _tmp31 = _tmp30 + position_vector(0, 0);
  const Scalar _tmp32 = Scalar(1.4083112389913199) * fh1;
  const Scalar _tmp33 = Scalar(0.20999999999999999) * _tmp14 + Scalar(0.20999999999999999) * _tmp15;
  const Scalar _tmp34 =
      -Scalar(0.010999999999999999) * _tmp21 - Scalar(0.010999999999999999) * _tmp4;
  const Scalar _tmp35 = Scalar(0.20999999999999999) * _tmp24 - Scalar(0.20999999999999999) * _tmp25;
  const Scalar _tmp36 = _tmp34 - _tmp35;
  const Scalar _tmp37 = _tmp33 + _tmp36;
  const Scalar _tmp38 = -_tmp33;
  const Scalar _tmp39 = _tmp34 + _tmp35;
  const Scalar _tmp40 = _tmp38 + _tmp39;
  const Scalar _tmp41 = _tmp27 - _tmp28;
  const Scalar _tmp42 = _tmp22 + _tmp41;
  const Scalar _tmp43 = _tmp42 + position_vector(0, 0);
  const Scalar _tmp44 = _tmp43 - p_b(0, 0);
  const Scalar _tmp45 = -_tmp7;
  const Scalar _tmp46 = _tmp13 + _tmp17;
  const Scalar _tmp47 = _tmp45 + _tmp46;
  const Scalar _tmp48 = _tmp47 + position_vector(1, 0);
  const Scalar _tmp49 = _tmp48 - p_b(1, 0);
  const Scalar _tmp50 = std::pow(Scalar(std::pow(_tmp44, Scalar(2)) + std::pow(_tmp49, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp51 = _tmp44 * _tmp50;
  const Scalar _tmp52 = _tmp36 + _tmp38;
  const Scalar _tmp53 = _tmp51 * _tmp52;
  const Scalar _tmp54 = -_tmp40 * _tmp51 + _tmp53;
  const Scalar _tmp55 = _tmp46 + _tmp7;
  const Scalar _tmp56 = _tmp55 + position_vector(1, 0);
  const Scalar _tmp57 = _tmp56 - p_c(1, 0);
  const Scalar _tmp58 = _tmp22 + _tmp29;
  const Scalar _tmp59 = _tmp58 + position_vector(0, 0);
  const Scalar _tmp60 = _tmp59 - p_c(0, 0);
  const Scalar _tmp61 = std::pow(Scalar(std::pow(_tmp57, Scalar(2)) + std::pow(_tmp60, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp62 = _tmp57 * _tmp61;
  const Scalar _tmp63 = _tmp23 + _tmp41;
  const Scalar _tmp64 = _tmp63 + position_vector(0, 0);
  const Scalar _tmp65 = _tmp64 - p_a(0, 0);
  const Scalar _tmp66 = Scalar(1.0) / (_tmp65);
  const Scalar _tmp67 = _tmp18 + _tmp45;
  const Scalar _tmp68 = _tmp67 + position_vector(1, 0);
  const Scalar _tmp69 = _tmp68 - p_a(1, 0);
  const Scalar _tmp70 = _tmp66 * _tmp69;
  const Scalar _tmp71 = _tmp60 * _tmp61;
  const Scalar _tmp72 = -_tmp62 + _tmp70 * _tmp71;
  const Scalar _tmp73 = _tmp49 * _tmp50;
  const Scalar _tmp74 = Scalar(1.0) / (_tmp51 * _tmp70 - _tmp73);
  const Scalar _tmp75 = _tmp72 * _tmp74;
  const Scalar _tmp76 = _tmp33 + _tmp39;
  const Scalar _tmp77 = _tmp40 * _tmp73 - _tmp53 * _tmp70;
  const Scalar _tmp78 = _tmp52 * _tmp70;
  const Scalar _tmp79 = _tmp62 * _tmp76 - _tmp71 * _tmp78 - _tmp75 * _tmp77;
  const Scalar _tmp80 = Scalar(1.0) * _tmp67;
  const Scalar _tmp81 = -_tmp80;
  const Scalar _tmp82 = Scalar(1.0) / (_tmp47 + _tmp81);
  const Scalar _tmp83 = Scalar(1.0) * _tmp63;
  const Scalar _tmp84 = _tmp82 * (-_tmp42 + _tmp83);
  const Scalar _tmp85 = _tmp52 * _tmp71 - _tmp54 * _tmp75 - _tmp71 * _tmp76 - _tmp79 * _tmp84;
  const Scalar _tmp86 = Scalar(1.0) / (_tmp85);
  const Scalar _tmp87 = Scalar(1.0) * _tmp74;
  const Scalar _tmp88 = _tmp77 * _tmp87;
  const Scalar _tmp89 = -_tmp54 * _tmp87 + _tmp84 * _tmp88;
  const Scalar _tmp90 =
      std::sqrt(Scalar(std::pow(_tmp65, Scalar(2)) + std::pow(_tmp69, Scalar(2))));
  const Scalar _tmp91 = Scalar(1.0) / (_tmp90);
  const Scalar _tmp92 = _tmp66 * _tmp90;
  const Scalar _tmp93 = _tmp92 * (_tmp63 * _tmp69 * _tmp91 - _tmp65 * _tmp67 * _tmp91);
  const Scalar _tmp94 = -_tmp42 * _tmp73 + _tmp47 * _tmp51 + _tmp51 * _tmp93;
  const Scalar _tmp95 = _tmp55 * _tmp71 - _tmp58 * _tmp62 + _tmp71 * _tmp93 - _tmp75 * _tmp94;
  const Scalar _tmp96 = _tmp86 * _tmp95;
  const Scalar _tmp97 = Scalar(1.0) / (_tmp95);
  const Scalar _tmp98 = _tmp85 * _tmp97;
  const Scalar _tmp99 = _tmp98 * (-_tmp87 * _tmp94 - _tmp89 * _tmp96);
  const Scalar _tmp100 = _tmp86 * (_tmp89 + _tmp99);
  const Scalar _tmp101 = -_tmp100 * _tmp72 + Scalar(1.0);
  const Scalar _tmp102 = _tmp51 * _tmp74;
  const Scalar _tmp103 = _tmp31 - p_d(0, 0);
  const Scalar _tmp104 = _tmp20 - p_d(1, 0);
  const Scalar _tmp105 =
      std::pow(Scalar(std::pow(_tmp103, Scalar(2)) + std::pow(_tmp104, Scalar(2))),
               Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp106 = _tmp104 * _tmp105;
  const Scalar _tmp107 = _tmp106 * fh1;
  const Scalar _tmp108 = _tmp72 * _tmp87 * _tmp97;
  const Scalar _tmp109 = Scalar(1.0) * _tmp97;
  const Scalar _tmp110 = _tmp103 * _tmp105;
  const Scalar _tmp111 = fh1 * (_tmp106 * _tmp30 - _tmp110 * _tmp19);
  const Scalar _tmp112 = _tmp70 * _tmp74;
  const Scalar _tmp113 = _tmp112 * _tmp77 + _tmp78;
  const Scalar _tmp114 = _tmp112 * _tmp54 - _tmp113 * _tmp84 - _tmp52;
  const Scalar _tmp115 = _tmp98 * (_tmp112 * _tmp94 - _tmp114 * _tmp96 - _tmp93);
  const Scalar _tmp116 = _tmp114 + _tmp115;
  const Scalar _tmp117 = _tmp116 * _tmp86;
  const Scalar _tmp118 = -_tmp117 * _tmp72 - _tmp70;
  const Scalar _tmp119 = _tmp110 * fh1;
  const Scalar _tmp120 = Scalar(333.54000000000002) - fv1;
  const Scalar _tmp121 = _tmp80 * _tmp84 + _tmp83;
  const Scalar _tmp122 = 0;
  const Scalar _tmp123 = _tmp122 * _tmp86;
  const Scalar _tmp124 = -_tmp107 * _tmp92 * (_tmp100 * _tmp71 + _tmp101 * _tmp102) -
                         _tmp111 * _tmp92 * (-_tmp108 * _tmp51 + _tmp109 * _tmp71) -
                         _tmp119 * _tmp92 * (_tmp102 * _tmp118 + _tmp117 * _tmp71 + Scalar(1.0)) -
                         _tmp120 * _tmp92 * (-_tmp123 * _tmp51 * _tmp75 + _tmp123 * _tmp71);
  const Scalar _tmp125 = Scalar(1.0) / (_tmp124);
  const Scalar _tmp126 = Scalar(0.71007031138673404) * _tmp125;
  const Scalar _tmp127 = _tmp55 + _tmp81;
  const Scalar _tmp128 = _tmp127 * _tmp84;
  const Scalar _tmp129 = Scalar(1.0) / (-_tmp128 - _tmp58 + _tmp83);
  const Scalar _tmp130 = Scalar(1.0) * _tmp129;
  const Scalar _tmp131 = _tmp79 * _tmp86;
  const Scalar _tmp132 = _tmp127 * _tmp129;
  const Scalar _tmp133 = _tmp113 + _tmp115 * _tmp132 - _tmp116 * _tmp131;
  const Scalar _tmp134 = Scalar(1.0) * _tmp82;
  const Scalar _tmp135 = Scalar(1.0) * fh1;
  const Scalar _tmp136 = _tmp127 * _tmp82;
  const Scalar _tmp137 = _tmp37 * fh1;
  const Scalar _tmp138 = _tmp110 * _tmp137 + Scalar(40.024799999999999) * _tmp26 + _tmp30 * fv1;
  const Scalar _tmp139 = _tmp121 * _tmp129;
  const Scalar _tmp140 = -_tmp122 * _tmp131 - _tmp127 * _tmp139 + _tmp81;
  const Scalar _tmp141 = _tmp130 * _tmp98;
  const Scalar _tmp142 = -_tmp109 * _tmp79 + _tmp127 * _tmp141;
  const Scalar _tmp143 = -_tmp106 * _tmp137 - Scalar(40.024799999999999) * _tmp16 - _tmp19 * fv1;
  const Scalar _tmp144 = _tmp128 * _tmp130 + Scalar(1.0);
  const Scalar _tmp145 = _tmp130 * _tmp84;
  const Scalar _tmp146 = -_tmp100 * _tmp79 + _tmp132 * _tmp99 - _tmp88;
  const Scalar _tmp147 = std::asinh(
      _tmp125 * (_tmp106 * _tmp135 * (_tmp130 * _tmp99 - _tmp134 * _tmp146) +
                 _tmp110 * _tmp135 * (_tmp115 * _tmp130 - _tmp133 * _tmp134) +
                 Scalar(1.0) * _tmp111 * (-_tmp134 * _tmp142 + _tmp141) +
                 Scalar(1.0) * _tmp120 * (-_tmp121 * _tmp130 - _tmp134 * _tmp140 + Scalar(1.0)) +
                 Scalar(1.0) * _tmp138 * (_tmp130 * _tmp136 - _tmp130) +
                 Scalar(1.0) * _tmp143 * (-_tmp134 * _tmp144 + _tmp145)));
  const Scalar _tmp148 = Scalar(1.4083112389913199) * _tmp124;
  const Scalar _tmp149 = _tmp120 * _tmp123;
  const Scalar _tmp150 = _tmp101 * _tmp107 * _tmp74 - _tmp108 * _tmp111 +
                         _tmp118 * _tmp119 * _tmp74 - _tmp149 * _tmp75;
  const Scalar _tmp151 = Scalar(1.0) / (_tmp150);
  const Scalar _tmp152 = _tmp130 * _tmp138;
  const Scalar _tmp153 =
      std::asinh(_tmp151 * (_tmp107 * _tmp146 * _tmp82 + _tmp111 * _tmp142 * _tmp82 +
                            _tmp119 * _tmp133 * _tmp82 + _tmp120 * _tmp140 * _tmp82 -
                            _tmp136 * _tmp152 + _tmp143 * _tmp144 * _tmp82));
  const Scalar _tmp154 = Scalar(1.4083112389913199) * _tmp150;
  const Scalar _tmp155 = Scalar(0.71007031138673404) * _tmp151;
  const Scalar _tmp156 = _tmp100 * _tmp107 + _tmp109 * _tmp111 + _tmp117 * _tmp119 + _tmp149;
  const Scalar _tmp157 = Scalar(1.0) / (_tmp156);
  const Scalar _tmp158 = std::asinh(_tmp157 * (-_tmp107 * _tmp129 * _tmp99 - _tmp111 * _tmp141 -
                                               _tmp115 * _tmp119 * _tmp129 + _tmp120 * _tmp139 -
                                               _tmp143 * _tmp145 + _tmp152));
  const Scalar _tmp159 = Scalar(0.71007031138673404) * _tmp157;
  const Scalar _tmp160 = Scalar(1.4083112389913199) * _tmp156;

  // Output terms (1)
  Eigen::Matrix<Scalar, 4, 1> _res;

  _res(0, 0) =
      -_tmp32 * (_tmp2 * p_d(2, 0) + std::cosh(Scalar(1.0) * _tmp1) -
                 std::cosh(_tmp2 *
                           (-_tmp1 * _tmp32 -
                            std::sqrt(Scalar(std::pow(Scalar(-_tmp20 + p_d(1, 0)), Scalar(2)) +
                                             std::pow(Scalar(-_tmp31 + p_d(0, 0)), Scalar(2))))))) +
      _tmp37 + position_vector(2, 0);
  _res(1, 0) =
      -_tmp148 *
          (_tmp126 * p_a(2, 0) + std::cosh(Scalar(1.0) * _tmp147) -
           std::cosh(_tmp126 *
                     (-_tmp147 * _tmp148 -
                      std::sqrt(Scalar(std::pow(Scalar(-_tmp64 + p_a(0, 0)), Scalar(2)) +
                                       std::pow(Scalar(-_tmp68 + p_a(1, 0)), Scalar(2))))))) +
      _tmp52 + position_vector(2, 0);
  _res(2, 0) =
      -_tmp154 *
          (_tmp155 * p_b(2, 0) + std::cosh(Scalar(1.0) * _tmp153) -
           std::cosh(_tmp155 *
                     (-_tmp153 * _tmp154 -
                      std::sqrt(Scalar(std::pow(Scalar(-_tmp43 + p_b(0, 0)), Scalar(2)) +
                                       std::pow(Scalar(-_tmp48 + p_b(1, 0)), Scalar(2))))))) +
      _tmp40 + position_vector(2, 0);
  _res(3, 0) =
      -_tmp160 *
          (_tmp159 * p_c(2, 0) + std::cosh(Scalar(1.0) * _tmp158) -
           std::cosh(_tmp159 *
                     (-_tmp158 * _tmp160 -
                      std::sqrt(Scalar(std::pow(Scalar(-_tmp56 + p_c(1, 0)), Scalar(2)) +
                                       std::pow(Scalar(-_tmp59 + p_c(0, 0)), Scalar(2))))))) +
      _tmp76 + position_vector(2, 0);

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
