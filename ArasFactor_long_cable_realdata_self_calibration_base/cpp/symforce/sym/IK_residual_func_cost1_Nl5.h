// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

#include <sym/rot3.h>

namespace sym {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: IK_residual_func_cost1_Nl5
 *
 * Args:
 *     fh1: Scalar
 *     fv1: Scalar
 *     DeltaRot: Rot3
 *     position_vector: Matrix31
 *     p_a: Matrix31
 *     p_b: Matrix31
 *     p_c: Matrix31
 *     p_d: Matrix31
 *     Rot_init: Rot3
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix41
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 4, 1> IkResidualFuncCost1Nl5(
    const Scalar fh1, const Scalar fv1, const sym::Rot3<Scalar>& DeltaRot,
    const Eigen::Matrix<Scalar, 3, 1>& position_vector, const Eigen::Matrix<Scalar, 3, 1>& p_a,
    const Eigen::Matrix<Scalar, 3, 1>& p_b, const Eigen::Matrix<Scalar, 3, 1>& p_c,
    const Eigen::Matrix<Scalar, 3, 1>& p_d, const sym::Rot3<Scalar>& Rot_init,
    const Scalar epsilon) {
  // Total ops: 481

  // Unused inputs
  (void)epsilon;

  // Input arrays
  const Eigen::Matrix<Scalar, 4, 1>& _DeltaRot = DeltaRot.Data();
  const Eigen::Matrix<Scalar, 4, 1>& _Rot_init = Rot_init.Data();

  // Intermediate terms (158)
  const Scalar _tmp0 = Scalar(1.0) / (fh1);
  const Scalar _tmp1 = std::asinh(_tmp0 * fv1);
  const Scalar _tmp2 = Scalar(0.71007031138673404) * _tmp0;
  const Scalar _tmp3 = _DeltaRot[0] * _Rot_init[3] - _DeltaRot[1] * _Rot_init[2] +
                       _DeltaRot[2] * _Rot_init[1] + _DeltaRot[3] * _Rot_init[0];
  const Scalar _tmp4 = -2 * std::pow(_tmp3, Scalar(2));
  const Scalar _tmp5 = -_DeltaRot[0] * _Rot_init[1] + _DeltaRot[1] * _Rot_init[0] +
                       _DeltaRot[2] * _Rot_init[3] + _DeltaRot[3] * _Rot_init[2];
  const Scalar _tmp6 = -2 * std::pow(_tmp5, Scalar(2));
  const Scalar _tmp7 = Scalar(0.20999999999999999) * _tmp4 + Scalar(0.20999999999999999) * _tmp6 +
                       Scalar(0.20999999999999999);
  const Scalar _tmp8 = -_tmp7;
  const Scalar _tmp9 = _DeltaRot[0] * _Rot_init[2] + _DeltaRot[1] * _Rot_init[3] -
                       _DeltaRot[2] * _Rot_init[0] + _DeltaRot[3] * _Rot_init[1];
  const Scalar _tmp10 = 2 * _tmp9;
  const Scalar _tmp11 = _tmp10 * _tmp3;
  const Scalar _tmp12 = -2 * _DeltaRot[0] * _Rot_init[0] - 2 * _DeltaRot[1] * _Rot_init[1] -
                        2 * _DeltaRot[2] * _Rot_init[2] + 2 * _DeltaRot[3] * _Rot_init[3];
  const Scalar _tmp13 = _tmp12 * _tmp5;
  const Scalar _tmp14 = Scalar(0.20999999999999999) * _tmp11 + Scalar(0.20999999999999999) * _tmp13;
  const Scalar _tmp15 = _tmp10 * _tmp5;
  const Scalar _tmp16 = _tmp12 * _tmp3;
  const Scalar _tmp17 = _tmp15 - _tmp16;
  const Scalar _tmp18 = -Scalar(0.010999999999999999) * _tmp17;
  const Scalar _tmp19 = -_tmp14 + _tmp18;
  const Scalar _tmp20 = _tmp19 + _tmp8;
  const Scalar _tmp21 = _tmp20 + position_vector(1, 0);
  const Scalar _tmp22 = Scalar(0.20999999999999999) * _tmp11 - Scalar(0.20999999999999999) * _tmp13;
  const Scalar _tmp23 = -_tmp22;
  const Scalar _tmp24 = 2 * _tmp3 * _tmp5;
  const Scalar _tmp25 = _tmp12 * _tmp9;
  const Scalar _tmp26 = _tmp24 + _tmp25;
  const Scalar _tmp27 = -Scalar(0.010999999999999999) * _tmp26;
  const Scalar _tmp28 = 1 - 2 * std::pow(_tmp9, Scalar(2));
  const Scalar _tmp29 = Scalar(0.20999999999999999) * _tmp28 + Scalar(0.20999999999999999) * _tmp6;
  const Scalar _tmp30 = _tmp27 - _tmp29;
  const Scalar _tmp31 = _tmp23 + _tmp30;
  const Scalar _tmp32 = _tmp31 + position_vector(0, 0);
  const Scalar _tmp33 = Scalar(1.4083112389913199) * fh1;
  const Scalar _tmp34 = Scalar(0.20999999999999999) * _tmp24 - Scalar(0.20999999999999999) * _tmp25;
  const Scalar _tmp35 = -_tmp34;
  const Scalar _tmp36 =
      -Scalar(0.010999999999999999) * _tmp28 - Scalar(0.010999999999999999) * _tmp4;
  const Scalar _tmp37 = Scalar(0.20999999999999999) * _tmp15 + Scalar(0.20999999999999999) * _tmp16;
  const Scalar _tmp38 = _tmp36 - _tmp37;
  const Scalar _tmp39 = _tmp35 + _tmp38;
  const Scalar _tmp40 = _tmp19 + _tmp7;
  const Scalar _tmp41 = _tmp40 + position_vector(1, 0);
  const Scalar _tmp42 = _tmp22 + _tmp30;
  const Scalar _tmp43 = _tmp42 + position_vector(0, 0);
  const Scalar _tmp44 = _tmp32 - p_a(0, 0);
  const Scalar _tmp45 = _tmp21 - p_a(1, 0);
  const Scalar _tmp46 = std::pow(Scalar(std::pow(_tmp44, Scalar(2)) + std::pow(_tmp45, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp47 = _tmp44 * _tmp46;
  const Scalar _tmp48 = _tmp39 * fh1;
  const Scalar _tmp49 = Scalar(40.024799999999999) * _tmp26 + _tmp31 * fv1 + _tmp47 * _tmp48;
  const Scalar _tmp50 = Scalar(1.0) * _tmp42;
  const Scalar _tmp51 = _tmp27 + _tmp29;
  const Scalar _tmp52 = _tmp23 + _tmp51;
  const Scalar _tmp53 = Scalar(1.0) * _tmp40;
  const Scalar _tmp54 = -_tmp53;
  const Scalar _tmp55 = _tmp14 + _tmp18;
  const Scalar _tmp56 = _tmp55 + _tmp8;
  const Scalar _tmp57 = _tmp54 + _tmp56;
  const Scalar _tmp58 = _tmp55 + _tmp7;
  const Scalar _tmp59 = Scalar(1.0) / (_tmp54 + _tmp58);
  const Scalar _tmp60 = _tmp22 + _tmp51;
  const Scalar _tmp61 = _tmp50 - _tmp60;
  const Scalar _tmp62 = _tmp59 * _tmp61;
  const Scalar _tmp63 = _tmp57 * _tmp62;
  const Scalar _tmp64 = Scalar(1.0) / (_tmp50 - _tmp52 - _tmp63);
  const Scalar _tmp65 = Scalar(1.0) * _tmp64;
  const Scalar _tmp66 = _tmp57 * _tmp59;
  const Scalar _tmp67 = _tmp45 * _tmp46;
  const Scalar _tmp68 = -Scalar(40.024799999999999) * _tmp17 - _tmp20 * fv1 - _tmp48 * _tmp67;
  const Scalar _tmp69 = _tmp63 * _tmp65 + Scalar(1.0);
  const Scalar _tmp70 = Scalar(1.0) * _tmp59;
  const Scalar _tmp71 = _tmp62 * _tmp65;
  const Scalar _tmp72 = Scalar(333.54000000000002) - fv1;
  const Scalar _tmp73 = _tmp50 + _tmp53 * _tmp62;
  const Scalar _tmp74 = _tmp34 + _tmp38;
  const Scalar _tmp75 = _tmp52 + position_vector(0, 0);
  const Scalar _tmp76 = _tmp75 - p_b(0, 0);
  const Scalar _tmp77 = _tmp56 + position_vector(1, 0);
  const Scalar _tmp78 = _tmp77 - p_b(1, 0);
  const Scalar _tmp79 = std::pow(Scalar(std::pow(_tmp76, Scalar(2)) + std::pow(_tmp78, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp80 = _tmp78 * _tmp79;
  const Scalar _tmp81 = _tmp36 + _tmp37;
  const Scalar _tmp82 = _tmp35 + _tmp81;
  const Scalar _tmp83 = _tmp43 - p_d(0, 0);
  const Scalar _tmp84 = Scalar(1.0) / (_tmp83);
  const Scalar _tmp85 = _tmp41 - p_d(1, 0);
  const Scalar _tmp86 = _tmp84 * _tmp85;
  const Scalar _tmp87 = _tmp82 * _tmp86;
  const Scalar _tmp88 = _tmp76 * _tmp79;
  const Scalar _tmp89 = _tmp60 + position_vector(0, 0);
  const Scalar _tmp90 = _tmp89 - p_c(0, 0);
  const Scalar _tmp91 = _tmp58 + position_vector(1, 0);
  const Scalar _tmp92 = _tmp91 - p_c(1, 0);
  const Scalar _tmp93 = std::pow(Scalar(std::pow(_tmp90, Scalar(2)) + std::pow(_tmp92, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp94 = _tmp90 * _tmp93;
  const Scalar _tmp95 = _tmp82 * _tmp94;
  const Scalar _tmp96 = _tmp34 + _tmp81;
  const Scalar _tmp97 = _tmp92 * _tmp93;
  const Scalar _tmp98 = -_tmp86 * _tmp95 + _tmp96 * _tmp97;
  const Scalar _tmp99 = Scalar(1.0) / (_tmp86 * _tmp94 - _tmp97);
  const Scalar _tmp100 = -_tmp80 + _tmp86 * _tmp88;
  const Scalar _tmp101 = _tmp100 * _tmp99;
  const Scalar _tmp102 = -_tmp101 * _tmp98 + _tmp74 * _tmp80 - _tmp87 * _tmp88;
  const Scalar _tmp103 = -_tmp94 * _tmp96 + _tmp95;
  const Scalar _tmp104 = -_tmp101 * _tmp103 - _tmp102 * _tmp62 - _tmp74 * _tmp88 + _tmp82 * _tmp88;
  const Scalar _tmp105 = Scalar(1.0) / (_tmp104);
  const Scalar _tmp106 = 0;
  const Scalar _tmp107 = _tmp64 * _tmp73;
  const Scalar _tmp108 = -_tmp102 * _tmp106 - _tmp107 * _tmp57 + _tmp54;
  const Scalar _tmp109 =
      std::sqrt(Scalar(std::pow(_tmp83, Scalar(2)) + std::pow(_tmp85, Scalar(2))));
  const Scalar _tmp110 = Scalar(1.0) / (_tmp109);
  const Scalar _tmp111 = _tmp109 * _tmp84;
  const Scalar _tmp112 = _tmp111 * (-_tmp110 * _tmp40 * _tmp83 + _tmp110 * _tmp42 * _tmp85);
  const Scalar _tmp113 = _tmp99 * (_tmp112 * _tmp94 + _tmp58 * _tmp94 - _tmp60 * _tmp97);
  const Scalar _tmp114 = _tmp86 * _tmp99;
  const Scalar _tmp115 = _tmp114 * _tmp98 + _tmp87;
  const Scalar _tmp116 = _tmp103 * _tmp114 - _tmp115 * _tmp62 - _tmp82;
  const Scalar _tmp117 = -_tmp100 * _tmp113 + _tmp112 * _tmp88 - _tmp52 * _tmp80 + _tmp56 * _tmp88;
  const Scalar _tmp118 = _tmp105 * _tmp117;
  const Scalar _tmp119 = Scalar(1.0) / (_tmp117);
  const Scalar _tmp120 = _tmp104 * _tmp119;
  const Scalar _tmp121 = _tmp120 * (-_tmp112 + _tmp113 * _tmp86 - _tmp116 * _tmp118);
  const Scalar _tmp122 = _tmp57 * _tmp64;
  const Scalar _tmp123 = _tmp105 * (_tmp116 + _tmp121);
  const Scalar _tmp124 = -_tmp102 * _tmp123 + _tmp115 + _tmp121 * _tmp122;
  const Scalar _tmp125 = _tmp47 * fh1;
  const Scalar _tmp126 = _tmp120 * _tmp65;
  const Scalar _tmp127 = Scalar(1.0) * _tmp119;
  const Scalar _tmp128 = -_tmp102 * _tmp127 + _tmp126 * _tmp57;
  const Scalar _tmp129 = fh1 * (-_tmp20 * _tmp47 + _tmp31 * _tmp67);
  const Scalar _tmp130 = Scalar(1.0) * _tmp99;
  const Scalar _tmp131 = -_tmp103 * _tmp130 + _tmp61 * _tmp70 * _tmp98 * _tmp99;
  const Scalar _tmp132 = _tmp120 * (-Scalar(1.0) * _tmp113 - _tmp118 * _tmp131);
  const Scalar _tmp133 = _tmp105 * (_tmp131 + _tmp132);
  const Scalar _tmp134 = -_tmp102 * _tmp133 + _tmp122 * _tmp132 - _tmp130 * _tmp98;
  const Scalar _tmp135 = _tmp67 * fh1;
  const Scalar _tmp136 = -_tmp100 * _tmp123 - _tmp86;
  const Scalar _tmp137 = _tmp94 * _tmp99;
  const Scalar _tmp138 = _tmp101 * _tmp94;
  const Scalar _tmp139 = -_tmp100 * _tmp133 + Scalar(1.0);
  const Scalar _tmp140 = -_tmp111 * _tmp125 * (_tmp123 * _tmp88 + _tmp136 * _tmp137 + Scalar(1.0)) -
                         _tmp111 * _tmp129 * (-_tmp127 * _tmp138 + _tmp127 * _tmp88) -
                         _tmp111 * _tmp135 * (_tmp133 * _tmp88 + _tmp137 * _tmp139) -
                         _tmp111 * _tmp72 * (-_tmp106 * _tmp138 + _tmp106 * _tmp88);
  const Scalar _tmp141 = Scalar(1.0) / (_tmp140);
  const Scalar _tmp142 = std::asinh(
      _tmp141 * (Scalar(1.0) * _tmp125 * (_tmp121 * _tmp65 - _tmp124 * _tmp70) +
                 Scalar(1.0) * _tmp129 * (_tmp126 - _tmp128 * _tmp70) +
                 Scalar(1.0) * _tmp135 * (_tmp132 * _tmp65 - _tmp134 * _tmp70) +
                 Scalar(1.0) * _tmp49 * (_tmp65 * _tmp66 - _tmp65) +
                 Scalar(1.0) * _tmp68 * (-_tmp69 * _tmp70 + _tmp71) +
                 Scalar(1.0) * _tmp72 * (-_tmp108 * _tmp70 - _tmp65 * _tmp73 + Scalar(1.0))));
  const Scalar _tmp143 = Scalar(1.4083112389913199) * _tmp140;
  const Scalar _tmp144 = Scalar(0.71007031138673404) * _tmp141;
  const Scalar _tmp145 = _tmp127 * _tmp129;
  const Scalar _tmp146 = _tmp106 * _tmp72;
  const Scalar _tmp147 = -_tmp101 * _tmp145 - _tmp101 * _tmp146 + _tmp125 * _tmp136 * _tmp99 +
                         _tmp135 * _tmp139 * _tmp99;
  const Scalar _tmp148 = Scalar(1.0) / (_tmp147);
  const Scalar _tmp149 = Scalar(0.71007031138673404) * _tmp148;
  const Scalar _tmp150 = _tmp49 * _tmp65;
  const Scalar _tmp151 =
      std::asinh(_tmp148 * (_tmp108 * _tmp59 * _tmp72 + _tmp124 * _tmp125 * _tmp59 +
                            _tmp128 * _tmp129 * _tmp59 + _tmp134 * _tmp135 * _tmp59 -
                            _tmp150 * _tmp66 + _tmp59 * _tmp68 * _tmp69));
  const Scalar _tmp152 = Scalar(1.4083112389913199) * _tmp147;
  const Scalar _tmp153 = _tmp123 * _tmp125 + _tmp133 * _tmp135 + _tmp145 + _tmp146;
  const Scalar _tmp154 = Scalar(1.0) / (_tmp153);
  const Scalar _tmp155 =
      std::asinh(_tmp154 * (_tmp107 * _tmp72 - _tmp121 * _tmp125 * _tmp64 - _tmp126 * _tmp129 -
                            _tmp132 * _tmp135 * _tmp64 + _tmp150 - _tmp68 * _tmp71));
  const Scalar _tmp156 = Scalar(0.71007031138673404) * _tmp154;
  const Scalar _tmp157 = Scalar(1.4083112389913199) * _tmp153;

  // Output terms (1)
  Eigen::Matrix<Scalar, 4, 1> _res;

  _res(0, 0) =
      -_tmp33 * (_tmp2 * p_a(2, 0) + std::cosh(Scalar(1.0) * _tmp1) -
                 std::cosh(_tmp2 *
                           (-_tmp1 * _tmp33 -
                            std::sqrt(Scalar(std::pow(Scalar(-_tmp21 + p_a(1, 0)), Scalar(2)) +
                                             std::pow(Scalar(-_tmp32 + p_a(0, 0)), Scalar(2))))))) +
      _tmp39 + position_vector(2, 0);
  _res(1, 0) =
      -_tmp143 *
          (_tmp144 * p_d(2, 0) + std::cosh(Scalar(1.0) * _tmp142) -
           std::cosh(_tmp144 *
                     (-_tmp142 * _tmp143 -
                      std::sqrt(Scalar(std::pow(Scalar(-_tmp41 + p_d(1, 0)), Scalar(2)) +
                                       std::pow(Scalar(-_tmp43 + p_d(0, 0)), Scalar(2))))))) +
      _tmp82 + position_vector(2, 0);
  _res(2, 0) =
      -_tmp152 *
          (_tmp149 * p_c(2, 0) + std::cosh(Scalar(1.0) * _tmp151) -
           std::cosh(_tmp149 *
                     (-_tmp151 * _tmp152 -
                      std::sqrt(Scalar(std::pow(Scalar(-_tmp89 + p_c(0, 0)), Scalar(2)) +
                                       std::pow(Scalar(-_tmp91 + p_c(1, 0)), Scalar(2))))))) +
      _tmp96 + position_vector(2, 0);
  _res(3, 0) =
      -_tmp157 *
          (_tmp156 * p_b(2, 0) + std::cosh(Scalar(1.0) * _tmp155) -
           std::cosh(_tmp156 *
                     (-_tmp155 * _tmp157 -
                      std::sqrt(Scalar(std::pow(Scalar(-_tmp75 + p_b(0, 0)), Scalar(2)) +
                                       std::pow(Scalar(-_tmp77 + p_b(1, 0)), Scalar(2))))))) +
      _tmp74 + position_vector(2, 0);

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
