// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

#include <sym/rot3.h>

namespace sym {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: IK_residual_func_cost1_Nl9
 *
 * Args:
 *     fh1: Scalar
 *     fv1: Scalar
 *     DeltaRot: Rot3
 *     position_vector: Matrix31
 *     p_a: Matrix31
 *     p_b: Matrix31
 *     p_c: Matrix31
 *     p_d: Matrix31
 *     Rot_init: Rot3
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix41
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 4, 1> IkResidualFuncCost1Nl9(
    const Scalar fh1, const Scalar fv1, const sym::Rot3<Scalar>& DeltaRot,
    const Eigen::Matrix<Scalar, 3, 1>& position_vector, const Eigen::Matrix<Scalar, 3, 1>& p_a,
    const Eigen::Matrix<Scalar, 3, 1>& p_b, const Eigen::Matrix<Scalar, 3, 1>& p_c,
    const Eigen::Matrix<Scalar, 3, 1>& p_d, const sym::Rot3<Scalar>& Rot_init,
    const Scalar epsilon) {
  // Total ops: 483

  // Unused inputs
  (void)epsilon;

  // Input arrays
  const Eigen::Matrix<Scalar, 4, 1>& _DeltaRot = DeltaRot.Data();
  const Eigen::Matrix<Scalar, 4, 1>& _Rot_init = Rot_init.Data();

  // Intermediate terms (160)
  const Scalar _tmp0 = Scalar(1.0) / (fh1);
  const Scalar _tmp1 = std::asinh(_tmp0 * fv1);
  const Scalar _tmp2 = Scalar(0.71007031138673404) * _tmp0;
  const Scalar _tmp3 = _DeltaRot[0] * _Rot_init[3] - _DeltaRot[1] * _Rot_init[2] +
                       _DeltaRot[2] * _Rot_init[1] + _DeltaRot[3] * _Rot_init[0];
  const Scalar _tmp4 = -2 * std::pow(_tmp3, Scalar(2));
  const Scalar _tmp5 = -_DeltaRot[0] * _Rot_init[1] + _DeltaRot[1] * _Rot_init[0] +
                       _DeltaRot[2] * _Rot_init[3] + _DeltaRot[3] * _Rot_init[2];
  const Scalar _tmp6 = 1 - 2 * std::pow(_tmp5, Scalar(2));
  const Scalar _tmp7 = Scalar(0.20999999999999999) * _tmp4 + Scalar(0.20999999999999999) * _tmp6;
  const Scalar _tmp8 = -_tmp7;
  const Scalar _tmp9 = _DeltaRot[0] * _Rot_init[2] + _DeltaRot[1] * _Rot_init[3] -
                       _DeltaRot[2] * _Rot_init[0] + _DeltaRot[3] * _Rot_init[1];
  const Scalar _tmp10 = 2 * _tmp9;
  const Scalar _tmp11 = _tmp10 * _tmp3;
  const Scalar _tmp12 = -2 * _DeltaRot[0] * _Rot_init[0] - 2 * _DeltaRot[1] * _Rot_init[1] -
                        2 * _DeltaRot[2] * _Rot_init[2] + 2 * _DeltaRot[3] * _Rot_init[3];
  const Scalar _tmp13 = _tmp12 * _tmp5;
  const Scalar _tmp14 = Scalar(0.20999999999999999) * _tmp11 + Scalar(0.20999999999999999) * _tmp13;
  const Scalar _tmp15 = _tmp10 * _tmp5;
  const Scalar _tmp16 = _tmp12 * _tmp3;
  const Scalar _tmp17 = _tmp15 - _tmp16;
  const Scalar _tmp18 = -Scalar(0.010999999999999999) * _tmp17;
  const Scalar _tmp19 = _tmp14 + _tmp18;
  const Scalar _tmp20 = _tmp19 + _tmp8;
  const Scalar _tmp21 = _tmp20 + position_vector(1, 0);
  const Scalar _tmp22 = -2 * std::pow(_tmp9, Scalar(2));
  const Scalar _tmp23 = Scalar(0.20999999999999999) * _tmp22 + Scalar(0.20999999999999999) * _tmp6;
  const Scalar _tmp24 = 2 * _tmp3 * _tmp5;
  const Scalar _tmp25 = _tmp12 * _tmp9;
  const Scalar _tmp26 = _tmp24 + _tmp25;
  const Scalar _tmp27 = -Scalar(0.010999999999999999) * _tmp26;
  const Scalar _tmp28 = Scalar(0.20999999999999999) * _tmp11 - Scalar(0.20999999999999999) * _tmp13;
  const Scalar _tmp29 = _tmp27 - _tmp28;
  const Scalar _tmp30 = _tmp23 + _tmp29;
  const Scalar _tmp31 = _tmp30 + position_vector(0, 0);
  const Scalar _tmp32 = Scalar(1.4083112389913199) * fh1;
  const Scalar _tmp33 = Scalar(0.20999999999999999) * _tmp24 - Scalar(0.20999999999999999) * _tmp25;
  const Scalar _tmp34 = -Scalar(0.010999999999999999) * _tmp22 -
                        Scalar(0.010999999999999999) * _tmp4 + Scalar(-0.010999999999999999);
  const Scalar _tmp35 = Scalar(0.20999999999999999) * _tmp15 + Scalar(0.20999999999999999) * _tmp16;
  const Scalar _tmp36 = _tmp34 - _tmp35;
  const Scalar _tmp37 = _tmp33 + _tmp36;
  const Scalar _tmp38 = -_tmp14 + _tmp18;
  const Scalar _tmp39 = _tmp38 + _tmp8;
  const Scalar _tmp40 = _tmp39 + position_vector(1, 0);
  const Scalar _tmp41 = _tmp40 - p_a(1, 0);
  const Scalar _tmp42 = -_tmp23;
  const Scalar _tmp43 = _tmp29 + _tmp42;
  const Scalar _tmp44 = _tmp43 + position_vector(0, 0);
  const Scalar _tmp45 = _tmp44 - p_a(0, 0);
  const Scalar _tmp46 = std::pow(Scalar(std::pow(_tmp41, Scalar(2)) + std::pow(_tmp45, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp47 = _tmp41 * _tmp46;
  const Scalar _tmp48 = _tmp27 + _tmp28;
  const Scalar _tmp49 = _tmp23 + _tmp48;
  const Scalar _tmp50 = _tmp49 + position_vector(0, 0);
  const Scalar _tmp51 = _tmp50 - p_c(0, 0);
  const Scalar _tmp52 = Scalar(1.0) / (_tmp51);
  const Scalar _tmp53 = _tmp19 + _tmp7;
  const Scalar _tmp54 = _tmp53 + position_vector(1, 0);
  const Scalar _tmp55 = _tmp54 - p_c(1, 0);
  const Scalar _tmp56 = _tmp52 * _tmp55;
  const Scalar _tmp57 = _tmp45 * _tmp46;
  const Scalar _tmp58 = -_tmp47 + _tmp56 * _tmp57;
  const Scalar _tmp59 = _tmp42 + _tmp48;
  const Scalar _tmp60 = Scalar(1.0) * _tmp49;
  const Scalar _tmp61 = -_tmp59 + _tmp60;
  const Scalar _tmp62 = -_tmp33;
  const Scalar _tmp63 = _tmp34 + _tmp35;
  const Scalar _tmp64 = _tmp62 + _tmp63;
  const Scalar _tmp65 = _tmp59 + position_vector(0, 0);
  const Scalar _tmp66 = _tmp65 - p_d(0, 0);
  const Scalar _tmp67 = _tmp38 + _tmp7;
  const Scalar _tmp68 = _tmp67 + position_vector(1, 0);
  const Scalar _tmp69 = _tmp68 - p_d(1, 0);
  const Scalar _tmp70 = std::pow(Scalar(std::pow(_tmp66, Scalar(2)) + std::pow(_tmp69, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp71 = _tmp69 * _tmp70;
  const Scalar _tmp72 = _tmp33 + _tmp63;
  const Scalar _tmp73 = _tmp66 * _tmp70;
  const Scalar _tmp74 = _tmp72 * _tmp73;
  const Scalar _tmp75 = -_tmp56 * _tmp74 + _tmp64 * _tmp71;
  const Scalar _tmp76 = Scalar(1.0) / (_tmp56 * _tmp73 - _tmp71);
  const Scalar _tmp77 = Scalar(1.0) * _tmp53;
  const Scalar _tmp78 = -_tmp77;
  const Scalar _tmp79 = Scalar(1.0) / (_tmp67 + _tmp78);
  const Scalar _tmp80 = Scalar(1.0) * _tmp79;
  const Scalar _tmp81 = -_tmp64 * _tmp73 + _tmp74;
  const Scalar _tmp82 = Scalar(1.0) * _tmp76;
  const Scalar _tmp83 = _tmp61 * _tmp75 * _tmp76 * _tmp80 - _tmp81 * _tmp82;
  const Scalar _tmp84 = _tmp58 * _tmp76;
  const Scalar _tmp85 = _tmp57 * _tmp72;
  const Scalar _tmp86 = _tmp36 + _tmp62;
  const Scalar _tmp87 = _tmp47 * _tmp86 - _tmp56 * _tmp85 - _tmp75 * _tmp84;
  const Scalar _tmp88 = _tmp61 * _tmp79;
  const Scalar _tmp89 = -_tmp57 * _tmp86 - _tmp81 * _tmp84 + _tmp85 - _tmp87 * _tmp88;
  const Scalar _tmp90 = Scalar(1.0) / (_tmp89);
  const Scalar _tmp91 =
      std::sqrt(Scalar(std::pow(_tmp51, Scalar(2)) + std::pow(_tmp55, Scalar(2))));
  const Scalar _tmp92 = Scalar(1.0) / (_tmp91);
  const Scalar _tmp93 = _tmp52 * _tmp91;
  const Scalar _tmp94 = _tmp93 * (_tmp49 * _tmp55 * _tmp92 - _tmp51 * _tmp53 * _tmp92);
  const Scalar _tmp95 = -_tmp59 * _tmp71 + _tmp67 * _tmp73 + _tmp73 * _tmp94;
  const Scalar _tmp96 = _tmp39 * _tmp57 - _tmp43 * _tmp47 + _tmp57 * _tmp94 - _tmp84 * _tmp95;
  const Scalar _tmp97 = _tmp90 * _tmp96;
  const Scalar _tmp98 = Scalar(1.0) / (_tmp96);
  const Scalar _tmp99 = _tmp89 * _tmp98;
  const Scalar _tmp100 = _tmp99 * (-_tmp82 * _tmp95 - _tmp83 * _tmp97);
  const Scalar _tmp101 = _tmp90 * (_tmp100 + _tmp83);
  const Scalar _tmp102 = -_tmp101 * _tmp58 + Scalar(1.0);
  const Scalar _tmp103 = _tmp73 * _tmp76;
  const Scalar _tmp104 = _tmp31 - p_b(0, 0);
  const Scalar _tmp105 = _tmp21 - p_b(1, 0);
  const Scalar _tmp106 =
      std::pow(Scalar(std::pow(_tmp104, Scalar(2)) + std::pow(_tmp105, Scalar(2))),
               Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp107 = _tmp105 * _tmp106;
  const Scalar _tmp108 = _tmp107 * fh1;
  const Scalar _tmp109 = _tmp56 * _tmp76;
  const Scalar _tmp110 = _tmp109 * _tmp75 + _tmp56 * _tmp72;
  const Scalar _tmp111 = _tmp109 * _tmp81 - _tmp110 * _tmp88 - _tmp72;
  const Scalar _tmp112 = _tmp99 * (_tmp109 * _tmp95 - _tmp111 * _tmp97 - _tmp94);
  const Scalar _tmp113 = _tmp90 * (_tmp111 + _tmp112);
  const Scalar _tmp114 = -_tmp113 * _tmp58 - _tmp56;
  const Scalar _tmp115 = _tmp104 * _tmp106;
  const Scalar _tmp116 = _tmp115 * fh1;
  const Scalar _tmp117 = Scalar(333.54000000000002) - fv1;
  const Scalar _tmp118 = _tmp60 + _tmp77 * _tmp88;
  const Scalar _tmp119 = 0;
  const Scalar _tmp120 = _tmp73 * _tmp84;
  const Scalar _tmp121 = Scalar(1.0) * _tmp98;
  const Scalar _tmp122 = fh1 * (_tmp107 * _tmp30 - _tmp115 * _tmp20);
  const Scalar _tmp123 = -_tmp108 * _tmp93 * (_tmp101 * _tmp57 + _tmp102 * _tmp103) -
                         _tmp116 * _tmp93 * (_tmp103 * _tmp114 + _tmp113 * _tmp57 + Scalar(1.0)) -
                         _tmp117 * _tmp93 * (-_tmp119 * _tmp120 + _tmp119 * _tmp57) -
                         _tmp122 * _tmp93 * (-_tmp120 * _tmp121 + _tmp121 * _tmp57);
  const Scalar _tmp124 = Scalar(1.0) / (_tmp123);
  const Scalar _tmp125 = Scalar(0.71007031138673404) * _tmp124;
  const Scalar _tmp126 = _tmp39 + _tmp78;
  const Scalar _tmp127 = _tmp126 * _tmp88;
  const Scalar _tmp128 = Scalar(1.0) / (-_tmp127 - _tmp43 + _tmp60);
  const Scalar _tmp129 = _tmp118 * _tmp128;
  const Scalar _tmp130 = -_tmp119 * _tmp87 - _tmp126 * _tmp129 + _tmp78;
  const Scalar _tmp131 = Scalar(1.0) * _tmp128;
  const Scalar _tmp132 = _tmp126 * _tmp131;
  const Scalar _tmp133 = _tmp37 * fh1;
  const Scalar _tmp134 = _tmp115 * _tmp133 + Scalar(40.024799999999999) * _tmp26 + _tmp30 * fv1;
  const Scalar _tmp135 = _tmp126 * _tmp128;
  const Scalar _tmp136 = _tmp110 + _tmp112 * _tmp135 - _tmp113 * _tmp87;
  const Scalar _tmp137 = Scalar(1.0) * fh1;
  const Scalar _tmp138 = -_tmp121 * _tmp87 + _tmp132 * _tmp99;
  const Scalar _tmp139 = _tmp131 * _tmp99;
  const Scalar _tmp140 = _tmp100 * _tmp135 - _tmp101 * _tmp87 - _tmp75 * _tmp82;
  const Scalar _tmp141 = -_tmp107 * _tmp133 - Scalar(40.024799999999999) * _tmp17 - _tmp20 * fv1;
  const Scalar _tmp142 = _tmp127 * _tmp131 + Scalar(1.0);
  const Scalar _tmp143 = _tmp131 * _tmp88;
  const Scalar _tmp144 = std::asinh(
      _tmp124 * (_tmp107 * _tmp137 * (_tmp100 * _tmp131 - _tmp140 * _tmp80) +
                 _tmp115 * _tmp137 * (_tmp112 * _tmp131 - _tmp136 * _tmp80) +
                 Scalar(1.0) * _tmp117 * (-_tmp118 * _tmp131 - _tmp130 * _tmp80 + Scalar(1.0)) +
                 Scalar(1.0) * _tmp122 * (-_tmp138 * _tmp80 + _tmp139) +
                 Scalar(1.0) * _tmp134 * (-_tmp131 + _tmp132 * _tmp79) +
                 Scalar(1.0) * _tmp141 * (-_tmp142 * _tmp80 + _tmp143)));
  const Scalar _tmp145 = Scalar(1.4083112389913199) * _tmp123;
  const Scalar _tmp146 = _tmp79 * fh1;
  const Scalar _tmp147 = _tmp131 * _tmp134;
  const Scalar _tmp148 = _tmp117 * _tmp119;
  const Scalar _tmp149 = _tmp121 * _tmp122;
  const Scalar _tmp150 =
      _tmp102 * _tmp108 * _tmp76 + _tmp114 * _tmp116 * _tmp76 - _tmp148 * _tmp84 - _tmp149 * _tmp84;
  const Scalar _tmp151 = Scalar(1.0) / (_tmp150);
  const Scalar _tmp152 =
      std::asinh(_tmp151 * (_tmp107 * _tmp140 * _tmp146 + _tmp115 * _tmp136 * _tmp146 +
                            _tmp117 * _tmp130 * _tmp79 + _tmp122 * _tmp138 * _tmp79 -
                            _tmp126 * _tmp147 * _tmp79 + _tmp141 * _tmp142 * _tmp79));
  const Scalar _tmp153 = Scalar(1.4083112389913199) * _tmp150;
  const Scalar _tmp154 = Scalar(0.71007031138673404) * _tmp151;
  const Scalar _tmp155 = _tmp101 * _tmp108 + _tmp113 * _tmp116 + _tmp148 + _tmp149;
  const Scalar _tmp156 = Scalar(1.0) / (_tmp155);
  const Scalar _tmp157 =
      std::asinh(_tmp156 * (-_tmp100 * _tmp108 * _tmp128 - _tmp112 * _tmp116 * _tmp128 +
                            _tmp117 * _tmp129 - _tmp122 * _tmp139 - _tmp141 * _tmp143 + _tmp147));
  const Scalar _tmp158 = Scalar(1.4083112389913199) * _tmp155;
  const Scalar _tmp159 = Scalar(0.71007031138673404) * _tmp156;

  // Output terms (1)
  Eigen::Matrix<Scalar, 4, 1> _res;

  _res(0, 0) =
      -_tmp32 * (_tmp2 * p_b(2, 0) + std::cosh(Scalar(1.0) * _tmp1) -
                 std::cosh(_tmp2 *
                           (-_tmp1 * _tmp32 -
                            std::sqrt(Scalar(std::pow(Scalar(-_tmp21 + p_b(1, 0)), Scalar(2)) +
                                             std::pow(Scalar(-_tmp31 + p_b(0, 0)), Scalar(2))))))) +
      _tmp37 + position_vector(2, 0);
  _res(1, 0) =
      -_tmp145 *
          (_tmp125 * p_c(2, 0) + std::cosh(Scalar(1.0) * _tmp144) -
           std::cosh(_tmp125 *
                     (-_tmp144 * _tmp145 -
                      std::sqrt(Scalar(std::pow(Scalar(-_tmp50 + p_c(0, 0)), Scalar(2)) +
                                       std::pow(Scalar(-_tmp54 + p_c(1, 0)), Scalar(2))))))) +
      _tmp72 + position_vector(2, 0);
  _res(2, 0) =
      -_tmp153 *
          (_tmp154 * p_d(2, 0) + std::cosh(Scalar(1.0) * _tmp152) -
           std::cosh(_tmp154 *
                     (-_tmp152 * _tmp153 -
                      std::sqrt(Scalar(std::pow(Scalar(-_tmp65 + p_d(0, 0)), Scalar(2)) +
                                       std::pow(Scalar(-_tmp68 + p_d(1, 0)), Scalar(2))))))) +
      _tmp64 + position_vector(2, 0);
  _res(3, 0) =
      -_tmp158 *
          (_tmp159 * p_a(2, 0) + std::cosh(Scalar(1.0) * _tmp157) -
           std::cosh(_tmp159 *
                     (-_tmp157 * _tmp158 -
                      std::sqrt(Scalar(std::pow(Scalar(-_tmp40 + p_a(1, 0)), Scalar(2)) +
                                       std::pow(Scalar(-_tmp44 + p_a(0, 0)), Scalar(2))))))) +
      _tmp86 + position_vector(2, 0);

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
