// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

#include <sym/rot3.h>

namespace sym {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: IK_residual_func_cost2_Nl8
 *
 * Args:
 *     fh1: Scalar
 *     fv1: Scalar
 *     DeltaRot: Rot3
 *     position_vector: Matrix31
 *     p_a: Matrix31
 *     p_b: Matrix31
 *     p_c: Matrix31
 *     p_d: Matrix31
 *     Rot_init: Rot3
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix41
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 4, 1> IkResidualFuncCost2Nl8(
    const Scalar fh1, const Scalar fv1, const sym::Rot3<Scalar>& DeltaRot,
    const Eigen::Matrix<Scalar, 3, 1>& position_vector, const Eigen::Matrix<Scalar, 3, 1>& p_a,
    const Eigen::Matrix<Scalar, 3, 1>& p_b, const Eigen::Matrix<Scalar, 3, 1>& p_c,
    const Eigen::Matrix<Scalar, 3, 1>& p_d, const sym::Rot3<Scalar>& Rot_init,
    const Scalar epsilon) {
  // Total ops: 497

  // Unused inputs
  (void)epsilon;

  // Input arrays
  const Eigen::Matrix<Scalar, 4, 1>& _DeltaRot = DeltaRot.Data();
  const Eigen::Matrix<Scalar, 4, 1>& _Rot_init = Rot_init.Data();

  // Intermediate terms (162)
  const Scalar _tmp0 = Scalar(1.0) / (fh1);
  const Scalar _tmp1 = _DeltaRot[0] * _Rot_init[2] + _DeltaRot[1] * _Rot_init[3] -
                       _DeltaRot[2] * _Rot_init[0] + _DeltaRot[3] * _Rot_init[1];
  const Scalar _tmp2 = _DeltaRot[0] * _Rot_init[3] - _DeltaRot[1] * _Rot_init[2] +
                       _DeltaRot[2] * _Rot_init[1] + _DeltaRot[3] * _Rot_init[0];
  const Scalar _tmp3 = 2 * _tmp1 * _tmp2;
  const Scalar _tmp4 = -_DeltaRot[0] * _Rot_init[1] + _DeltaRot[1] * _Rot_init[0] +
                       _DeltaRot[2] * _Rot_init[3] + _DeltaRot[3] * _Rot_init[2];
  const Scalar _tmp5 = -2 * _DeltaRot[0] * _Rot_init[0] - 2 * _DeltaRot[1] * _Rot_init[1] -
                       2 * _DeltaRot[2] * _Rot_init[2] + 2 * _DeltaRot[3] * _Rot_init[3];
  const Scalar _tmp6 = _tmp4 * _tmp5;
  const Scalar _tmp7 = Scalar(0.20999999999999999) * _tmp3 + Scalar(0.20999999999999999) * _tmp6;
  const Scalar _tmp8 = 2 * _tmp4;
  const Scalar _tmp9 = _tmp1 * _tmp8;
  const Scalar _tmp10 = _tmp2 * _tmp5;
  const Scalar _tmp11 = -_tmp10 + _tmp9;
  const Scalar _tmp12 = -Scalar(0.010999999999999999) * _tmp11;
  const Scalar _tmp13 = -2 * std::pow(_tmp2, Scalar(2));
  const Scalar _tmp14 = -2 * std::pow(_tmp4, Scalar(2));
  const Scalar _tmp15 = Scalar(0.20999999999999999) * _tmp13 +
                        Scalar(0.20999999999999999) * _tmp14 + Scalar(0.20999999999999999);
  const Scalar _tmp16 = _tmp12 - _tmp15;
  const Scalar _tmp17 = _tmp16 + _tmp7;
  const Scalar _tmp18 = _tmp17 + position_vector(1, 0);
  const Scalar _tmp19 = Scalar(0.20999999999999999) * _tmp3 - Scalar(0.20999999999999999) * _tmp6;
  const Scalar _tmp20 = -_tmp19;
  const Scalar _tmp21 = 1 - 2 * std::pow(_tmp1, Scalar(2));
  const Scalar _tmp22 = Scalar(0.20999999999999999) * _tmp14 + Scalar(0.20999999999999999) * _tmp21;
  const Scalar _tmp23 = _tmp2 * _tmp8;
  const Scalar _tmp24 = _tmp1 * _tmp5;
  const Scalar _tmp25 = _tmp23 + _tmp24;
  const Scalar _tmp26 = -Scalar(0.010999999999999999) * _tmp25;
  const Scalar _tmp27 = _tmp22 + _tmp26;
  const Scalar _tmp28 = _tmp20 + _tmp27;
  const Scalar _tmp29 = _tmp28 + position_vector(0, 0);
  const Scalar _tmp30 = std::pow(Scalar(-_tmp18 + p_b(1, 0)), Scalar(2)) +
                        std::pow(Scalar(-_tmp29 + p_b(0, 0)), Scalar(2));
  const Scalar _tmp31 = std::asinh(_tmp0 * fv1);
  const Scalar _tmp32 = Scalar(1.4083112389913199) * fh1;
  const Scalar _tmp33 = Scalar(0.20999999999999999) * _tmp23 - Scalar(0.20999999999999999) * _tmp24;
  const Scalar _tmp34 =
      -Scalar(0.010999999999999999) * _tmp13 - Scalar(0.010999999999999999) * _tmp21;
  const Scalar _tmp35 = Scalar(0.20999999999999999) * _tmp10 + Scalar(0.20999999999999999) * _tmp9;
  const Scalar _tmp36 = _tmp34 - _tmp35;
  const Scalar _tmp37 = _tmp33 + _tmp36;
  const Scalar _tmp38 = _tmp19 + _tmp27;
  const Scalar _tmp39 = _tmp38 + position_vector(0, 0);
  const Scalar _tmp40 = _tmp39 - p_c(0, 0);
  const Scalar _tmp41 = _tmp12 + _tmp15;
  const Scalar _tmp42 = _tmp41 + _tmp7;
  const Scalar _tmp43 = _tmp42 + position_vector(1, 0);
  const Scalar _tmp44 = _tmp43 - p_c(1, 0);
  const Scalar _tmp45 =
      std::sqrt(Scalar(std::pow(_tmp40, Scalar(2)) + std::pow(_tmp44, Scalar(2))));
  const Scalar _tmp46 = Scalar(1.0) / (_tmp45);
  const Scalar _tmp47 = Scalar(1.0) / (_tmp40);
  const Scalar _tmp48 = _tmp45 * _tmp47;
  const Scalar _tmp49 = _tmp48 * (_tmp38 * _tmp44 * _tmp46 - _tmp40 * _tmp42 * _tmp46);
  const Scalar _tmp50 = -_tmp22 + _tmp26;
  const Scalar _tmp51 = _tmp19 + _tmp50;
  const Scalar _tmp52 = _tmp51 + position_vector(0, 0);
  const Scalar _tmp53 = _tmp52 - p_d(0, 0);
  const Scalar _tmp54 = -_tmp7;
  const Scalar _tmp55 = _tmp41 + _tmp54;
  const Scalar _tmp56 = _tmp55 + position_vector(1, 0);
  const Scalar _tmp57 = _tmp56 - p_d(1, 0);
  const Scalar _tmp58 = std::pow(Scalar(std::pow(_tmp53, Scalar(2)) + std::pow(_tmp57, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp59 = _tmp53 * _tmp58;
  const Scalar _tmp60 = _tmp57 * _tmp58;
  const Scalar _tmp61 = _tmp20 + _tmp50;
  const Scalar _tmp62 = _tmp61 + position_vector(0, 0);
  const Scalar _tmp63 = _tmp62 - p_a(0, 0);
  const Scalar _tmp64 = _tmp16 + _tmp54;
  const Scalar _tmp65 = _tmp64 + position_vector(1, 0);
  const Scalar _tmp66 = _tmp65 - p_a(1, 0);
  const Scalar _tmp67 = std::pow(Scalar(std::pow(_tmp63, Scalar(2)) + std::pow(_tmp66, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp68 = _tmp63 * _tmp67;
  const Scalar _tmp69 = _tmp66 * _tmp67;
  const Scalar _tmp70 = _tmp49 * _tmp68 - _tmp61 * _tmp69 + _tmp64 * _tmp68;
  const Scalar _tmp71 = _tmp44 * _tmp47;
  const Scalar _tmp72 = Scalar(1.0) / (_tmp68 * _tmp71 - _tmp69);
  const Scalar _tmp73 = _tmp59 * _tmp71 - _tmp60;
  const Scalar _tmp74 = _tmp72 * _tmp73;
  const Scalar _tmp75 = _tmp49 * _tmp59 - _tmp51 * _tmp60 + _tmp55 * _tmp59 - _tmp70 * _tmp74;
  const Scalar _tmp76 = Scalar(1.0) / (_tmp75);
  const Scalar _tmp77 = Scalar(1.0) * _tmp76;
  const Scalar _tmp78 = Scalar(1.0) * _tmp72;
  const Scalar _tmp79 = _tmp73 * _tmp76 * _tmp78;
  const Scalar _tmp80 = _tmp29 - p_b(0, 0);
  const Scalar _tmp81 = _tmp18 - p_b(1, 0);
  const Scalar _tmp82 = std::pow(Scalar(std::pow(_tmp80, Scalar(2)) + std::pow(_tmp81, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp83 = _tmp81 * _tmp82;
  const Scalar _tmp84 = _tmp80 * _tmp82;
  const Scalar _tmp85 = fh1 * (-_tmp17 * _tmp84 + _tmp28 * _tmp83);
  const Scalar _tmp86 = _tmp34 + _tmp35;
  const Scalar _tmp87 = _tmp33 + _tmp86;
  const Scalar _tmp88 = -_tmp33;
  const Scalar _tmp89 = _tmp86 + _tmp88;
  const Scalar _tmp90 = _tmp71 * _tmp87;
  const Scalar _tmp91 = _tmp36 + _tmp88;
  const Scalar _tmp92 = -_tmp68 * _tmp90 + _tmp69 * _tmp91;
  const Scalar _tmp93 = -_tmp59 * _tmp90 + _tmp60 * _tmp89 - _tmp74 * _tmp92;
  const Scalar _tmp94 = Scalar(1.0) * _tmp42;
  const Scalar _tmp95 = -_tmp94;
  const Scalar _tmp96 = Scalar(1.0) / (_tmp64 + _tmp95);
  const Scalar _tmp97 = Scalar(1.0) * _tmp38;
  const Scalar _tmp98 = -_tmp61 + _tmp97;
  const Scalar _tmp99 = _tmp96 * _tmp98;
  const Scalar _tmp100 = _tmp68 * _tmp87 - _tmp68 * _tmp91;
  const Scalar _tmp101 = -_tmp100 * _tmp74 + _tmp59 * _tmp87 - _tmp59 * _tmp89 - _tmp93 * _tmp99;
  const Scalar _tmp102 = Scalar(1.0) / (_tmp101);
  const Scalar _tmp103 = _tmp78 * _tmp92;
  const Scalar _tmp104 = -_tmp100 * _tmp78 + _tmp103 * _tmp99;
  const Scalar _tmp105 = _tmp102 * _tmp75;
  const Scalar _tmp106 = _tmp101 * _tmp76;
  const Scalar _tmp107 = _tmp106 * (-_tmp104 * _tmp105 - _tmp70 * _tmp78);
  const Scalar _tmp108 = _tmp104 + _tmp107;
  const Scalar _tmp109 = _tmp102 * _tmp108;
  const Scalar _tmp110 = -_tmp109 * _tmp73 + Scalar(1.0);
  const Scalar _tmp111 = _tmp68 * _tmp72;
  const Scalar _tmp112 = _tmp83 * fh1;
  const Scalar _tmp113 = Scalar(333.54000000000002) - fv1;
  const Scalar _tmp114 = _tmp94 * _tmp99 + _tmp97;
  const Scalar _tmp115 = 0;
  const Scalar _tmp116 = _tmp102 * _tmp115;
  const Scalar _tmp117 = _tmp71 * _tmp72;
  const Scalar _tmp118 = _tmp117 * _tmp92 + _tmp90;
  const Scalar _tmp119 = _tmp100 * _tmp117 - _tmp118 * _tmp99 - _tmp87;
  const Scalar _tmp120 = _tmp106 * (-_tmp105 * _tmp119 + _tmp117 * _tmp70 - _tmp49);
  const Scalar _tmp121 = _tmp102 * (_tmp119 + _tmp120);
  const Scalar _tmp122 = -_tmp121 * _tmp73 - _tmp71;
  const Scalar _tmp123 = _tmp84 * fh1;
  const Scalar _tmp124 = -_tmp112 * _tmp48 * (_tmp109 * _tmp59 + _tmp110 * _tmp111) -
                         _tmp113 * _tmp48 * (_tmp116 * _tmp59 - _tmp116 * _tmp68 * _tmp74) -
                         _tmp123 * _tmp48 * (_tmp111 * _tmp122 + _tmp121 * _tmp59 + Scalar(1.0)) -
                         _tmp48 * _tmp85 * (_tmp59 * _tmp77 - _tmp68 * _tmp79);
  const Scalar _tmp125 = Scalar(1.0) / (_tmp124);
  const Scalar _tmp126 = _tmp102 * _tmp93;
  const Scalar _tmp127 = _tmp55 + _tmp95;
  const Scalar _tmp128 = _tmp127 * _tmp99;
  const Scalar _tmp129 = Scalar(1.0) / (-_tmp128 - _tmp51 + _tmp97);
  const Scalar _tmp130 = _tmp114 * _tmp129;
  const Scalar _tmp131 = -_tmp115 * _tmp126 - _tmp127 * _tmp130 + _tmp95;
  const Scalar _tmp132 = Scalar(1.0) * _tmp96;
  const Scalar _tmp133 = Scalar(1.0) * _tmp129;
  const Scalar _tmp134 = _tmp127 * _tmp129;
  const Scalar _tmp135 = -_tmp103 + _tmp107 * _tmp134 - _tmp108 * _tmp126;
  const Scalar _tmp136 = _tmp106 * _tmp133;
  const Scalar _tmp137 = _tmp127 * _tmp136 - _tmp77 * _tmp93;
  const Scalar _tmp138 = _tmp127 * _tmp96;
  const Scalar _tmp139 = _tmp37 * fh1;
  const Scalar _tmp140 = _tmp139 * _tmp84 + Scalar(40.024799999999999) * _tmp25 + _tmp28 * fv1;
  const Scalar _tmp141 = _tmp118 + _tmp120 * _tmp134 - _tmp121 * _tmp93;
  const Scalar _tmp142 = -Scalar(40.024799999999999) * _tmp11 - _tmp139 * _tmp83 - _tmp17 * fv1;
  const Scalar _tmp143 = _tmp128 * _tmp133 + Scalar(1.0);
  const Scalar _tmp144 = std::asinh(
      _tmp125 * (Scalar(1.0) * _tmp112 * (_tmp107 * _tmp133 - _tmp132 * _tmp135) +
                 Scalar(1.0) * _tmp113 * (-_tmp114 * _tmp133 - _tmp131 * _tmp132 + Scalar(1.0)) +
                 Scalar(1.0) * _tmp123 * (_tmp120 * _tmp133 - _tmp132 * _tmp141) +
                 Scalar(1.0) * _tmp140 * (_tmp133 * _tmp138 - _tmp133) +
                 Scalar(1.0) * _tmp142 * (-_tmp132 * _tmp143 + _tmp133 * _tmp99) +
                 Scalar(1.0) * _tmp85 * (-_tmp132 * _tmp137 + _tmp136)));
  const Scalar _tmp145 = Scalar(1.4083112389913199) * _tmp124;
  const Scalar _tmp146 = std::pow(Scalar(-_tmp39 + p_c(0, 0)), Scalar(2)) +
                         std::pow(Scalar(-_tmp43 + p_c(1, 0)), Scalar(2));
  const Scalar _tmp147 = _tmp133 * _tmp140;
  const Scalar _tmp148 = _tmp142 * _tmp96;
  const Scalar _tmp149 = _tmp96 * fh1;
  const Scalar _tmp150 = _tmp72 * fh1;
  const Scalar _tmp151 = _tmp113 * _tmp116;
  const Scalar _tmp152 =
      _tmp110 * _tmp150 * _tmp83 + _tmp122 * _tmp150 * _tmp84 - _tmp151 * _tmp74 - _tmp79 * _tmp85;
  const Scalar _tmp153 = Scalar(1.0) / (_tmp152);
  const Scalar _tmp154 =
      std::asinh(_tmp153 * (_tmp113 * _tmp131 * _tmp96 + _tmp135 * _tmp149 * _tmp83 +
                            _tmp137 * _tmp85 * _tmp96 - _tmp138 * _tmp147 +
                            _tmp141 * _tmp149 * _tmp84 + _tmp143 * _tmp148));
  const Scalar _tmp155 = Scalar(1.4083112389913199) * _tmp152;
  const Scalar _tmp156 = std::pow(Scalar(-_tmp62 + p_a(0, 0)), Scalar(2)) +
                         std::pow(Scalar(-_tmp65 + p_a(1, 0)), Scalar(2));
  const Scalar _tmp157 = std::pow(Scalar(-_tmp52 + p_d(0, 0)), Scalar(2)) +
                         std::pow(Scalar(-_tmp56 + p_d(1, 0)), Scalar(2));
  const Scalar _tmp158 = _tmp109 * _tmp112 + _tmp121 * _tmp123 + _tmp151 + _tmp77 * _tmp85;
  const Scalar _tmp159 = Scalar(1.0) / (_tmp158);
  const Scalar _tmp160 = std::asinh(
      _tmp159 * (-_tmp107 * _tmp112 * _tmp129 + _tmp113 * _tmp130 - _tmp120 * _tmp123 * _tmp129 -
                 _tmp133 * _tmp148 * _tmp98 - _tmp136 * _tmp85 + _tmp147));
  const Scalar _tmp161 = Scalar(1.4083112389913199) * _tmp158;

  // Output terms (1)
  Eigen::Matrix<Scalar, 4, 1> _res;

  _res(0, 0) =
      _tmp32 *
          (-std::sinh(Scalar(1.0) * _tmp31) - std::sinh(Scalar(0.71007031138673404) * _tmp0 *
                                                        (-std::sqrt(_tmp30) - _tmp31 * _tmp32))) -
      std::sqrt(Scalar(_tmp30 +
                       std::pow(Scalar(-_tmp37 + p_b(2, 0) - position_vector(2, 0)), Scalar(2))));
  _res(1, 0) =
      _tmp145 * (-std::sinh(Scalar(1.0) * _tmp144) -
                 std::sinh(Scalar(0.71007031138673404) * _tmp125 *
                           (-_tmp144 * _tmp145 - std::sqrt(_tmp146)))) -
      std::sqrt(Scalar(_tmp146 +
                       std::pow(Scalar(-_tmp87 + p_c(2, 0) - position_vector(2, 0)), Scalar(2))));
  _res(2, 0) =
      _tmp155 * (-std::sinh(Scalar(1.0) * _tmp154) -
                 std::sinh(Scalar(0.71007031138673404) * _tmp153 *
                           (-_tmp154 * _tmp155 - std::sqrt(_tmp156)))) -
      std::sqrt(Scalar(_tmp156 +
                       std::pow(Scalar(-_tmp91 + p_a(2, 0) - position_vector(2, 0)), Scalar(2))));
  _res(3, 0) =
      _tmp161 * (-std::sinh(Scalar(1.0) * _tmp160) -
                 std::sinh(Scalar(0.71007031138673404) * _tmp159 *
                           (-std::sqrt(_tmp157) - _tmp160 * _tmp161))) -
      std::sqrt(Scalar(_tmp157 +
                       std::pow(Scalar(-_tmp89 + p_d(2, 0) - position_vector(2, 0)), Scalar(2))));

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
