// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

#include <sym/rot3.h>

namespace sym {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: IK_residual_func_cost2_wrt_fh1_Nl16
 *
 * Args:
 *     fh1: Scalar
 *     fv1: Scalar
 *     DeltaRot: Rot3
 *     position_vector: Matrix31
 *     encoder: Matrix41
 *     p_a: Matrix31
 *     p_b: Matrix31
 *     p_c: Matrix31
 *     p_d: Matrix31
 *     Rot_init: Rot3
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix41
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 4, 1> IkResidualFuncCost2WrtFh1Nl16(
    const Scalar fh1, const Scalar fv1, const sym::Rot3<Scalar>& DeltaRot,
    const Eigen::Matrix<Scalar, 3, 1>& position_vector, const Eigen::Matrix<Scalar, 4, 1>& encoder,
    const Eigen::Matrix<Scalar, 3, 1>& p_a, const Eigen::Matrix<Scalar, 3, 1>& p_b,
    const Eigen::Matrix<Scalar, 3, 1>& p_c, const Eigen::Matrix<Scalar, 3, 1>& p_d,
    const sym::Rot3<Scalar>& Rot_init, const Scalar epsilon) {
  // Total ops: 622

  // Unused inputs
  (void)encoder;
  (void)epsilon;

  // Input arrays
  const Eigen::Matrix<Scalar, 4, 1>& _DeltaRot = DeltaRot.Data();
  const Eigen::Matrix<Scalar, 4, 1>& _Rot_init = Rot_init.Data();

  // Intermediate terms (216)
  const Scalar _tmp0 = _DeltaRot[0] * _Rot_init[2] + _DeltaRot[1] * _Rot_init[3] -
                       _DeltaRot[2] * _Rot_init[0] + _DeltaRot[3] * _Rot_init[1];
  const Scalar _tmp1 = _DeltaRot[0] * _Rot_init[3] - _DeltaRot[1] * _Rot_init[2] +
                       _DeltaRot[2] * _Rot_init[1] + _DeltaRot[3] * _Rot_init[0];
  const Scalar _tmp2 = 2 * _tmp0 * _tmp1;
  const Scalar _tmp3 = -_DeltaRot[0] * _Rot_init[1] + _DeltaRot[1] * _Rot_init[0] +
                       _DeltaRot[2] * _Rot_init[3] + _DeltaRot[3] * _Rot_init[2];
  const Scalar _tmp4 = -2 * _DeltaRot[0] * _Rot_init[0] - 2 * _DeltaRot[1] * _Rot_init[1] -
                       2 * _DeltaRot[2] * _Rot_init[2] + 2 * _DeltaRot[3] * _Rot_init[3];
  const Scalar _tmp5 = _tmp3 * _tmp4;
  const Scalar _tmp6 = Scalar(0.20999999999999999) * _tmp2 + Scalar(0.20999999999999999) * _tmp5;
  const Scalar _tmp7 = -2 * std::pow(_tmp1, Scalar(2));
  const Scalar _tmp8 = -2 * std::pow(_tmp3, Scalar(2));
  const Scalar _tmp9 = Scalar(0.20999999999999999) * _tmp7 + Scalar(0.20999999999999999) * _tmp8 +
                       Scalar(0.20999999999999999);
  const Scalar _tmp10 = 2 * _tmp3;
  const Scalar _tmp11 = _tmp0 * _tmp10;
  const Scalar _tmp12 = _tmp1 * _tmp4;
  const Scalar _tmp13 = _tmp11 - _tmp12;
  const Scalar _tmp14 = -Scalar(0.010999999999999999) * _tmp13;
  const Scalar _tmp15 = _tmp14 + _tmp9;
  const Scalar _tmp16 = _tmp15 + _tmp6;
  const Scalar _tmp17 = _tmp16 + position_vector(1, 0);
  const Scalar _tmp18 = 1 - 2 * std::pow(_tmp0, Scalar(2));
  const Scalar _tmp19 = Scalar(0.20999999999999999) * _tmp18 + Scalar(0.20999999999999999) * _tmp8;
  const Scalar _tmp20 = _tmp1 * _tmp10;
  const Scalar _tmp21 = _tmp0 * _tmp4;
  const Scalar _tmp22 = _tmp20 + _tmp21;
  const Scalar _tmp23 = -Scalar(0.010999999999999999) * _tmp22;
  const Scalar _tmp24 = Scalar(0.20999999999999999) * _tmp2 - Scalar(0.20999999999999999) * _tmp5;
  const Scalar _tmp25 = _tmp23 + _tmp24;
  const Scalar _tmp26 = _tmp19 + _tmp25;
  const Scalar _tmp27 = _tmp26 + position_vector(0, 0);
  const Scalar _tmp28 = Scalar(1.0) / (fh1);
  const Scalar _tmp29 = _tmp28 * fv1;
  const Scalar _tmp30 = std::asinh(_tmp29);
  const Scalar _tmp31 = Scalar(1.4083112389913199) * _tmp30;
  const Scalar _tmp32 =
      -_tmp31 * fh1 - std::sqrt(Scalar(std::pow(Scalar(-_tmp17 + p_c(1, 0)), Scalar(2)) +
                                       std::pow(Scalar(-_tmp27 + p_c(0, 0)), Scalar(2))));
  const Scalar _tmp33 = Scalar(0.71007031138673404) * _tmp28;
  const Scalar _tmp34 = _tmp32 * _tmp33;
  const Scalar _tmp35 = std::pow(fh1, Scalar(-2));
  const Scalar _tmp36 =
      std::pow(Scalar(_tmp35 * std::pow(fv1, Scalar(2)) + 1), Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp37 = Scalar(1.0) * _tmp30;
  const Scalar _tmp38 = Scalar(333.54000000000002) - fv1;
  const Scalar _tmp39 = Scalar(0.20999999999999999) * _tmp20 - Scalar(0.20999999999999999) * _tmp21;
  const Scalar _tmp40 = -_tmp39;
  const Scalar _tmp41 =
      -Scalar(0.010999999999999999) * _tmp18 - Scalar(0.010999999999999999) * _tmp7;
  const Scalar _tmp42 = Scalar(0.20999999999999999) * _tmp11 + Scalar(0.20999999999999999) * _tmp12;
  const Scalar _tmp43 = _tmp41 + _tmp42;
  const Scalar _tmp44 = _tmp40 + _tmp43;
  const Scalar _tmp45 = _tmp23 - _tmp24;
  const Scalar _tmp46 = _tmp19 + _tmp45;
  const Scalar _tmp47 = _tmp46 + position_vector(0, 0);
  const Scalar _tmp48 = _tmp47 - p_b(0, 0);
  const Scalar _tmp49 = _tmp14 - _tmp9;
  const Scalar _tmp50 = _tmp49 + _tmp6;
  const Scalar _tmp51 = _tmp50 + position_vector(1, 0);
  const Scalar _tmp52 = _tmp51 - p_b(1, 0);
  const Scalar _tmp53 = std::pow(Scalar(std::pow(_tmp48, Scalar(2)) + std::pow(_tmp52, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp54 = _tmp48 * _tmp53;
  const Scalar _tmp55 = _tmp41 - _tmp42;
  const Scalar _tmp56 = _tmp39 + _tmp55;
  const Scalar _tmp57 = _tmp52 * _tmp53;
  const Scalar _tmp58 = -_tmp19;
  const Scalar _tmp59 = _tmp25 + _tmp58;
  const Scalar _tmp60 = _tmp59 + position_vector(0, 0);
  const Scalar _tmp61 = _tmp60 - p_d(0, 0);
  const Scalar _tmp62 = Scalar(1.0) / (_tmp61);
  const Scalar _tmp63 = -_tmp6;
  const Scalar _tmp64 = _tmp15 + _tmp63;
  const Scalar _tmp65 = _tmp64 + position_vector(1, 0);
  const Scalar _tmp66 = _tmp65 - p_d(1, 0);
  const Scalar _tmp67 = _tmp62 * _tmp66;
  const Scalar _tmp68 = _tmp44 * _tmp67;
  const Scalar _tmp69 = _tmp45 + _tmp58;
  const Scalar _tmp70 = _tmp69 + position_vector(0, 0);
  const Scalar _tmp71 = _tmp70 - p_a(0, 0);
  const Scalar _tmp72 = _tmp49 + _tmp63;
  const Scalar _tmp73 = _tmp72 + position_vector(1, 0);
  const Scalar _tmp74 = _tmp73 - p_a(1, 0);
  const Scalar _tmp75 = std::pow(Scalar(std::pow(_tmp71, Scalar(2)) + std::pow(_tmp74, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp76 = _tmp71 * _tmp75;
  const Scalar _tmp77 = _tmp44 * _tmp76;
  const Scalar _tmp78 = _tmp40 + _tmp55;
  const Scalar _tmp79 = _tmp74 * _tmp75;
  const Scalar _tmp80 = -_tmp67 * _tmp77 + _tmp78 * _tmp79;
  const Scalar _tmp81 = _tmp54 * _tmp67 - _tmp57;
  const Scalar _tmp82 = Scalar(1.0) / (_tmp67 * _tmp76 - _tmp79);
  const Scalar _tmp83 = _tmp81 * _tmp82;
  const Scalar _tmp84 = -_tmp54 * _tmp68 + _tmp56 * _tmp57 - _tmp80 * _tmp83;
  const Scalar _tmp85 = Scalar(1.0) * _tmp64;
  const Scalar _tmp86 = -_tmp85;
  const Scalar _tmp87 = Scalar(1.0) / (_tmp72 + _tmp86);
  const Scalar _tmp88 = Scalar(1.0) * _tmp59;
  const Scalar _tmp89 = _tmp87 * (-_tmp69 + _tmp88);
  const Scalar _tmp90 = _tmp82 * (-_tmp76 * _tmp78 + _tmp77);
  const Scalar _tmp91 = _tmp44 * _tmp54 - _tmp54 * _tmp56 - _tmp81 * _tmp90 - _tmp84 * _tmp89;
  const Scalar _tmp92 = Scalar(1.0) / (_tmp91);
  const Scalar _tmp93 = _tmp85 * _tmp89 + _tmp88;
  const Scalar _tmp94 = 0;
  const Scalar _tmp95 = _tmp92 * _tmp94;
  const Scalar _tmp96 =
      std::sqrt(Scalar(std::pow(_tmp61, Scalar(2)) + std::pow(_tmp66, Scalar(2))));
  const Scalar _tmp97 = _tmp62 * _tmp96;
  const Scalar _tmp98 = _tmp27 - p_c(0, 0);
  const Scalar _tmp99 = _tmp17 - p_c(1, 0);
  const Scalar _tmp100 = std::pow(Scalar(std::pow(_tmp98, Scalar(2)) + std::pow(_tmp99, Scalar(2))),
                                  Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp101 = _tmp100 * _tmp98;
  const Scalar _tmp102 = _tmp100 * _tmp99;
  const Scalar _tmp103 = -_tmp101 * _tmp16 + _tmp102 * _tmp26;
  const Scalar _tmp104 = Scalar(1.0) / (_tmp96);
  const Scalar _tmp105 = _tmp97 * (_tmp104 * _tmp59 * _tmp66 - _tmp104 * _tmp61 * _tmp64);
  const Scalar _tmp106 = _tmp105 * _tmp76 - _tmp69 * _tmp79 + _tmp72 * _tmp76;
  const Scalar _tmp107 = _tmp105 * _tmp54 - _tmp106 * _tmp83 - _tmp46 * _tmp57 + _tmp50 * _tmp54;
  const Scalar _tmp108 = Scalar(1.0) / (_tmp107);
  const Scalar _tmp109 = Scalar(1.0) * _tmp108;
  const Scalar _tmp110 = Scalar(1.0) * _tmp82;
  const Scalar _tmp111 = _tmp108 * _tmp110 * _tmp81;
  const Scalar _tmp112 = _tmp103 * _tmp97 * (_tmp109 * _tmp54 - _tmp111 * _tmp76);
  const Scalar _tmp113 = _tmp67 * _tmp82;
  const Scalar _tmp114 = _tmp113 * _tmp80 + _tmp68;
  const Scalar _tmp115 = -_tmp114 * _tmp89 - _tmp44 + _tmp67 * _tmp90;
  const Scalar _tmp116 = _tmp107 * _tmp92;
  const Scalar _tmp117 = _tmp108 * _tmp91;
  const Scalar _tmp118 = _tmp117 * (-_tmp105 + _tmp106 * _tmp113 - _tmp115 * _tmp116);
  const Scalar _tmp119 = _tmp115 + _tmp118;
  const Scalar _tmp120 = _tmp119 * _tmp92;
  const Scalar _tmp121 = _tmp81 * _tmp92;
  const Scalar _tmp122 = _tmp82 * (-_tmp119 * _tmp121 - _tmp67);
  const Scalar _tmp123 = _tmp101 * _tmp97 * (_tmp120 * _tmp54 + _tmp122 * _tmp76 + Scalar(1.0));
  const Scalar _tmp124 = _tmp110 * _tmp80;
  const Scalar _tmp125 = _tmp124 * _tmp89 - Scalar(1.0) * _tmp90;
  const Scalar _tmp126 = _tmp117 * (-_tmp106 * _tmp110 - _tmp116 * _tmp125);
  const Scalar _tmp127 = _tmp125 + _tmp126;
  const Scalar _tmp128 = _tmp127 * _tmp92;
  const Scalar _tmp129 = _tmp82 * (-_tmp121 * _tmp127 + Scalar(1.0));
  const Scalar _tmp130 = _tmp102 * _tmp97 * (_tmp128 * _tmp54 + _tmp129 * _tmp76);
  const Scalar _tmp131 = -_tmp112 * fh1 - _tmp123 * fh1 - _tmp130 * fh1 -
                         _tmp38 * _tmp97 * (_tmp54 * _tmp95 - _tmp76 * _tmp83 * _tmp95);
  const Scalar _tmp132 = Scalar(1.0) / (_tmp131);
  const Scalar _tmp133 = _tmp50 + _tmp86;
  const Scalar _tmp134 = _tmp133 * _tmp89;
  const Scalar _tmp135 = Scalar(1.0) / (-_tmp134 - _tmp46 + _tmp88);
  const Scalar _tmp136 = Scalar(1.0) * _tmp135;
  const Scalar _tmp137 = _tmp133 * _tmp135;
  const Scalar _tmp138 = _tmp84 * _tmp92;
  const Scalar _tmp139 = _tmp114 + _tmp118 * _tmp137 - _tmp119 * _tmp138;
  const Scalar _tmp140 = Scalar(1.0) * _tmp87;
  const Scalar _tmp141 = Scalar(1.0) * _tmp101 * (_tmp118 * _tmp136 - _tmp139 * _tmp140);
  const Scalar _tmp142 = _tmp117 * _tmp136;
  const Scalar _tmp143 = -_tmp109 * _tmp84 + _tmp133 * _tmp142;
  const Scalar _tmp144 = Scalar(1.0) * _tmp103 * (-_tmp140 * _tmp143 + _tmp142);
  const Scalar _tmp145 = -_tmp124 + _tmp126 * _tmp137 - _tmp127 * _tmp138;
  const Scalar _tmp146 = Scalar(1.0) * _tmp102 * (_tmp126 * _tmp136 - _tmp140 * _tmp145);
  const Scalar _tmp147 = _tmp39 + _tmp43;
  const Scalar _tmp148 = _tmp147 * fh1;
  const Scalar _tmp149 = _tmp101 * _tmp148 + Scalar(40.024799999999999) * _tmp22 + _tmp26 * fv1;
  const Scalar _tmp150 = _tmp133 * _tmp87;
  const Scalar _tmp151 = _tmp136 * _tmp150;
  const Scalar _tmp152 = -Scalar(1.0) * _tmp136 + Scalar(1.0) * _tmp151;
  const Scalar _tmp153 = -_tmp102 * _tmp148 - Scalar(40.024799999999999) * _tmp13 - _tmp16 * fv1;
  const Scalar _tmp154 = _tmp134 * _tmp136 + Scalar(1.0);
  const Scalar _tmp155 = _tmp136 * _tmp89;
  const Scalar _tmp156 = -Scalar(1.0) * _tmp140 * _tmp154 + Scalar(1.0) * _tmp155;
  const Scalar _tmp157 = _tmp135 * _tmp93;
  const Scalar _tmp158 = -_tmp133 * _tmp157 - _tmp138 * _tmp94 + _tmp86;
  const Scalar _tmp159 =
      _tmp141 * fh1 + _tmp144 * fh1 + _tmp146 * fh1 + _tmp149 * _tmp152 + _tmp153 * _tmp156 +
      Scalar(1.0) * _tmp38 * (-_tmp136 * _tmp93 - _tmp140 * _tmp158 + Scalar(1.0));
  const Scalar _tmp160 = std::asinh(_tmp132 * _tmp159);
  const Scalar _tmp161 = -_tmp112 - _tmp123 - _tmp130;
  const Scalar _tmp162 = Scalar(1.4083112389913199) * _tmp161;
  const Scalar _tmp163 = Scalar(1.4083112389913199) * _tmp131;
  const Scalar _tmp164 = std::pow(_tmp131, Scalar(-2));
  const Scalar _tmp165 = _tmp161 * _tmp164;
  const Scalar _tmp166 = _tmp102 * _tmp147;
  const Scalar _tmp167 = _tmp101 * _tmp147;
  const Scalar _tmp168 =
      (_tmp132 * (_tmp141 + _tmp144 + _tmp146 + _tmp152 * _tmp167 - _tmp156 * _tmp166) -
       _tmp159 * _tmp165) /
      std::sqrt(Scalar(std::pow(_tmp159, Scalar(2)) * _tmp164 + 1));
  const Scalar _tmp169 = Scalar(0.71007031138673404) * _tmp132;
  const Scalar _tmp170 =
      -_tmp160 * _tmp163 - std::sqrt(Scalar(std::pow(Scalar(-_tmp60 + p_d(0, 0)), Scalar(2)) +
                                            std::pow(Scalar(-_tmp65 + p_d(1, 0)), Scalar(2))));
  const Scalar _tmp171 = _tmp169 * _tmp170;
  const Scalar _tmp172 = Scalar(1.0) * _tmp160;
  const Scalar _tmp173 = _tmp154 * _tmp87;
  const Scalar _tmp174 = _tmp103 * _tmp143 * _tmp87;
  const Scalar _tmp175 = _tmp102 * _tmp145 * _tmp87;
  const Scalar _tmp176 = _tmp101 * _tmp139 * _tmp87;
  const Scalar _tmp177 = _tmp136 * _tmp149;
  const Scalar _tmp178 = -_tmp150 * _tmp177 + _tmp153 * _tmp173 + _tmp158 * _tmp38 * _tmp87 +
                         _tmp174 * fh1 + _tmp175 * fh1 + _tmp176 * fh1;
  const Scalar _tmp179 = _tmp102 * _tmp129;
  const Scalar _tmp180 = _tmp101 * _tmp122;
  const Scalar _tmp181 = _tmp38 * _tmp95;
  const Scalar _tmp182 = _tmp103 * _tmp111;
  const Scalar _tmp183 = _tmp179 * fh1 + _tmp180 * fh1 - _tmp181 * _tmp83 - _tmp182 * fh1;
  const Scalar _tmp184 = Scalar(1.0) / (_tmp183);
  const Scalar _tmp185 = std::asinh(_tmp178 * _tmp184);
  const Scalar _tmp186 = Scalar(1.4083112389913199) * _tmp183;
  const Scalar _tmp187 =
      -_tmp185 * _tmp186 - std::sqrt(Scalar(std::pow(Scalar(-_tmp70 + p_a(0, 0)), Scalar(2)) +
                                            std::pow(Scalar(-_tmp73 + p_a(1, 0)), Scalar(2))));
  const Scalar _tmp188 = Scalar(0.71007031138673404) * _tmp184;
  const Scalar _tmp189 = _tmp187 * _tmp188;
  const Scalar _tmp190 = std::pow(_tmp183, Scalar(-2));
  const Scalar _tmp191 = _tmp179 + _tmp180 - _tmp182;
  const Scalar _tmp192 = _tmp190 * _tmp191;
  const Scalar _tmp193 = (-_tmp178 * _tmp192 + _tmp184 * (-_tmp151 * _tmp167 - _tmp166 * _tmp173 +
                                                          _tmp174 + _tmp175 + _tmp176)) /
                         std::sqrt(Scalar(std::pow(_tmp178, Scalar(2)) * _tmp190 + 1));
  const Scalar _tmp194 = Scalar(1.4083112389913199) * _tmp191;
  const Scalar _tmp195 = Scalar(1.0) * _tmp185;
  const Scalar _tmp196 = _tmp101 * _tmp120;
  const Scalar _tmp197 = _tmp103 * _tmp109;
  const Scalar _tmp198 = _tmp102 * _tmp128;
  const Scalar _tmp199 = _tmp181 + _tmp196 * fh1 + _tmp197 * fh1 + _tmp198 * fh1;
  const Scalar _tmp200 = Scalar(1.0) / (_tmp199);
  const Scalar _tmp201 = _tmp103 * _tmp142;
  const Scalar _tmp202 = _tmp102 * _tmp126 * _tmp135;
  const Scalar _tmp203 = _tmp101 * _tmp118 * _tmp135;
  const Scalar _tmp204 = -_tmp153 * _tmp155 + _tmp157 * _tmp38 + _tmp177 - _tmp201 * fh1 -
                         _tmp202 * fh1 - _tmp203 * fh1;
  const Scalar _tmp205 = std::asinh(_tmp200 * _tmp204);
  const Scalar _tmp206 = Scalar(1.4083112389913199) * _tmp199;
  const Scalar _tmp207 =
      -_tmp205 * _tmp206 - std::sqrt(Scalar(std::pow(Scalar(-_tmp47 + p_b(0, 0)), Scalar(2)) +
                                            std::pow(Scalar(-_tmp51 + p_b(1, 0)), Scalar(2))));
  const Scalar _tmp208 = std::pow(_tmp199, Scalar(-2));
  const Scalar _tmp209 = _tmp196 + _tmp197 + _tmp198;
  const Scalar _tmp210 = _tmp208 * _tmp209;
  const Scalar _tmp211 = Scalar(1.4083112389913199) * _tmp209;
  const Scalar _tmp212 =
      (_tmp200 * (_tmp136 * _tmp167 + _tmp155 * _tmp166 - _tmp201 - _tmp202 - _tmp203) -
       _tmp204 * _tmp210) /
      std::sqrt(Scalar(std::pow(_tmp204, Scalar(2)) * _tmp208 + 1));
  const Scalar _tmp213 = Scalar(0.71007031138673404) * _tmp200;
  const Scalar _tmp214 = _tmp207 * _tmp213;
  const Scalar _tmp215 = Scalar(1.0) * _tmp205;

  // Output terms (1)
  Eigen::Matrix<Scalar, 4, 1> _res;

  _res(0, 0) = Scalar(1.4083112389913199) * fh1 *
                   (Scalar(1.0) * _tmp35 * _tmp36 * fv1 * std::cosh(_tmp37) -
                    (-Scalar(0.71007031138673404) * _tmp32 * _tmp35 +
                     _tmp33 * (Scalar(1.4083112389913199) * _tmp29 * _tmp36 - _tmp31)) *
                        std::cosh(_tmp34)) -
               Scalar(1.4083112389913199) * std::sinh(_tmp34) -
               Scalar(1.4083112389913199) * std::sinh(_tmp37);
  _res(1, 0) = _tmp162 * (-std::sinh(_tmp171) - std::sinh(_tmp172)) +
               _tmp163 * (-Scalar(1.0) * _tmp168 * std::cosh(_tmp172) -
                          (-Scalar(0.71007031138673404) * _tmp165 * _tmp170 +
                           _tmp169 * (-_tmp160 * _tmp162 - _tmp163 * _tmp168)) *
                              std::cosh(_tmp171));
  _res(2, 0) = _tmp186 * (-Scalar(1.0) * _tmp193 * std::cosh(_tmp195) -
                          (-Scalar(0.71007031138673404) * _tmp187 * _tmp192 +
                           _tmp188 * (-_tmp185 * _tmp194 - _tmp186 * _tmp193)) *
                              std::cosh(_tmp189)) +
               _tmp194 * (-std::sinh(_tmp189) - std::sinh(_tmp195));
  _res(3, 0) = _tmp206 * (-Scalar(1.0) * _tmp212 * std::cosh(_tmp215) -
                          (-Scalar(0.71007031138673404) * _tmp207 * _tmp210 +
                           _tmp213 * (-_tmp205 * _tmp211 - _tmp206 * _tmp212)) *
                              std::cosh(_tmp214)) +
               _tmp211 * (-std::sinh(_tmp214) - std::sinh(_tmp215));

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
