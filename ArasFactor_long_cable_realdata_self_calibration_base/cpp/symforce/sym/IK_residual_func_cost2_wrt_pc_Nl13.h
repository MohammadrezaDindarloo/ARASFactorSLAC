// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

#include <sym/rot3.h>

namespace sym {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: IK_residual_func_cost2_wrt_pc_Nl13
 *
 * Args:
 *     fh1: Scalar
 *     fv1: Scalar
 *     DeltaRot: Rot3
 *     position_vector: Matrix31
 *     p_a: Matrix31
 *     p_b: Matrix31
 *     p_c: Matrix31
 *     p_d: Matrix31
 *     Rot_init: Rot3
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix43
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 4, 3> IkResidualFuncCost2WrtPcNl13(
    const Scalar fh1, const Scalar fv1, const sym::Rot3<Scalar>& DeltaRot,
    const Eigen::Matrix<Scalar, 3, 1>& position_vector, const Eigen::Matrix<Scalar, 3, 1>& p_a,
    const Eigen::Matrix<Scalar, 3, 1>& p_b, const Eigen::Matrix<Scalar, 3, 1>& p_c,
    const Eigen::Matrix<Scalar, 3, 1>& p_d, const sym::Rot3<Scalar>& Rot_init,
    const Scalar epsilon) {
  // Total ops: 768

  // Unused inputs
  (void)epsilon;

  // Input arrays
  const Eigen::Matrix<Scalar, 4, 1>& _DeltaRot = DeltaRot.Data();
  const Eigen::Matrix<Scalar, 4, 1>& _Rot_init = Rot_init.Data();

  // Intermediate terms (268)
  const Scalar _tmp0 = _DeltaRot[0] * _Rot_init[3] - _DeltaRot[1] * _Rot_init[2] +
                       _DeltaRot[2] * _Rot_init[1] + _DeltaRot[3] * _Rot_init[0];
  const Scalar _tmp1 = _DeltaRot[0] * _Rot_init[2] + _DeltaRot[1] * _Rot_init[3] -
                       _DeltaRot[2] * _Rot_init[0] + _DeltaRot[3] * _Rot_init[1];
  const Scalar _tmp2 = 2 * _tmp1;
  const Scalar _tmp3 = _tmp0 * _tmp2;
  const Scalar _tmp4 = -_DeltaRot[0] * _Rot_init[1] + _DeltaRot[1] * _Rot_init[0] +
                       _DeltaRot[2] * _Rot_init[3] + _DeltaRot[3] * _Rot_init[2];
  const Scalar _tmp5 = -2 * _DeltaRot[0] * _Rot_init[0] - 2 * _DeltaRot[1] * _Rot_init[1] -
                       2 * _DeltaRot[2] * _Rot_init[2] + 2 * _DeltaRot[3] * _Rot_init[3];
  const Scalar _tmp6 = _tmp4 * _tmp5;
  const Scalar _tmp7 = Scalar(0.20999999999999999) * _tmp3 - Scalar(0.20999999999999999) * _tmp6;
  const Scalar _tmp8 = 2 * _tmp0 * _tmp4;
  const Scalar _tmp9 = _tmp1 * _tmp5;
  const Scalar _tmp10 = _tmp8 + _tmp9;
  const Scalar _tmp11 = -Scalar(0.010999999999999999) * _tmp10;
  const Scalar _tmp12 = -2 * std::pow(_tmp4, Scalar(2));
  const Scalar _tmp13 = 1 - 2 * std::pow(_tmp1, Scalar(2));
  const Scalar _tmp14 = Scalar(0.20999999999999999) * _tmp12 + Scalar(0.20999999999999999) * _tmp13;
  const Scalar _tmp15 = _tmp11 + _tmp14;
  const Scalar _tmp16 = _tmp15 + _tmp7;
  const Scalar _tmp17 = _tmp16 + position_vector(0, 0);
  const Scalar _tmp18 = -_tmp17 + p_c(0, 0);
  const Scalar _tmp19 = Scalar(0.20999999999999999) * _tmp8 - Scalar(0.20999999999999999) * _tmp9;
  const Scalar _tmp20 = -2 * std::pow(_tmp0, Scalar(2));
  const Scalar _tmp21 =
      -Scalar(0.010999999999999999) * _tmp13 - Scalar(0.010999999999999999) * _tmp20;
  const Scalar _tmp22 = _tmp2 * _tmp4;
  const Scalar _tmp23 = _tmp0 * _tmp5;
  const Scalar _tmp24 = Scalar(0.20999999999999999) * _tmp22 + Scalar(0.20999999999999999) * _tmp23;
  const Scalar _tmp25 = _tmp21 + _tmp24;
  const Scalar _tmp26 = _tmp19 + _tmp25;
  const Scalar _tmp27 = -_tmp26 + p_c(2, 0) - position_vector(2, 0);
  const Scalar _tmp28 = Scalar(0.20999999999999999) * _tmp3 + Scalar(0.20999999999999999) * _tmp6;
  const Scalar _tmp29 = _tmp22 - _tmp23;
  const Scalar _tmp30 = -Scalar(0.010999999999999999) * _tmp29;
  const Scalar _tmp31 = Scalar(0.20999999999999999) * _tmp12 +
                        Scalar(0.20999999999999999) * _tmp20 + Scalar(0.20999999999999999);
  const Scalar _tmp32 = _tmp30 + _tmp31;
  const Scalar _tmp33 = _tmp28 + _tmp32;
  const Scalar _tmp34 = _tmp33 + position_vector(1, 0);
  const Scalar _tmp35 = -_tmp34 + p_c(1, 0);
  const Scalar _tmp36 = std::pow(_tmp18, Scalar(2)) + std::pow(_tmp35, Scalar(2));
  const Scalar _tmp37 =
      std::pow(Scalar(std::pow(_tmp27, Scalar(2)) + _tmp36), Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp38 = Scalar(1.0) / (fh1);
  const Scalar _tmp39 = std::sqrt(_tmp36);
  const Scalar _tmp40 =
      Scalar(1.0) *
      std::cosh(Scalar(0.71007031138673404) * _tmp38 *
                (-_tmp39 - Scalar(1.4083112389913199) * fh1 * std::asinh(_tmp38 * fv1))) /
      _tmp39;
  const Scalar _tmp41 = _tmp17 - p_c(0, 0);
  const Scalar _tmp42 = std::pow(_tmp41, Scalar(2));
  const Scalar _tmp43 = _tmp34 - p_c(1, 0);
  const Scalar _tmp44 = std::pow(_tmp43, Scalar(2));
  const Scalar _tmp45 = _tmp42 + _tmp44;
  const Scalar _tmp46 = std::pow(_tmp45, Scalar(Scalar(-3) / Scalar(2)));
  const Scalar _tmp47 = _tmp41 * _tmp43;
  const Scalar _tmp48 = _tmp46 * _tmp47;
  const Scalar _tmp49 = _tmp48 * fh1;
  const Scalar _tmp50 = _tmp21 - _tmp24;
  const Scalar _tmp51 = _tmp19 + _tmp50;
  const Scalar _tmp52 = -_tmp7;
  const Scalar _tmp53 = _tmp15 + _tmp52;
  const Scalar _tmp54 = _tmp53 + position_vector(0, 0);
  const Scalar _tmp55 = _tmp54 - p_b(0, 0);
  const Scalar _tmp56 = _tmp30 - _tmp31;
  const Scalar _tmp57 = _tmp28 + _tmp56;
  const Scalar _tmp58 = _tmp57 + position_vector(1, 0);
  const Scalar _tmp59 = _tmp58 - p_b(1, 0);
  const Scalar _tmp60 = std::pow(Scalar(std::pow(_tmp55, Scalar(2)) + std::pow(_tmp59, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp61 = _tmp59 * _tmp60;
  const Scalar _tmp62 = -_tmp19;
  const Scalar _tmp63 = _tmp25 + _tmp62;
  const Scalar _tmp64 = _tmp11 - _tmp14;
  const Scalar _tmp65 = _tmp64 + _tmp7;
  const Scalar _tmp66 = _tmp65 + position_vector(0, 0);
  const Scalar _tmp67 = _tmp66 - p_d(0, 0);
  const Scalar _tmp68 = -_tmp28;
  const Scalar _tmp69 = _tmp32 + _tmp68;
  const Scalar _tmp70 = _tmp69 + position_vector(1, 0);
  const Scalar _tmp71 = _tmp70 - p_d(1, 0);
  const Scalar _tmp72 = std::pow(Scalar(std::pow(_tmp67, Scalar(2)) + std::pow(_tmp71, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp73 = _tmp71 * _tmp72;
  const Scalar _tmp74 = _tmp52 + _tmp64;
  const Scalar _tmp75 = _tmp74 + position_vector(0, 0);
  const Scalar _tmp76 = _tmp75 - p_a(0, 0);
  const Scalar _tmp77 = Scalar(1.0) / (_tmp76);
  const Scalar _tmp78 = _tmp56 + _tmp68;
  const Scalar _tmp79 = _tmp78 + position_vector(1, 0);
  const Scalar _tmp80 = _tmp79 - p_a(1, 0);
  const Scalar _tmp81 = _tmp77 * _tmp80;
  const Scalar _tmp82 = _tmp50 + _tmp62;
  const Scalar _tmp83 = _tmp67 * _tmp72;
  const Scalar _tmp84 = _tmp82 * _tmp83;
  const Scalar _tmp85 = _tmp63 * _tmp73 - _tmp81 * _tmp84;
  const Scalar _tmp86 = _tmp55 * _tmp60;
  const Scalar _tmp87 = -_tmp61 + _tmp81 * _tmp86;
  const Scalar _tmp88 = Scalar(1.0) / (-_tmp73 + _tmp81 * _tmp83);
  const Scalar _tmp89 = _tmp87 * _tmp88;
  const Scalar _tmp90 = _tmp82 * _tmp86;
  const Scalar _tmp91 = _tmp51 * _tmp61 - _tmp81 * _tmp90 - _tmp85 * _tmp89;
  const Scalar _tmp92 = Scalar(1.0) * _tmp78;
  const Scalar _tmp93 = -_tmp92;
  const Scalar _tmp94 = Scalar(1.0) / (_tmp69 + _tmp93);
  const Scalar _tmp95 = Scalar(1.0) * _tmp74;
  const Scalar _tmp96 = -_tmp65 + _tmp95;
  const Scalar _tmp97 = _tmp94 * _tmp96;
  const Scalar _tmp98 = -_tmp63 * _tmp83 + _tmp84;
  const Scalar _tmp99 = -_tmp51 * _tmp86 - _tmp89 * _tmp98 + _tmp90 - _tmp91 * _tmp97;
  const Scalar _tmp100 = Scalar(1.0) / (_tmp99);
  const Scalar _tmp101 = Scalar(1.0) * _tmp94;
  const Scalar _tmp102 = Scalar(1.0) * _tmp88;
  const Scalar _tmp103 = _tmp101 * _tmp85 * _tmp88 * _tmp96 - _tmp102 * _tmp98;
  const Scalar _tmp104 =
      std::sqrt(Scalar(std::pow(_tmp76, Scalar(2)) + std::pow(_tmp80, Scalar(2))));
  const Scalar _tmp105 = Scalar(1.0) / (_tmp104);
  const Scalar _tmp106 = _tmp104 * _tmp77;
  const Scalar _tmp107 = _tmp106 * (_tmp105 * _tmp74 * _tmp80 - _tmp105 * _tmp76 * _tmp78);
  const Scalar _tmp108 = _tmp107 * _tmp83 - _tmp65 * _tmp73 + _tmp69 * _tmp83;
  const Scalar _tmp109 = _tmp107 * _tmp86 - _tmp108 * _tmp89 - _tmp53 * _tmp61 + _tmp57 * _tmp86;
  const Scalar _tmp110 = _tmp100 * _tmp109;
  const Scalar _tmp111 = Scalar(1.0) / (_tmp109);
  const Scalar _tmp112 = _tmp111 * _tmp99;
  const Scalar _tmp113 = _tmp112 * (-_tmp102 * _tmp108 - _tmp103 * _tmp110);
  const Scalar _tmp114 = _tmp100 * (_tmp103 + _tmp113);
  const Scalar _tmp115 = _tmp88 * (-_tmp114 * _tmp87 + Scalar(1.0));
  const Scalar _tmp116 = _tmp114 * _tmp86 + _tmp115 * _tmp83;
  const Scalar _tmp117 = _tmp106 * _tmp116;
  const Scalar _tmp118 = _tmp81 * _tmp88;
  const Scalar _tmp119 = _tmp118 * _tmp85 + _tmp81 * _tmp82;
  const Scalar _tmp120 = _tmp118 * _tmp98 - _tmp119 * _tmp97 - _tmp82;
  const Scalar _tmp121 = _tmp112 * (-_tmp107 + _tmp108 * _tmp118 - _tmp110 * _tmp120);
  const Scalar _tmp122 = _tmp120 + _tmp121;
  const Scalar _tmp123 = _tmp100 * _tmp122;
  const Scalar _tmp124 = _tmp88 * (-_tmp123 * _tmp87 - _tmp81);
  const Scalar _tmp125 = _tmp123 * _tmp86 + _tmp124 * _tmp83 + Scalar(1.0);
  const Scalar _tmp126 = std::pow(_tmp45, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp127 = _tmp126 * fh1;
  const Scalar _tmp128 = _tmp106 * _tmp127;
  const Scalar _tmp129 = _tmp125 * _tmp128;
  const Scalar _tmp130 = _tmp42 * _tmp46;
  const Scalar _tmp131 = _tmp130 * fh1;
  const Scalar _tmp132 = _tmp106 * _tmp125;
  const Scalar _tmp133 = _tmp126 * _tmp33;
  const Scalar _tmp134 = _tmp16 * _tmp46;
  const Scalar _tmp135 = -_tmp130 * _tmp33 + _tmp133 + _tmp134 * _tmp47;
  const Scalar _tmp136 = _tmp135 * fh1;
  const Scalar _tmp137 = _tmp102 * _tmp111 * _tmp87;
  const Scalar _tmp138 = Scalar(1.0) * _tmp111;
  const Scalar _tmp139 = _tmp106 * (-_tmp137 * _tmp83 + _tmp138 * _tmp86);
  const Scalar _tmp140 = -_tmp117 * _tmp49 + _tmp129 - _tmp131 * _tmp132 - _tmp136 * _tmp139;
  const Scalar _tmp141 = _tmp116 * _tmp128;
  const Scalar _tmp142 = Scalar(333.54000000000002) - fv1;
  const Scalar _tmp143 = _tmp92 * _tmp97 + _tmp95;
  const Scalar _tmp144 = 0;
  const Scalar _tmp145 = _tmp100 * _tmp144;
  const Scalar _tmp146 = _tmp126 * _tmp16;
  const Scalar _tmp147 = fh1 * (-_tmp133 * _tmp41 + _tmp146 * _tmp43);
  const Scalar _tmp148 = -_tmp106 * _tmp142 * (-_tmp145 * _tmp83 * _tmp89 + _tmp145 * _tmp86) -
                         _tmp129 * _tmp41 - _tmp139 * _tmp147 - _tmp141 * _tmp43;
  const Scalar _tmp149 = Scalar(1.0) / (_tmp148);
  const Scalar _tmp150 = _tmp57 + _tmp93;
  const Scalar _tmp151 = _tmp150 * _tmp97;
  const Scalar _tmp152 = Scalar(1.0) / (-_tmp151 - _tmp53 + _tmp95);
  const Scalar _tmp153 = Scalar(1.0) * _tmp152;
  const Scalar _tmp154 = _tmp112 * _tmp153;
  const Scalar _tmp155 = -_tmp138 * _tmp91 + _tmp150 * _tmp154;
  const Scalar _tmp156 = -Scalar(1.0) * _tmp101 * _tmp155 + Scalar(1.0) * _tmp154;
  const Scalar _tmp157 = _tmp150 * _tmp152;
  const Scalar _tmp158 = -_tmp102 * _tmp85 + _tmp113 * _tmp157 - _tmp114 * _tmp91;
  const Scalar _tmp159 = -_tmp101 * _tmp158 + _tmp113 * _tmp153;
  const Scalar _tmp160 = Scalar(1.0) * _tmp127;
  const Scalar _tmp161 = _tmp159 * _tmp160;
  const Scalar _tmp162 = _tmp127 * _tmp26;
  const Scalar _tmp163 = -_tmp162 * _tmp43 - Scalar(40.024799999999999) * _tmp29 - _tmp33 * fv1;
  const Scalar _tmp164 = _tmp153 * _tmp97;
  const Scalar _tmp165 = _tmp151 * _tmp153 + Scalar(1.0);
  const Scalar _tmp166 = -Scalar(1.0) * _tmp101 * _tmp165 + Scalar(1.0) * _tmp164;
  const Scalar _tmp167 = Scalar(40.024799999999999) * _tmp10 + _tmp16 * fv1 + _tmp162 * _tmp41;
  const Scalar _tmp168 = _tmp150 * _tmp94;
  const Scalar _tmp169 = _tmp153 * _tmp168;
  const Scalar _tmp170 = -Scalar(1.0) * _tmp153 + Scalar(1.0) * _tmp169;
  const Scalar _tmp171 = _tmp100 * _tmp91;
  const Scalar _tmp172 = _tmp119 + _tmp121 * _tmp157 - _tmp122 * _tmp171;
  const Scalar _tmp173 = -_tmp101 * _tmp172 + _tmp121 * _tmp153;
  const Scalar _tmp174 = _tmp160 * _tmp173;
  const Scalar _tmp175 = _tmp143 * _tmp152;
  const Scalar _tmp176 = -_tmp144 * _tmp171 - _tmp150 * _tmp175 + _tmp93;
  const Scalar _tmp177 =
      Scalar(1.0) * _tmp142 * (-_tmp101 * _tmp176 - _tmp143 * _tmp153 + Scalar(1.0)) +
      _tmp147 * _tmp156 + _tmp161 * _tmp43 + _tmp163 * _tmp166 + _tmp167 * _tmp170 +
      _tmp174 * _tmp41;
  const Scalar _tmp178 = std::asinh(_tmp149 * _tmp177);
  const Scalar _tmp179 = Scalar(1.4083112389913199) * _tmp178;
  const Scalar _tmp180 =
      -_tmp148 * _tmp179 - std::sqrt(Scalar(std::pow(Scalar(-_tmp75 + p_a(0, 0)), Scalar(2)) +
                                            std::pow(Scalar(-_tmp79 + p_a(1, 0)), Scalar(2))));
  const Scalar _tmp181 = Scalar(0.71007031138673404) * _tmp149;
  const Scalar _tmp182 = _tmp180 * _tmp181;
  const Scalar _tmp183 = Scalar(1.0) * _tmp178;
  const Scalar _tmp184 = -Scalar(1.4083112389913199) * std::sinh(_tmp182) -
                         Scalar(1.4083112389913199) * std::sinh(_tmp183);
  const Scalar _tmp185 = Scalar(1.0) * std::cosh(_tmp183);
  const Scalar _tmp186 = std::pow(_tmp148, Scalar(-2));
  const Scalar _tmp187 =
      std::pow(Scalar(std::pow(_tmp177, Scalar(2)) * _tmp186 + 1), Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp188 = _tmp26 * fh1;
  const Scalar _tmp189 = _tmp188 * _tmp48;
  const Scalar _tmp190 = _tmp130 * _tmp188 - _tmp162;
  const Scalar _tmp191 = Scalar(1.0) * _tmp159;
  const Scalar _tmp192 = Scalar(1.0) * _tmp173;
  const Scalar _tmp193 = _tmp177 * _tmp186;
  const Scalar _tmp194 =
      _tmp187 *
      (-_tmp140 * _tmp193 + _tmp149 * (_tmp131 * _tmp192 + _tmp136 * _tmp156 - _tmp166 * _tmp189 +
                                       _tmp170 * _tmp190 - _tmp174 + _tmp191 * _tmp49));
  const Scalar _tmp195 = std::cosh(_tmp182);
  const Scalar _tmp196 = Scalar(0.71007031138673404) * _tmp180 * _tmp186;
  const Scalar _tmp197 = Scalar(1.4083112389913199) * _tmp148;
  const Scalar _tmp198 = _tmp124 * _tmp127;
  const Scalar _tmp199 = _tmp115 * _tmp49 + _tmp124 * _tmp131 - _tmp136 * _tmp137 - _tmp198;
  const Scalar _tmp200 = _tmp142 * _tmp145;
  const Scalar _tmp201 = _tmp115 * _tmp127;
  const Scalar _tmp202 =
      -_tmp137 * _tmp147 + _tmp198 * _tmp41 - _tmp200 * _tmp89 + _tmp201 * _tmp43;
  const Scalar _tmp203 = Scalar(1.0) / (_tmp202);
  const Scalar _tmp204 = _tmp127 * _tmp94;
  const Scalar _tmp205 = _tmp158 * _tmp204;
  const Scalar _tmp206 = _tmp172 * _tmp204;
  const Scalar _tmp207 = _tmp153 * _tmp167;
  const Scalar _tmp208 = _tmp165 * _tmp94;
  const Scalar _tmp209 = _tmp155 * _tmp94;
  const Scalar _tmp210 = _tmp142 * _tmp176 * _tmp94 + _tmp147 * _tmp209 + _tmp163 * _tmp208 -
                         _tmp168 * _tmp207 + _tmp205 * _tmp43 + _tmp206 * _tmp41;
  const Scalar _tmp211 = std::asinh(_tmp203 * _tmp210);
  const Scalar _tmp212 = Scalar(1.0) * _tmp211;
  const Scalar _tmp213 = Scalar(1.4083112389913199) * _tmp202;
  const Scalar _tmp214 =
      -_tmp211 * _tmp213 - std::sqrt(Scalar(std::pow(Scalar(-_tmp66 + p_d(0, 0)), Scalar(2)) +
                                            std::pow(Scalar(-_tmp70 + p_d(1, 0)), Scalar(2))));
  const Scalar _tmp215 = Scalar(0.71007031138673404) * _tmp203;
  const Scalar _tmp216 = _tmp214 * _tmp215;
  const Scalar _tmp217 = -Scalar(1.4083112389913199) * std::sinh(_tmp212) -
                         Scalar(1.4083112389913199) * std::sinh(_tmp216);
  const Scalar _tmp218 = std::pow(_tmp202, Scalar(-2));
  const Scalar _tmp219 = _tmp210 * _tmp218;
  const Scalar _tmp220 = _tmp172 * _tmp94;
  const Scalar _tmp221 = _tmp158 * _tmp94;
  const Scalar _tmp222 = _tmp153 * _tmp190;
  const Scalar _tmp223 =
      -_tmp199 * _tmp219 + _tmp203 * (_tmp131 * _tmp220 + _tmp136 * _tmp209 - _tmp168 * _tmp222 -
                                      _tmp189 * _tmp208 - _tmp206 + _tmp221 * _tmp49);
  const Scalar _tmp224 =
      std::pow(Scalar(std::pow(_tmp210, Scalar(2)) * _tmp218 + 1), Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp225 = Scalar(1.0) * _tmp224 * std::cosh(_tmp212);
  const Scalar _tmp226 = std::cosh(_tmp216);
  const Scalar _tmp227 = _tmp213 * _tmp224;
  const Scalar _tmp228 = Scalar(1.4083112389913199) * _tmp211;
  const Scalar _tmp229 = Scalar(0.71007031138673404) * _tmp214 * _tmp218;
  const Scalar _tmp230 = _tmp138 * fh1;
  const Scalar _tmp231 = _tmp123 * _tmp127;
  const Scalar _tmp232 = _tmp114 * _tmp49 + _tmp123 * _tmp131 + _tmp135 * _tmp230 - _tmp231;
  const Scalar _tmp233 = _tmp127 * _tmp152;
  const Scalar _tmp234 = _tmp113 * _tmp233;
  const Scalar _tmp235 = _tmp121 * _tmp233;
  const Scalar _tmp236 = _tmp142 * _tmp175 - _tmp147 * _tmp154 - _tmp163 * _tmp164 + _tmp207 -
                         _tmp234 * _tmp43 - _tmp235 * _tmp41;
  const Scalar _tmp237 = _tmp114 * _tmp127;
  const Scalar _tmp238 = _tmp138 * _tmp147 + _tmp200 + _tmp231 * _tmp41 + _tmp237 * _tmp43;
  const Scalar _tmp239 = Scalar(1.0) / (_tmp238);
  const Scalar _tmp240 = std::asinh(_tmp236 * _tmp239);
  const Scalar _tmp241 = Scalar(1.4083112389913199) * _tmp238;
  const Scalar _tmp242 =
      -_tmp240 * _tmp241 - std::sqrt(Scalar(std::pow(Scalar(-_tmp54 + p_b(0, 0)), Scalar(2)) +
                                            std::pow(Scalar(-_tmp58 + p_b(1, 0)), Scalar(2))));
  const Scalar _tmp243 = Scalar(0.71007031138673404) * _tmp239;
  const Scalar _tmp244 = _tmp242 * _tmp243;
  const Scalar _tmp245 = Scalar(1.0) * _tmp240;
  const Scalar _tmp246 = -Scalar(1.4083112389913199) * std::sinh(_tmp244) -
                         Scalar(1.4083112389913199) * std::sinh(_tmp245);
  const Scalar _tmp247 = std::cosh(_tmp244);
  const Scalar _tmp248 = Scalar(1.4083112389913199) * _tmp240;
  const Scalar _tmp249 = std::pow(_tmp238, Scalar(-2));
  const Scalar _tmp250 =
      std::pow(Scalar(std::pow(_tmp236, Scalar(2)) * _tmp249 + 1), Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp251 = _tmp236 * _tmp249;
  const Scalar _tmp252 = _tmp121 * _tmp152;
  const Scalar _tmp253 = _tmp113 * _tmp152;
  const Scalar _tmp254 =
      _tmp250 *
      (-_tmp232 * _tmp251 + _tmp239 * (-_tmp131 * _tmp252 - _tmp136 * _tmp154 + _tmp164 * _tmp189 +
                                       _tmp222 + _tmp235 - _tmp253 * _tmp49));
  const Scalar _tmp255 = Scalar(0.71007031138673404) * _tmp242 * _tmp249;
  const Scalar _tmp256 = Scalar(1.0) * std::cosh(_tmp245);
  const Scalar _tmp257 = _tmp44 * _tmp46;
  const Scalar _tmp258 = _tmp257 * fh1;
  const Scalar _tmp259 = _tmp134 * _tmp44 - _tmp146 - _tmp33 * _tmp48;
  const Scalar _tmp260 = _tmp259 * fh1;
  const Scalar _tmp261 = -_tmp117 * _tmp258 - _tmp132 * _tmp49 - _tmp139 * _tmp260 + _tmp141;
  const Scalar _tmp262 = _tmp162 - _tmp188 * _tmp257;
  const Scalar _tmp263 =
      _tmp187 * (_tmp149 * (_tmp156 * _tmp260 - _tmp161 + _tmp166 * _tmp262 + _tmp170 * _tmp189 +
                            _tmp191 * _tmp258 + _tmp192 * _tmp49) -
                 _tmp193 * _tmp261);
  const Scalar _tmp264 = _tmp115 * _tmp258 + _tmp124 * _tmp49 - _tmp137 * _tmp260 - _tmp201;
  const Scalar _tmp265 = _tmp203 * (-_tmp169 * _tmp189 - _tmp205 + _tmp208 * _tmp262 +
                                    _tmp209 * _tmp260 + _tmp220 * _tmp49 + _tmp221 * _tmp258) -
                         _tmp219 * _tmp264;
  const Scalar _tmp266 = _tmp114 * _tmp258 + _tmp123 * _tmp49 + _tmp230 * _tmp259 - _tmp237;
  const Scalar _tmp267 =
      _tmp250 * (_tmp239 * (_tmp153 * _tmp189 - _tmp154 * _tmp260 - _tmp164 * _tmp262 + _tmp234 -
                            _tmp252 * _tmp49 - _tmp253 * _tmp258) -
                 _tmp251 * _tmp266);

  // Output terms (1)
  Eigen::Matrix<Scalar, 4, 3> _res;

  _res(0, 0) = -_tmp18 * _tmp37 + _tmp18 * _tmp40;
  _res(1, 0) =
      _tmp140 * _tmp184 +
      _tmp197 *
          (-_tmp185 * _tmp194 -
           _tmp195 * (-_tmp140 * _tmp196 + _tmp181 * (-_tmp140 * _tmp179 - _tmp194 * _tmp197)));
  _res(2, 0) =
      _tmp199 * _tmp217 +
      _tmp213 *
          (-_tmp223 * _tmp225 -
           _tmp226 * (-_tmp199 * _tmp229 + _tmp215 * (-_tmp199 * _tmp228 - _tmp223 * _tmp227)));
  _res(3, 0) =
      _tmp232 * _tmp246 +
      _tmp241 *
          (-_tmp247 * (-_tmp232 * _tmp255 + _tmp243 * (-_tmp232 * _tmp248 - _tmp241 * _tmp254)) -
           _tmp254 * _tmp256);
  _res(0, 1) = -_tmp35 * _tmp37 + _tmp35 * _tmp40;
  _res(1, 1) =
      _tmp184 * _tmp261 + _tmp197 * (-_tmp185 * _tmp263 -
                                     _tmp195 * (_tmp181 * (-_tmp179 * _tmp261 - _tmp197 * _tmp263) -
                                                _tmp196 * _tmp261));
  _res(2, 1) =
      _tmp213 *
          (-_tmp225 * _tmp265 -
           _tmp226 * (_tmp215 * (-_tmp227 * _tmp265 - _tmp228 * _tmp264) - _tmp229 * _tmp264)) +
      _tmp217 * _tmp264;
  _res(3, 1) =
      _tmp241 *
          (-_tmp247 * (_tmp243 * (-_tmp241 * _tmp267 - _tmp248 * _tmp266) - _tmp255 * _tmp266) -
           _tmp256 * _tmp267) +
      _tmp246 * _tmp266;
  _res(0, 2) = -_tmp27 * _tmp37;
  _res(1, 2) = 0;
  _res(2, 2) = 0;
  _res(3, 2) = 0;

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
