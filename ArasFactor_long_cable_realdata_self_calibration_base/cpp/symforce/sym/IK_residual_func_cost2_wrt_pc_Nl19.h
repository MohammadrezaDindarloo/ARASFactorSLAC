// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

#include <sym/rot3.h>

namespace sym {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: IK_residual_func_cost2_wrt_pc_Nl19
 *
 * Args:
 *     fh1: Scalar
 *     fv1: Scalar
 *     DeltaRot: Rot3
 *     position_vector: Matrix31
 *     p_a: Matrix31
 *     p_b: Matrix31
 *     p_c: Matrix31
 *     p_d: Matrix31
 *     Rot_init: Rot3
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix43
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 4, 3> IkResidualFuncCost2WrtPcNl19(
    const Scalar fh1, const Scalar fv1, const sym::Rot3<Scalar>& DeltaRot,
    const Eigen::Matrix<Scalar, 3, 1>& position_vector, const Eigen::Matrix<Scalar, 3, 1>& p_a,
    const Eigen::Matrix<Scalar, 3, 1>& p_b, const Eigen::Matrix<Scalar, 3, 1>& p_c,
    const Eigen::Matrix<Scalar, 3, 1>& p_d, const sym::Rot3<Scalar>& Rot_init,
    const Scalar epsilon) {
  // Total ops: 1157

  // Unused inputs
  (void)epsilon;

  // Input arrays
  const Eigen::Matrix<Scalar, 4, 1>& _DeltaRot = DeltaRot.Data();
  const Eigen::Matrix<Scalar, 4, 1>& _Rot_init = Rot_init.Data();

  // Intermediate terms (363)
  const Scalar _tmp0 = _DeltaRot[0] * _Rot_init[3] - _DeltaRot[1] * _Rot_init[2] +
                       _DeltaRot[2] * _Rot_init[1] + _DeltaRot[3] * _Rot_init[0];
  const Scalar _tmp1 = _DeltaRot[0] * _Rot_init[2] + _DeltaRot[1] * _Rot_init[3] -
                       _DeltaRot[2] * _Rot_init[0] + _DeltaRot[3] * _Rot_init[1];
  const Scalar _tmp2 = 2 * _tmp1;
  const Scalar _tmp3 = _tmp0 * _tmp2;
  const Scalar _tmp4 = -_DeltaRot[0] * _Rot_init[1] + _DeltaRot[1] * _Rot_init[0] +
                       _DeltaRot[2] * _Rot_init[3] + _DeltaRot[3] * _Rot_init[2];
  const Scalar _tmp5 = -2 * _DeltaRot[0] * _Rot_init[0] - 2 * _DeltaRot[1] * _Rot_init[1] -
                       2 * _DeltaRot[2] * _Rot_init[2] + 2 * _DeltaRot[3] * _Rot_init[3];
  const Scalar _tmp6 = _tmp4 * _tmp5;
  const Scalar _tmp7 = Scalar(0.20999999999999999) * _tmp3 + Scalar(0.20999999999999999) * _tmp6;
  const Scalar _tmp8 = -_tmp7;
  const Scalar _tmp9 = -2 * std::pow(_tmp0, Scalar(2));
  const Scalar _tmp10 = -2 * std::pow(_tmp4, Scalar(2));
  const Scalar _tmp11 = Scalar(0.20999999999999999) * _tmp10 + Scalar(0.20999999999999999) * _tmp9 +
                        Scalar(0.20999999999999999);
  const Scalar _tmp12 = _tmp2 * _tmp4;
  const Scalar _tmp13 = _tmp0 * _tmp5;
  const Scalar _tmp14 = _tmp12 - _tmp13;
  const Scalar _tmp15 = -Scalar(0.010999999999999999) * _tmp14;
  const Scalar _tmp16 = -_tmp11 + _tmp15;
  const Scalar _tmp17 = _tmp16 + _tmp8;
  const Scalar _tmp18 = Scalar(1.0) * _tmp17;
  const Scalar _tmp19 = -_tmp18;
  const Scalar _tmp20 = _tmp16 + _tmp7;
  const Scalar _tmp21 = _tmp19 + _tmp20;
  const Scalar _tmp22 = _tmp11 + _tmp15;
  const Scalar _tmp23 = _tmp22 + _tmp7;
  const Scalar _tmp24 = Scalar(1.0) / (_tmp19 + _tmp23);
  const Scalar _tmp25 = 1 - 2 * std::pow(_tmp1, Scalar(2));
  const Scalar _tmp26 = Scalar(0.20999999999999999) * _tmp10 + Scalar(0.20999999999999999) * _tmp25;
  const Scalar _tmp27 = -_tmp26;
  const Scalar _tmp28 = 2 * _tmp0 * _tmp4;
  const Scalar _tmp29 = _tmp1 * _tmp5;
  const Scalar _tmp30 = _tmp28 + _tmp29;
  const Scalar _tmp31 = -Scalar(0.010999999999999999) * _tmp30;
  const Scalar _tmp32 = Scalar(0.20999999999999999) * _tmp3 - Scalar(0.20999999999999999) * _tmp6;
  const Scalar _tmp33 = _tmp31 - _tmp32;
  const Scalar _tmp34 = _tmp27 + _tmp33;
  const Scalar _tmp35 = Scalar(1.0) * _tmp34;
  const Scalar _tmp36 = _tmp31 + _tmp32;
  const Scalar _tmp37 = _tmp26 + _tmp36;
  const Scalar _tmp38 = _tmp35 - _tmp37;
  const Scalar _tmp39 = _tmp24 * _tmp38;
  const Scalar _tmp40 = _tmp21 * _tmp39;
  const Scalar _tmp41 = _tmp26 + _tmp33;
  const Scalar _tmp42 = Scalar(1.0) / (_tmp35 - _tmp40 - _tmp41);
  const Scalar _tmp43 = Scalar(1.0) * _tmp42;
  const Scalar _tmp44 = _tmp37 + position_vector(0, 0);
  const Scalar _tmp45 = _tmp44 - p_c(0, 0);
  const Scalar _tmp46 = std::pow(_tmp45, Scalar(2));
  const Scalar _tmp47 = _tmp23 + position_vector(1, 0);
  const Scalar _tmp48 = _tmp47 - p_c(1, 0);
  const Scalar _tmp49 = std::pow(_tmp48, Scalar(2));
  const Scalar _tmp50 = _tmp46 + _tmp49;
  const Scalar _tmp51 = std::pow(_tmp50, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp52 = _tmp34 + position_vector(0, 0);
  const Scalar _tmp53 = _tmp52 - p_a(0, 0);
  const Scalar _tmp54 = _tmp17 + position_vector(1, 0);
  const Scalar _tmp55 = _tmp54 - p_a(1, 0);
  const Scalar _tmp56 =
      std::sqrt(Scalar(std::pow(_tmp53, Scalar(2)) + std::pow(_tmp55, Scalar(2))));
  const Scalar _tmp57 = Scalar(1.0) / (_tmp56);
  const Scalar _tmp58 = Scalar(1.0) / (_tmp53);
  const Scalar _tmp59 = _tmp56 * _tmp58;
  const Scalar _tmp60 = _tmp59 * (-_tmp17 * _tmp53 * _tmp57 + _tmp34 * _tmp55 * _tmp57);
  const Scalar _tmp61 = _tmp51 * _tmp60;
  const Scalar _tmp62 = std::pow(_tmp50, Scalar(Scalar(-3) / Scalar(2)));
  const Scalar _tmp63 = _tmp46 * _tmp62;
  const Scalar _tmp64 = _tmp23 * _tmp51;
  const Scalar _tmp65 = _tmp45 * _tmp48 * _tmp62;
  const Scalar _tmp66 = _tmp23 * _tmp63 - _tmp37 * _tmp65 + _tmp60 * _tmp63 - _tmp61 - _tmp64;
  const Scalar _tmp67 = _tmp48 * _tmp51;
  const Scalar _tmp68 = _tmp55 * _tmp58;
  const Scalar _tmp69 = _tmp51 * _tmp68;
  const Scalar _tmp70 = _tmp45 * _tmp69 - _tmp67;
  const Scalar _tmp71 = Scalar(1.0) / (_tmp70);
  const Scalar _tmp72 = _tmp41 + position_vector(0, 0);
  const Scalar _tmp73 = _tmp72 - p_b(0, 0);
  const Scalar _tmp74 = _tmp20 + position_vector(1, 0);
  const Scalar _tmp75 = _tmp74 - p_b(1, 0);
  const Scalar _tmp76 = std::pow(Scalar(std::pow(_tmp73, Scalar(2)) + std::pow(_tmp75, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp77 = _tmp75 * _tmp76;
  const Scalar _tmp78 = _tmp73 * _tmp76;
  const Scalar _tmp79 = _tmp68 * _tmp78 - _tmp77;
  const Scalar _tmp80 = _tmp71 * _tmp79;
  const Scalar _tmp81 = -_tmp37 * _tmp67 + _tmp45 * _tmp61 + _tmp45 * _tmp64;
  const Scalar _tmp82 = std::pow(_tmp70, Scalar(-2));
  const Scalar _tmp83 = _tmp82 * (_tmp63 * _tmp68 - _tmp65 - _tmp69);
  const Scalar _tmp84 = _tmp79 * _tmp83;
  const Scalar _tmp85 = -_tmp66 * _tmp80 + _tmp81 * _tmp84;
  const Scalar _tmp86 = _tmp20 * _tmp78 - _tmp41 * _tmp77 + _tmp60 * _tmp78 - _tmp80 * _tmp81;
  const Scalar _tmp87 = std::pow(_tmp86, Scalar(-2));
  const Scalar _tmp88 = _tmp85 * _tmp87;
  const Scalar _tmp89 = Scalar(0.20999999999999999) * _tmp12 + Scalar(0.20999999999999999) * _tmp13;
  const Scalar _tmp90 = -_tmp89;
  const Scalar _tmp91 =
      -Scalar(0.010999999999999999) * _tmp25 - Scalar(0.010999999999999999) * _tmp9;
  const Scalar _tmp92 = Scalar(0.20999999999999999) * _tmp28 - Scalar(0.20999999999999999) * _tmp29;
  const Scalar _tmp93 = _tmp91 + _tmp92;
  const Scalar _tmp94 = _tmp90 + _tmp93;
  const Scalar _tmp95 = _tmp89 + _tmp93;
  const Scalar _tmp96 = _tmp51 * _tmp95;
  const Scalar _tmp97 = _tmp91 - _tmp92;
  const Scalar _tmp98 = _tmp90 + _tmp97;
  const Scalar _tmp99 = _tmp51 * _tmp98;
  const Scalar _tmp100 = _tmp45 * _tmp99;
  const Scalar _tmp101 = -_tmp100 * _tmp68 + _tmp48 * _tmp96;
  const Scalar _tmp102 = _tmp78 * _tmp98;
  const Scalar _tmp103 = -_tmp101 * _tmp80 - _tmp102 * _tmp68 + _tmp77 * _tmp94;
  const Scalar _tmp104 = _tmp100 - _tmp45 * _tmp96;
  const Scalar _tmp105 = _tmp102 - _tmp103 * _tmp39 - _tmp104 * _tmp80 - _tmp78 * _tmp94;
  const Scalar _tmp106 = _tmp68 * _tmp71;
  const Scalar _tmp107 = Scalar(1.0) / (_tmp105);
  const Scalar _tmp108 = _tmp68 * _tmp98;
  const Scalar _tmp109 = _tmp101 * _tmp106 + _tmp108;
  const Scalar _tmp110 = _tmp104 * _tmp106 - _tmp109 * _tmp39 - _tmp98;
  const Scalar _tmp111 = _tmp107 * _tmp110;
  const Scalar _tmp112 = _tmp106 * _tmp81 - _tmp111 * _tmp86 - _tmp60;
  const Scalar _tmp113 = _tmp105 * _tmp112;
  const Scalar _tmp114 = _tmp113 * _tmp88;
  const Scalar _tmp115 = _tmp110 * _tmp86;
  const Scalar _tmp116 = _tmp101 * _tmp83;
  const Scalar _tmp117 = _tmp65 * _tmp95;
  const Scalar _tmp118 = _tmp63 * _tmp98;
  const Scalar _tmp119 = _tmp117 - _tmp118 * _tmp68 + _tmp68 * _tmp99;
  const Scalar _tmp120 = _tmp116 * _tmp79 - _tmp119 * _tmp80;
  const Scalar _tmp121 = _tmp118 - _tmp63 * _tmp95 + _tmp96 - _tmp99;
  const Scalar _tmp122 = _tmp104 * _tmp84 - _tmp120 * _tmp39 - _tmp121 * _tmp80;
  const Scalar _tmp123 = std::pow(_tmp105, Scalar(-2));
  const Scalar _tmp124 = _tmp122 * _tmp123;
  const Scalar _tmp125 = _tmp106 * _tmp119 - _tmp116 * _tmp68;
  const Scalar _tmp126 = _tmp104 * _tmp68;
  const Scalar _tmp127 = _tmp106 * _tmp121 - _tmp125 * _tmp39 - _tmp126 * _tmp83;
  const Scalar _tmp128 = _tmp107 * _tmp86;
  const Scalar _tmp129 = _tmp68 * _tmp81;
  const Scalar _tmp130 = Scalar(1.0) / (_tmp86);
  const Scalar _tmp131 = _tmp105 * _tmp130;
  const Scalar _tmp132 = _tmp131 * (_tmp106 * _tmp66 - _tmp111 * _tmp85 + _tmp115 * _tmp124 -
                                    _tmp127 * _tmp128 - _tmp129 * _tmp83);
  const Scalar _tmp133 = _tmp21 * _tmp42;
  const Scalar _tmp134 = _tmp112 * _tmp131;
  const Scalar _tmp135 = _tmp110 + _tmp134;
  const Scalar _tmp136 = _tmp107 * _tmp135;
  const Scalar _tmp137 = _tmp112 * _tmp130;
  const Scalar _tmp138 = _tmp122 * _tmp137;
  const Scalar _tmp139 = _tmp123 * _tmp135;
  const Scalar _tmp140 = _tmp122 * _tmp139;
  const Scalar _tmp141 = -_tmp114 + _tmp127 + _tmp132 + _tmp138;
  const Scalar _tmp142 = _tmp103 * _tmp107;
  const Scalar _tmp143 = _tmp103 * _tmp140 - _tmp114 * _tmp133 - _tmp120 * _tmp136 + _tmp125 +
                         _tmp132 * _tmp133 + _tmp133 * _tmp138 - _tmp141 * _tmp142;
  const Scalar _tmp144 = Scalar(1.0) * _tmp24;
  const Scalar _tmp145 = _tmp27 + _tmp36;
  const Scalar _tmp146 = _tmp145 - p_d(0, 0) + position_vector(0, 0);
  const Scalar _tmp147 = _tmp22 + _tmp8;
  const Scalar _tmp148 = _tmp147 - p_d(1, 0) + position_vector(1, 0);
  const Scalar _tmp149 =
      std::pow(Scalar(std::pow(_tmp146, Scalar(2)) + std::pow(_tmp148, Scalar(2))),
               Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp150 = _tmp146 * _tmp149;
  const Scalar _tmp151 = _tmp150 * fh1;
  const Scalar _tmp152 = Scalar(1.0) * _tmp151;
  const Scalar _tmp153 = Scalar(1.0) * _tmp71;
  const Scalar _tmp154 = _tmp144 * _tmp38;
  const Scalar _tmp155 = _tmp154 * _tmp71;
  const Scalar _tmp156 = _tmp101 * _tmp155 - _tmp104 * _tmp153;
  const Scalar _tmp157 = -_tmp128 * _tmp156 - _tmp153 * _tmp81;
  const Scalar _tmp158 = _tmp105 * _tmp157;
  const Scalar _tmp159 = _tmp158 * _tmp88;
  const Scalar _tmp160 = _tmp130 * _tmp157;
  const Scalar _tmp161 = _tmp122 * _tmp160;
  const Scalar _tmp162 = _tmp107 * _tmp156;
  const Scalar _tmp163 = Scalar(1.0) * _tmp104;
  const Scalar _tmp164 =
      -_tmp116 * _tmp154 + _tmp119 * _tmp155 - _tmp121 * _tmp153 + _tmp163 * _tmp83;
  const Scalar _tmp165 = _tmp156 * _tmp86;
  const Scalar _tmp166 = Scalar(1.0) * _tmp81;
  const Scalar _tmp167 = _tmp131 * (_tmp124 * _tmp165 - _tmp128 * _tmp164 - _tmp153 * _tmp66 -
                                    _tmp162 * _tmp85 + _tmp166 * _tmp83);
  const Scalar _tmp168 = -_tmp159 + _tmp161 + _tmp164 + _tmp167;
  const Scalar _tmp169 = _tmp131 * _tmp157;
  const Scalar _tmp170 = _tmp156 + _tmp169;
  const Scalar _tmp171 = _tmp107 * _tmp170;
  const Scalar _tmp172 = _tmp103 * _tmp124;
  const Scalar _tmp173 = Scalar(1.0) * _tmp116 - _tmp119 * _tmp153 - _tmp120 * _tmp171 -
                         _tmp133 * _tmp159 + _tmp133 * _tmp161 + _tmp133 * _tmp167 -
                         _tmp142 * _tmp168 + _tmp170 * _tmp172;
  const Scalar _tmp174 = _tmp148 * _tmp149;
  const Scalar _tmp175 = _tmp174 * fh1;
  const Scalar _tmp176 = Scalar(1.0) * _tmp175;
  const Scalar _tmp177 = _tmp18 * _tmp39 + _tmp35;
  const Scalar _tmp178 = 0;
  const Scalar _tmp179 = _tmp107 * _tmp178;
  const Scalar _tmp180 = -_tmp120 * _tmp179 + _tmp172 * _tmp178;
  const Scalar _tmp181 = Scalar(333.54000000000002) - fv1;
  const Scalar _tmp182 = _tmp144 * _tmp181;
  const Scalar _tmp183 = _tmp105 * _tmp43;
  const Scalar _tmp184 = _tmp183 * _tmp88;
  const Scalar _tmp185 = _tmp21 * _tmp43;
  const Scalar _tmp186 = _tmp105 * _tmp185;
  const Scalar _tmp187 = Scalar(1.0) * _tmp130;
  const Scalar _tmp188 = Scalar(1.0) * _tmp103;
  const Scalar _tmp189 = _tmp130 * _tmp185;
  const Scalar _tmp190 =
      -_tmp120 * _tmp187 + _tmp122 * _tmp189 - _tmp186 * _tmp88 + _tmp188 * _tmp88;
  const Scalar _tmp191 = _tmp130 * _tmp43;
  const Scalar _tmp192 = _tmp122 * _tmp191;
  const Scalar _tmp193 = fh1 * (_tmp145 * _tmp174 - _tmp147 * _tmp150);
  const Scalar _tmp194 = Scalar(1.0) * _tmp193;
  const Scalar _tmp195 = _tmp107 * _tmp79;
  const Scalar _tmp196 = -_tmp135 * _tmp195 - _tmp68;
  const Scalar _tmp197 = _tmp51 * _tmp71;
  const Scalar _tmp198 = _tmp196 * _tmp197;
  const Scalar _tmp199 = _tmp151 * _tmp59;
  const Scalar _tmp200 = _tmp45 * _tmp51;
  const Scalar _tmp201 = _tmp179 * _tmp80;
  const Scalar _tmp202 = _tmp181 * _tmp59;
  const Scalar _tmp203 = _tmp153 * _tmp79;
  const Scalar _tmp204 = _tmp130 * _tmp203;
  const Scalar _tmp205 = _tmp193 * _tmp59;
  const Scalar _tmp206 = -_tmp170 * _tmp195 + Scalar(1.0);
  const Scalar _tmp207 = _tmp197 * _tmp206;
  const Scalar _tmp208 = _tmp175 * _tmp59;
  const Scalar _tmp209 = -_tmp199 * (_tmp136 * _tmp78 + _tmp198 * _tmp45 + Scalar(1.0)) -
                         _tmp202 * (_tmp179 * _tmp78 - _tmp200 * _tmp201) -
                         _tmp205 * (_tmp187 * _tmp78 - _tmp200 * _tmp204) -
                         _tmp208 * (_tmp171 * _tmp78 + _tmp207 * _tmp45);
  const Scalar _tmp210 = Scalar(1.0) / (_tmp209);
  const Scalar _tmp211 = Scalar(1.0) * _tmp78;
  const Scalar _tmp212 = _tmp187 * _tmp200;
  const Scalar _tmp213 = _tmp203 * _tmp88;
  const Scalar _tmp214 = _tmp178 * _tmp200;
  const Scalar _tmp215 = _tmp214 * _tmp80;
  const Scalar _tmp216 = _tmp124 * _tmp78;
  const Scalar _tmp217 = _tmp195 * _tmp214;
  const Scalar _tmp218 = _tmp63 * _tmp71;
  const Scalar _tmp219 = _tmp170 * _tmp79;
  const Scalar _tmp220 = _tmp124 * _tmp219 - _tmp168 * _tmp195;
  const Scalar _tmp221 = _tmp197 * _tmp45;
  const Scalar _tmp222 = _tmp107 * _tmp78;
  const Scalar _tmp223 = _tmp206 * _tmp83;
  const Scalar _tmp224 = _tmp140 * _tmp79 - _tmp141 * _tmp195;
  const Scalar _tmp225 = _tmp196 * _tmp200;
  const Scalar _tmp226 = -_tmp199 * (-_tmp140 * _tmp78 + _tmp141 * _tmp222 + _tmp196 * _tmp218 -
                                     _tmp198 + _tmp221 * _tmp224 - _tmp225 * _tmp83) -
                         _tmp202 * (_tmp124 * _tmp215 - _tmp178 * _tmp216 + _tmp201 * _tmp51 -
                                    _tmp201 * _tmp63 + _tmp217 * _tmp83) -
                         _tmp205 * (_tmp200 * _tmp213 + _tmp204 * _tmp51 - _tmp204 * _tmp63 -
                                    _tmp211 * _tmp88 + _tmp212 * _tmp84) -
                         _tmp208 * (_tmp168 * _tmp222 - _tmp170 * _tmp216 - _tmp200 * _tmp223 +
                                    _tmp206 * _tmp218 - _tmp207 + _tmp220 * _tmp221);
  const Scalar _tmp227 = fh1 * (_tmp89 + _tmp97);
  const Scalar _tmp228 = -Scalar(40.024799999999999) * _tmp14 - _tmp147 * fv1 - _tmp174 * _tmp227;
  const Scalar _tmp229 = _tmp40 * _tmp43 + Scalar(1.0);
  const Scalar _tmp230 = _tmp131 * _tmp43;
  const Scalar _tmp231 = -_tmp103 * _tmp187 + _tmp131 * _tmp185;
  const Scalar _tmp232 = -_tmp101 * _tmp153 + _tmp133 * _tmp169 - _tmp142 * _tmp170;
  const Scalar _tmp233 = _tmp109 + _tmp133 * _tmp134 - _tmp135 * _tmp142;
  const Scalar _tmp234 = _tmp145 * fv1 + _tmp150 * _tmp227 + Scalar(40.024799999999999) * _tmp30;
  const Scalar _tmp235 = _tmp177 * _tmp42;
  const Scalar _tmp236 = -_tmp142 * _tmp178 + _tmp19 - _tmp21 * _tmp235;
  const Scalar _tmp237 =
      _tmp152 * (_tmp134 * _tmp43 - _tmp144 * _tmp233) +
      _tmp176 * (-_tmp144 * _tmp232 + _tmp169 * _tmp43) +
      Scalar(1.0) * _tmp181 * (-_tmp144 * _tmp236 - _tmp177 * _tmp43 + Scalar(1.0)) +
      _tmp194 * (-_tmp144 * _tmp231 + _tmp230) +
      Scalar(1.0) * _tmp228 * (-_tmp144 * _tmp229 + _tmp39 * _tmp43) +
      Scalar(1.0) * _tmp234 * (_tmp185 * _tmp24 - _tmp43);
  const Scalar _tmp238 = std::pow(_tmp209, Scalar(-2));
  const Scalar _tmp239 = _tmp237 * _tmp238;
  const Scalar _tmp240 =
      _tmp210 *
          (_tmp152 * (-_tmp114 * _tmp43 + _tmp132 * _tmp43 + _tmp138 * _tmp43 - _tmp143 * _tmp144) +
           _tmp176 * (-_tmp144 * _tmp173 - _tmp159 * _tmp43 + _tmp161 * _tmp43 + _tmp167 * _tmp43) -
           _tmp180 * _tmp182 + _tmp194 * (-_tmp144 * _tmp190 - _tmp184 + _tmp192)) -
      _tmp226 * _tmp239;
  const Scalar _tmp241 =
      std::pow(Scalar(std::pow(_tmp237, Scalar(2)) * _tmp238 + 1), Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp242 = std::asinh(_tmp210 * _tmp237);
  const Scalar _tmp243 = Scalar(1.0) * _tmp242;
  const Scalar _tmp244 = Scalar(1.0) * _tmp241 * std::cosh(_tmp243);
  const Scalar _tmp245 = Scalar(1.4083112389913199) * _tmp209;
  const Scalar _tmp246 =
      -_tmp242 * _tmp245 - std::sqrt(Scalar(std::pow(Scalar(-_tmp52 + p_a(0, 0)), Scalar(2)) +
                                            std::pow(Scalar(-_tmp54 + p_a(1, 0)), Scalar(2))));
  const Scalar _tmp247 = Scalar(0.71007031138673404) * _tmp210;
  const Scalar _tmp248 = _tmp246 * _tmp247;
  const Scalar _tmp249 = std::cosh(_tmp248);
  const Scalar _tmp250 = Scalar(0.71007031138673404) * _tmp238 * _tmp246;
  const Scalar _tmp251 = _tmp241 * _tmp245;
  const Scalar _tmp252 = Scalar(1.4083112389913199) * _tmp226;
  const Scalar _tmp253 = -std::sinh(_tmp243) - std::sinh(_tmp248);
  const Scalar _tmp254 = -_tmp44 + p_c(0, 0);
  const Scalar _tmp255 = -_tmp95 + p_c(2, 0) - position_vector(2, 0);
  const Scalar _tmp256 = -_tmp47 + p_c(1, 0);
  const Scalar _tmp257 = std::pow(_tmp254, Scalar(2)) + std::pow(_tmp256, Scalar(2));
  const Scalar _tmp258 =
      std::pow(Scalar(std::pow(_tmp255, Scalar(2)) + _tmp257), Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp259 = _tmp151 * _tmp196;
  const Scalar _tmp260 = _tmp178 * _tmp181;
  const Scalar _tmp261 = _tmp195 * _tmp260;
  const Scalar _tmp262 = _tmp175 * _tmp71;
  const Scalar _tmp263 = _tmp151 * _tmp71;
  const Scalar _tmp264 = _tmp187 * _tmp193;
  const Scalar _tmp265 = _tmp124 * _tmp260;
  const Scalar _tmp266 = -_tmp175 * _tmp223 + _tmp193 * _tmp213 + _tmp220 * _tmp262 +
                         _tmp224 * _tmp263 - _tmp259 * _tmp83 + _tmp261 * _tmp83 +
                         _tmp264 * _tmp84 + _tmp265 * _tmp80;
  const Scalar _tmp267 = std::sqrt(_tmp257);
  const Scalar _tmp268 = _tmp179 * _tmp181;
  const Scalar _tmp269 =
      -_tmp193 * _tmp204 + _tmp196 * _tmp263 + _tmp206 * _tmp262 - _tmp268 * _tmp80;
  const Scalar _tmp270 = Scalar(1.0) / (_tmp269);
  const Scalar _tmp271 = _tmp193 * _tmp24;
  const Scalar _tmp272 = _tmp181 * _tmp24;
  const Scalar _tmp273 = _tmp228 * _tmp24;
  const Scalar _tmp274 = _tmp24 * fh1;
  const Scalar _tmp275 = _tmp174 * _tmp274;
  const Scalar _tmp276 = _tmp234 * _tmp43;
  const Scalar _tmp277 = _tmp150 * _tmp274;
  const Scalar _tmp278 = -_tmp21 * _tmp24 * _tmp276 + _tmp229 * _tmp273 + _tmp231 * _tmp271 +
                         _tmp232 * _tmp275 + _tmp233 * _tmp277 + _tmp236 * _tmp272;
  const Scalar _tmp279 = std::asinh(_tmp270 * _tmp278);
  const Scalar _tmp280 = Scalar(1.4083112389913199) * _tmp279;
  const Scalar _tmp281 = -_tmp267 - _tmp269 * _tmp280;
  const Scalar _tmp282 = Scalar(0.71007031138673404) * _tmp270;
  const Scalar _tmp283 = _tmp281 * _tmp282;
  const Scalar _tmp284 = Scalar(1.0) * _tmp279;
  const Scalar _tmp285 = -Scalar(1.4083112389913199) * std::sinh(_tmp283) -
                         Scalar(1.4083112389913199) * std::sinh(_tmp284);
  const Scalar _tmp286 = std::pow(_tmp269, Scalar(-2));
  const Scalar _tmp287 =
      std::pow(Scalar(std::pow(_tmp278, Scalar(2)) * _tmp286 + 1), Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp288 = _tmp278 * _tmp286;
  const Scalar _tmp289 =
      _tmp287 * (-_tmp266 * _tmp288 + _tmp270 * (_tmp143 * _tmp277 + _tmp173 * _tmp275 +
                                                 _tmp180 * _tmp272 + _tmp190 * _tmp271));
  const Scalar _tmp290 = Scalar(1.0) * std::cosh(_tmp284);
  const Scalar _tmp291 = Scalar(1.0) / (_tmp267);
  const Scalar _tmp292 = Scalar(1.4083112389913199) * _tmp269;
  const Scalar _tmp293 = Scalar(0.71007031138673404) * _tmp281 * _tmp286;
  const Scalar _tmp294 = std::cosh(_tmp283);
  const Scalar _tmp295 = _tmp136 * _tmp151 + _tmp171 * _tmp175 + _tmp264 + _tmp268;
  const Scalar _tmp296 = Scalar(1.4083112389913199) * _tmp295;
  const Scalar _tmp297 = _tmp175 * _tmp42;
  const Scalar _tmp298 = _tmp151 * _tmp42;
  const Scalar _tmp299 = Scalar(1.0) / (_tmp295);
  const Scalar _tmp300 = _tmp107 * _tmp151;
  const Scalar _tmp301 = _tmp170 * _tmp175;
  const Scalar _tmp302 = _tmp107 * _tmp168 * _tmp175 - _tmp124 * _tmp301 - _tmp140 * _tmp151 +
                         _tmp141 * _tmp300 - _tmp194 * _tmp88 - _tmp265;
  const Scalar _tmp303 = std::pow(_tmp295, Scalar(-2));
  const Scalar _tmp304 = -_tmp134 * _tmp298 - _tmp169 * _tmp297 + _tmp181 * _tmp235 -
                         _tmp193 * _tmp230 - _tmp273 * _tmp38 * _tmp43 + _tmp276;
  const Scalar _tmp305 = _tmp303 * _tmp304;
  const Scalar _tmp306 =
      std::pow(Scalar(_tmp303 * std::pow(_tmp304, Scalar(2)) + 1), Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp307 =
      _tmp306 *
      (_tmp299 * (_tmp114 * _tmp298 - _tmp132 * _tmp298 - _tmp138 * _tmp298 + _tmp159 * _tmp297 -
                  _tmp161 * _tmp297 - _tmp167 * _tmp297 + _tmp184 * _tmp193 - _tmp192 * _tmp193) -
       _tmp302 * _tmp305);
  const Scalar _tmp308 = std::asinh(_tmp299 * _tmp304);
  const Scalar _tmp309 = Scalar(1.4083112389913199) * _tmp308;
  const Scalar _tmp310 = Scalar(0.71007031138673404) * _tmp299;
  const Scalar _tmp311 =
      -_tmp295 * _tmp309 - std::sqrt(Scalar(std::pow(Scalar(-_tmp72 + p_b(0, 0)), Scalar(2)) +
                                            std::pow(Scalar(-_tmp74 + p_b(1, 0)), Scalar(2))));
  const Scalar _tmp312 = Scalar(0.71007031138673404) * _tmp303 * _tmp311;
  const Scalar _tmp313 = _tmp310 * _tmp311;
  const Scalar _tmp314 = std::cosh(_tmp313);
  const Scalar _tmp315 = Scalar(1.0) * _tmp308;
  const Scalar _tmp316 = Scalar(1.0) * std::cosh(_tmp315);
  const Scalar _tmp317 = -Scalar(1.4083112389913199) * std::sinh(_tmp313) -
                         Scalar(1.4083112389913199) * std::sinh(_tmp315);
  const Scalar _tmp318 = _tmp65 * _tmp71;
  const Scalar _tmp319 = _tmp49 * _tmp62;
  const Scalar _tmp320 = _tmp82 * (-_tmp319 + _tmp51 + _tmp65 * _tmp68);
  const Scalar _tmp321 = _tmp320 * _tmp79;
  const Scalar _tmp322 = _tmp23 * _tmp65 - _tmp319 * _tmp37 + _tmp37 * _tmp51 + _tmp60 * _tmp65;
  const Scalar _tmp323 = _tmp321 * _tmp81 - _tmp322 * _tmp80;
  const Scalar _tmp324 = _tmp323 * _tmp87;
  const Scalar _tmp325 = _tmp113 * _tmp324;
  const Scalar _tmp326 = -_tmp108 * _tmp65 + _tmp319 * _tmp95 - _tmp96;
  const Scalar _tmp327 = _tmp101 * _tmp321 - _tmp326 * _tmp80;
  const Scalar _tmp328 = -_tmp117 + _tmp65 * _tmp98;
  const Scalar _tmp329 = _tmp104 * _tmp321 - _tmp327 * _tmp39 - _tmp328 * _tmp80;
  const Scalar _tmp330 = _tmp137 * _tmp329;
  const Scalar _tmp331 = _tmp123 * _tmp329;
  const Scalar _tmp332 = _tmp101 * _tmp320;
  const Scalar _tmp333 = _tmp106 * _tmp326 - _tmp332 * _tmp68;
  const Scalar _tmp334 = _tmp106 * _tmp328 - _tmp126 * _tmp320 - _tmp333 * _tmp39;
  const Scalar _tmp335 = _tmp131 * (_tmp106 * _tmp322 - _tmp111 * _tmp323 + _tmp115 * _tmp331 -
                                    _tmp128 * _tmp334 - _tmp129 * _tmp320);
  const Scalar _tmp336 = -_tmp325 + _tmp330 + _tmp334 + _tmp335;
  const Scalar _tmp337 = _tmp139 * _tmp329;
  const Scalar _tmp338 = -_tmp195 * _tmp336 + _tmp337 * _tmp79;
  const Scalar _tmp339 = _tmp203 * _tmp324;
  const Scalar _tmp340 =
      -_tmp153 * _tmp328 - _tmp154 * _tmp332 + _tmp155 * _tmp326 + _tmp163 * _tmp320;
  const Scalar _tmp341 = _tmp131 * (-_tmp128 * _tmp340 - _tmp153 * _tmp322 - _tmp162 * _tmp323 +
                                    _tmp165 * _tmp331 + _tmp166 * _tmp320);
  const Scalar _tmp342 = _tmp158 * _tmp324;
  const Scalar _tmp343 = _tmp160 * _tmp329;
  const Scalar _tmp344 = _tmp107 * (_tmp340 + _tmp341 - _tmp342 + _tmp343);
  const Scalar _tmp345 = _tmp219 * _tmp331 - _tmp344 * _tmp79;
  const Scalar _tmp346 = _tmp331 * _tmp78;
  const Scalar _tmp347 = _tmp206 * _tmp320;
  const Scalar _tmp348 =
      -_tmp199 * (_tmp196 * _tmp318 + _tmp221 * _tmp338 + _tmp222 * _tmp336 - _tmp225 * _tmp320 -
                  _tmp337 * _tmp78) -
      _tmp202 * (-_tmp178 * _tmp346 - _tmp201 * _tmp65 + _tmp215 * _tmp331 + _tmp217 * _tmp320) -
      _tmp205 * (_tmp200 * _tmp339 - _tmp204 * _tmp65 - _tmp211 * _tmp324 + _tmp212 * _tmp321) -
      _tmp208 * (-_tmp170 * _tmp346 - _tmp200 * _tmp347 + _tmp206 * _tmp318 + _tmp221 * _tmp345 +
                 _tmp344 * _tmp78);
  const Scalar _tmp349 = Scalar(1.4083112389913199) * _tmp348;
  const Scalar _tmp350 = _tmp103 * _tmp337 - _tmp133 * _tmp325 + _tmp133 * _tmp330 +
                         _tmp133 * _tmp335 - _tmp136 * _tmp327 - _tmp142 * _tmp336 + _tmp333;
  const Scalar _tmp351 = _tmp103 * _tmp331;
  const Scalar _tmp352 = _tmp178 * _tmp351 - _tmp179 * _tmp327;
  const Scalar _tmp353 = _tmp183 * _tmp324;
  const Scalar _tmp354 =
      -_tmp186 * _tmp324 - _tmp187 * _tmp327 + _tmp188 * _tmp324 + _tmp189 * _tmp329;
  const Scalar _tmp355 = _tmp191 * _tmp329;
  const Scalar _tmp356 = -_tmp103 * _tmp344 + _tmp133 * _tmp341 - _tmp133 * _tmp342 +
                         _tmp133 * _tmp343 - _tmp153 * _tmp326 + _tmp170 * _tmp351 -
                         _tmp171 * _tmp327 + Scalar(1.0) * _tmp332;
  const Scalar _tmp357 =
      _tmp210 *
          (_tmp152 * (-_tmp144 * _tmp350 - _tmp325 * _tmp43 + _tmp330 * _tmp43 + _tmp335 * _tmp43) +
           _tmp176 * (-_tmp144 * _tmp356 + _tmp341 * _tmp43 - _tmp342 * _tmp43 + _tmp343 * _tmp43) -
           _tmp182 * _tmp352 + _tmp194 * (-_tmp144 * _tmp354 - _tmp353 + _tmp355)) -
      _tmp239 * _tmp348;
  const Scalar _tmp358 = _tmp260 * _tmp331;
  const Scalar _tmp359 = -_tmp175 * _tmp347 + _tmp193 * _tmp339 - _tmp259 * _tmp320 +
                         _tmp261 * _tmp320 + _tmp262 * _tmp345 + _tmp263 * _tmp338 +
                         _tmp264 * _tmp321 + _tmp358 * _tmp80;
  const Scalar _tmp360 =
      _tmp287 *
      (_tmp270 * (_tmp271 * _tmp354 + _tmp272 * _tmp352 + _tmp275 * _tmp356 + _tmp277 * _tmp350) -
       _tmp288 * _tmp359);
  const Scalar _tmp361 = -_tmp151 * _tmp337 + _tmp175 * _tmp344 - _tmp194 * _tmp324 +
                         _tmp300 * _tmp336 - _tmp301 * _tmp331 - _tmp358;
  const Scalar _tmp362 =
      _tmp306 *
      (_tmp299 * (_tmp193 * _tmp353 - _tmp193 * _tmp355 - _tmp297 * _tmp341 + _tmp297 * _tmp342 -
                  _tmp297 * _tmp343 + _tmp298 * _tmp325 - _tmp298 * _tmp330 - _tmp298 * _tmp335) -
       _tmp305 * _tmp361);

  // Output terms (1)
  Eigen::Matrix<Scalar, 4, 3> _res;

  _res(0, 0) = 0;
  _res(1, 0) =
      _tmp245 *
          (-_tmp240 * _tmp244 -
           _tmp249 * (-_tmp226 * _tmp250 + _tmp247 * (-_tmp240 * _tmp251 - _tmp242 * _tmp252))) +
      _tmp252 * _tmp253;
  _res(2, 0) =
      -_tmp254 * _tmp258 + _tmp266 * _tmp285 +
      _tmp292 * (-_tmp289 * _tmp290 -
                 _tmp294 * (-_tmp266 * _tmp293 + _tmp282 * (-_tmp254 * _tmp291 - _tmp266 * _tmp280 -
                                                            _tmp289 * _tmp292)));
  _res(3, 0) =
      _tmp296 *
          (-_tmp307 * _tmp316 -
           _tmp314 * (-_tmp302 * _tmp312 + _tmp310 * (-_tmp296 * _tmp307 - _tmp302 * _tmp309))) +
      _tmp302 * _tmp317;
  _res(0, 1) = 0;
  _res(1, 1) =
      _tmp245 *
          (-_tmp244 * _tmp357 -
           _tmp249 * (_tmp247 * (-_tmp242 * _tmp349 - _tmp251 * _tmp357) - _tmp250 * _tmp348)) +
      _tmp253 * _tmp349;
  _res(2, 1) =
      -_tmp256 * _tmp258 + _tmp285 * _tmp359 +
      _tmp292 * (-_tmp290 * _tmp360 -
                 _tmp294 * (_tmp282 * (-_tmp256 * _tmp291 - _tmp280 * _tmp359 - _tmp292 * _tmp360) -
                            _tmp293 * _tmp359));
  _res(3, 1) =
      _tmp296 *
          (-_tmp314 * (_tmp310 * (-_tmp296 * _tmp362 - _tmp309 * _tmp361) - _tmp312 * _tmp361) -
           _tmp316 * _tmp362) +
      _tmp317 * _tmp361;
  _res(0, 2) = 0;
  _res(1, 2) = 0;
  _res(2, 2) = -_tmp255 * _tmp258;
  _res(3, 2) = 0;

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
