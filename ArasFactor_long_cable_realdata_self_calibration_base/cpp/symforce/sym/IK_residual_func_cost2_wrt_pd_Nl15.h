// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

#include <sym/rot3.h>

namespace sym {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: IK_residual_func_cost2_wrt_pd_Nl15
 *
 * Args:
 *     fh1: Scalar
 *     fv1: Scalar
 *     DeltaRot: Rot3
 *     position_vector: Matrix31
 *     p_a: Matrix31
 *     p_b: Matrix31
 *     p_c: Matrix31
 *     p_d: Matrix31
 *     Rot_init: Rot3
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix43
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 4, 3> IkResidualFuncCost2WrtPdNl15(
    const Scalar fh1, const Scalar fv1, const sym::Rot3<Scalar>& DeltaRot,
    const Eigen::Matrix<Scalar, 3, 1>& position_vector, const Eigen::Matrix<Scalar, 3, 1>& p_a,
    const Eigen::Matrix<Scalar, 3, 1>& p_b, const Eigen::Matrix<Scalar, 3, 1>& p_c,
    const Eigen::Matrix<Scalar, 3, 1>& p_d, const sym::Rot3<Scalar>& Rot_init,
    const Scalar epsilon) {
  // Total ops: 1152

  // Unused inputs
  (void)epsilon;

  // Input arrays
  const Eigen::Matrix<Scalar, 4, 1>& _DeltaRot = DeltaRot.Data();
  const Eigen::Matrix<Scalar, 4, 1>& _Rot_init = Rot_init.Data();

  // Intermediate terms (360)
  const Scalar _tmp0 = Scalar(333.54000000000002) - fv1;
  const Scalar _tmp1 = _DeltaRot[0] * _Rot_init[2] + _DeltaRot[1] * _Rot_init[3] -
                       _DeltaRot[2] * _Rot_init[0] + _DeltaRot[3] * _Rot_init[1];
  const Scalar _tmp2 = -2 * std::pow(_tmp1, Scalar(2));
  const Scalar _tmp3 = -_DeltaRot[0] * _Rot_init[1] + _DeltaRot[1] * _Rot_init[0] +
                       _DeltaRot[2] * _Rot_init[3] + _DeltaRot[3] * _Rot_init[2];
  const Scalar _tmp4 = 1 - 2 * std::pow(_tmp3, Scalar(2));
  const Scalar _tmp5 = Scalar(0.20999999999999999) * _tmp2 + Scalar(0.20999999999999999) * _tmp4;
  const Scalar _tmp6 = _DeltaRot[0] * _Rot_init[3] - _DeltaRot[1] * _Rot_init[2] +
                       _DeltaRot[2] * _Rot_init[1] + _DeltaRot[3] * _Rot_init[0];
  const Scalar _tmp7 = 2 * _tmp6;
  const Scalar _tmp8 = _tmp3 * _tmp7;
  const Scalar _tmp9 = -2 * _DeltaRot[0] * _Rot_init[0] - 2 * _DeltaRot[1] * _Rot_init[1] -
                       2 * _DeltaRot[2] * _Rot_init[2] + 2 * _DeltaRot[3] * _Rot_init[3];
  const Scalar _tmp10 = _tmp1 * _tmp9;
  const Scalar _tmp11 = _tmp10 + _tmp8;
  const Scalar _tmp12 = -Scalar(0.010999999999999999) * _tmp11;
  const Scalar _tmp13 = _tmp1 * _tmp7;
  const Scalar _tmp14 = _tmp3 * _tmp9;
  const Scalar _tmp15 = Scalar(0.20999999999999999) * _tmp13 - Scalar(0.20999999999999999) * _tmp14;
  const Scalar _tmp16 = _tmp12 - _tmp15;
  const Scalar _tmp17 = _tmp16 + _tmp5;
  const Scalar _tmp18 = Scalar(1.0) * _tmp17;
  const Scalar _tmp19 = Scalar(0.20999999999999999) * _tmp13 + Scalar(0.20999999999999999) * _tmp14;
  const Scalar _tmp20 = -2 * std::pow(_tmp6, Scalar(2));
  const Scalar _tmp21 = Scalar(0.20999999999999999) * _tmp20 + Scalar(0.20999999999999999) * _tmp4;
  const Scalar _tmp22 = 2 * _tmp1 * _tmp3;
  const Scalar _tmp23 = _tmp6 * _tmp9;
  const Scalar _tmp24 = _tmp22 - _tmp23;
  const Scalar _tmp25 = -Scalar(0.010999999999999999) * _tmp24;
  const Scalar _tmp26 = -_tmp21 + _tmp25;
  const Scalar _tmp27 = _tmp19 + _tmp26;
  const Scalar _tmp28 = Scalar(1.0) * _tmp27;
  const Scalar _tmp29 = -_tmp28;
  const Scalar _tmp30 = -_tmp19;
  const Scalar _tmp31 = _tmp21 + _tmp25;
  const Scalar _tmp32 = _tmp30 + _tmp31;
  const Scalar _tmp33 = Scalar(1.0) / (_tmp29 + _tmp32);
  const Scalar _tmp34 = -_tmp5;
  const Scalar _tmp35 = _tmp12 + _tmp15;
  const Scalar _tmp36 = _tmp34 + _tmp35;
  const Scalar _tmp37 = _tmp18 - _tmp36;
  const Scalar _tmp38 = _tmp33 * _tmp37;
  const Scalar _tmp39 = _tmp18 + _tmp28 * _tmp38;
  const Scalar _tmp40 = _tmp26 + _tmp30;
  const Scalar _tmp41 = _tmp29 + _tmp40;
  const Scalar _tmp42 = _tmp38 * _tmp41;
  const Scalar _tmp43 = _tmp16 + _tmp34;
  const Scalar _tmp44 = Scalar(1.0) / (_tmp18 - _tmp42 - _tmp43);
  const Scalar _tmp45 = Scalar(1.0) * _tmp44;
  const Scalar _tmp46 = 0;
  const Scalar _tmp47 = _tmp36 + position_vector(0, 0);
  const Scalar _tmp48 = _tmp47 - p_d(0, 0);
  const Scalar _tmp49 = -Scalar(0.20999999999999999) * _tmp10 + Scalar(0.20999999999999999) * _tmp8;
  const Scalar _tmp50 = -_tmp49;
  const Scalar _tmp51 = -Scalar(0.010999999999999999) * _tmp2 -
                        Scalar(0.010999999999999999) * _tmp20 + Scalar(-0.010999999999999999);
  const Scalar _tmp52 = Scalar(0.20999999999999999) * _tmp22 + Scalar(0.20999999999999999) * _tmp23;
  const Scalar _tmp53 = _tmp51 + _tmp52;
  const Scalar _tmp54 = _tmp50 + _tmp53;
  const Scalar _tmp55 = std::pow(_tmp48, Scalar(2));
  const Scalar _tmp56 = _tmp32 + position_vector(1, 0);
  const Scalar _tmp57 = _tmp56 - p_d(1, 0);
  const Scalar _tmp58 = std::pow(_tmp57, Scalar(2));
  const Scalar _tmp59 = _tmp55 + _tmp58;
  const Scalar _tmp60 = std::pow(_tmp59, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp61 = _tmp54 * _tmp60;
  const Scalar _tmp62 = _tmp51 - _tmp52;
  const Scalar _tmp63 = _tmp49 + _tmp62;
  const Scalar _tmp64 = _tmp60 * _tmp63;
  const Scalar _tmp65 = _tmp48 * _tmp64;
  const Scalar _tmp66 = -_tmp48 * _tmp61 + _tmp65;
  const Scalar _tmp67 = _tmp17 + position_vector(0, 0);
  const Scalar _tmp68 = _tmp67 - p_b(0, 0);
  const Scalar _tmp69 = Scalar(1.0) / (_tmp68);
  const Scalar _tmp70 = _tmp27 + position_vector(1, 0);
  const Scalar _tmp71 = _tmp70 - p_b(1, 0);
  const Scalar _tmp72 = _tmp69 * _tmp71;
  const Scalar _tmp73 = _tmp60 * _tmp72;
  const Scalar _tmp74 = _tmp48 * _tmp73 - _tmp57 * _tmp60;
  const Scalar _tmp75 = Scalar(1.0) / (_tmp74);
  const Scalar _tmp76 = _tmp43 + position_vector(0, 0);
  const Scalar _tmp77 = _tmp76 - p_a(0, 0);
  const Scalar _tmp78 = _tmp40 + position_vector(1, 0);
  const Scalar _tmp79 = _tmp78 - p_a(1, 0);
  const Scalar _tmp80 = std::pow(Scalar(std::pow(_tmp77, Scalar(2)) + std::pow(_tmp79, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp81 = _tmp77 * _tmp80;
  const Scalar _tmp82 = _tmp79 * _tmp80;
  const Scalar _tmp83 = _tmp72 * _tmp81 - _tmp82;
  const Scalar _tmp84 = _tmp75 * _tmp83;
  const Scalar _tmp85 = _tmp50 + _tmp62;
  const Scalar _tmp86 = _tmp63 * _tmp81;
  const Scalar _tmp87 = _tmp57 * _tmp61 - _tmp65 * _tmp72;
  const Scalar _tmp88 = -_tmp72 * _tmp86 + _tmp82 * _tmp85 - _tmp84 * _tmp87;
  const Scalar _tmp89 = -_tmp38 * _tmp88 - _tmp66 * _tmp84 - _tmp81 * _tmp85 + _tmp86;
  const Scalar _tmp90 = Scalar(1.0) / (_tmp89);
  const Scalar _tmp91 = _tmp88 * _tmp90;
  const Scalar _tmp92 = _tmp39 * _tmp44;
  const Scalar _tmp93 = _tmp29 - _tmp41 * _tmp92 - _tmp46 * _tmp91;
  const Scalar _tmp94 = Scalar(1.0) * _tmp33;
  const Scalar _tmp95 = _tmp36 * _tmp60;
  const Scalar _tmp96 = _tmp32 * _tmp60;
  const Scalar _tmp97 =
      std::sqrt(Scalar(std::pow(_tmp68, Scalar(2)) + std::pow(_tmp71, Scalar(2))));
  const Scalar _tmp98 = Scalar(1.0) / (_tmp97);
  const Scalar _tmp99 = _tmp69 * _tmp97;
  const Scalar _tmp100 = _tmp99 * (_tmp17 * _tmp71 * _tmp98 - _tmp27 * _tmp68 * _tmp98);
  const Scalar _tmp101 = _tmp100 * _tmp60;
  const Scalar _tmp102 = _tmp101 * _tmp48 + _tmp48 * _tmp96 - _tmp57 * _tmp95;
  const Scalar _tmp103 = _tmp100 * _tmp81 - _tmp102 * _tmp84 + _tmp40 * _tmp81 - _tmp43 * _tmp82;
  const Scalar _tmp104 = Scalar(1.0) / (_tmp103);
  const Scalar _tmp105 = _tmp104 * _tmp89;
  const Scalar _tmp106 = _tmp105 * _tmp45;
  const Scalar _tmp107 = Scalar(1.0) * _tmp104;
  const Scalar _tmp108 = _tmp106 * _tmp41 - _tmp107 * _tmp88;
  const Scalar _tmp109 = _tmp19 + _tmp31;
  const Scalar _tmp110 = _tmp35 + _tmp5;
  const Scalar _tmp111 = _tmp110 - p_c(0, 0) + position_vector(0, 0);
  const Scalar _tmp112 = _tmp109 - p_c(1, 0) + position_vector(1, 0);
  const Scalar _tmp113 =
      std::pow(Scalar(std::pow(_tmp111, Scalar(2)) + std::pow(_tmp112, Scalar(2))),
               Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp114 = _tmp111 * _tmp113;
  const Scalar _tmp115 = _tmp112 * _tmp113;
  const Scalar _tmp116 = fh1 * (-_tmp109 * _tmp114 + _tmp110 * _tmp115);
  const Scalar _tmp117 = Scalar(1.0) * _tmp116;
  const Scalar _tmp118 = _tmp63 * _tmp72;
  const Scalar _tmp119 = _tmp72 * _tmp75;
  const Scalar _tmp120 = _tmp118 + _tmp119 * _tmp87;
  const Scalar _tmp121 = _tmp119 * _tmp66 - _tmp120 * _tmp38 - _tmp63;
  const Scalar _tmp122 = _tmp103 * _tmp90;
  const Scalar _tmp123 = -_tmp100 + _tmp102 * _tmp119 - _tmp121 * _tmp122;
  const Scalar _tmp124 = _tmp104 * _tmp123;
  const Scalar _tmp125 = _tmp124 * _tmp89;
  const Scalar _tmp126 = _tmp121 + _tmp125;
  const Scalar _tmp127 = _tmp41 * _tmp44;
  const Scalar _tmp128 = _tmp120 + _tmp125 * _tmp127 - _tmp126 * _tmp91;
  const Scalar _tmp129 = _tmp114 * fh1;
  const Scalar _tmp130 = Scalar(1.0) * _tmp129;
  const Scalar _tmp131 = Scalar(1.0) * _tmp75;
  const Scalar _tmp132 = _tmp37 * _tmp75 * _tmp94;
  const Scalar _tmp133 = -_tmp131 * _tmp66 + _tmp132 * _tmp87;
  const Scalar _tmp134 = -_tmp102 * _tmp131 - _tmp122 * _tmp133;
  const Scalar _tmp135 = _tmp104 * _tmp134;
  const Scalar _tmp136 = _tmp135 * _tmp89;
  const Scalar _tmp137 = _tmp133 + _tmp136;
  const Scalar _tmp138 = _tmp137 * _tmp90;
  const Scalar _tmp139 = _tmp127 * _tmp136 - _tmp131 * _tmp87 - _tmp138 * _tmp88;
  const Scalar _tmp140 = _tmp115 * fh1;
  const Scalar _tmp141 = Scalar(1.0) * _tmp140;
  const Scalar _tmp142 = fh1 * (_tmp49 + _tmp53);
  const Scalar _tmp143 = -_tmp109 * fv1 - _tmp115 * _tmp142 - Scalar(40.024799999999999) * _tmp24;
  const Scalar _tmp144 = _tmp42 * _tmp45 + Scalar(1.0);
  const Scalar _tmp145 = _tmp38 * _tmp45;
  const Scalar _tmp146 = Scalar(40.024799999999999) * _tmp11 + _tmp110 * fv1 + _tmp114 * _tmp142;
  const Scalar _tmp147 = _tmp33 * _tmp41;
  const Scalar _tmp148 = Scalar(1.0) * _tmp0 * (-_tmp39 * _tmp45 - _tmp93 * _tmp94 + Scalar(1.0)) +
                         _tmp117 * (_tmp106 - _tmp108 * _tmp94) +
                         _tmp130 * (_tmp125 * _tmp45 - _tmp128 * _tmp94) +
                         _tmp141 * (_tmp136 * _tmp45 - _tmp139 * _tmp94) +
                         Scalar(1.0) * _tmp143 * (-_tmp144 * _tmp94 + _tmp145) +
                         Scalar(1.0) * _tmp146 * (_tmp147 * _tmp45 - _tmp45);
  const Scalar _tmp149 = -_tmp138 * _tmp83 + Scalar(1.0);
  const Scalar _tmp150 = _tmp60 * _tmp75;
  const Scalar _tmp151 = _tmp149 * _tmp150;
  const Scalar _tmp152 = _tmp140 * _tmp99;
  const Scalar _tmp153 = _tmp126 * _tmp90;
  const Scalar _tmp154 = _tmp83 * _tmp90;
  const Scalar _tmp155 = -_tmp126 * _tmp154 - _tmp72;
  const Scalar _tmp156 = _tmp150 * _tmp155;
  const Scalar _tmp157 = _tmp129 * _tmp99;
  const Scalar _tmp158 = _tmp60 * _tmp84;
  const Scalar _tmp159 = _tmp107 * _tmp158;
  const Scalar _tmp160 = _tmp116 * _tmp99;
  const Scalar _tmp161 = _tmp46 * _tmp90;
  const Scalar _tmp162 = _tmp158 * _tmp161;
  const Scalar _tmp163 = _tmp0 * _tmp99;
  const Scalar _tmp164 = -_tmp152 * (_tmp138 * _tmp81 + _tmp151 * _tmp48) -
                         _tmp157 * (_tmp153 * _tmp81 + _tmp156 * _tmp48 + Scalar(1.0)) -
                         _tmp160 * (_tmp107 * _tmp81 - _tmp159 * _tmp48) -
                         _tmp163 * (_tmp161 * _tmp81 - _tmp162 * _tmp48);
  const Scalar _tmp165 = Scalar(1.0) / (_tmp164);
  const Scalar _tmp166 = std::asinh(_tmp148 * _tmp165);
  const Scalar _tmp167 = Scalar(1.0) * _tmp166;
  const Scalar _tmp168 = Scalar(1.4083112389913199) * _tmp164;
  const Scalar _tmp169 =
      -_tmp166 * _tmp168 - std::sqrt(Scalar(std::pow(Scalar(-_tmp67 + p_b(0, 0)), Scalar(2)) +
                                            std::pow(Scalar(-_tmp70 + p_b(1, 0)), Scalar(2))));
  const Scalar _tmp170 = Scalar(0.71007031138673404) * _tmp165;
  const Scalar _tmp171 = _tmp169 * _tmp170;
  const Scalar _tmp172 = -std::sinh(_tmp167) - std::sinh(_tmp171);
  const Scalar _tmp173 = std::pow(_tmp59, Scalar(Scalar(-3) / Scalar(2)));
  const Scalar _tmp174 = _tmp173 * _tmp55;
  const Scalar _tmp175 = _tmp174 * _tmp63;
  const Scalar _tmp176 = -_tmp174 * _tmp54 + _tmp175 + _tmp61 - _tmp64;
  const Scalar _tmp177 = std::pow(_tmp74, Scalar(-2));
  const Scalar _tmp178 = _tmp173 * _tmp48 * _tmp57;
  const Scalar _tmp179 = _tmp177 * (_tmp174 * _tmp72 - _tmp178 - _tmp73);
  const Scalar _tmp180 = _tmp179 * _tmp83;
  const Scalar _tmp181 = _tmp178 * _tmp54;
  const Scalar _tmp182 = -_tmp175 * _tmp72 + _tmp181 + _tmp64 * _tmp72;
  const Scalar _tmp183 = _tmp180 * _tmp87 - _tmp182 * _tmp84;
  const Scalar _tmp184 = -_tmp176 * _tmp84 + _tmp180 * _tmp66 - _tmp183 * _tmp38;
  const Scalar _tmp185 = std::pow(_tmp89, Scalar(-2));
  const Scalar _tmp186 = _tmp184 * _tmp185;
  const Scalar _tmp187 = _tmp158 * _tmp48;
  const Scalar _tmp188 = _tmp187 * _tmp46;
  const Scalar _tmp189 = _tmp186 * _tmp81;
  const Scalar _tmp190 = _tmp174 * _tmp84;
  const Scalar _tmp191 = _tmp48 * _tmp60;
  const Scalar _tmp192 = _tmp179 * _tmp191;
  const Scalar _tmp193 = _tmp154 * _tmp46;
  const Scalar _tmp194 = _tmp100 * _tmp174 - _tmp101 + _tmp174 * _tmp32 - _tmp178 * _tmp36 - _tmp96;
  const Scalar _tmp195 = _tmp102 * _tmp180 - _tmp194 * _tmp84;
  const Scalar _tmp196 = std::pow(_tmp103, Scalar(-2));
  const Scalar _tmp197 = Scalar(1.0) * _tmp196;
  const Scalar _tmp198 = _tmp195 * _tmp197;
  const Scalar _tmp199 = _tmp107 * _tmp191;
  const Scalar _tmp200 = _tmp174 * _tmp75;
  const Scalar _tmp201 = _tmp135 * _tmp184;
  const Scalar _tmp202 = _tmp196 * _tmp89;
  const Scalar _tmp203 = _tmp195 * _tmp202;
  const Scalar _tmp204 = _tmp134 * _tmp203;
  const Scalar _tmp205 = _tmp37 * _tmp87 * _tmp94;
  const Scalar _tmp206 = Scalar(1.0) * _tmp179;
  const Scalar _tmp207 =
      -_tmp131 * _tmp176 + _tmp132 * _tmp182 - _tmp179 * _tmp205 + _tmp206 * _tmp66;
  const Scalar _tmp208 = _tmp133 * _tmp90;
  const Scalar _tmp209 = _tmp103 * _tmp186;
  const Scalar _tmp210 = _tmp105 * (_tmp102 * _tmp206 - _tmp122 * _tmp207 - _tmp131 * _tmp194 +
                                    _tmp133 * _tmp209 - _tmp195 * _tmp208);
  const Scalar _tmp211 = _tmp201 - _tmp204 + _tmp207 + _tmp210;
  const Scalar _tmp212 = _tmp81 * _tmp90;
  const Scalar _tmp213 = _tmp137 * _tmp83;
  const Scalar _tmp214 = -_tmp154 * _tmp211 + _tmp186 * _tmp213;
  const Scalar _tmp215 = _tmp150 * _tmp48;
  const Scalar _tmp216 = _tmp124 * _tmp184;
  const Scalar _tmp217 = _tmp123 * _tmp203;
  const Scalar _tmp218 = _tmp121 * _tmp90;
  const Scalar _tmp219 = _tmp179 * _tmp72;
  const Scalar _tmp220 = _tmp119 * _tmp182 - _tmp219 * _tmp87;
  const Scalar _tmp221 = _tmp119 * _tmp176 - _tmp219 * _tmp66 - _tmp220 * _tmp38;
  const Scalar _tmp222 = _tmp105 * (-_tmp102 * _tmp219 + _tmp119 * _tmp194 + _tmp121 * _tmp209 -
                                    _tmp122 * _tmp221 - _tmp195 * _tmp218);
  const Scalar _tmp223 = _tmp216 - _tmp217 + _tmp221 + _tmp222;
  const Scalar _tmp224 = _tmp126 * _tmp83;
  const Scalar _tmp225 = -_tmp154 * _tmp223 + _tmp186 * _tmp224;
  const Scalar _tmp226 = -_tmp152 * (-_tmp137 * _tmp189 - _tmp149 * _tmp192 + _tmp149 * _tmp200 -
                                     _tmp151 + _tmp211 * _tmp212 + _tmp214 * _tmp215) -
                         _tmp157 * (-_tmp126 * _tmp189 - _tmp155 * _tmp192 + _tmp155 * _tmp200 -
                                    _tmp156 + _tmp212 * _tmp223 + _tmp215 * _tmp225) -
                         _tmp160 * (-_tmp107 * _tmp190 + _tmp159 + _tmp180 * _tmp199 +
                                    _tmp187 * _tmp198 - _tmp198 * _tmp81) -
                         _tmp163 * (-_tmp161 * _tmp190 + _tmp162 + _tmp186 * _tmp188 -
                                    _tmp189 * _tmp46 + _tmp192 * _tmp193);
  const Scalar _tmp227 = Scalar(1.4083112389913199) * _tmp226;
  const Scalar _tmp228 = std::pow(_tmp164, Scalar(-2));
  const Scalar _tmp229 = Scalar(0.71007031138673404) * _tmp169 * _tmp228;
  const Scalar _tmp230 = _tmp186 * _tmp88;
  const Scalar _tmp231 = -_tmp161 * _tmp183 + _tmp230 * _tmp46;
  const Scalar _tmp232 = _tmp0 * _tmp94;
  const Scalar _tmp233 = _tmp203 * _tmp45;
  const Scalar _tmp234 = _tmp104 * _tmp45;
  const Scalar _tmp235 = _tmp184 * _tmp234;
  const Scalar _tmp236 = _tmp197 * _tmp88;
  const Scalar _tmp237 =
      -_tmp107 * _tmp183 + _tmp195 * _tmp236 - _tmp233 * _tmp41 + _tmp235 * _tmp41;
  const Scalar _tmp238 = _tmp127 * _tmp201 - _tmp127 * _tmp204 + _tmp127 * _tmp210 -
                         _tmp131 * _tmp182 + _tmp137 * _tmp230 - _tmp138 * _tmp183 +
                         _tmp206 * _tmp87 - _tmp211 * _tmp91;
  const Scalar _tmp239 = _tmp126 * _tmp230 + _tmp127 * _tmp216 - _tmp127 * _tmp217 +
                         _tmp127 * _tmp222 - _tmp153 * _tmp183 + _tmp220 - _tmp223 * _tmp91;
  const Scalar _tmp240 = _tmp148 * _tmp228;
  const Scalar _tmp241 =
      _tmp165 *
          (_tmp117 * (-_tmp233 + _tmp235 - _tmp237 * _tmp94) +
           _tmp130 * (_tmp216 * _tmp45 - _tmp217 * _tmp45 + _tmp222 * _tmp45 - _tmp239 * _tmp94) +
           _tmp141 * (_tmp201 * _tmp45 - _tmp204 * _tmp45 + _tmp210 * _tmp45 - _tmp238 * _tmp94) -
           _tmp231 * _tmp232) -
      _tmp226 * _tmp240;
  const Scalar _tmp242 =
      std::pow(Scalar(std::pow(_tmp148, Scalar(2)) * _tmp228 + 1), Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp243 = _tmp168 * _tmp242;
  const Scalar _tmp244 = std::cosh(_tmp171);
  const Scalar _tmp245 = Scalar(1.0) * _tmp242 * std::cosh(_tmp167);
  const Scalar _tmp246 = -_tmp47 + p_d(0, 0);
  const Scalar _tmp247 = -_tmp54 + p_d(2, 0) - position_vector(2, 0);
  const Scalar _tmp248 = -_tmp56 + p_d(1, 0);
  const Scalar _tmp249 = std::pow(_tmp246, Scalar(2)) + std::pow(_tmp248, Scalar(2));
  const Scalar _tmp250 =
      std::pow(Scalar(std::pow(_tmp247, Scalar(2)) + _tmp249), Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp251 = _tmp140 * _tmp75;
  const Scalar _tmp252 = _tmp0 * _tmp46;
  const Scalar _tmp253 = _tmp186 * _tmp252;
  const Scalar _tmp254 = _tmp116 * _tmp198;
  const Scalar _tmp255 = _tmp154 * _tmp252;
  const Scalar _tmp256 = _tmp107 * _tmp116;
  const Scalar _tmp257 = _tmp129 * _tmp75;
  const Scalar _tmp258 = -_tmp129 * _tmp155 * _tmp179 - _tmp140 * _tmp149 * _tmp179 +
                         _tmp179 * _tmp255 + _tmp180 * _tmp256 + _tmp214 * _tmp251 +
                         _tmp225 * _tmp257 + _tmp253 * _tmp84 + _tmp254 * _tmp84;
  const Scalar _tmp259 = _tmp129 * _tmp33;
  const Scalar _tmp260 = _tmp140 * _tmp33;
  const Scalar _tmp261 = _tmp0 * _tmp33;
  const Scalar _tmp262 = _tmp116 * _tmp33;
  const Scalar _tmp263 = _tmp146 * _tmp45;
  const Scalar _tmp264 = _tmp108 * _tmp262 + _tmp128 * _tmp259 + _tmp139 * _tmp260 +
                         _tmp143 * _tmp144 * _tmp33 - _tmp147 * _tmp263 + _tmp261 * _tmp93;
  const Scalar _tmp265 = _tmp149 * _tmp75;
  const Scalar _tmp266 = _tmp0 * _tmp161;
  const Scalar _tmp267 =
      _tmp140 * _tmp265 + _tmp155 * _tmp257 - _tmp256 * _tmp84 - _tmp266 * _tmp84;
  const Scalar _tmp268 = Scalar(1.0) / (_tmp267);
  const Scalar _tmp269 = std::asinh(_tmp264 * _tmp268);
  const Scalar _tmp270 = Scalar(1.0) * _tmp269;
  const Scalar _tmp271 = std::sqrt(_tmp249);
  const Scalar _tmp272 = Scalar(1.4083112389913199) * _tmp269;
  const Scalar _tmp273 = -_tmp267 * _tmp272 - _tmp271;
  const Scalar _tmp274 = Scalar(0.71007031138673404) * _tmp268;
  const Scalar _tmp275 = _tmp273 * _tmp274;
  const Scalar _tmp276 = -Scalar(1.4083112389913199) * std::sinh(_tmp270) -
                         Scalar(1.4083112389913199) * std::sinh(_tmp275);
  const Scalar _tmp277 = std::pow(_tmp267, Scalar(-2));
  const Scalar _tmp278 = _tmp264 * _tmp277;
  const Scalar _tmp279 =
      std::pow(Scalar(std::pow(_tmp264, Scalar(2)) * _tmp277 + 1), Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp280 =
      _tmp279 * (-_tmp258 * _tmp278 + _tmp268 * (_tmp231 * _tmp261 + _tmp237 * _tmp262 +
                                                 _tmp238 * _tmp260 + _tmp239 * _tmp259));
  const Scalar _tmp281 = Scalar(1.0) * std::cosh(_tmp270);
  const Scalar _tmp282 = std::cosh(_tmp275);
  const Scalar _tmp283 = Scalar(1.0) / (_tmp271);
  const Scalar _tmp284 = Scalar(1.4083112389913199) * _tmp267;
  const Scalar _tmp285 = Scalar(0.71007031138673404) * _tmp273 * _tmp277;
  const Scalar _tmp286 = _tmp140 * _tmp90;
  const Scalar _tmp287 = _tmp126 * _tmp129;
  const Scalar _tmp288 = _tmp137 * _tmp140;
  const Scalar _tmp289 = _tmp129 * _tmp90;
  const Scalar _tmp290 = -_tmp186 * _tmp287 - _tmp186 * _tmp288 + _tmp211 * _tmp286 +
                         _tmp223 * _tmp289 - _tmp253 - _tmp254;
  const Scalar _tmp291 = _tmp129 * _tmp153 + _tmp138 * _tmp140 + _tmp256 + _tmp266;
  const Scalar _tmp292 = Scalar(1.0) / (_tmp291);
  const Scalar _tmp293 = _tmp140 * _tmp44;
  const Scalar _tmp294 = _tmp129 * _tmp44;
  const Scalar _tmp295 = _tmp0 * _tmp92 - _tmp106 * _tmp116 - _tmp125 * _tmp294 -
                         _tmp136 * _tmp293 - _tmp143 * _tmp145 + _tmp263;
  const Scalar _tmp296 = std::asinh(_tmp292 * _tmp295);
  const Scalar _tmp297 = Scalar(1.0) * _tmp296;
  const Scalar _tmp298 = Scalar(1.4083112389913199) * _tmp296;
  const Scalar _tmp299 =
      -_tmp291 * _tmp298 - std::sqrt(Scalar(std::pow(Scalar(-_tmp76 + p_a(0, 0)), Scalar(2)) +
                                            std::pow(Scalar(-_tmp78 + p_a(1, 0)), Scalar(2))));
  const Scalar _tmp300 = Scalar(0.71007031138673404) * _tmp292;
  const Scalar _tmp301 = _tmp299 * _tmp300;
  const Scalar _tmp302 = -Scalar(1.4083112389913199) * std::sinh(_tmp297) -
                         Scalar(1.4083112389913199) * std::sinh(_tmp301);
  const Scalar _tmp303 = std::pow(_tmp291, Scalar(-2));
  const Scalar _tmp304 =
      std::pow(Scalar(std::pow(_tmp295, Scalar(2)) * _tmp303 + 1), Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp305 = _tmp295 * _tmp303;
  const Scalar _tmp306 =
      _tmp304 *
      (-_tmp290 * _tmp305 +
       _tmp292 * (_tmp116 * _tmp233 - _tmp116 * _tmp235 - _tmp201 * _tmp293 + _tmp204 * _tmp293 -
                  _tmp210 * _tmp293 - _tmp216 * _tmp294 + _tmp217 * _tmp294 - _tmp222 * _tmp294));
  const Scalar _tmp307 = Scalar(1.0) * std::cosh(_tmp297);
  const Scalar _tmp308 = Scalar(1.4083112389913199) * _tmp291;
  const Scalar _tmp309 = Scalar(0.71007031138673404) * _tmp299 * _tmp303;
  const Scalar _tmp310 = std::cosh(_tmp301);
  const Scalar _tmp311 = _tmp173 * _tmp58;
  const Scalar _tmp312 = _tmp177 * (_tmp178 * _tmp72 - _tmp311 + _tmp60);
  const Scalar _tmp313 = _tmp102 * _tmp312;
  const Scalar _tmp314 = _tmp100 * _tmp178 + _tmp178 * _tmp32 - _tmp311 * _tmp36 + _tmp95;
  const Scalar _tmp315 = _tmp313 * _tmp83 - _tmp314 * _tmp84;
  const Scalar _tmp316 = _tmp197 * _tmp315;
  const Scalar _tmp317 = _tmp178 * _tmp84;
  const Scalar _tmp318 = _tmp312 * _tmp83;
  const Scalar _tmp319 = _tmp155 * _tmp312;
  const Scalar _tmp320 = _tmp202 * _tmp315;
  const Scalar _tmp321 = _tmp123 * _tmp320;
  const Scalar _tmp322 = _tmp178 * _tmp63 - _tmp181;
  const Scalar _tmp323 = _tmp312 * _tmp72;
  const Scalar _tmp324 = -_tmp118 * _tmp178 + _tmp311 * _tmp54 - _tmp61;
  const Scalar _tmp325 = _tmp119 * _tmp324 - _tmp323 * _tmp87;
  const Scalar _tmp326 = _tmp119 * _tmp322 - _tmp323 * _tmp66 - _tmp325 * _tmp38;
  const Scalar _tmp327 = _tmp318 * _tmp87 - _tmp324 * _tmp84;
  const Scalar _tmp328 = _tmp318 * _tmp66 - _tmp322 * _tmp84 - _tmp327 * _tmp38;
  const Scalar _tmp329 = _tmp185 * _tmp328;
  const Scalar _tmp330 = _tmp103 * _tmp329;
  const Scalar _tmp331 = _tmp105 * (_tmp119 * _tmp314 + _tmp121 * _tmp330 - _tmp122 * _tmp326 -
                                    _tmp218 * _tmp315 - _tmp313 * _tmp72);
  const Scalar _tmp332 = _tmp124 * _tmp328;
  const Scalar _tmp333 = -_tmp321 + _tmp326 + _tmp331 + _tmp332;
  const Scalar _tmp334 = -_tmp154 * _tmp333 + _tmp224 * _tmp329;
  const Scalar _tmp335 = _tmp329 * _tmp81;
  const Scalar _tmp336 = _tmp134 * _tmp320;
  const Scalar _tmp337 = _tmp135 * _tmp328;
  const Scalar _tmp338 = Scalar(1.0) * _tmp312;
  const Scalar _tmp339 =
      -_tmp131 * _tmp322 + _tmp132 * _tmp324 - _tmp205 * _tmp312 + _tmp338 * _tmp66;
  const Scalar _tmp340 = _tmp105 * (-_tmp122 * _tmp339 - _tmp131 * _tmp314 + _tmp133 * _tmp330 -
                                    _tmp208 * _tmp315 + Scalar(1.0) * _tmp313);
  const Scalar _tmp341 = -_tmp336 + _tmp337 + _tmp339 + _tmp340;
  const Scalar _tmp342 = -_tmp154 * _tmp341 + _tmp213 * _tmp329;
  const Scalar _tmp343 = _tmp149 * _tmp312;
  const Scalar _tmp344 =
      -_tmp152 * (-_tmp137 * _tmp335 + _tmp178 * _tmp265 - _tmp191 * _tmp343 + _tmp212 * _tmp341 +
                  _tmp215 * _tmp342) -
      _tmp157 * (-_tmp126 * _tmp335 + _tmp155 * _tmp178 * _tmp75 - _tmp191 * _tmp319 +
                 _tmp212 * _tmp333 + _tmp215 * _tmp334) -
      _tmp160 * (-_tmp107 * _tmp317 + _tmp187 * _tmp316 + _tmp199 * _tmp318 - _tmp316 * _tmp81) -
      _tmp163 *
          (-_tmp161 * _tmp317 + _tmp188 * _tmp329 + _tmp191 * _tmp193 * _tmp312 - _tmp335 * _tmp46);
  const Scalar _tmp345 = _tmp234 * _tmp328;
  const Scalar _tmp346 = _tmp320 * _tmp45;
  const Scalar _tmp347 =
      -_tmp107 * _tmp327 + _tmp236 * _tmp315 + _tmp345 * _tmp41 - _tmp346 * _tmp41;
  const Scalar _tmp348 = _tmp329 * _tmp88;
  const Scalar _tmp349 = -_tmp161 * _tmp327 + _tmp348 * _tmp46;
  const Scalar _tmp350 = _tmp126 * _tmp348 - _tmp127 * _tmp321 + _tmp127 * _tmp331 +
                         _tmp127 * _tmp332 - _tmp153 * _tmp327 + _tmp325 - _tmp333 * _tmp91;
  const Scalar _tmp351 = -_tmp127 * _tmp336 + _tmp127 * _tmp337 + _tmp127 * _tmp340 -
                         _tmp131 * _tmp324 + _tmp137 * _tmp348 - _tmp138 * _tmp327 +
                         _tmp338 * _tmp87 - _tmp341 * _tmp91;
  const Scalar _tmp352 =
      _tmp165 *
          (_tmp117 * (_tmp345 - _tmp346 - _tmp347 * _tmp94) +
           _tmp130 * (-_tmp321 * _tmp45 + _tmp331 * _tmp45 + _tmp332 * _tmp45 - _tmp350 * _tmp94) +
           _tmp141 * (-_tmp336 * _tmp45 + _tmp337 * _tmp45 + _tmp340 * _tmp45 - _tmp351 * _tmp94) -
           _tmp232 * _tmp349) -
      _tmp240 * _tmp344;
  const Scalar _tmp353 = Scalar(1.4083112389913199) * _tmp344;
  const Scalar _tmp354 = _tmp252 * _tmp329;
  const Scalar _tmp355 = _tmp116 * _tmp316;
  const Scalar _tmp356 = -_tmp129 * _tmp319 - _tmp140 * _tmp343 + _tmp251 * _tmp342 +
                         _tmp255 * _tmp312 + _tmp256 * _tmp318 + _tmp257 * _tmp334 +
                         _tmp354 * _tmp84 + _tmp355 * _tmp84;
  const Scalar _tmp357 =
      _tmp279 *
      (_tmp268 * (_tmp259 * _tmp350 + _tmp260 * _tmp351 + _tmp261 * _tmp349 + _tmp262 * _tmp347) -
       _tmp278 * _tmp356);
  const Scalar _tmp358 = _tmp286 * _tmp341 - _tmp287 * _tmp329 - _tmp288 * _tmp329 +
                         _tmp289 * _tmp333 - _tmp354 - _tmp355;
  const Scalar _tmp359 =
      _tmp304 *
      (_tmp292 * (-_tmp116 * _tmp345 + _tmp116 * _tmp346 + _tmp293 * _tmp336 - _tmp293 * _tmp337 -
                  _tmp293 * _tmp340 + _tmp294 * _tmp321 - _tmp294 * _tmp331 - _tmp294 * _tmp332) -
       _tmp305 * _tmp358);

  // Output terms (1)
  Eigen::Matrix<Scalar, 4, 3> _res;

  _res(0, 0) = 0;
  _res(1, 0) =
      _tmp168 *
          (-_tmp241 * _tmp245 -
           _tmp244 * (_tmp170 * (-_tmp166 * _tmp227 - _tmp241 * _tmp243) - _tmp226 * _tmp229)) +
      _tmp172 * _tmp227;
  _res(2, 0) =
      -_tmp246 * _tmp250 + _tmp258 * _tmp276 +
      _tmp284 * (-_tmp280 * _tmp281 -
                 _tmp282 * (-_tmp258 * _tmp285 + _tmp274 * (-_tmp246 * _tmp283 - _tmp258 * _tmp272 -
                                                            _tmp280 * _tmp284)));
  _res(3, 0) =
      _tmp290 * _tmp302 +
      _tmp308 *
          (-_tmp306 * _tmp307 -
           _tmp310 * (-_tmp290 * _tmp309 + _tmp300 * (-_tmp290 * _tmp298 - _tmp306 * _tmp308)));
  _res(0, 1) = 0;
  _res(1, 1) =
      _tmp168 *
          (-_tmp244 * (_tmp170 * (-_tmp166 * _tmp353 - _tmp243 * _tmp352) - _tmp229 * _tmp344) -
           _tmp245 * _tmp352) +
      _tmp172 * _tmp353;
  _res(2, 1) =
      -_tmp248 * _tmp250 + _tmp276 * _tmp356 +
      _tmp284 * (-_tmp281 * _tmp357 -
                 _tmp282 * (_tmp274 * (-_tmp248 * _tmp283 - _tmp272 * _tmp356 - _tmp284 * _tmp357) -
                            _tmp285 * _tmp356));
  _res(3, 1) =
      _tmp302 * _tmp358 + _tmp308 * (-_tmp307 * _tmp359 -
                                     _tmp310 * (_tmp300 * (-_tmp298 * _tmp358 - _tmp308 * _tmp359) -
                                                _tmp309 * _tmp358));
  _res(0, 2) = 0;
  _res(1, 2) = 0;
  _res(2, 2) = -_tmp247 * _tmp250;
  _res(3, 2) = 0;

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
