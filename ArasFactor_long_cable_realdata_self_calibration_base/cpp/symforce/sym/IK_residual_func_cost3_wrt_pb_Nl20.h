// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

#include <sym/rot3.h>

namespace sym {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: IK_residual_func_cost3_wrt_pb_Nl20
 *
 * Args:
 *     fh1: Scalar
 *     fv1: Scalar
 *     DeltaRot: Rot3
 *     position_vector: Matrix31
 *     p_a: Matrix31
 *     p_b: Matrix31
 *     p_c: Matrix31
 *     p_d: Matrix31
 *     Rot_init: Rot3
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix43
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 4, 3> IkResidualFuncCost3WrtPbNl20(
    const Scalar fh1, const Scalar fv1, const sym::Rot3<Scalar>& DeltaRot,
    const Eigen::Matrix<Scalar, 3, 1>& position_vector, const Eigen::Matrix<Scalar, 3, 1>& p_a,
    const Eigen::Matrix<Scalar, 3, 1>& p_b, const Eigen::Matrix<Scalar, 3, 1>& p_c,
    const Eigen::Matrix<Scalar, 3, 1>& p_d, const sym::Rot3<Scalar>& Rot_init,
    const Scalar epsilon) {
  // Total ops: 721

  // Unused inputs
  (void)epsilon;

  // Input arrays
  const Eigen::Matrix<Scalar, 4, 1>& _DeltaRot = DeltaRot.Data();
  const Eigen::Matrix<Scalar, 4, 1>& _Rot_init = Rot_init.Data();

  // Intermediate terms (244)
  const Scalar _tmp0 = _DeltaRot[0] * _Rot_init[2] + _DeltaRot[1] * _Rot_init[3] -
                       _DeltaRot[2] * _Rot_init[0] + _DeltaRot[3] * _Rot_init[1];
  const Scalar _tmp1 = -2 * std::pow(_tmp0, Scalar(2));
  const Scalar _tmp2 = -_DeltaRot[0] * _Rot_init[1] + _DeltaRot[1] * _Rot_init[0] +
                       _DeltaRot[2] * _Rot_init[3] + _DeltaRot[3] * _Rot_init[2];
  const Scalar _tmp3 = 1 - 2 * std::pow(_tmp2, Scalar(2));
  const Scalar _tmp4 = Scalar(0.20999999999999999) * _tmp1 + Scalar(0.20999999999999999) * _tmp3;
  const Scalar _tmp5 = _DeltaRot[0] * _Rot_init[3] - _DeltaRot[1] * _Rot_init[2] +
                       _DeltaRot[2] * _Rot_init[1] + _DeltaRot[3] * _Rot_init[0];
  const Scalar _tmp6 = 2 * _tmp2 * _tmp5;
  const Scalar _tmp7 = -2 * _DeltaRot[0] * _Rot_init[0] - 2 * _DeltaRot[1] * _Rot_init[1] -
                       2 * _DeltaRot[2] * _Rot_init[2] + 2 * _DeltaRot[3] * _Rot_init[3];
  const Scalar _tmp8 = _tmp0 * _tmp7;
  const Scalar _tmp9 = -Scalar(0.010999999999999999) * _tmp6 - Scalar(0.010999999999999999) * _tmp8;
  const Scalar _tmp10 = 2 * _tmp0;
  const Scalar _tmp11 = _tmp10 * _tmp5;
  const Scalar _tmp12 = _tmp2 * _tmp7;
  const Scalar _tmp13 = Scalar(0.20999999999999999) * _tmp11 - Scalar(0.20999999999999999) * _tmp12;
  const Scalar _tmp14 = -_tmp13 + _tmp9;
  const Scalar _tmp15 = _tmp14 + _tmp4;
  const Scalar _tmp16 = _tmp15 - p_b(0, 0) + position_vector(0, 0);
  const Scalar _tmp17 = Scalar(1.0) / (_tmp16);
  const Scalar _tmp18 = std::pow(_tmp16, Scalar(2));
  const Scalar _tmp19 = -2 * std::pow(_tmp5, Scalar(2));
  const Scalar _tmp20 = Scalar(0.20999999999999999) * _tmp19 + Scalar(0.20999999999999999) * _tmp3;
  const Scalar _tmp21 = -_tmp20;
  const Scalar _tmp22 = Scalar(0.20999999999999999) * _tmp11 + Scalar(0.20999999999999999) * _tmp12;
  const Scalar _tmp23 = _tmp10 * _tmp2;
  const Scalar _tmp24 = _tmp5 * _tmp7;
  const Scalar _tmp25 =
      -Scalar(0.010999999999999999) * _tmp23 + Scalar(0.010999999999999999) * _tmp24;
  const Scalar _tmp26 = _tmp22 + _tmp25;
  const Scalar _tmp27 = _tmp21 + _tmp26;
  const Scalar _tmp28 = _tmp27 - p_b(1, 0) + position_vector(1, 0);
  const Scalar _tmp29 = std::pow(_tmp28, Scalar(2));
  const Scalar _tmp30 = _tmp18 + _tmp29;
  const Scalar _tmp31 = std::sqrt(_tmp30);
  const Scalar _tmp32 = _tmp17 * _tmp31;
  const Scalar _tmp33 = _tmp20 + _tmp26;
  const Scalar _tmp34 = _tmp13 + _tmp9;
  const Scalar _tmp35 = _tmp34 + _tmp4;
  const Scalar _tmp36 = _tmp35 - p_c(0, 0) + position_vector(0, 0);
  const Scalar _tmp37 = _tmp33 - p_c(1, 0) + position_vector(1, 0);
  const Scalar _tmp38 = std::pow(Scalar(std::pow(_tmp36, Scalar(2)) + std::pow(_tmp37, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp39 = _tmp36 * _tmp38;
  const Scalar _tmp40 = _tmp37 * _tmp38;
  const Scalar _tmp41 = Scalar(1.0) / (_tmp31);
  const Scalar _tmp42 = _tmp15 * _tmp41;
  const Scalar _tmp43 = _tmp27 * _tmp41;
  const Scalar _tmp44 = -_tmp16 * _tmp43 + _tmp28 * _tmp42;
  const Scalar _tmp45 = _tmp31 * _tmp44;
  const Scalar _tmp46 = _tmp17 * _tmp45;
  const Scalar _tmp47 = -_tmp22 + _tmp25;
  const Scalar _tmp48 = _tmp21 + _tmp47;
  const Scalar _tmp49 = -_tmp4;
  const Scalar _tmp50 = _tmp14 + _tmp49;
  const Scalar _tmp51 = _tmp50 - p_a(0, 0) + position_vector(0, 0);
  const Scalar _tmp52 = std::pow(_tmp51, Scalar(2));
  const Scalar _tmp53 = _tmp48 - p_a(1, 0) + position_vector(1, 0);
  const Scalar _tmp54 = _tmp52 + std::pow(_tmp53, Scalar(2));
  const Scalar _tmp55 = std::pow(_tmp54, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp56 = _tmp51 * _tmp55;
  const Scalar _tmp57 = _tmp53 * _tmp55;
  const Scalar _tmp58 = _tmp46 * _tmp56 + _tmp48 * _tmp56 - _tmp50 * _tmp57;
  const Scalar _tmp59 = _tmp17 * _tmp28;
  const Scalar _tmp60 = _tmp56 * _tmp59;
  const Scalar _tmp61 = -_tmp57 + _tmp60;
  const Scalar _tmp62 = Scalar(1.0) / (_tmp61);
  const Scalar _tmp63 = _tmp39 * _tmp59;
  const Scalar _tmp64 = -_tmp40 + _tmp63;
  const Scalar _tmp65 = _tmp62 * _tmp64;
  const Scalar _tmp66 = _tmp33 * _tmp39 - _tmp35 * _tmp40 + _tmp39 * _tmp46 - _tmp58 * _tmp65;
  const Scalar _tmp67 = Scalar(0.20999999999999999) * _tmp6 - Scalar(0.20999999999999999) * _tmp8;
  const Scalar _tmp68 = -Scalar(0.010999999999999999) * _tmp1 -
                        Scalar(0.010999999999999999) * _tmp19 + Scalar(-0.010999999999999999);
  const Scalar _tmp69 = Scalar(0.20999999999999999) * _tmp23 + Scalar(0.20999999999999999) * _tmp24;
  const Scalar _tmp70 = _tmp68 - _tmp69;
  const Scalar _tmp71 = _tmp67 + _tmp70;
  const Scalar _tmp72 = _tmp56 * _tmp71;
  const Scalar _tmp73 = -_tmp67 + _tmp70;
  const Scalar _tmp74 = _tmp57 * _tmp73 - _tmp59 * _tmp72;
  const Scalar _tmp75 = _tmp39 * _tmp71;
  const Scalar _tmp76 = _tmp67 + _tmp68 + _tmp69;
  const Scalar _tmp77 = Scalar(1.0) * _tmp27;
  const Scalar _tmp78 = Scalar(1.0) * _tmp15;
  const Scalar _tmp79 = (-_tmp50 + _tmp78) / (_tmp48 - _tmp77);
  const Scalar _tmp80 = -_tmp56 * _tmp73 + _tmp72;
  const Scalar _tmp81 = -_tmp39 * _tmp76 - _tmp65 * _tmp80 + _tmp75 -
                        _tmp79 * (_tmp40 * _tmp76 - _tmp59 * _tmp75 - _tmp65 * _tmp74);
  const Scalar _tmp82 = Scalar(1.0) / (_tmp81);
  const Scalar _tmp83 = Scalar(1.0) * _tmp62;
  const Scalar _tmp84 = _tmp74 * _tmp79;
  const Scalar _tmp85 = -_tmp80 * _tmp83 + _tmp83 * _tmp84;
  const Scalar _tmp86 = _tmp82 * _tmp85;
  const Scalar _tmp87 = -_tmp58 * _tmp83 - _tmp66 * _tmp86;
  const Scalar _tmp88 = Scalar(1.0) / (_tmp66);
  const Scalar _tmp89 = _tmp81 * _tmp88;
  const Scalar _tmp90 = _tmp85 + _tmp87 * _tmp89;
  const Scalar _tmp91 = _tmp39 * _tmp82;
  const Scalar _tmp92 = _tmp90 * _tmp91;
  const Scalar _tmp93 = _tmp64 * _tmp82;
  const Scalar _tmp94 = -_tmp90 * _tmp93 + Scalar(1.0);
  const Scalar _tmp95 = _tmp56 * _tmp62;
  const Scalar _tmp96 = _tmp34 + _tmp49;
  const Scalar _tmp97 = _tmp96 - p_d(0, 0) + position_vector(0, 0);
  const Scalar _tmp98 = _tmp20 + _tmp47;
  const Scalar _tmp99 = _tmp98 - p_d(1, 0) + position_vector(1, 0);
  const Scalar _tmp100 = std::pow(Scalar(std::pow(_tmp97, Scalar(2)) + std::pow(_tmp99, Scalar(2))),
                                  Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp101 = _tmp100 * _tmp99;
  const Scalar _tmp102 = _tmp101 * fh1;
  const Scalar _tmp103 = _tmp102 * (_tmp92 + _tmp94 * _tmp95);
  const Scalar _tmp104 = _tmp59 * _tmp62;
  const Scalar _tmp105 = _tmp62 * _tmp74;
  const Scalar _tmp106 = _tmp104 * _tmp80 - _tmp71 - _tmp79 * (_tmp105 * _tmp59 + _tmp59 * _tmp71);
  const Scalar _tmp107 = _tmp66 * _tmp82;
  const Scalar _tmp108 = _tmp104 * _tmp58 - _tmp106 * _tmp107 - _tmp46;
  const Scalar _tmp109 = _tmp106 + _tmp108 * _tmp89;
  const Scalar _tmp110 = _tmp109 * _tmp91;
  const Scalar _tmp111 = -_tmp109 * _tmp93 - _tmp59;
  const Scalar _tmp112 = _tmp100 * _tmp97;
  const Scalar _tmp113 = _tmp112 * fh1;
  const Scalar _tmp114 = _tmp113 * (_tmp110 + _tmp111 * _tmp95 + Scalar(1.0));
  const Scalar _tmp115 = Scalar(1.0) * _tmp88;
  const Scalar _tmp116 = _tmp64 * _tmp83;
  const Scalar _tmp117 = _tmp116 * _tmp88;
  const Scalar _tmp118 = fh1 * (_tmp101 * _tmp96 - _tmp112 * _tmp98);
  const Scalar _tmp119 = _tmp118 * (_tmp115 * _tmp39 - _tmp117 * _tmp56);
  const Scalar _tmp120 = Scalar(333.54000000000002) - fv1;
  const Scalar _tmp121 = _tmp77 * _tmp79 + _tmp78;
  const Scalar _tmp122 = 0;
  const Scalar _tmp123 = _tmp122 * _tmp82;
  const Scalar _tmp124 = _tmp56 * _tmp65;
  const Scalar _tmp125 = _tmp123 * _tmp39;
  const Scalar _tmp126 = _tmp120 * (-_tmp123 * _tmp124 + _tmp125);
  const Scalar _tmp127 =
      std::exp(_tmp103 * _tmp32 + _tmp114 * _tmp32 + _tmp119 * _tmp32 + _tmp126 * _tmp32);
  const Scalar _tmp128 = Scalar(1.0) / (_tmp18);
  const Scalar _tmp129 = _tmp128 * _tmp28;
  const Scalar _tmp130 = _tmp129 * _tmp62;
  const Scalar _tmp131 = _tmp130 * _tmp80;
  const Scalar _tmp132 = _tmp129 * _tmp72;
  const Scalar _tmp133 = _tmp105 * _tmp129;
  const Scalar _tmp134 = std::pow(_tmp61, Scalar(-2));
  const Scalar _tmp135 = _tmp129 * _tmp134;
  const Scalar _tmp136 = _tmp56 * _tmp74;
  const Scalar _tmp137 = _tmp135 * _tmp136;
  const Scalar _tmp138 = _tmp56 * _tmp80;
  const Scalar _tmp139 = _tmp135 * _tmp138;
  const Scalar _tmp140 =
      -_tmp131 * _tmp39 + _tmp139 * _tmp64 -
      _tmp79 * (-_tmp129 * _tmp75 + _tmp132 * _tmp65 - _tmp133 * _tmp39 + _tmp137 * _tmp64);
  const Scalar _tmp141 = _tmp108 * _tmp88;
  const Scalar _tmp142 = _tmp130 * _tmp58;
  const Scalar _tmp143 = _tmp128 * _tmp45;
  const Scalar _tmp144 = _tmp56 * _tmp58;
  const Scalar _tmp145 = _tmp29 / [&]() {
    const Scalar base = _tmp16;
    return base * base * base;
  }();
  const Scalar _tmp146 = _tmp134 * _tmp145;
  const Scalar _tmp147 = std::pow(_tmp30, Scalar(Scalar(-3) / Scalar(2)));
  const Scalar _tmp148 = _tmp147 * _tmp27;
  const Scalar _tmp149 = _tmp147 * _tmp15;
  const Scalar _tmp150 = _tmp16 * _tmp28;
  const Scalar _tmp151 = _tmp32 * (-_tmp148 * _tmp18 + _tmp149 * _tmp150 + _tmp43);
  const Scalar _tmp152 = std::pow(_tmp81, Scalar(-2));
  const Scalar _tmp153 = _tmp140 * _tmp152;
  const Scalar _tmp154 = _tmp106 * _tmp66;
  const Scalar _tmp155 = _tmp41 * _tmp44;
  const Scalar _tmp156 = _tmp143 * _tmp56 + _tmp151 * _tmp56 - _tmp155 * _tmp56;
  const Scalar _tmp157 = _tmp135 * _tmp144;
  const Scalar _tmp158 = -_tmp142 * _tmp39 + _tmp143 * _tmp39 + _tmp151 * _tmp39 -
                         _tmp155 * _tmp39 - _tmp156 * _tmp65 + _tmp157 * _tmp64;
  const Scalar _tmp159 = _tmp106 * _tmp82;
  const Scalar _tmp160 =
      _tmp131 - _tmp138 * _tmp146 -
      _tmp79 * (_tmp129 * _tmp71 + _tmp133 - _tmp136 * _tmp146 - _tmp145 * _tmp62 * _tmp72);
  const Scalar _tmp161 = std::pow(_tmp66, Scalar(-2));
  const Scalar _tmp162 = _tmp161 * _tmp81;
  const Scalar _tmp163 = _tmp158 * _tmp162;
  const Scalar _tmp164 =
      -_tmp108 * _tmp163 + _tmp140 * _tmp141 + _tmp160 +
      _tmp89 * (_tmp104 * _tmp156 - _tmp107 * _tmp160 + _tmp142 - _tmp143 - _tmp144 * _tmp146 -
                _tmp151 + _tmp153 * _tmp154 + _tmp155 - _tmp158 * _tmp159);
  const Scalar _tmp165 = _tmp52 / _tmp54;
  const Scalar _tmp166 = _tmp111 * _tmp165;
  const Scalar _tmp167 = _tmp109 * _tmp64;
  const Scalar _tmp168 = -_tmp110 * _tmp129 - _tmp129 + _tmp153 * _tmp167 - _tmp164 * _tmp93;
  const Scalar _tmp169 = _tmp109 * _tmp39;
  const Scalar _tmp170 = _tmp113 * _tmp32;
  const Scalar _tmp171 = _tmp116 * _tmp161;
  const Scalar _tmp172 = _tmp158 * _tmp171;
  const Scalar _tmp173 = Scalar(1.0) * _tmp161;
  const Scalar _tmp174 = _tmp158 * _tmp173;
  const Scalar _tmp175 = _tmp135 * _tmp165;
  const Scalar _tmp176 = _tmp115 * _tmp64;
  const Scalar _tmp177 = _tmp56 * _tmp83;
  const Scalar _tmp178 = _tmp39 * _tmp88;
  const Scalar _tmp179 = _tmp129 * _tmp178;
  const Scalar _tmp180 = _tmp118 * _tmp32;
  const Scalar _tmp181 = _tmp128 * _tmp31;
  const Scalar _tmp182 = _tmp126 * _tmp41;
  const Scalar _tmp183 = _tmp119 * _tmp41;
  const Scalar _tmp184 = _tmp123 * _tmp64;
  const Scalar _tmp185 = _tmp122 * _tmp124;
  const Scalar _tmp186 = _tmp153 * _tmp39;
  const Scalar _tmp187 = _tmp120 * _tmp32;
  const Scalar _tmp188 = _tmp103 * _tmp41;
  const Scalar _tmp189 = _tmp114 * _tmp41;
  const Scalar _tmp190 = _tmp87 * _tmp88;
  const Scalar _tmp191 = _tmp66 * _tmp85;
  const Scalar _tmp192 = Scalar(1.0) * _tmp80;
  const Scalar _tmp193 = _tmp135 * _tmp56;
  const Scalar _tmp194 = Scalar(1.0) * _tmp84;
  const Scalar _tmp195 = -_tmp132 * _tmp79 * _tmp83 + _tmp192 * _tmp193 - _tmp193 * _tmp194;
  const Scalar _tmp196 = _tmp140 * _tmp190 - _tmp163 * _tmp87 + _tmp195 +
                         _tmp89 * (-_tmp107 * _tmp195 + _tmp153 * _tmp191 - _tmp156 * _tmp83 +
                                   Scalar(1.0) * _tmp157 - _tmp158 * _tmp86);
  const Scalar _tmp197 = _tmp64 * _tmp90;
  const Scalar _tmp198 = -_tmp129 * _tmp92 + _tmp153 * _tmp197 - _tmp196 * _tmp93;
  const Scalar _tmp199 = _tmp102 * _tmp32;
  const Scalar _tmp200 = _tmp120 * _tmp123;
  const Scalar _tmp201 = _tmp113 * _tmp62;
  const Scalar _tmp202 = _tmp102 * _tmp62;
  const Scalar _tmp203 =
      std::exp(-_tmp111 * _tmp201 + _tmp117 * _tmp118 + _tmp200 * _tmp65 - _tmp202 * _tmp94);
  const Scalar _tmp204 = _tmp115 * _tmp118;
  const Scalar _tmp205 = _tmp193 * _tmp64;
  const Scalar _tmp206 = _tmp111 * _tmp113;
  const Scalar _tmp207 = _tmp120 * _tmp122;
  const Scalar _tmp208 = _tmp153 * _tmp207;
  const Scalar _tmp209 = _tmp118 * _tmp83;
  const Scalar _tmp210 = _tmp200 * _tmp39;
  const Scalar _tmp211 = _tmp102 * _tmp82;
  const Scalar _tmp212 = _tmp113 * _tmp82;
  const Scalar _tmp213 = std::exp(-_tmp109 * _tmp212 - _tmp200 - _tmp204 - _tmp211 * _tmp90);
  const Scalar _tmp214 = _tmp102 * _tmp90;
  const Scalar _tmp215 = _tmp109 * _tmp113;
  const Scalar _tmp216 = _tmp17 * _tmp62;
  const Scalar _tmp217 = _tmp134 * _tmp17;
  const Scalar _tmp218 = _tmp217 * _tmp56;
  const Scalar _tmp219 = _tmp218 * _tmp64;
  const Scalar _tmp220 = _tmp17 * _tmp71;
  const Scalar _tmp221 = _tmp216 * _tmp74;
  const Scalar _tmp222 = _tmp216 * _tmp80;
  const Scalar _tmp223 =
      -_tmp219 * _tmp80 + _tmp222 * _tmp39 -
      _tmp79 * (-_tmp124 * _tmp220 - _tmp219 * _tmp74 + _tmp220 * _tmp39 + _tmp221 * _tmp39);
  const Scalar _tmp224 = _tmp152 * _tmp223;
  const Scalar _tmp225 = _tmp165 * _tmp217;
  const Scalar _tmp226 = _tmp224 * _tmp39;
  const Scalar _tmp227 = _tmp32 * (-_tmp148 * _tmp150 + _tmp149 * _tmp29 - _tmp42);
  const Scalar _tmp228 = -_tmp155 * _tmp60 + _tmp227 * _tmp56;
  const Scalar _tmp229 = _tmp216 * _tmp58;
  const Scalar _tmp230 = _tmp144 * _tmp217;
  const Scalar _tmp231 =
      -_tmp155 * _tmp63 + _tmp227 * _tmp39 - _tmp228 * _tmp65 + _tmp229 * _tmp39 - _tmp230 * _tmp64;
  const Scalar _tmp232 = _tmp171 * _tmp231;
  const Scalar _tmp233 = _tmp17 * _tmp178;
  const Scalar _tmp234 = _tmp173 * _tmp231;
  const Scalar _tmp235 = _tmp217 * _tmp94;
  const Scalar _tmp236 = _tmp177 * _tmp220 * _tmp79 - _tmp192 * _tmp218 + _tmp194 * _tmp218;
  const Scalar _tmp237 = _tmp162 * _tmp231;
  const Scalar _tmp238 = _tmp190 * _tmp223 + _tmp236 - _tmp237 * _tmp87 +
                         _tmp89 * (-_tmp107 * _tmp236 + _tmp191 * _tmp224 - _tmp228 * _tmp83 -
                                   Scalar(1.0) * _tmp230 - _tmp231 * _tmp86);
  const Scalar _tmp239 = _tmp17 * _tmp92 + _tmp197 * _tmp224 - _tmp238 * _tmp93;
  const Scalar _tmp240 =
      _tmp139 - _tmp222 - _tmp79 * (_tmp130 * _tmp72 + _tmp137 - _tmp220 - _tmp221);
  const Scalar _tmp241 =
      -_tmp108 * _tmp237 + _tmp141 * _tmp223 + _tmp240 +
      _tmp89 * (_tmp104 * _tmp228 - _tmp107 * _tmp240 + _tmp154 * _tmp224 + _tmp155 * _tmp59 +
                _tmp157 - _tmp159 * _tmp231 - _tmp227 - _tmp229);
  const Scalar _tmp242 = _tmp110 * _tmp17 + _tmp167 * _tmp224 + _tmp17 - _tmp241 * _tmp93;
  const Scalar _tmp243 = _tmp207 * _tmp224;

  // Output terms (1)
  Eigen::Matrix<Scalar, 4, 3> _res;

  _res(0, 0) = 0;
  _res(1, 0) =
      -_tmp127 *
      (-_tmp103 * _tmp181 - _tmp114 * _tmp181 - _tmp119 * _tmp181 - _tmp126 * _tmp181 -
       _tmp170 * (-_tmp135 * _tmp166 - _tmp153 * _tmp169 + _tmp164 * _tmp91 + _tmp168 * _tmp95) -
       _tmp180 * (_tmp172 * _tmp56 - _tmp174 * _tmp39 + _tmp175 * _tmp176 - _tmp177 * _tmp179) +
       _tmp182 + _tmp183 -
       _tmp187 * (-_tmp122 * _tmp186 - _tmp125 * _tmp129 * _tmp95 + _tmp153 * _tmp185 +
                  _tmp175 * _tmp184) +
       _tmp188 + _tmp189 -
       _tmp199 * (-_tmp175 * _tmp94 - _tmp186 * _tmp90 + _tmp196 * _tmp91 + _tmp198 * _tmp95));
  _res(2, 0) =
      -_tmp203 * (-_tmp102 * _tmp193 * _tmp94 + _tmp118 * _tmp172 - _tmp130 * _tmp210 +
                  _tmp168 * _tmp201 - _tmp179 * _tmp209 - _tmp193 * _tmp206 + _tmp198 * _tmp202 +
                  _tmp200 * _tmp205 + _tmp204 * _tmp205 + _tmp208 * _tmp65);
  _res(3, 0) = -_tmp213 * (-_tmp118 * _tmp174 - _tmp153 * _tmp214 - _tmp153 * _tmp215 +
                           _tmp164 * _tmp212 + _tmp196 * _tmp211 - _tmp208);
  _res(0, 1) = 0;
  _res(1, 1) =
      -_tmp127 *
      (-_tmp170 * (_tmp166 * _tmp217 - _tmp169 * _tmp224 + _tmp241 * _tmp91 + _tmp242 * _tmp95) -
       _tmp180 * (-_tmp176 * _tmp225 + _tmp177 * _tmp233 + _tmp232 * _tmp56 - _tmp234 * _tmp39) +
       _tmp182 * _tmp59 + _tmp183 * _tmp59 -
       _tmp187 * (-_tmp122 * _tmp226 + _tmp125 * _tmp216 * _tmp56 - _tmp184 * _tmp225 +
                  _tmp185 * _tmp224) +
       _tmp188 * _tmp59 + _tmp189 * _tmp59 -
       _tmp199 * (_tmp165 * _tmp235 - _tmp226 * _tmp90 + _tmp238 * _tmp91 + _tmp239 * _tmp95));
  _res(2, 1) =
      -_tmp203 * (_tmp102 * _tmp235 * _tmp56 + _tmp118 * _tmp232 - _tmp200 * _tmp219 +
                  _tmp201 * _tmp242 + _tmp202 * _tmp239 - _tmp204 * _tmp219 + _tmp206 * _tmp218 +
                  _tmp209 * _tmp233 + _tmp210 * _tmp216 + _tmp243 * _tmp65);
  _res(3, 1) = -_tmp213 * (-_tmp118 * _tmp234 + _tmp211 * _tmp238 + _tmp212 * _tmp241 -
                           _tmp214 * _tmp224 - _tmp215 * _tmp224 - _tmp243);
  _res(0, 2) = 0;
  _res(1, 2) = 0;
  _res(2, 2) = 0;
  _res(3, 2) = 0;

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
