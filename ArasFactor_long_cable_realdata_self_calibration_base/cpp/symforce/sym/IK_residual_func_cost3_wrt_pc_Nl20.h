// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

#include <sym/rot3.h>

namespace sym {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: IK_residual_func_cost3_wrt_pc_Nl20
 *
 * Args:
 *     fh1: Scalar
 *     fv1: Scalar
 *     DeltaRot: Rot3
 *     position_vector: Matrix31
 *     p_a: Matrix31
 *     p_b: Matrix31
 *     p_c: Matrix31
 *     p_d: Matrix31
 *     Rot_init: Rot3
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix43
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 4, 3> IkResidualFuncCost3WrtPcNl20(
    const Scalar fh1, const Scalar fv1, const sym::Rot3<Scalar>& DeltaRot,
    const Eigen::Matrix<Scalar, 3, 1>& position_vector, const Eigen::Matrix<Scalar, 3, 1>& p_a,
    const Eigen::Matrix<Scalar, 3, 1>& p_b, const Eigen::Matrix<Scalar, 3, 1>& p_c,
    const Eigen::Matrix<Scalar, 3, 1>& p_d, const sym::Rot3<Scalar>& Rot_init,
    const Scalar epsilon) {
  // Total ops: 568

  // Unused inputs
  (void)epsilon;

  // Input arrays
  const Eigen::Matrix<Scalar, 4, 1>& _DeltaRot = DeltaRot.Data();
  const Eigen::Matrix<Scalar, 4, 1>& _Rot_init = Rot_init.Data();

  // Intermediate terms (181)
  const Scalar _tmp0 = -_DeltaRot[0] * _Rot_init[1] + _DeltaRot[1] * _Rot_init[0] +
                       _DeltaRot[2] * _Rot_init[3] + _DeltaRot[3] * _Rot_init[2];
  const Scalar _tmp1 = -2 * std::pow(_tmp0, Scalar(2));
  const Scalar _tmp2 = _DeltaRot[0] * _Rot_init[2] + _DeltaRot[1] * _Rot_init[3] -
                       _DeltaRot[2] * _Rot_init[0] + _DeltaRot[3] * _Rot_init[1];
  const Scalar _tmp3 = 1 - 2 * std::pow(_tmp2, Scalar(2));
  const Scalar _tmp4 = Scalar(0.20999999999999999) * _tmp1 + Scalar(0.20999999999999999) * _tmp3;
  const Scalar _tmp5 = _DeltaRot[0] * _Rot_init[3] - _DeltaRot[1] * _Rot_init[2] +
                       _DeltaRot[2] * _Rot_init[1] + _DeltaRot[3] * _Rot_init[0];
  const Scalar _tmp6 = 2 * _tmp0;
  const Scalar _tmp7 = _tmp5 * _tmp6;
  const Scalar _tmp8 = -2 * _DeltaRot[0] * _Rot_init[0] - 2 * _DeltaRot[1] * _Rot_init[1] -
                       2 * _DeltaRot[2] * _Rot_init[2] + 2 * _DeltaRot[3] * _Rot_init[3];
  const Scalar _tmp9 = _tmp2 * _tmp8;
  const Scalar _tmp10 =
      -Scalar(0.010999999999999999) * _tmp7 - Scalar(0.010999999999999999) * _tmp9;
  const Scalar _tmp11 = 2 * _tmp2 * _tmp5;
  const Scalar _tmp12 = _tmp0 * _tmp8;
  const Scalar _tmp13 = Scalar(0.20999999999999999) * _tmp11 - Scalar(0.20999999999999999) * _tmp12;
  const Scalar _tmp14 = _tmp10 + _tmp13;
  const Scalar _tmp15 = _tmp14 + _tmp4;
  const Scalar _tmp16 = _tmp15 - p_c(0, 0) + position_vector(0, 0);
  const Scalar _tmp17 = std::pow(_tmp16, Scalar(2));
  const Scalar _tmp18 = -2 * std::pow(_tmp5, Scalar(2));
  const Scalar _tmp19 = Scalar(0.20999999999999999) * _tmp1 + Scalar(0.20999999999999999) * _tmp18 +
                        Scalar(0.20999999999999999);
  const Scalar _tmp20 = Scalar(0.20999999999999999) * _tmp11 + Scalar(0.20999999999999999) * _tmp12;
  const Scalar _tmp21 = _tmp2 * _tmp6;
  const Scalar _tmp22 = _tmp5 * _tmp8;
  const Scalar _tmp23 =
      -Scalar(0.010999999999999999) * _tmp21 + Scalar(0.010999999999999999) * _tmp22;
  const Scalar _tmp24 = _tmp20 + _tmp23;
  const Scalar _tmp25 = _tmp19 + _tmp24;
  const Scalar _tmp26 = _tmp25 - p_c(1, 0) + position_vector(1, 0);
  const Scalar _tmp27 = std::pow(_tmp26, Scalar(2));
  const Scalar _tmp28 = _tmp17 + _tmp27;
  const Scalar _tmp29 = std::pow(_tmp28, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp30 = _tmp10 - _tmp13;
  const Scalar _tmp31 = _tmp30 + _tmp4;
  const Scalar _tmp32 = _tmp31 - p_b(0, 0) + position_vector(0, 0);
  const Scalar _tmp33 = Scalar(1.0) / (_tmp32);
  const Scalar _tmp34 = -_tmp19;
  const Scalar _tmp35 = _tmp24 + _tmp34;
  const Scalar _tmp36 = _tmp35 - p_b(1, 0) + position_vector(1, 0);
  const Scalar _tmp37 = _tmp33 * _tmp36;
  const Scalar _tmp38 = _tmp29 * _tmp37;
  const Scalar _tmp39 = _tmp26 * _tmp29;
  const Scalar _tmp40 = _tmp16 * _tmp38 - _tmp39;
  const Scalar _tmp41 = Scalar(0.20999999999999999) * _tmp7 - Scalar(0.20999999999999999) * _tmp9;
  const Scalar _tmp42 =
      -Scalar(0.010999999999999999) * _tmp18 - Scalar(0.010999999999999999) * _tmp3;
  const Scalar _tmp43 = Scalar(0.20999999999999999) * _tmp21 + Scalar(0.20999999999999999) * _tmp22;
  const Scalar _tmp44 = _tmp42 - _tmp43;
  const Scalar _tmp45 = _tmp41 + _tmp44;
  const Scalar _tmp46 = -_tmp4;
  const Scalar _tmp47 = _tmp30 + _tmp46;
  const Scalar _tmp48 = _tmp47 - p_a(0, 0) + position_vector(0, 0);
  const Scalar _tmp49 = -_tmp20 + _tmp23;
  const Scalar _tmp50 = _tmp34 + _tmp49;
  const Scalar _tmp51 = _tmp50 - p_a(1, 0) + position_vector(1, 0);
  const Scalar _tmp52 = std::pow(Scalar(std::pow(_tmp48, Scalar(2)) + std::pow(_tmp51, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp53 = _tmp48 * _tmp52;
  const Scalar _tmp54 = _tmp45 * _tmp53;
  const Scalar _tmp55 = -_tmp41 + _tmp44;
  const Scalar _tmp56 = _tmp51 * _tmp52;
  const Scalar _tmp57 = Scalar(1.0) / (_tmp37 * _tmp53 - _tmp56);
  const Scalar _tmp58 = _tmp57 * (-_tmp37 * _tmp54 + _tmp55 * _tmp56);
  const Scalar _tmp59 = _tmp29 * _tmp45;
  const Scalar _tmp60 = _tmp16 * _tmp59;
  const Scalar _tmp61 = _tmp41 + _tmp42 + _tmp43;
  const Scalar _tmp62 = Scalar(1.0) * _tmp35;
  const Scalar _tmp63 = Scalar(1.0) * _tmp31;
  const Scalar _tmp64 = (-_tmp47 + _tmp63) / (_tmp50 - _tmp62);
  const Scalar _tmp65 = _tmp29 * _tmp61;
  const Scalar _tmp66 = _tmp57 * (-_tmp53 * _tmp55 + _tmp54);
  const Scalar _tmp67 = -_tmp16 * _tmp65 - _tmp40 * _tmp66 + _tmp60 -
                        _tmp64 * (-_tmp37 * _tmp60 + _tmp39 * _tmp61 - _tmp40 * _tmp58);
  const Scalar _tmp68 = Scalar(1.0) / (_tmp67);
  const Scalar _tmp69 = _tmp25 * _tmp29;
  const Scalar _tmp70 =
      std::sqrt(Scalar(std::pow(_tmp32, Scalar(2)) + std::pow(_tmp36, Scalar(2))));
  const Scalar _tmp71 = Scalar(1.0) / (_tmp70);
  const Scalar _tmp72 = _tmp33 * _tmp70;
  const Scalar _tmp73 = _tmp72 * (_tmp31 * _tmp36 * _tmp71 - _tmp32 * _tmp35 * _tmp71);
  const Scalar _tmp74 = _tmp16 * _tmp29;
  const Scalar _tmp75 = _tmp57 * (-_tmp47 * _tmp56 + _tmp50 * _tmp53 + _tmp53 * _tmp73);
  const Scalar _tmp76 = -_tmp15 * _tmp39 + _tmp16 * _tmp69 - _tmp40 * _tmp75 + _tmp73 * _tmp74;
  const Scalar _tmp77 = Scalar(1.0) * _tmp58 * _tmp64 - Scalar(1.0) * _tmp66;
  const Scalar _tmp78 = _tmp68 * _tmp77;
  const Scalar _tmp79 = -Scalar(1.0) * _tmp75 - _tmp76 * _tmp78;
  const Scalar _tmp80 = Scalar(1.0) / (_tmp76);
  const Scalar _tmp81 = _tmp67 * _tmp80;
  const Scalar _tmp82 = _tmp77 + _tmp79 * _tmp81;
  const Scalar _tmp83 = _tmp68 * _tmp82;
  const Scalar _tmp84 = _tmp29 * _tmp83;
  const Scalar _tmp85 = -_tmp40 * _tmp83 + Scalar(1.0);
  const Scalar _tmp86 = _tmp53 * _tmp57;
  const Scalar _tmp87 = _tmp14 + _tmp46;
  const Scalar _tmp88 = _tmp87 - p_d(0, 0) + position_vector(0, 0);
  const Scalar _tmp89 = _tmp19 + _tmp49;
  const Scalar _tmp90 = _tmp89 - p_d(1, 0) + position_vector(1, 0);
  const Scalar _tmp91 = std::pow(Scalar(std::pow(_tmp88, Scalar(2)) + std::pow(_tmp90, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp92 = _tmp90 * _tmp91;
  const Scalar _tmp93 = _tmp92 * fh1;
  const Scalar _tmp94 = _tmp72 * _tmp93;
  const Scalar _tmp95 = _tmp37 * _tmp45;
  const Scalar _tmp96 = _tmp37 * _tmp66 - _tmp45 - _tmp64 * (_tmp37 * _tmp58 + _tmp95);
  const Scalar _tmp97 = _tmp68 * _tmp96;
  const Scalar _tmp98 = _tmp37 * _tmp75 - _tmp73 - _tmp76 * _tmp97;
  const Scalar _tmp99 = _tmp81 * _tmp98 + _tmp96;
  const Scalar _tmp100 = _tmp68 * _tmp99;
  const Scalar _tmp101 = _tmp100 * _tmp29;
  const Scalar _tmp102 = _tmp40 * _tmp68;
  const Scalar _tmp103 = -_tmp102 * _tmp99 - _tmp37;
  const Scalar _tmp104 = _tmp88 * _tmp91;
  const Scalar _tmp105 = _tmp104 * fh1;
  const Scalar _tmp106 = _tmp105 * _tmp72;
  const Scalar _tmp107 = Scalar(1.0) * _tmp80;
  const Scalar _tmp108 = _tmp107 * _tmp29;
  const Scalar _tmp109 = _tmp107 * _tmp86;
  const Scalar _tmp110 = fh1 * (-_tmp104 * _tmp89 + _tmp87 * _tmp92);
  const Scalar _tmp111 = _tmp110 * _tmp72;
  const Scalar _tmp112 = _tmp62 * _tmp64 + _tmp63;
  const Scalar _tmp113 = 0;
  const Scalar _tmp114 = _tmp113 * _tmp86;
  const Scalar _tmp115 = _tmp113 * _tmp68;
  const Scalar _tmp116 = _tmp115 * _tmp29;
  const Scalar _tmp117 = Scalar(333.54000000000002) - fv1;
  const Scalar _tmp118 = _tmp117 * _tmp72;
  const Scalar _tmp119 = std::exp(_tmp106 * (_tmp101 * _tmp16 + _tmp103 * _tmp86 + Scalar(1.0)) +
                                  _tmp111 * (_tmp108 * _tmp16 - _tmp109 * _tmp40) +
                                  _tmp118 * (-_tmp102 * _tmp114 + _tmp116 * _tmp16) +
                                  _tmp94 * (_tmp16 * _tmp84 + _tmp85 * _tmp86));
  const Scalar _tmp120 = std::pow(_tmp28, Scalar(Scalar(-3) / Scalar(2)));
  const Scalar _tmp121 = _tmp120 * _tmp16 * _tmp26;
  const Scalar _tmp122 = _tmp120 * _tmp17;
  const Scalar _tmp123 = -_tmp121 + _tmp122 * _tmp37 - _tmp38;
  const Scalar _tmp124 = _tmp121 * _tmp61;
  const Scalar _tmp125 = _tmp122 * _tmp45;
  const Scalar _tmp126 =
      -_tmp122 * _tmp61 - _tmp123 * _tmp66 + _tmp125 - _tmp59 -
      _tmp64 * (-_tmp123 * _tmp58 + _tmp124 - _tmp125 * _tmp37 + _tmp37 * _tmp59) + _tmp65;
  const Scalar _tmp127 = std::pow(_tmp67, Scalar(-2));
  const Scalar _tmp128 = _tmp126 * _tmp127;
  const Scalar _tmp129 = _tmp114 * _tmp40;
  const Scalar _tmp130 = _tmp128 * _tmp74;
  const Scalar _tmp131 = _tmp40 * _tmp99;
  const Scalar _tmp132 = -_tmp121 * _tmp15 + _tmp122 * _tmp25 + _tmp122 * _tmp73 -
                         _tmp123 * _tmp75 - _tmp29 * _tmp73 - _tmp69;
  const Scalar _tmp133 = std::pow(_tmp76, Scalar(-2));
  const Scalar _tmp134 = _tmp133 * _tmp67;
  const Scalar _tmp135 = _tmp134 * _tmp98;
  const Scalar _tmp136 = _tmp126 * _tmp80;
  const Scalar _tmp137 = _tmp127 * _tmp76;
  const Scalar _tmp138 = _tmp137 * _tmp96;
  const Scalar _tmp139 =
      -_tmp132 * _tmp135 + _tmp136 * _tmp98 + _tmp81 * (_tmp126 * _tmp138 - _tmp132 * _tmp97);
  const Scalar _tmp140 = -_tmp100 * _tmp123 - _tmp102 * _tmp139 + _tmp128 * _tmp131;
  const Scalar _tmp141 = _tmp68 * _tmp74;
  const Scalar _tmp142 = _tmp40 * _tmp82;
  const Scalar _tmp143 = _tmp137 * _tmp77;
  const Scalar _tmp144 = _tmp134 * _tmp79;
  const Scalar _tmp145 =
      -_tmp132 * _tmp144 + _tmp136 * _tmp79 + _tmp81 * (_tmp126 * _tmp143 - _tmp132 * _tmp78);
  const Scalar _tmp146 = -_tmp102 * _tmp145 - _tmp123 * _tmp83 + _tmp128 * _tmp142;
  const Scalar _tmp147 = _tmp145 * _tmp68;
  const Scalar _tmp148 = Scalar(1.0) * _tmp133;
  const Scalar _tmp149 = _tmp148 * _tmp74;
  const Scalar _tmp150 = _tmp148 * _tmp40 * _tmp86;
  const Scalar _tmp151 = _tmp107 * _tmp110;
  const Scalar _tmp152 = _tmp151 * _tmp57;
  const Scalar _tmp153 = _tmp113 * _tmp117;
  const Scalar _tmp154 = _tmp105 * _tmp57;
  const Scalar _tmp155 = _tmp57 * _tmp93;
  const Scalar _tmp156 = std::exp(_tmp102 * _tmp153 * _tmp57 - _tmp103 * _tmp154 +
                                  _tmp152 * _tmp40 - _tmp155 * _tmp85);
  const Scalar _tmp157 = _tmp115 * _tmp117;
  const Scalar _tmp158 = _tmp157 * _tmp57;
  const Scalar _tmp159 = _tmp128 * _tmp153;
  const Scalar _tmp160 = _tmp40 * _tmp57;
  const Scalar _tmp161 = _tmp110 * _tmp148;
  const Scalar _tmp162 = _tmp132 * _tmp161;
  const Scalar _tmp163 = std::exp(-_tmp100 * _tmp105 - _tmp151 - _tmp157 - _tmp83 * _tmp93);
  const Scalar _tmp164 = _tmp82 * _tmp93;
  const Scalar _tmp165 = _tmp105 * _tmp68;
  const Scalar _tmp166 = _tmp105 * _tmp99;
  const Scalar _tmp167 = _tmp120 * _tmp27;
  const Scalar _tmp168 = _tmp121 * _tmp37 - _tmp167 + _tmp29;
  const Scalar _tmp169 =
      _tmp121 * _tmp45 - _tmp124 - _tmp168 * _tmp66 -
      _tmp64 * (-_tmp121 * _tmp95 + _tmp167 * _tmp61 - _tmp168 * _tmp58 - _tmp65);
  const Scalar _tmp170 = _tmp127 * _tmp169;
  const Scalar _tmp171 = _tmp170 * _tmp74;
  const Scalar _tmp172 = _tmp168 * _tmp86;
  const Scalar _tmp173 = _tmp169 * _tmp80;
  const Scalar _tmp174 =
      _tmp121 * _tmp25 + _tmp121 * _tmp73 - _tmp15 * _tmp167 + _tmp15 * _tmp29 - _tmp168 * _tmp75;
  const Scalar _tmp175 =
      -_tmp144 * _tmp174 + _tmp173 * _tmp79 + _tmp81 * (_tmp143 * _tmp169 - _tmp174 * _tmp78);
  const Scalar _tmp176 = -_tmp102 * _tmp175 + _tmp142 * _tmp170 - _tmp168 * _tmp83;
  const Scalar _tmp177 =
      -_tmp135 * _tmp174 + _tmp173 * _tmp98 + _tmp81 * (_tmp138 * _tmp169 - _tmp174 * _tmp97);
  const Scalar _tmp178 = -_tmp100 * _tmp168 - _tmp102 * _tmp177 + _tmp131 * _tmp170;
  const Scalar _tmp179 = _tmp161 * _tmp174;
  const Scalar _tmp180 = _tmp153 * _tmp170;

  // Output terms (1)
  Eigen::Matrix<Scalar, 4, 3> _res;

  _res(0, 0) = 0;
  _res(1, 0) = -_tmp119 * (-_tmp106 * (_tmp100 * _tmp122 - _tmp101 - _tmp130 * _tmp99 +
                                       _tmp139 * _tmp141 + _tmp140 * _tmp86) -
                           _tmp111 * (_tmp107 * _tmp122 - _tmp108 - _tmp109 * _tmp123 -
                                      _tmp132 * _tmp149 + _tmp132 * _tmp150) -
                           _tmp118 * (-_tmp113 * _tmp130 + _tmp115 * _tmp122 -
                                      _tmp115 * _tmp123 * _tmp86 - _tmp116 + _tmp128 * _tmp129) -
                           _tmp94 * (_tmp122 * _tmp83 - _tmp130 * _tmp82 + _tmp146 * _tmp86 +
                                     _tmp147 * _tmp74 - _tmp84));
  _res(2, 0) = -_tmp156 * (-_tmp123 * _tmp152 - _tmp123 * _tmp158 + _tmp140 * _tmp154 +
                           _tmp146 * _tmp155 + _tmp159 * _tmp160 + _tmp160 * _tmp162);
  _res(3, 0) = -_tmp163 * (-_tmp128 * _tmp164 - _tmp128 * _tmp166 + _tmp139 * _tmp165 +
                           _tmp147 * _tmp93 - _tmp159 - _tmp162);
  _res(0, 1) = 0;
  _res(1, 1) =
      -_tmp119 *
      (-_tmp106 * (_tmp100 * _tmp121 + _tmp141 * _tmp177 - _tmp171 * _tmp99 + _tmp178 * _tmp86) -
       _tmp111 * (_tmp107 * _tmp121 - _tmp107 * _tmp172 - _tmp149 * _tmp174 + _tmp150 * _tmp174) -
       _tmp118 * (-_tmp113 * _tmp171 + _tmp115 * _tmp121 - _tmp115 * _tmp172 + _tmp129 * _tmp170) -
       _tmp94 * (_tmp121 * _tmp83 + _tmp141 * _tmp175 - _tmp171 * _tmp82 + _tmp176 * _tmp86));
  _res(2, 1) = -_tmp156 * (-_tmp152 * _tmp168 + _tmp154 * _tmp178 + _tmp155 * _tmp176 -
                           _tmp158 * _tmp168 + _tmp160 * _tmp179 + _tmp160 * _tmp180);
  _res(3, 1) = -_tmp163 * (-_tmp164 * _tmp170 + _tmp165 * _tmp177 - _tmp166 * _tmp170 +
                           _tmp175 * _tmp68 * _tmp93 - _tmp179 - _tmp180);
  _res(0, 2) = 0;
  _res(1, 2) = 0;
  _res(2, 2) = 0;
  _res(3, 2) = 0;

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
