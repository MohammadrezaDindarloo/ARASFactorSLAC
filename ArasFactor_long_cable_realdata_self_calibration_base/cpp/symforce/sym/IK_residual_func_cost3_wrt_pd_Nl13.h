// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

#include <sym/rot3.h>

namespace sym {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: IK_residual_func_cost3_wrt_pd_Nl13
 *
 * Args:
 *     fh1: Scalar
 *     fv1: Scalar
 *     DeltaRot: Rot3
 *     position_vector: Matrix31
 *     p_a: Matrix31
 *     p_b: Matrix31
 *     p_c: Matrix31
 *     p_d: Matrix31
 *     Rot_init: Rot3
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix43
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 4, 3> IkResidualFuncCost3WrtPdNl13(
    const Scalar fh1, const Scalar fv1, const sym::Rot3<Scalar>& DeltaRot,
    const Eigen::Matrix<Scalar, 3, 1>& position_vector, const Eigen::Matrix<Scalar, 3, 1>& p_a,
    const Eigen::Matrix<Scalar, 3, 1>& p_b, const Eigen::Matrix<Scalar, 3, 1>& p_c,
    const Eigen::Matrix<Scalar, 3, 1>& p_d, const sym::Rot3<Scalar>& Rot_init,
    const Scalar epsilon) {
  // Total ops: 661

  // Unused inputs
  (void)epsilon;

  // Input arrays
  const Eigen::Matrix<Scalar, 4, 1>& _DeltaRot = DeltaRot.Data();
  const Eigen::Matrix<Scalar, 4, 1>& _Rot_init = Rot_init.Data();

  // Intermediate terms (214)
  const Scalar _tmp0 = _DeltaRot[0] * _Rot_init[2] + _DeltaRot[1] * _Rot_init[3] -
                       _DeltaRot[2] * _Rot_init[0] + _DeltaRot[3] * _Rot_init[1];
  const Scalar _tmp1 = -2 * std::pow(_tmp0, Scalar(2));
  const Scalar _tmp2 = -_DeltaRot[0] * _Rot_init[1] + _DeltaRot[1] * _Rot_init[0] +
                       _DeltaRot[2] * _Rot_init[3] + _DeltaRot[3] * _Rot_init[2];
  const Scalar _tmp3 = 1 - 2 * std::pow(_tmp2, Scalar(2));
  const Scalar _tmp4 = Scalar(0.20999999999999999) * _tmp1 + Scalar(0.20999999999999999) * _tmp3;
  const Scalar _tmp5 = _DeltaRot[0] * _Rot_init[3] - _DeltaRot[1] * _Rot_init[2] +
                       _DeltaRot[2] * _Rot_init[1] + _DeltaRot[3] * _Rot_init[0];
  const Scalar _tmp6 = 2 * _tmp2 * _tmp5;
  const Scalar _tmp7 = -2 * _DeltaRot[0] * _Rot_init[0] - 2 * _DeltaRot[1] * _Rot_init[1] -
                       2 * _DeltaRot[2] * _Rot_init[2] + 2 * _DeltaRot[3] * _Rot_init[3];
  const Scalar _tmp8 = _tmp0 * _tmp7;
  const Scalar _tmp9 = -Scalar(0.010999999999999999) * _tmp6 - Scalar(0.010999999999999999) * _tmp8;
  const Scalar _tmp10 = 2 * _tmp0;
  const Scalar _tmp11 = _tmp10 * _tmp5;
  const Scalar _tmp12 = _tmp2 * _tmp7;
  const Scalar _tmp13 = Scalar(0.20999999999999999) * _tmp11 - Scalar(0.20999999999999999) * _tmp12;
  const Scalar _tmp14 = -_tmp13 + _tmp9;
  const Scalar _tmp15 = _tmp14 + _tmp4;
  const Scalar _tmp16 = _tmp15 - p_b(0, 0) + position_vector(0, 0);
  const Scalar _tmp17 = Scalar(0.20999999999999999) * _tmp11 + Scalar(0.20999999999999999) * _tmp12;
  const Scalar _tmp18 = -2 * std::pow(_tmp5, Scalar(2));
  const Scalar _tmp19 = Scalar(0.20999999999999999) * _tmp18 + Scalar(0.20999999999999999) * _tmp3;
  const Scalar _tmp20 = _tmp10 * _tmp2;
  const Scalar _tmp21 = _tmp5 * _tmp7;
  const Scalar _tmp22 =
      -Scalar(0.010999999999999999) * _tmp20 + Scalar(0.010999999999999999) * _tmp21;
  const Scalar _tmp23 = -_tmp19 + _tmp22;
  const Scalar _tmp24 = _tmp17 + _tmp23;
  const Scalar _tmp25 = _tmp24 - p_b(1, 0) + position_vector(1, 0);
  const Scalar _tmp26 = std::pow(Scalar(std::pow(_tmp16, Scalar(2)) + std::pow(_tmp25, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp27 = _tmp25 * _tmp26;
  const Scalar _tmp28 = _tmp16 * _tmp26;
  const Scalar _tmp29 = -_tmp4;
  const Scalar _tmp30 = _tmp14 + _tmp29;
  const Scalar _tmp31 = _tmp30 - p_a(0, 0) + position_vector(0, 0);
  const Scalar _tmp32 = -_tmp17;
  const Scalar _tmp33 = _tmp23 + _tmp32;
  const Scalar _tmp34 = _tmp33 - p_a(1, 0) + position_vector(1, 0);
  const Scalar _tmp35 =
      std::sqrt(Scalar(std::pow(_tmp31, Scalar(2)) + std::pow(_tmp34, Scalar(2))));
  const Scalar _tmp36 = Scalar(1.0) / (_tmp35);
  const Scalar _tmp37 = Scalar(1.0) / (_tmp31);
  const Scalar _tmp38 = _tmp35 * _tmp37;
  const Scalar _tmp39 = _tmp38 * (_tmp30 * _tmp34 * _tmp36 - _tmp31 * _tmp33 * _tmp36);
  const Scalar _tmp40 = _tmp19 + _tmp22;
  const Scalar _tmp41 = _tmp32 + _tmp40;
  const Scalar _tmp42 = _tmp41 - p_d(1, 0) + position_vector(1, 0);
  const Scalar _tmp43 = _tmp13 + _tmp9;
  const Scalar _tmp44 = _tmp29 + _tmp43;
  const Scalar _tmp45 = _tmp44 - p_d(0, 0) + position_vector(0, 0);
  const Scalar _tmp46 = std::pow(_tmp45, Scalar(2));
  const Scalar _tmp47 = std::pow(_tmp42, Scalar(2));
  const Scalar _tmp48 = _tmp46 + _tmp47;
  const Scalar _tmp49 = std::pow(_tmp48, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp50 = _tmp44 * _tmp49;
  const Scalar _tmp51 = _tmp41 * _tmp49;
  const Scalar _tmp52 = _tmp39 * _tmp49;
  const Scalar _tmp53 = -_tmp42 * _tmp50 + _tmp45 * _tmp51 + _tmp45 * _tmp52;
  const Scalar _tmp54 = _tmp42 * _tmp49;
  const Scalar _tmp55 = _tmp34 * _tmp37;
  const Scalar _tmp56 = _tmp49 * _tmp55;
  const Scalar _tmp57 = _tmp45 * _tmp56 - _tmp54;
  const Scalar _tmp58 = Scalar(1.0) / (_tmp57);
  const Scalar _tmp59 = -_tmp27 + _tmp28 * _tmp55;
  const Scalar _tmp60 = _tmp58 * _tmp59;
  const Scalar _tmp61 = -_tmp15 * _tmp27 + _tmp24 * _tmp28 + _tmp28 * _tmp39 - _tmp53 * _tmp60;
  const Scalar _tmp62 = Scalar(0.20999999999999999) * _tmp20 + Scalar(0.20999999999999999) * _tmp21;
  const Scalar _tmp63 = -Scalar(0.010999999999999999) * _tmp1 -
                        Scalar(0.010999999999999999) * _tmp18 + Scalar(-0.010999999999999999);
  const Scalar _tmp64 = Scalar(0.20999999999999999) * _tmp6 - Scalar(0.20999999999999999) * _tmp8;
  const Scalar _tmp65 = _tmp63 - _tmp64;
  const Scalar _tmp66 = _tmp62 + _tmp65;
  const Scalar _tmp67 = -_tmp62;
  const Scalar _tmp68 = _tmp65 + _tmp67;
  const Scalar _tmp69 = _tmp49 * _tmp68;
  const Scalar _tmp70 = _tmp45 * _tmp69;
  const Scalar _tmp71 = _tmp54 * _tmp66 - _tmp55 * _tmp70;
  const Scalar _tmp72 = Scalar(1.0) * _tmp33;
  const Scalar _tmp73 = Scalar(1.0) * _tmp30;
  const Scalar _tmp74 = (-_tmp44 + _tmp73) / (_tmp41 - _tmp72);
  const Scalar _tmp75 = Scalar(1.0) * _tmp58;
  const Scalar _tmp76 = _tmp74 * _tmp75;
  const Scalar _tmp77 = _tmp49 * _tmp66;
  const Scalar _tmp78 = -_tmp45 * _tmp77 + _tmp70;
  const Scalar _tmp79 = _tmp71 * _tmp76 - _tmp75 * _tmp78;
  const Scalar _tmp80 = _tmp63 + _tmp64 + _tmp67;
  const Scalar _tmp81 = _tmp28 * _tmp68;
  const Scalar _tmp82 = -_tmp28 * _tmp80 - _tmp60 * _tmp78 -
                        _tmp74 * (_tmp27 * _tmp80 - _tmp55 * _tmp81 - _tmp60 * _tmp71) + _tmp81;
  const Scalar _tmp83 = Scalar(1.0) / (_tmp82);
  const Scalar _tmp84 = _tmp79 * _tmp83;
  const Scalar _tmp85 = -_tmp53 * _tmp75 - _tmp61 * _tmp84;
  const Scalar _tmp86 = Scalar(1.0) / (_tmp61);
  const Scalar _tmp87 = _tmp82 * _tmp86;
  const Scalar _tmp88 = _tmp79 + _tmp85 * _tmp87;
  const Scalar _tmp89 = _tmp28 * _tmp83;
  const Scalar _tmp90 = _tmp59 * _tmp83;
  const Scalar _tmp91 = -_tmp88 * _tmp90 + Scalar(1.0);
  const Scalar _tmp92 = _tmp49 * _tmp58;
  const Scalar _tmp93 = _tmp91 * _tmp92;
  const Scalar _tmp94 = _tmp4 + _tmp43;
  const Scalar _tmp95 = _tmp94 - p_c(0, 0) + position_vector(0, 0);
  const Scalar _tmp96 = _tmp17 + _tmp40;
  const Scalar _tmp97 = _tmp96 - p_c(1, 0) + position_vector(1, 0);
  const Scalar _tmp98 = std::pow(Scalar(std::pow(_tmp95, Scalar(2)) + std::pow(_tmp97, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp99 = _tmp97 * _tmp98;
  const Scalar _tmp100 = _tmp99 * fh1;
  const Scalar _tmp101 = _tmp100 * _tmp38;
  const Scalar _tmp102 = _tmp55 * _tmp58;
  const Scalar _tmp103 = _tmp55 * _tmp68;
  const Scalar _tmp104 = _tmp102 * _tmp78 - _tmp68 - _tmp74 * (_tmp102 * _tmp71 + _tmp103);
  const Scalar _tmp105 = _tmp61 * _tmp83;
  const Scalar _tmp106 = _tmp102 * _tmp53 - _tmp104 * _tmp105 - _tmp39;
  const Scalar _tmp107 = _tmp104 + _tmp106 * _tmp87;
  const Scalar _tmp108 = -_tmp107 * _tmp90 - _tmp55;
  const Scalar _tmp109 = _tmp108 * _tmp92;
  const Scalar _tmp110 = _tmp95 * _tmp98;
  const Scalar _tmp111 = _tmp110 * fh1;
  const Scalar _tmp112 = _tmp111 * _tmp38;
  const Scalar _tmp113 = _tmp72 * _tmp74 + _tmp73;
  const Scalar _tmp114 = 0;
  const Scalar _tmp115 = _tmp114 * _tmp83;
  const Scalar _tmp116 = _tmp115 * _tmp60;
  const Scalar _tmp117 = _tmp116 * _tmp49;
  const Scalar _tmp118 = Scalar(333.54000000000002) - fv1;
  const Scalar _tmp119 = _tmp118 * _tmp38;
  const Scalar _tmp120 = _tmp45 * _tmp49;
  const Scalar _tmp121 = _tmp59 * _tmp75;
  const Scalar _tmp122 = _tmp121 * _tmp86;
  const Scalar _tmp123 = Scalar(1.0) * _tmp86;
  const Scalar _tmp124 = fh1 * (-_tmp110 * _tmp96 + _tmp94 * _tmp99);
  const Scalar _tmp125 = _tmp124 * _tmp38;
  const Scalar _tmp126 = std::exp(_tmp101 * (_tmp45 * _tmp93 + _tmp88 * _tmp89) +
                                  _tmp112 * (_tmp107 * _tmp89 + _tmp109 * _tmp45 + Scalar(1.0)) +
                                  _tmp119 * (_tmp115 * _tmp28 - _tmp117 * _tmp45) +
                                  _tmp125 * (-_tmp120 * _tmp122 + _tmp123 * _tmp28));
  const Scalar _tmp127 = std::pow(_tmp48, Scalar(Scalar(-3) / Scalar(2)));
  const Scalar _tmp128 = _tmp127 * _tmp46;
  const Scalar _tmp129 = -_tmp128 * _tmp66 + _tmp128 * _tmp68 - _tmp69 + _tmp77;
  const Scalar _tmp130 = _tmp127 * _tmp42 * _tmp45;
  const Scalar _tmp131 = _tmp130 * _tmp66;
  const Scalar _tmp132 = -_tmp103 * _tmp128 + _tmp131 + _tmp55 * _tmp69;
  const Scalar _tmp133 = _tmp128 * _tmp55 - _tmp130 - _tmp56;
  const Scalar _tmp134 = std::pow(_tmp57, Scalar(-2));
  const Scalar _tmp135 = _tmp134 * _tmp59;
  const Scalar _tmp136 = _tmp133 * _tmp135;
  const Scalar _tmp137 =
      -_tmp129 * _tmp60 + _tmp136 * _tmp78 - _tmp74 * (-_tmp132 * _tmp60 + _tmp136 * _tmp71);
  const Scalar _tmp138 = std::pow(_tmp82, Scalar(-2));
  const Scalar _tmp139 = _tmp137 * _tmp138;
  const Scalar _tmp140 = _tmp139 * _tmp28;
  const Scalar _tmp141 = _tmp128 * _tmp39 + _tmp128 * _tmp41 - _tmp130 * _tmp44 - _tmp51 - _tmp52;
  const Scalar _tmp142 = _tmp136 * _tmp53 - _tmp141 * _tmp60;
  const Scalar _tmp143 = std::pow(_tmp61, Scalar(-2));
  const Scalar _tmp144 = _tmp143 * _tmp82;
  const Scalar _tmp145 = _tmp142 * _tmp144;
  const Scalar _tmp146 = _tmp106 * _tmp86;
  const Scalar _tmp147 = _tmp104 * _tmp61;
  const Scalar _tmp148 = _tmp134 * _tmp55;
  const Scalar _tmp149 = _tmp133 * _tmp148;
  const Scalar _tmp150 =
      _tmp102 * _tmp129 - _tmp149 * _tmp78 - _tmp74 * (_tmp102 * _tmp132 - _tmp149 * _tmp71);
  const Scalar _tmp151 = _tmp104 * _tmp83;
  const Scalar _tmp152 = -_tmp106 * _tmp145 + _tmp137 * _tmp146 + _tmp150 +
                         _tmp87 * (_tmp102 * _tmp141 - _tmp105 * _tmp150 + _tmp139 * _tmp147 -
                                   _tmp142 * _tmp151 - _tmp149 * _tmp53);
  const Scalar _tmp153 = _tmp128 * _tmp58;
  const Scalar _tmp154 = _tmp133 * _tmp134;
  const Scalar _tmp155 = _tmp108 * _tmp154;
  const Scalar _tmp156 = _tmp139 * _tmp59;
  const Scalar _tmp157 = _tmp107 * _tmp156 - _tmp152 * _tmp90;
  const Scalar _tmp158 = _tmp45 * _tmp92;
  const Scalar _tmp159 = _tmp121 * _tmp143;
  const Scalar _tmp160 = _tmp120 * _tmp159;
  const Scalar _tmp161 = Scalar(1.0) * _tmp143;
  const Scalar _tmp162 = _tmp142 * _tmp161;
  const Scalar _tmp163 = _tmp120 * _tmp123;
  const Scalar _tmp164 = _tmp114 * _tmp120;
  const Scalar _tmp165 = _tmp164 * _tmp60;
  const Scalar _tmp166 = Scalar(1.0) * _tmp134;
  const Scalar _tmp167 = _tmp166 * _tmp53;
  const Scalar _tmp168 = _tmp166 * _tmp71 * _tmp74;
  const Scalar _tmp169 = _tmp166 * _tmp78;
  const Scalar _tmp170 =
      -_tmp129 * _tmp75 + _tmp132 * _tmp76 - _tmp133 * _tmp168 + _tmp133 * _tmp169;
  const Scalar _tmp171 = _tmp61 * _tmp79;
  const Scalar _tmp172 = _tmp85 * _tmp86;
  const Scalar _tmp173 = _tmp137 * _tmp172 - _tmp145 * _tmp85 + _tmp170 +
                         _tmp87 * (-_tmp105 * _tmp170 + _tmp133 * _tmp167 + _tmp139 * _tmp171 -
                                   _tmp141 * _tmp75 - _tmp142 * _tmp84);
  const Scalar _tmp174 = _tmp156 * _tmp88 - _tmp173 * _tmp90;
  const Scalar _tmp175 = _tmp154 * _tmp91;
  const Scalar _tmp176 = _tmp111 * _tmp58;
  const Scalar _tmp177 = _tmp115 * _tmp118;
  const Scalar _tmp178 = _tmp100 * _tmp58;
  const Scalar _tmp179 =
      std::exp(-_tmp108 * _tmp176 + _tmp122 * _tmp124 + _tmp177 * _tmp60 - _tmp178 * _tmp91);
  const Scalar _tmp180 = _tmp114 * _tmp118;
  const Scalar _tmp181 = _tmp180 * _tmp90;
  const Scalar _tmp182 = _tmp123 * _tmp124;
  const Scalar _tmp183 = _tmp124 * _tmp159;
  const Scalar _tmp184 = _tmp139 * _tmp180;
  const Scalar _tmp185 = _tmp100 * _tmp83;
  const Scalar _tmp186 = _tmp111 * _tmp83;
  const Scalar _tmp187 = std::exp(-_tmp107 * _tmp186 - _tmp177 - _tmp182 - _tmp185 * _tmp88);
  const Scalar _tmp188 = _tmp100 * _tmp88;
  const Scalar _tmp189 = _tmp107 * _tmp111;
  const Scalar _tmp190 = _tmp127 * _tmp47;
  const Scalar _tmp191 = _tmp130 * _tmp55 - _tmp190 + _tmp49;
  const Scalar _tmp192 = _tmp135 * _tmp191;
  const Scalar _tmp193 = -_tmp103 * _tmp130 + _tmp190 * _tmp66 - _tmp77;
  const Scalar _tmp194 = _tmp130 * _tmp68 - _tmp131;
  const Scalar _tmp195 =
      _tmp192 * _tmp78 - _tmp194 * _tmp60 - _tmp74 * (_tmp192 * _tmp71 - _tmp193 * _tmp60);
  const Scalar _tmp196 = _tmp138 * _tmp195;
  const Scalar _tmp197 = _tmp196 * _tmp28;
  const Scalar _tmp198 = _tmp134 * _tmp191;
  const Scalar _tmp199 = _tmp120 * _tmp198;
  const Scalar _tmp200 = _tmp130 * _tmp39 + _tmp130 * _tmp41 - _tmp190 * _tmp44 + _tmp50;
  const Scalar _tmp201 = _tmp192 * _tmp53 - _tmp200 * _tmp60;
  const Scalar _tmp202 = _tmp161 * _tmp201;
  const Scalar _tmp203 = _tmp148 * _tmp191;
  const Scalar _tmp204 =
      _tmp102 * _tmp194 - _tmp203 * _tmp78 - _tmp74 * (_tmp102 * _tmp193 - _tmp203 * _tmp71);
  const Scalar _tmp205 = _tmp144 * _tmp201;
  const Scalar _tmp206 = -_tmp106 * _tmp205 + _tmp146 * _tmp195 + _tmp204 +
                         _tmp87 * (_tmp102 * _tmp200 - _tmp105 * _tmp204 + _tmp147 * _tmp196 -
                                   _tmp151 * _tmp201 - _tmp203 * _tmp53);
  const Scalar _tmp207 = _tmp196 * _tmp59;
  const Scalar _tmp208 = _tmp107 * _tmp207 - _tmp206 * _tmp90;
  const Scalar _tmp209 = _tmp130 * _tmp58;
  const Scalar _tmp210 =
      -_tmp168 * _tmp191 + _tmp169 * _tmp191 + _tmp193 * _tmp76 - _tmp194 * _tmp75;
  const Scalar _tmp211 = _tmp172 * _tmp195 - _tmp205 * _tmp85 + _tmp210 +
                         _tmp87 * (-_tmp105 * _tmp210 + _tmp167 * _tmp191 + _tmp171 * _tmp196 -
                                   _tmp200 * _tmp75 - _tmp201 * _tmp84);
  const Scalar _tmp212 = _tmp207 * _tmp88 - _tmp211 * _tmp90;
  const Scalar _tmp213 = _tmp180 * _tmp196;

  // Output terms (1)
  Eigen::Matrix<Scalar, 4, 3> _res;

  _res(0, 0) = 0;
  _res(1, 0) = -_tmp126 * (-_tmp101 * (-_tmp120 * _tmp175 - _tmp140 * _tmp88 + _tmp153 * _tmp91 +
                                       _tmp158 * _tmp174 + _tmp173 * _tmp89 - _tmp93) -
                           _tmp112 * (-_tmp107 * _tmp140 + _tmp108 * _tmp153 - _tmp109 -
                                      _tmp120 * _tmp155 + _tmp152 * _tmp89 + _tmp157 * _tmp158) -
                           _tmp119 * (-_tmp114 * _tmp140 - _tmp116 * _tmp128 + _tmp117 +
                                      _tmp139 * _tmp165 + _tmp154 * _tmp164 * _tmp90) -
                           _tmp125 * (-_tmp122 * _tmp128 + _tmp122 * _tmp49 + _tmp136 * _tmp163 +
                                      _tmp142 * _tmp160 - _tmp162 * _tmp28));
  _res(2, 0) =
      -_tmp179 * (-_tmp100 * _tmp175 - _tmp111 * _tmp155 + _tmp136 * _tmp182 + _tmp142 * _tmp183 +
                  _tmp154 * _tmp181 + _tmp157 * _tmp176 + _tmp174 * _tmp178 + _tmp184 * _tmp60);
  _res(3, 0) = -_tmp187 * (-_tmp124 * _tmp162 - _tmp139 * _tmp188 - _tmp139 * _tmp189 +
                           _tmp152 * _tmp186 + _tmp173 * _tmp185 - _tmp184);
  _res(0, 1) = 0;
  _res(1, 1) =
      -_tmp126 *
      (-_tmp101 * (_tmp158 * _tmp212 - _tmp197 * _tmp88 - _tmp199 * _tmp91 + _tmp209 * _tmp91 +
                   _tmp211 * _tmp89) -
       _tmp112 * (-_tmp107 * _tmp197 - _tmp108 * _tmp199 + _tmp108 * _tmp209 + _tmp158 * _tmp208 +
                  _tmp206 * _tmp89) -
       _tmp119 * (-_tmp114 * _tmp197 + _tmp114 * _tmp199 * _tmp90 - _tmp116 * _tmp130 +
                  _tmp165 * _tmp196) -
       _tmp125 * (-_tmp122 * _tmp130 + _tmp160 * _tmp201 + _tmp163 * _tmp192 - _tmp202 * _tmp28));
  _res(2, 1) = -_tmp179 * (-_tmp100 * _tmp198 * _tmp91 - _tmp108 * _tmp111 * _tmp198 +
                           _tmp176 * _tmp208 + _tmp178 * _tmp212 + _tmp181 * _tmp198 +
                           _tmp182 * _tmp192 + _tmp183 * _tmp201 + _tmp213 * _tmp60);
  _res(3, 1) = -_tmp187 * (-_tmp124 * _tmp202 + _tmp185 * _tmp211 + _tmp186 * _tmp206 -
                           _tmp188 * _tmp196 - _tmp189 * _tmp196 - _tmp213);
  _res(0, 2) = 0;
  _res(1, 2) = 0;
  _res(2, 2) = 0;
  _res(3, 2) = 0;

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
