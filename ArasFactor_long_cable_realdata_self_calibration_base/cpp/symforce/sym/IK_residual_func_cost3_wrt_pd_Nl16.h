// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

#include <sym/rot3.h>

namespace sym {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: IK_residual_func_cost3_wrt_pd_Nl16
 *
 * Args:
 *     fh1: Scalar
 *     fv1: Scalar
 *     DeltaRot: Rot3
 *     position_vector: Matrix31
 *     p_a: Matrix31
 *     p_b: Matrix31
 *     p_c: Matrix31
 *     p_d: Matrix31
 *     Rot_init: Rot3
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix43
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 4, 3> IkResidualFuncCost3WrtPdNl16(
    const Scalar fh1, const Scalar fv1, const sym::Rot3<Scalar>& DeltaRot,
    const Eigen::Matrix<Scalar, 3, 1>& position_vector, const Eigen::Matrix<Scalar, 3, 1>& p_a,
    const Eigen::Matrix<Scalar, 3, 1>& p_b, const Eigen::Matrix<Scalar, 3, 1>& p_c,
    const Eigen::Matrix<Scalar, 3, 1>& p_d, const sym::Rot3<Scalar>& Rot_init,
    const Scalar epsilon) {
  // Total ops: 721

  // Unused inputs
  (void)epsilon;

  // Input arrays
  const Eigen::Matrix<Scalar, 4, 1>& _DeltaRot = DeltaRot.Data();
  const Eigen::Matrix<Scalar, 4, 1>& _Rot_init = Rot_init.Data();

  // Intermediate terms (244)
  const Scalar _tmp0 = _DeltaRot[0] * _Rot_init[2] + _DeltaRot[1] * _Rot_init[3] -
                       _DeltaRot[2] * _Rot_init[0] + _DeltaRot[3] * _Rot_init[1];
  const Scalar _tmp1 = -2 * std::pow(_tmp0, Scalar(2));
  const Scalar _tmp2 = -_DeltaRot[0] * _Rot_init[1] + _DeltaRot[1] * _Rot_init[0] +
                       _DeltaRot[2] * _Rot_init[3] + _DeltaRot[3] * _Rot_init[2];
  const Scalar _tmp3 = 1 - 2 * std::pow(_tmp2, Scalar(2));
  const Scalar _tmp4 = Scalar(0.20999999999999999) * _tmp1 + Scalar(0.20999999999999999) * _tmp3;
  const Scalar _tmp5 = -_tmp4;
  const Scalar _tmp6 = _DeltaRot[0] * _Rot_init[3] - _DeltaRot[1] * _Rot_init[2] +
                       _DeltaRot[2] * _Rot_init[1] + _DeltaRot[3] * _Rot_init[0];
  const Scalar _tmp7 = 2 * _tmp2;
  const Scalar _tmp8 = _tmp6 * _tmp7;
  const Scalar _tmp9 = -2 * _DeltaRot[0] * _Rot_init[0] - 2 * _DeltaRot[1] * _Rot_init[1] -
                       2 * _DeltaRot[2] * _Rot_init[2] + 2 * _DeltaRot[3] * _Rot_init[3];
  const Scalar _tmp10 = _tmp0 * _tmp9;
  const Scalar _tmp11 =
      -Scalar(0.010999999999999999) * _tmp10 - Scalar(0.010999999999999999) * _tmp8;
  const Scalar _tmp12 = 2 * _tmp0 * _tmp6;
  const Scalar _tmp13 = _tmp2 * _tmp9;
  const Scalar _tmp14 = Scalar(0.20999999999999999) * _tmp12 - Scalar(0.20999999999999999) * _tmp13;
  const Scalar _tmp15 = _tmp11 + _tmp14;
  const Scalar _tmp16 = _tmp15 + _tmp5;
  const Scalar _tmp17 = _tmp16 - p_d(0, 0) + position_vector(0, 0);
  const Scalar _tmp18 = Scalar(1.0) / (_tmp17);
  const Scalar _tmp19 = std::pow(_tmp17, Scalar(2));
  const Scalar _tmp20 = -2 * std::pow(_tmp6, Scalar(2));
  const Scalar _tmp21 = Scalar(0.20999999999999999) * _tmp20 + Scalar(0.20999999999999999) * _tmp3;
  const Scalar _tmp22 = Scalar(0.20999999999999999) * _tmp12 + Scalar(0.20999999999999999) * _tmp13;
  const Scalar _tmp23 = _tmp0 * _tmp7;
  const Scalar _tmp24 = _tmp6 * _tmp9;
  const Scalar _tmp25 =
      -Scalar(0.010999999999999999) * _tmp23 + Scalar(0.010999999999999999) * _tmp24;
  const Scalar _tmp26 = -_tmp22 + _tmp25;
  const Scalar _tmp27 = _tmp21 + _tmp26;
  const Scalar _tmp28 = _tmp27 - p_d(1, 0) + position_vector(1, 0);
  const Scalar _tmp29 = std::pow(_tmp28, Scalar(2));
  const Scalar _tmp30 = _tmp19 + _tmp29;
  const Scalar _tmp31 = std::sqrt(_tmp30);
  const Scalar _tmp32 = _tmp18 * _tmp31;
  const Scalar _tmp33 = Scalar(333.54000000000002) - fv1;
  const Scalar _tmp34 = Scalar(1.0) * _tmp16;
  const Scalar _tmp35 = Scalar(1.0) * _tmp27;
  const Scalar _tmp36 = -_tmp21;
  const Scalar _tmp37 = _tmp26 + _tmp36;
  const Scalar _tmp38 = _tmp11 - _tmp14;
  const Scalar _tmp39 = _tmp38 + _tmp5;
  const Scalar _tmp40 = (_tmp34 - _tmp39) / (-_tmp35 + _tmp37);
  const Scalar _tmp41 = _tmp34 + _tmp35 * _tmp40;
  const Scalar _tmp42 = 0;
  const Scalar _tmp43 = -Scalar(0.010999999999999999) * _tmp1 -
                        Scalar(0.010999999999999999) * _tmp20 + Scalar(-0.010999999999999999);
  const Scalar _tmp44 = -Scalar(0.20999999999999999) * _tmp10 + Scalar(0.20999999999999999) * _tmp8;
  const Scalar _tmp45 = -_tmp44;
  const Scalar _tmp46 = Scalar(0.20999999999999999) * _tmp23 + Scalar(0.20999999999999999) * _tmp24;
  const Scalar _tmp47 = _tmp43 + _tmp45 + _tmp46;
  const Scalar _tmp48 = _tmp38 + _tmp4;
  const Scalar _tmp49 = _tmp48 - p_b(0, 0) + position_vector(0, 0);
  const Scalar _tmp50 = _tmp22 + _tmp25;
  const Scalar _tmp51 = _tmp36 + _tmp50;
  const Scalar _tmp52 = _tmp51 - p_b(1, 0) + position_vector(1, 0);
  const Scalar _tmp53 = std::pow(Scalar(std::pow(_tmp49, Scalar(2)) + std::pow(_tmp52, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp54 = _tmp49 * _tmp53;
  const Scalar _tmp55 = _tmp47 * _tmp54;
  const Scalar _tmp56 = _tmp43 - _tmp46;
  const Scalar _tmp57 = _tmp44 + _tmp56;
  const Scalar _tmp58 = _tmp52 * _tmp53;
  const Scalar _tmp59 = _tmp18 * _tmp47;
  const Scalar _tmp60 = _tmp28 * _tmp59;
  const Scalar _tmp61 = _tmp39 - p_a(0, 0) + position_vector(0, 0);
  const Scalar _tmp62 = std::pow(_tmp61, Scalar(2));
  const Scalar _tmp63 = _tmp37 - p_a(1, 0) + position_vector(1, 0);
  const Scalar _tmp64 = _tmp62 + std::pow(_tmp63, Scalar(2));
  const Scalar _tmp65 = std::pow(_tmp64, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp66 = _tmp61 * _tmp65;
  const Scalar _tmp67 = _tmp45 + _tmp56;
  const Scalar _tmp68 = _tmp63 * _tmp65;
  const Scalar _tmp69 = -_tmp60 * _tmp66 + _tmp67 * _tmp68;
  const Scalar _tmp70 = _tmp18 * _tmp28;
  const Scalar _tmp71 = _tmp66 * _tmp70 - _tmp68;
  const Scalar _tmp72 = Scalar(1.0) / (_tmp71);
  const Scalar _tmp73 = _tmp54 * _tmp70 - _tmp58;
  const Scalar _tmp74 = _tmp72 * _tmp73;
  const Scalar _tmp75 = _tmp47 * _tmp66;
  const Scalar _tmp76 = -_tmp66 * _tmp67 + _tmp75;
  const Scalar _tmp77 = -_tmp40 * (-_tmp54 * _tmp60 + _tmp57 * _tmp58 - _tmp69 * _tmp74) -
                        _tmp54 * _tmp57 + _tmp55 - _tmp74 * _tmp76;
  const Scalar _tmp78 = Scalar(1.0) / (_tmp77);
  const Scalar _tmp79 = _tmp54 * _tmp78;
  const Scalar _tmp80 = _tmp42 * _tmp79;
  const Scalar _tmp81 = _tmp66 * _tmp72;
  const Scalar _tmp82 = _tmp73 * _tmp78;
  const Scalar _tmp83 = _tmp42 * _tmp82;
  const Scalar _tmp84 = _tmp33 * (_tmp80 - _tmp81 * _tmp83);
  const Scalar _tmp85 = Scalar(1.0) / (_tmp31);
  const Scalar _tmp86 = _tmp16 * _tmp85;
  const Scalar _tmp87 = _tmp27 * _tmp85;
  const Scalar _tmp88 = -_tmp17 * _tmp87 + _tmp28 * _tmp86;
  const Scalar _tmp89 = _tmp31 * _tmp88;
  const Scalar _tmp90 = _tmp18 * _tmp89;
  const Scalar _tmp91 = _tmp37 * _tmp66 - _tmp39 * _tmp68 + _tmp66 * _tmp90;
  const Scalar _tmp92 = -_tmp48 * _tmp58 + _tmp51 * _tmp54 + _tmp54 * _tmp90 - _tmp74 * _tmp91;
  const Scalar _tmp93 = Scalar(1.0) / (_tmp92);
  const Scalar _tmp94 = Scalar(1.0) * _tmp93;
  const Scalar _tmp95 = Scalar(1.0) * _tmp72;
  const Scalar _tmp96 = _tmp73 * _tmp95;
  const Scalar _tmp97 = _tmp93 * _tmp96;
  const Scalar _tmp98 = _tmp21 + _tmp50;
  const Scalar _tmp99 = _tmp15 + _tmp4;
  const Scalar _tmp100 = _tmp99 - p_c(0, 0) + position_vector(0, 0);
  const Scalar _tmp101 = _tmp98 - p_c(1, 0) + position_vector(1, 0);
  const Scalar _tmp102 =
      std::pow(Scalar(std::pow(_tmp100, Scalar(2)) + std::pow(_tmp101, Scalar(2))),
               Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp103 = _tmp100 * _tmp102;
  const Scalar _tmp104 = _tmp101 * _tmp102;
  const Scalar _tmp105 = fh1 * (-_tmp103 * _tmp98 + _tmp104 * _tmp99);
  const Scalar _tmp106 = _tmp105 * (_tmp54 * _tmp94 - _tmp66 * _tmp97);
  const Scalar _tmp107 = _tmp70 * _tmp72;
  const Scalar _tmp108 = _tmp107 * _tmp76 - _tmp40 * (_tmp107 * _tmp69 + _tmp60) - _tmp47;
  const Scalar _tmp109 = _tmp108 * _tmp78;
  const Scalar _tmp110 = _tmp107 * _tmp91 - _tmp109 * _tmp92 - _tmp90;
  const Scalar _tmp111 = _tmp77 * _tmp93;
  const Scalar _tmp112 = _tmp108 + _tmp110 * _tmp111;
  const Scalar _tmp113 = _tmp112 * _tmp79;
  const Scalar _tmp114 = -_tmp112 * _tmp82 - _tmp70;
  const Scalar _tmp115 = _tmp103 * fh1;
  const Scalar _tmp116 = _tmp115 * (_tmp113 + _tmp114 * _tmp81 + Scalar(1.0));
  const Scalar _tmp117 = _tmp40 * _tmp69;
  const Scalar _tmp118 = _tmp117 * _tmp95 - _tmp76 * _tmp95;
  const Scalar _tmp119 = _tmp118 * _tmp78;
  const Scalar _tmp120 = -_tmp119 * _tmp92 - _tmp91 * _tmp95;
  const Scalar _tmp121 = _tmp111 * _tmp120 + _tmp118;
  const Scalar _tmp122 = _tmp121 * _tmp79;
  const Scalar _tmp123 = -_tmp121 * _tmp82 + Scalar(1.0);
  const Scalar _tmp124 = _tmp104 * fh1;
  const Scalar _tmp125 = _tmp124 * (_tmp122 + _tmp123 * _tmp81);
  const Scalar _tmp126 =
      std::exp(_tmp106 * _tmp32 + _tmp116 * _tmp32 + _tmp125 * _tmp32 + _tmp32 * _tmp84);
  const Scalar _tmp127 = _tmp106 * _tmp85;
  const Scalar _tmp128 = Scalar(1.0) / (_tmp19);
  const Scalar _tmp129 = _tmp128 * _tmp28;
  const Scalar _tmp130 = std::pow(_tmp71, Scalar(-2));
  const Scalar _tmp131 = _tmp130 * _tmp66;
  const Scalar _tmp132 = _tmp131 * _tmp69;
  const Scalar _tmp133 = _tmp129 * _tmp132;
  const Scalar _tmp134 = _tmp129 * _tmp72;
  const Scalar _tmp135 = _tmp134 * _tmp69;
  const Scalar _tmp136 = _tmp129 * _tmp75;
  const Scalar _tmp137 = _tmp131 * _tmp76;
  const Scalar _tmp138 = _tmp129 * _tmp137;
  const Scalar _tmp139 = _tmp134 * _tmp76;
  const Scalar _tmp140 =
      _tmp138 * _tmp73 - _tmp139 * _tmp54 -
      _tmp40 * (-_tmp129 * _tmp55 + _tmp133 * _tmp73 - _tmp135 * _tmp54 + _tmp136 * _tmp74);
  const Scalar _tmp141 = std::pow(_tmp77, Scalar(-2));
  const Scalar _tmp142 = _tmp140 * _tmp141;
  const Scalar _tmp143 = _tmp121 * _tmp54;
  const Scalar _tmp144 = _tmp62 / _tmp64;
  const Scalar _tmp145 = _tmp129 * _tmp130;
  const Scalar _tmp146 = _tmp144 * _tmp145;
  const Scalar _tmp147 = _tmp121 * _tmp73;
  const Scalar _tmp148 = Scalar(1.0) * _tmp117;
  const Scalar _tmp149 = _tmp129 * _tmp131;
  const Scalar _tmp150 = -_tmp136 * _tmp40 * _tmp95 + Scalar(1.0) * _tmp138 - _tmp148 * _tmp149;
  const Scalar _tmp151 = _tmp78 * _tmp92;
  const Scalar _tmp152 = _tmp118 * _tmp92;
  const Scalar _tmp153 = _tmp85 * _tmp88;
  const Scalar _tmp154 = _tmp153 * _tmp66;
  const Scalar _tmp155 = _tmp128 * _tmp89;
  const Scalar _tmp156 = std::pow(_tmp30, Scalar(Scalar(-3) / Scalar(2)));
  const Scalar _tmp157 = _tmp156 * _tmp27;
  const Scalar _tmp158 = _tmp156 * _tmp16;
  const Scalar _tmp159 = _tmp17 * _tmp28;
  const Scalar _tmp160 = _tmp32 * (-_tmp157 * _tmp19 + _tmp158 * _tmp159 + _tmp87);
  const Scalar _tmp161 = -_tmp154 + _tmp155 * _tmp66 + _tmp160 * _tmp66;
  const Scalar _tmp162 = _tmp131 * _tmp91;
  const Scalar _tmp163 = _tmp129 * _tmp162;
  const Scalar _tmp164 = _tmp134 * _tmp91;
  const Scalar _tmp165 = -_tmp153 * _tmp54 + _tmp155 * _tmp54 + _tmp160 * _tmp54 -
                         _tmp161 * _tmp74 + _tmp163 * _tmp73 - _tmp164 * _tmp54;
  const Scalar _tmp166 = std::pow(_tmp92, Scalar(-2));
  const Scalar _tmp167 = _tmp166 * _tmp77;
  const Scalar _tmp168 = _tmp165 * _tmp167;
  const Scalar _tmp169 = _tmp140 * _tmp93;
  const Scalar _tmp170 = _tmp111 * (-_tmp119 * _tmp165 + _tmp142 * _tmp152 - _tmp150 * _tmp151 -
                                    _tmp161 * _tmp95 + Scalar(1.0) * _tmp163) -
                         _tmp120 * _tmp168 + _tmp120 * _tmp169 + _tmp150;
  const Scalar _tmp171 = -_tmp122 * _tmp129 + _tmp142 * _tmp147 - _tmp170 * _tmp82;
  const Scalar _tmp172 = _tmp124 * _tmp32;
  const Scalar _tmp173 = _tmp128 * _tmp31;
  const Scalar _tmp174 = _tmp114 * _tmp144;
  const Scalar _tmp175 = _tmp112 * _tmp54;
  const Scalar _tmp176 = _tmp29 / [&]() {
    const Scalar base = _tmp17;
    return base * base * base;
  }();
  const Scalar _tmp177 =
      -_tmp137 * _tmp176 + _tmp139 -
      _tmp40 * (_tmp129 * _tmp47 - _tmp132 * _tmp176 + _tmp135 - _tmp176 * _tmp72 * _tmp75);
  const Scalar _tmp178 = _tmp108 * _tmp92;
  const Scalar _tmp179 =
      -_tmp110 * _tmp168 + _tmp110 * _tmp169 +
      _tmp111 * (_tmp107 * _tmp161 - _tmp109 * _tmp165 + _tmp142 * _tmp178 - _tmp151 * _tmp177 +
                 _tmp153 - _tmp155 - _tmp160 - _tmp162 * _tmp176 + _tmp164) +
      _tmp177;
  const Scalar _tmp180 = _tmp112 * _tmp73;
  const Scalar _tmp181 = -_tmp113 * _tmp129 - _tmp129 + _tmp142 * _tmp180 - _tmp179 * _tmp82;
  const Scalar _tmp182 = _tmp115 * _tmp32;
  const Scalar _tmp183 = _tmp125 * _tmp85;
  const Scalar _tmp184 = Scalar(1.0) * _tmp166;
  const Scalar _tmp185 = _tmp165 * _tmp184;
  const Scalar _tmp186 = _tmp166 * _tmp96;
  const Scalar _tmp187 = _tmp165 * _tmp186;
  const Scalar _tmp188 = _tmp66 * _tmp95;
  const Scalar _tmp189 = _tmp54 * _tmp93;
  const Scalar _tmp190 = _tmp129 * _tmp189;
  const Scalar _tmp191 = _tmp73 * _tmp94;
  const Scalar _tmp192 = _tmp105 * _tmp32;
  const Scalar _tmp193 = _tmp116 * _tmp85;
  const Scalar _tmp194 = _tmp66 * _tmp74;
  const Scalar _tmp195 = _tmp194 * _tmp42;
  const Scalar _tmp196 = _tmp42 * _tmp54;
  const Scalar _tmp197 = _tmp32 * _tmp33;
  const Scalar _tmp198 = _tmp84 * _tmp85;
  const Scalar _tmp199 = _tmp124 * _tmp72;
  const Scalar _tmp200 = _tmp115 * _tmp72;
  const Scalar _tmp201 = _tmp33 * _tmp42;
  const Scalar _tmp202 = _tmp201 * _tmp82;
  const Scalar _tmp203 =
      std::exp(_tmp105 * _tmp97 - _tmp114 * _tmp200 - _tmp123 * _tmp199 + _tmp202 * _tmp72);
  const Scalar _tmp204 = _tmp201 * _tmp78;
  const Scalar _tmp205 = _tmp204 * _tmp54;
  const Scalar _tmp206 = _tmp105 * _tmp94;
  const Scalar _tmp207 = _tmp142 * _tmp201;
  const Scalar _tmp208 = _tmp105 * _tmp95;
  const Scalar _tmp209 = _tmp114 * _tmp115;
  const Scalar _tmp210 = _tmp115 * _tmp78;
  const Scalar _tmp211 = _tmp124 * _tmp78;
  const Scalar _tmp212 = std::exp(-_tmp112 * _tmp210 - _tmp121 * _tmp211 - _tmp204 - _tmp206);
  const Scalar _tmp213 = _tmp112 * _tmp115;
  const Scalar _tmp214 = _tmp121 * _tmp124;
  const Scalar _tmp215 = _tmp18 * _tmp72;
  const Scalar _tmp216 = _tmp215 * _tmp91;
  const Scalar _tmp217 = _tmp130 * _tmp18;
  const Scalar _tmp218 = _tmp217 * _tmp66;
  const Scalar _tmp219 = _tmp218 * _tmp91;
  const Scalar _tmp220 = _tmp32 * (-_tmp157 * _tmp159 + _tmp158 * _tmp29 - _tmp86);
  const Scalar _tmp221 = -_tmp154 * _tmp70 + _tmp220 * _tmp66;
  const Scalar _tmp222 = _tmp153 * _tmp70;
  const Scalar _tmp223 =
      _tmp216 * _tmp54 - _tmp219 * _tmp73 + _tmp220 * _tmp54 - _tmp221 * _tmp74 - _tmp222 * _tmp54;
  const Scalar _tmp224 = _tmp186 * _tmp223;
  const Scalar _tmp225 = _tmp18 * _tmp189;
  const Scalar _tmp226 = _tmp184 * _tmp223;
  const Scalar _tmp227 = _tmp144 * _tmp217;
  const Scalar _tmp228 = _tmp215 * _tmp69;
  const Scalar _tmp229 = _tmp218 * _tmp73;
  const Scalar _tmp230 = _tmp218 * _tmp76;
  const Scalar _tmp231 = _tmp215 * _tmp76;
  const Scalar _tmp232 =
      -_tmp230 * _tmp73 + _tmp231 * _tmp54 -
      _tmp40 * (-_tmp194 * _tmp59 + _tmp228 * _tmp54 - _tmp229 * _tmp69 + _tmp54 * _tmp59);
  const Scalar _tmp233 = _tmp141 * _tmp232;
  const Scalar _tmp234 = _tmp167 * _tmp223;
  const Scalar _tmp235 = _tmp232 * _tmp93;
  const Scalar _tmp236 = _tmp148 * _tmp218 + _tmp188 * _tmp40 * _tmp59 - Scalar(1.0) * _tmp230;
  const Scalar _tmp237 = _tmp111 * (-_tmp119 * _tmp223 - _tmp151 * _tmp236 + _tmp152 * _tmp233 -
                                    Scalar(1.0) * _tmp219 - _tmp221 * _tmp95) -
                         _tmp120 * _tmp234 + _tmp120 * _tmp235 + _tmp236;
  const Scalar _tmp238 = _tmp122 * _tmp18 + _tmp147 * _tmp233 - _tmp237 * _tmp82;
  const Scalar _tmp239 = _tmp123 * _tmp217;
  const Scalar _tmp240 =
      _tmp138 - _tmp231 - _tmp40 * (_tmp133 + _tmp134 * _tmp75 - _tmp228 - _tmp59);
  const Scalar _tmp241 = -_tmp110 * _tmp234 + _tmp110 * _tmp235 +
                         _tmp111 * (_tmp107 * _tmp221 - _tmp109 * _tmp223 - _tmp151 * _tmp240 +
                                    _tmp163 + _tmp178 * _tmp233 - _tmp216 - _tmp220 + _tmp222) +
                         _tmp240;
  const Scalar _tmp242 = _tmp113 * _tmp18 + _tmp18 + _tmp180 * _tmp233 - _tmp241 * _tmp82;
  const Scalar _tmp243 = _tmp201 * _tmp233;

  // Output terms (1)
  Eigen::Matrix<Scalar, 4, 3> _res;

  _res(0, 0) = 0;
  _res(1, 0) =
      -_tmp126 *
      (-_tmp106 * _tmp173 - _tmp116 * _tmp173 - _tmp125 * _tmp173 + _tmp127 -
       _tmp172 * (-_tmp123 * _tmp146 - _tmp142 * _tmp143 + _tmp170 * _tmp79 + _tmp171 * _tmp81) -
       _tmp173 * _tmp84 -
       _tmp182 * (-_tmp142 * _tmp175 - _tmp145 * _tmp174 + _tmp179 * _tmp79 + _tmp181 * _tmp81) +
       _tmp183 -
       _tmp192 * (_tmp146 * _tmp191 - _tmp185 * _tmp54 + _tmp187 * _tmp66 - _tmp188 * _tmp190) +
       _tmp193 -
       _tmp197 *
           (-_tmp129 * _tmp80 * _tmp81 + _tmp142 * _tmp195 - _tmp142 * _tmp196 + _tmp146 * _tmp83) +
       _tmp198);
  _res(2, 0) =
      -_tmp203 * (_tmp105 * _tmp187 - _tmp123 * _tmp124 * _tmp149 - _tmp134 * _tmp205 +
                  _tmp149 * _tmp202 + _tmp149 * _tmp206 * _tmp73 - _tmp149 * _tmp209 +
                  _tmp171 * _tmp199 + _tmp181 * _tmp200 - _tmp190 * _tmp208 + _tmp207 * _tmp74);
  _res(3, 0) = -_tmp212 * (-_tmp105 * _tmp185 - _tmp142 * _tmp213 - _tmp142 * _tmp214 +
                           _tmp170 * _tmp211 + _tmp179 * _tmp210 - _tmp207);
  _res(0, 1) = 0;
  _res(1, 1) =
      -_tmp126 *
      (_tmp127 * _tmp70 -
       _tmp172 * (-_tmp143 * _tmp233 + _tmp144 * _tmp239 + _tmp237 * _tmp79 + _tmp238 * _tmp81) -
       _tmp182 * (_tmp174 * _tmp217 - _tmp175 * _tmp233 + _tmp241 * _tmp79 + _tmp242 * _tmp81) +
       _tmp183 * _tmp70 -
       _tmp192 * (_tmp188 * _tmp225 - _tmp191 * _tmp227 + _tmp224 * _tmp66 - _tmp226 * _tmp54) +
       _tmp193 * _tmp70 -
       _tmp197 *
           (_tmp195 * _tmp233 - _tmp196 * _tmp233 + _tmp215 * _tmp66 * _tmp80 - _tmp227 * _tmp83) +
       _tmp198 * _tmp70);
  _res(2, 1) =
      -_tmp203 * (_tmp105 * _tmp224 + _tmp124 * _tmp239 * _tmp66 + _tmp199 * _tmp238 +
                  _tmp200 * _tmp242 - _tmp202 * _tmp218 + _tmp205 * _tmp215 - _tmp206 * _tmp229 +
                  _tmp208 * _tmp225 + _tmp209 * _tmp218 + _tmp243 * _tmp74);
  _res(3, 1) = -_tmp212 * (-_tmp105 * _tmp226 + _tmp210 * _tmp241 + _tmp211 * _tmp237 -
                           _tmp213 * _tmp233 - _tmp214 * _tmp233 - _tmp243);
  _res(0, 2) = 0;
  _res(1, 2) = 0;
  _res(2, 2) = 0;
  _res(3, 2) = 0;

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
