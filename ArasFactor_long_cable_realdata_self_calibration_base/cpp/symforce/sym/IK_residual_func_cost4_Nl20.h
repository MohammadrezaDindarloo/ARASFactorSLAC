// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

#include <sym/rot3.h>

namespace sym {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: IK_residual_func_cost4_Nl20
 *
 * Args:
 *     fh1: Scalar
 *     fv1: Scalar
 *     DeltaRot: Rot3
 *     position_vector: Matrix31
 *     encoder: Matrix41
 *     p_a: Matrix31
 *     p_b: Matrix31
 *     p_c: Matrix31
 *     p_d: Matrix31
 *     Rot_init: Rot3
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix41
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 4, 1> IkResidualFuncCost4Nl20(
    const Scalar fh1, const Scalar fv1, const sym::Rot3<Scalar>& DeltaRot,
    const Eigen::Matrix<Scalar, 3, 1>& position_vector, const Eigen::Matrix<Scalar, 4, 1>& encoder,
    const Eigen::Matrix<Scalar, 3, 1>& p_a, const Eigen::Matrix<Scalar, 3, 1>& p_b,
    const Eigen::Matrix<Scalar, 3, 1>& p_c, const Eigen::Matrix<Scalar, 3, 1>& p_d,
    const sym::Rot3<Scalar>& Rot_init, const Scalar epsilon) {
  // Total ops: 479

  // Unused inputs
  (void)epsilon;

  // Input arrays
  const Eigen::Matrix<Scalar, 4, 1>& _DeltaRot = DeltaRot.Data();
  const Eigen::Matrix<Scalar, 4, 1>& _Rot_init = Rot_init.Data();

  // Intermediate terms (154)
  const Scalar _tmp0 = Scalar(1.0) / (fh1);
  const Scalar _tmp1 = _DeltaRot[0] * _Rot_init[2] + _DeltaRot[1] * _Rot_init[3] -
                       _DeltaRot[2] * _Rot_init[0] + _DeltaRot[3] * _Rot_init[1];
  const Scalar _tmp2 = _DeltaRot[0] * _Rot_init[3] - _DeltaRot[1] * _Rot_init[2] +
                       _DeltaRot[2] * _Rot_init[1] + _DeltaRot[3] * _Rot_init[0];
  const Scalar _tmp3 = 2 * _tmp1 * _tmp2;
  const Scalar _tmp4 = -_DeltaRot[0] * _Rot_init[1] + _DeltaRot[1] * _Rot_init[0] +
                       _DeltaRot[2] * _Rot_init[3] + _DeltaRot[3] * _Rot_init[2];
  const Scalar _tmp5 = -2 * _DeltaRot[0] * _Rot_init[0] - 2 * _DeltaRot[1] * _Rot_init[1] -
                       2 * _DeltaRot[2] * _Rot_init[2] + 2 * _DeltaRot[3] * _Rot_init[3];
  const Scalar _tmp6 = _tmp4 * _tmp5;
  const Scalar _tmp7 = Scalar(0.20999999999999999) * _tmp3 + Scalar(0.20999999999999999) * _tmp6;
  const Scalar _tmp8 = -_tmp7;
  const Scalar _tmp9 = 2 * _tmp4;
  const Scalar _tmp10 = _tmp1 * _tmp9;
  const Scalar _tmp11 = _tmp2 * _tmp5;
  const Scalar _tmp12 = _tmp10 - _tmp11;
  const Scalar _tmp13 = -Scalar(0.010999999999999999) * _tmp12;
  const Scalar _tmp14 = -2 * std::pow(_tmp2, Scalar(2));
  const Scalar _tmp15 = 1 - 2 * std::pow(_tmp4, Scalar(2));
  const Scalar _tmp16 = Scalar(0.20999999999999999) * _tmp14 + Scalar(0.20999999999999999) * _tmp15;
  const Scalar _tmp17 = _tmp13 + _tmp16;
  const Scalar _tmp18 = _tmp17 + _tmp8;
  const Scalar _tmp19 = _tmp18 + position_vector(1, 0);
  const Scalar _tmp20 = -2 * std::pow(_tmp1, Scalar(2));
  const Scalar _tmp21 = Scalar(0.20999999999999999) * _tmp15 + Scalar(0.20999999999999999) * _tmp20;
  const Scalar _tmp22 = -_tmp21;
  const Scalar _tmp23 = _tmp2 * _tmp9;
  const Scalar _tmp24 = _tmp1 * _tmp5;
  const Scalar _tmp25 = _tmp23 + _tmp24;
  const Scalar _tmp26 = -Scalar(0.010999999999999999) * _tmp25;
  const Scalar _tmp27 = Scalar(0.20999999999999999) * _tmp3 - Scalar(0.20999999999999999) * _tmp6;
  const Scalar _tmp28 = _tmp26 + _tmp27;
  const Scalar _tmp29 = _tmp22 + _tmp28;
  const Scalar _tmp30 = _tmp29 + position_vector(0, 0);
  const Scalar _tmp31 = std::asinh(_tmp0 * fv1);
  const Scalar _tmp32 = Scalar(1.4083112389913199) * fh1;
  const Scalar _tmp33 = _tmp13 - _tmp16;
  const Scalar _tmp34 = _tmp33 + _tmp7;
  const Scalar _tmp35 = _tmp34 + position_vector(1, 0);
  const Scalar _tmp36 = _tmp26 - _tmp27;
  const Scalar _tmp37 = _tmp21 + _tmp36;
  const Scalar _tmp38 = _tmp37 + position_vector(0, 0);
  const Scalar _tmp39 = Scalar(0.20999999999999999) * _tmp23 - Scalar(0.20999999999999999) * _tmp24;
  const Scalar _tmp40 = -_tmp39;
  const Scalar _tmp41 = -Scalar(0.010999999999999999) * _tmp14 -
                        Scalar(0.010999999999999999) * _tmp20 + Scalar(-0.010999999999999999);
  const Scalar _tmp42 = Scalar(0.20999999999999999) * _tmp10 + Scalar(0.20999999999999999) * _tmp11;
  const Scalar _tmp43 = _tmp41 - _tmp42;
  const Scalar _tmp44 = _tmp40 + _tmp43;
  const Scalar _tmp45 = _tmp22 + _tmp36;
  const Scalar _tmp46 = _tmp45 + position_vector(0, 0);
  const Scalar _tmp47 = _tmp46 - p_a(0, 0);
  const Scalar _tmp48 = _tmp33 + _tmp8;
  const Scalar _tmp49 = _tmp48 + position_vector(1, 0);
  const Scalar _tmp50 = _tmp49 - p_a(1, 0);
  const Scalar _tmp51 = std::pow(Scalar(std::pow(_tmp47, Scalar(2)) + std::pow(_tmp50, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp52 = _tmp47 * _tmp51;
  const Scalar _tmp53 = _tmp39 + _tmp43;
  const Scalar _tmp54 = _tmp52 * _tmp53;
  const Scalar _tmp55 = _tmp38 - p_b(0, 0);
  const Scalar _tmp56 = Scalar(1.0) / (_tmp55);
  const Scalar _tmp57 = _tmp35 - p_b(1, 0);
  const Scalar _tmp58 = _tmp56 * _tmp57;
  const Scalar _tmp59 = _tmp50 * _tmp51;
  const Scalar _tmp60 = Scalar(1.0) / (_tmp52 * _tmp58 - _tmp59);
  const Scalar _tmp61 = _tmp60 * (-_tmp44 * _tmp52 + _tmp54);
  const Scalar _tmp62 = Scalar(1.0) * _tmp37;
  const Scalar _tmp63 = -_tmp45 + _tmp62;
  const Scalar _tmp64 = Scalar(1.0) * _tmp34;
  const Scalar _tmp65 = -_tmp64;
  const Scalar _tmp66 = Scalar(1.0) / (_tmp48 + _tmp65);
  const Scalar _tmp67 = Scalar(1.0) * _tmp66;
  const Scalar _tmp68 = _tmp60 * (_tmp44 * _tmp59 - _tmp54 * _tmp58);
  const Scalar _tmp69 = -Scalar(1.0) * _tmp61 + _tmp63 * _tmp67 * _tmp68;
  const Scalar _tmp70 = _tmp17 + _tmp7;
  const Scalar _tmp71 = _tmp21 + _tmp28;
  const Scalar _tmp72 = _tmp71 + position_vector(0, 0);
  const Scalar _tmp73 = _tmp72 - p_c(0, 0);
  const Scalar _tmp74 = _tmp70 + position_vector(1, 0);
  const Scalar _tmp75 = _tmp74 - p_c(1, 0);
  const Scalar _tmp76 = std::pow(Scalar(std::pow(_tmp73, Scalar(2)) + std::pow(_tmp75, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp77 = _tmp73 * _tmp76;
  const Scalar _tmp78 = _tmp75 * _tmp76;
  const Scalar _tmp79 =
      std::sqrt(Scalar(std::pow(_tmp55, Scalar(2)) + std::pow(_tmp57, Scalar(2))));
  const Scalar _tmp80 = Scalar(1.0) / (_tmp79);
  const Scalar _tmp81 = _tmp56 * _tmp79;
  const Scalar _tmp82 = _tmp81 * (-_tmp34 * _tmp55 * _tmp80 + _tmp37 * _tmp57 * _tmp80);
  const Scalar _tmp83 = _tmp58 * _tmp77 - _tmp78;
  const Scalar _tmp84 = _tmp60 * (-_tmp45 * _tmp59 + _tmp48 * _tmp52 + _tmp52 * _tmp82);
  const Scalar _tmp85 = _tmp70 * _tmp77 - _tmp71 * _tmp78 + _tmp77 * _tmp82 - _tmp83 * _tmp84;
  const Scalar _tmp86 = _tmp53 * _tmp77;
  const Scalar _tmp87 = _tmp41 + _tmp42;
  const Scalar _tmp88 = _tmp39 + _tmp87;
  const Scalar _tmp89 = -_tmp58 * _tmp86 - _tmp68 * _tmp83 + _tmp78 * _tmp88;
  const Scalar _tmp90 = _tmp63 * _tmp66;
  const Scalar _tmp91 = -_tmp61 * _tmp83 - _tmp77 * _tmp88 + _tmp86 - _tmp89 * _tmp90;
  const Scalar _tmp92 = Scalar(1.0) / (_tmp91);
  const Scalar _tmp93 = _tmp85 * _tmp92;
  const Scalar _tmp94 = Scalar(1.0) / (_tmp85);
  const Scalar _tmp95 = _tmp91 * _tmp94;
  const Scalar _tmp96 = _tmp95 * (-_tmp69 * _tmp93 - Scalar(1.0) * _tmp84);
  const Scalar _tmp97 = _tmp69 + _tmp96;
  const Scalar _tmp98 = _tmp77 * _tmp92;
  const Scalar _tmp99 = _tmp83 * _tmp92;
  const Scalar _tmp100 = -_tmp97 * _tmp99 + Scalar(1.0);
  const Scalar _tmp101 = _tmp52 * _tmp60;
  const Scalar _tmp102 = _tmp30 - p_d(0, 0);
  const Scalar _tmp103 = _tmp19 - p_d(1, 0);
  const Scalar _tmp104 =
      std::pow(Scalar(std::pow(_tmp102, Scalar(2)) + std::pow(_tmp103, Scalar(2))),
               Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp105 = _tmp103 * _tmp104;
  const Scalar _tmp106 = _tmp105 * fh1;
  const Scalar _tmp107 = _tmp53 * _tmp58 + _tmp58 * _tmp68;
  const Scalar _tmp108 = -_tmp107 * _tmp90 - _tmp53 + _tmp58 * _tmp61;
  const Scalar _tmp109 = _tmp95 * (-_tmp108 * _tmp93 + _tmp58 * _tmp84 - _tmp82);
  const Scalar _tmp110 = _tmp108 + _tmp109;
  const Scalar _tmp111 = -_tmp110 * _tmp99 - _tmp58;
  const Scalar _tmp112 = _tmp102 * _tmp104;
  const Scalar _tmp113 = _tmp112 * fh1;
  const Scalar _tmp114 = Scalar(1.0) * _tmp94;
  const Scalar _tmp115 = fh1 * (_tmp105 * _tmp29 - _tmp112 * _tmp18);
  const Scalar _tmp116 = Scalar(333.54000000000002) - fv1;
  const Scalar _tmp117 = _tmp62 + _tmp64 * _tmp90;
  const Scalar _tmp118 = 0;
  const Scalar _tmp119 = _tmp118 * _tmp99;
  const Scalar _tmp120 = _tmp118 * _tmp92;
  const Scalar _tmp121 = -_tmp106 * _tmp81 * (_tmp100 * _tmp101 + _tmp97 * _tmp98) -
                         _tmp113 * _tmp81 * (_tmp101 * _tmp111 + _tmp110 * _tmp98 + Scalar(1.0)) -
                         _tmp115 * _tmp81 * (-_tmp101 * _tmp114 * _tmp83 + _tmp114 * _tmp77) -
                         _tmp116 * _tmp81 * (-_tmp101 * _tmp119 + _tmp120 * _tmp77);
  const Scalar _tmp122 = Scalar(1.0) / (_tmp121);
  const Scalar _tmp123 = _tmp65 + _tmp70;
  const Scalar _tmp124 = _tmp123 * _tmp90;
  const Scalar _tmp125 = Scalar(1.0) / (-_tmp124 + _tmp62 - _tmp71);
  const Scalar _tmp126 = Scalar(1.0) * _tmp125;
  const Scalar _tmp127 = _tmp89 * _tmp92;
  const Scalar _tmp128 = _tmp123 * _tmp125;
  const Scalar _tmp129 = -_tmp127 * _tmp97 + _tmp128 * _tmp96 - Scalar(1.0) * _tmp68;
  const Scalar _tmp130 = _tmp123 * _tmp66;
  const Scalar _tmp131 = fh1 * (_tmp40 + _tmp87);
  const Scalar _tmp132 = _tmp112 * _tmp131 + Scalar(40.024799999999999) * _tmp25 + _tmp29 * fv1;
  const Scalar _tmp133 = _tmp107 + _tmp109 * _tmp128 - _tmp110 * _tmp127;
  const Scalar _tmp134 = -_tmp105 * _tmp131 - Scalar(40.024799999999999) * _tmp12 - _tmp18 * fv1;
  const Scalar _tmp135 = _tmp126 * _tmp90;
  const Scalar _tmp136 = _tmp124 * _tmp126 + Scalar(1.0);
  const Scalar _tmp137 = _tmp117 * _tmp125;
  const Scalar _tmp138 = -_tmp118 * _tmp127 - _tmp123 * _tmp137 + _tmp65;
  const Scalar _tmp139 = _tmp126 * _tmp95;
  const Scalar _tmp140 = -_tmp114 * _tmp89 + _tmp123 * _tmp139;
  const Scalar _tmp141 = std::asinh(
      _tmp122 * (Scalar(1.0) * _tmp106 * (_tmp126 * _tmp96 - _tmp129 * _tmp67) +
                 Scalar(1.0) * _tmp113 * (_tmp109 * _tmp126 - _tmp133 * _tmp67) +
                 Scalar(1.0) * _tmp115 * (_tmp139 - _tmp140 * _tmp67) +
                 Scalar(1.0) * _tmp116 * (-_tmp117 * _tmp126 - _tmp138 * _tmp67 + Scalar(1.0)) +
                 Scalar(1.0) * _tmp132 * (_tmp126 * _tmp130 - _tmp126) +
                 Scalar(1.0) * _tmp134 * (_tmp135 - _tmp136 * _tmp67)));
  const Scalar _tmp142 = Scalar(1.4083112389913199) * _tmp121;
  const Scalar _tmp143 = _tmp126 * _tmp132;
  const Scalar _tmp144 = _tmp114 * _tmp115;
  const Scalar _tmp145 = _tmp60 * fh1;
  const Scalar _tmp146 = _tmp100 * _tmp105 * _tmp145 + _tmp111 * _tmp112 * _tmp145 -
                         _tmp116 * _tmp119 * _tmp60 - _tmp144 * _tmp60 * _tmp83;
  const Scalar _tmp147 = Scalar(1.0) / (_tmp146);
  const Scalar _tmp148 =
      std::asinh(_tmp147 * (_tmp106 * _tmp129 * _tmp66 + _tmp113 * _tmp133 * _tmp66 +
                            _tmp115 * _tmp140 * _tmp66 + _tmp116 * _tmp138 * _tmp66 -
                            _tmp130 * _tmp143 + _tmp134 * _tmp136 * _tmp66));
  const Scalar _tmp149 = Scalar(1.4083112389913199) * _tmp146;
  const Scalar _tmp150 =
      _tmp106 * _tmp92 * _tmp97 + _tmp110 * _tmp113 * _tmp92 + _tmp116 * _tmp120 + _tmp144;
  const Scalar _tmp151 = Scalar(1.0) / (_tmp150);
  const Scalar _tmp152 =
      std::asinh(_tmp151 * (-_tmp106 * _tmp125 * _tmp96 - _tmp109 * _tmp113 * _tmp125 -
                            _tmp115 * _tmp139 + _tmp116 * _tmp137 - _tmp134 * _tmp135 + _tmp143));
  const Scalar _tmp153 = Scalar(1.4083112389913199) * _tmp150;

  // Output terms (1)
  Eigen::Matrix<Scalar, 4, 1> _res;

  _res(0, 0) =
      _tmp32 * (-std::sinh(Scalar(1.0) * _tmp31) -
                std::sinh(Scalar(0.71007031138673404) * _tmp0 *
                          (-_tmp31 * _tmp32 -
                           std::sqrt(Scalar(std::pow(Scalar(-_tmp19 + p_d(1, 0)), Scalar(2)) +
                                            std::pow(Scalar(-_tmp30 + p_d(0, 0)), Scalar(2))))))) -
      encoder(0, 0);
  _res(1, 0) =
      _tmp142 * (-std::sinh(Scalar(1.0) * _tmp141) -
                 std::sinh(Scalar(0.71007031138673404) * _tmp122 *
                           (-_tmp141 * _tmp142 -
                            std::sqrt(Scalar(std::pow(Scalar(-_tmp35 + p_b(1, 0)), Scalar(2)) +
                                             std::pow(Scalar(-_tmp38 + p_b(0, 0)), Scalar(2))))))) -
      encoder(1, 0);
  _res(2, 0) =
      _tmp149 * (-std::sinh(Scalar(1.0) * _tmp148) -
                 std::sinh(Scalar(0.71007031138673404) * _tmp147 *
                           (-_tmp148 * _tmp149 -
                            std::sqrt(Scalar(std::pow(Scalar(-_tmp46 + p_a(0, 0)), Scalar(2)) +
                                             std::pow(Scalar(-_tmp49 + p_a(1, 0)), Scalar(2))))))) -
      encoder(2, 0);
  _res(3, 0) =
      _tmp153 * (-std::sinh(Scalar(1.0) * _tmp152) -
                 std::sinh(Scalar(0.71007031138673404) * _tmp151 *
                           (-_tmp152 * _tmp153 -
                            std::sqrt(Scalar(std::pow(Scalar(-_tmp72 + p_c(0, 0)), Scalar(2)) +
                                             std::pow(Scalar(-_tmp74 + p_c(1, 0)), Scalar(2))))))) -
      encoder(3, 0);

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
