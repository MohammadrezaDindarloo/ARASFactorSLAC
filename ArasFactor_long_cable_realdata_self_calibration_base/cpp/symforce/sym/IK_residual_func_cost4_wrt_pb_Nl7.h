// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

#include <sym/rot3.h>

namespace sym {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: IK_residual_func_cost4_wrt_pb_Nl7
 *
 * Args:
 *     fh1: Scalar
 *     fv1: Scalar
 *     DeltaRot: Rot3
 *     position_vector: Matrix31
 *     encoder: Matrix41
 *     p_a: Matrix31
 *     p_b: Matrix31
 *     p_c: Matrix31
 *     p_d: Matrix31
 *     Rot_init: Rot3
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix43
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 4, 3> IkResidualFuncCost4WrtPbNl7(
    const Scalar fh1, const Scalar fv1, const sym::Rot3<Scalar>& DeltaRot,
    const Eigen::Matrix<Scalar, 3, 1>& position_vector, const Eigen::Matrix<Scalar, 4, 1>& encoder,
    const Eigen::Matrix<Scalar, 3, 1>& p_a, const Eigen::Matrix<Scalar, 3, 1>& p_b,
    const Eigen::Matrix<Scalar, 3, 1>& p_c, const Eigen::Matrix<Scalar, 3, 1>& p_d,
    const sym::Rot3<Scalar>& Rot_init, const Scalar epsilon) {
  // Total ops: 748

  // Unused inputs
  (void)encoder;
  (void)epsilon;

  // Input arrays
  const Eigen::Matrix<Scalar, 4, 1>& _DeltaRot = DeltaRot.Data();
  const Eigen::Matrix<Scalar, 4, 1>& _Rot_init = Rot_init.Data();

  // Intermediate terms (259)
  const Scalar _tmp0 = _DeltaRot[0] * _Rot_init[2] + _DeltaRot[1] * _Rot_init[3] -
                       _DeltaRot[2] * _Rot_init[0] + _DeltaRot[3] * _Rot_init[1];
  const Scalar _tmp1 = _DeltaRot[0] * _Rot_init[3] - _DeltaRot[1] * _Rot_init[2] +
                       _DeltaRot[2] * _Rot_init[1] + _DeltaRot[3] * _Rot_init[0];
  const Scalar _tmp2 = 2 * _tmp0 * _tmp1;
  const Scalar _tmp3 = -_DeltaRot[0] * _Rot_init[1] + _DeltaRot[1] * _Rot_init[0] +
                       _DeltaRot[2] * _Rot_init[3] + _DeltaRot[3] * _Rot_init[2];
  const Scalar _tmp4 = -2 * _DeltaRot[0] * _Rot_init[0] - 2 * _DeltaRot[1] * _Rot_init[1] -
                       2 * _DeltaRot[2] * _Rot_init[2] + 2 * _DeltaRot[3] * _Rot_init[3];
  const Scalar _tmp5 = _tmp3 * _tmp4;
  const Scalar _tmp6 = Scalar(0.20999999999999999) * _tmp2 - Scalar(0.20999999999999999) * _tmp5;
  const Scalar _tmp7 = -_tmp6;
  const Scalar _tmp8 = 2 * _tmp3;
  const Scalar _tmp9 = _tmp1 * _tmp8;
  const Scalar _tmp10 = _tmp0 * _tmp4;
  const Scalar _tmp11 = _tmp10 + _tmp9;
  const Scalar _tmp12 = -Scalar(0.010999999999999999) * _tmp11;
  const Scalar _tmp13 = -2 * std::pow(_tmp0, Scalar(2));
  const Scalar _tmp14 = -2 * std::pow(_tmp3, Scalar(2));
  const Scalar _tmp15 = Scalar(0.20999999999999999) * _tmp13 +
                        Scalar(0.20999999999999999) * _tmp14 + Scalar(0.20999999999999999);
  const Scalar _tmp16 = _tmp12 + _tmp15;
  const Scalar _tmp17 = _tmp16 + _tmp7;
  const Scalar _tmp18 = _tmp17 + position_vector(0, 0);
  const Scalar _tmp19 = -_tmp18 + p_b(0, 0);
  const Scalar _tmp20 = 1 - 2 * std::pow(_tmp1, Scalar(2));
  const Scalar _tmp21 = Scalar(0.20999999999999999) * _tmp14 + Scalar(0.20999999999999999) * _tmp20;
  const Scalar _tmp22 = -_tmp21;
  const Scalar _tmp23 = _tmp0 * _tmp8;
  const Scalar _tmp24 = _tmp1 * _tmp4;
  const Scalar _tmp25 = _tmp23 - _tmp24;
  const Scalar _tmp26 = -Scalar(0.010999999999999999) * _tmp25;
  const Scalar _tmp27 = Scalar(0.20999999999999999) * _tmp2 + Scalar(0.20999999999999999) * _tmp5;
  const Scalar _tmp28 = _tmp26 + _tmp27;
  const Scalar _tmp29 = _tmp22 + _tmp28;
  const Scalar _tmp30 = _tmp29 + position_vector(1, 0);
  const Scalar _tmp31 = -_tmp30 + p_b(1, 0);
  const Scalar _tmp32 =
      std::sqrt(Scalar(std::pow(_tmp19, Scalar(2)) + std::pow(_tmp31, Scalar(2))));
  const Scalar _tmp33 = Scalar(1.0) / (fh1);
  const Scalar _tmp34 =
      Scalar(1.0) *
      std::cosh(Scalar(0.71007031138673404) * _tmp33 *
                (-_tmp32 - Scalar(1.4083112389913199) * fh1 * std::asinh(_tmp33 * fv1))) /
      _tmp32;
  const Scalar _tmp35 = _tmp12 - _tmp15;
  const Scalar _tmp36 = _tmp35 + _tmp6;
  const Scalar _tmp37 = _tmp36 + position_vector(0, 0);
  const Scalar _tmp38 = _tmp37 - p_d(0, 0);
  const Scalar _tmp39 = _tmp26 - _tmp27;
  const Scalar _tmp40 = _tmp21 + _tmp39;
  const Scalar _tmp41 = _tmp40 + position_vector(1, 0);
  const Scalar _tmp42 = _tmp41 - p_d(1, 0);
  const Scalar _tmp43 = std::pow(Scalar(std::pow(_tmp38, Scalar(2)) + std::pow(_tmp42, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp44 = _tmp38 * _tmp43;
  const Scalar _tmp45 = _tmp42 * _tmp43;
  const Scalar _tmp46 = _tmp35 + _tmp7;
  const Scalar _tmp47 = _tmp46 + position_vector(0, 0);
  const Scalar _tmp48 = _tmp47 - p_a(0, 0);
  const Scalar _tmp49 = Scalar(1.0) / (_tmp48);
  const Scalar _tmp50 = _tmp22 + _tmp39;
  const Scalar _tmp51 = _tmp50 + position_vector(1, 0);
  const Scalar _tmp52 = _tmp51 - p_a(1, 0);
  const Scalar _tmp53 = _tmp49 * _tmp52;
  const Scalar _tmp54 = Scalar(1.0) / (_tmp44 * _tmp53 - _tmp45);
  const Scalar _tmp55 = _tmp21 + _tmp28;
  const Scalar _tmp56 = _tmp55 + position_vector(1, 0);
  const Scalar _tmp57 = _tmp56 - p_c(1, 0);
  const Scalar _tmp58 = _tmp16 + _tmp6;
  const Scalar _tmp59 = _tmp58 + position_vector(0, 0);
  const Scalar _tmp60 = _tmp59 - p_c(0, 0);
  const Scalar _tmp61 = std::pow(Scalar(std::pow(_tmp57, Scalar(2)) + std::pow(_tmp60, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp62 = _tmp57 * _tmp61;
  const Scalar _tmp63 = _tmp60 * _tmp61;
  const Scalar _tmp64 = _tmp53 * _tmp63 - _tmp62;
  const Scalar _tmp65 = -Scalar(0.20999999999999999) * _tmp10 + Scalar(0.20999999999999999) * _tmp9;
  const Scalar _tmp66 = -_tmp65;
  const Scalar _tmp67 =
      -Scalar(0.010999999999999999) * _tmp13 - Scalar(0.010999999999999999) * _tmp20;
  const Scalar _tmp68 = Scalar(0.20999999999999999) * _tmp23 + Scalar(0.20999999999999999) * _tmp24;
  const Scalar _tmp69 = _tmp67 - _tmp68;
  const Scalar _tmp70 = _tmp66 + _tmp69;
  const Scalar _tmp71 = _tmp67 + _tmp68;
  const Scalar _tmp72 = _tmp65 + _tmp71;
  const Scalar _tmp73 = _tmp53 * _tmp70;
  const Scalar _tmp74 = _tmp66 + _tmp71;
  const Scalar _tmp75 = -_tmp44 * _tmp73 + _tmp45 * _tmp74;
  const Scalar _tmp76 = _tmp54 * _tmp64;
  const Scalar _tmp77 = _tmp62 * _tmp72 - _tmp63 * _tmp73 - _tmp75 * _tmp76;
  const Scalar _tmp78 = Scalar(1.0) * _tmp50;
  const Scalar _tmp79 = -_tmp78;
  const Scalar _tmp80 = Scalar(1.0) / (_tmp40 + _tmp79);
  const Scalar _tmp81 = Scalar(1.0) * _tmp46;
  const Scalar _tmp82 = _tmp80 * (-_tmp36 + _tmp81);
  const Scalar _tmp83 = _tmp44 * _tmp70 - _tmp44 * _tmp74;
  const Scalar _tmp84 = _tmp63 * _tmp70 - _tmp63 * _tmp72 - _tmp76 * _tmp83 - _tmp77 * _tmp82;
  const Scalar _tmp85 = Scalar(1.0) / (_tmp84);
  const Scalar _tmp86 =
      std::sqrt(Scalar(std::pow(_tmp48, Scalar(2)) + std::pow(_tmp52, Scalar(2))));
  const Scalar _tmp87 = Scalar(1.0) / (_tmp86);
  const Scalar _tmp88 = _tmp49 * _tmp86;
  const Scalar _tmp89 = _tmp88 * (_tmp46 * _tmp52 * _tmp87 - _tmp48 * _tmp50 * _tmp87);
  const Scalar _tmp90 = -_tmp36 * _tmp45 + _tmp40 * _tmp44 + _tmp44 * _tmp89;
  const Scalar _tmp91 = _tmp53 * _tmp54;
  const Scalar _tmp92 = _tmp73 + _tmp75 * _tmp91;
  const Scalar _tmp93 = -_tmp70 - _tmp82 * _tmp92 + _tmp83 * _tmp91;
  const Scalar _tmp94 = _tmp55 * _tmp63 - _tmp58 * _tmp62 + _tmp63 * _tmp89 - _tmp76 * _tmp90;
  const Scalar _tmp95 = _tmp85 * _tmp94;
  const Scalar _tmp96 = Scalar(1.0) / (_tmp94);
  const Scalar _tmp97 = _tmp84 * _tmp96;
  const Scalar _tmp98 = _tmp97 * (-_tmp89 + _tmp90 * _tmp91 - _tmp93 * _tmp95);
  const Scalar _tmp99 = _tmp85 * (_tmp93 + _tmp98);
  const Scalar _tmp100 = _tmp54 * (-_tmp53 - _tmp64 * _tmp99);
  const Scalar _tmp101 = _tmp100 * _tmp44 + _tmp63 * _tmp99 + Scalar(1.0);
  const Scalar _tmp102 = _tmp18 - p_b(0, 0);
  const Scalar _tmp103 = std::pow(_tmp102, Scalar(2));
  const Scalar _tmp104 = _tmp30 - p_b(1, 0);
  const Scalar _tmp105 = std::pow(_tmp104, Scalar(2));
  const Scalar _tmp106 = _tmp103 + _tmp105;
  const Scalar _tmp107 = std::pow(_tmp106, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp108 = _tmp107 * fh1;
  const Scalar _tmp109 = _tmp108 * _tmp88;
  const Scalar _tmp110 = _tmp101 * _tmp109;
  const Scalar _tmp111 = std::pow(_tmp106, Scalar(Scalar(-3) / Scalar(2)));
  const Scalar _tmp112 = _tmp103 * _tmp111;
  const Scalar _tmp113 = _tmp112 * fh1;
  const Scalar _tmp114 = _tmp101 * _tmp88;
  const Scalar _tmp115 = _tmp102 * _tmp104 * _tmp111;
  const Scalar _tmp116 = _tmp107 * _tmp29;
  const Scalar _tmp117 = fh1 * (-_tmp112 * _tmp29 + _tmp115 * _tmp17 + _tmp116);
  const Scalar _tmp118 = Scalar(1.0) * _tmp96;
  const Scalar _tmp119 = _tmp44 * _tmp76;
  const Scalar _tmp120 = _tmp88 * (-_tmp118 * _tmp119 + _tmp118 * _tmp63);
  const Scalar _tmp121 = _tmp115 * fh1;
  const Scalar _tmp122 = Scalar(1.0) * _tmp54;
  const Scalar _tmp123 = _tmp122 * _tmp75;
  const Scalar _tmp124 = -_tmp122 * _tmp83 + _tmp123 * _tmp82;
  const Scalar _tmp125 = _tmp97 * (-_tmp122 * _tmp90 - _tmp124 * _tmp95);
  const Scalar _tmp126 = _tmp85 * (_tmp124 + _tmp125);
  const Scalar _tmp127 = _tmp54 * (-_tmp126 * _tmp64 + Scalar(1.0));
  const Scalar _tmp128 = _tmp126 * _tmp63 + _tmp127 * _tmp44;
  const Scalar _tmp129 = _tmp128 * _tmp88;
  const Scalar _tmp130 = _tmp110 - _tmp113 * _tmp114 - _tmp117 * _tmp120 - _tmp121 * _tmp129;
  const Scalar _tmp131 = _tmp109 * _tmp128;
  const Scalar _tmp132 = _tmp107 * _tmp17;
  const Scalar _tmp133 = fh1 * (-_tmp102 * _tmp116 + _tmp104 * _tmp132);
  const Scalar _tmp134 = Scalar(333.54000000000002) - fv1;
  const Scalar _tmp135 = _tmp78 * _tmp82 + _tmp81;
  const Scalar _tmp136 = 0;
  const Scalar _tmp137 = -_tmp102 * _tmp110 - _tmp104 * _tmp131 - _tmp120 * _tmp133 -
                         _tmp134 * _tmp88 * (-_tmp119 * _tmp136 + _tmp136 * _tmp63);
  const Scalar _tmp138 = Scalar(1.0) / (_tmp137);
  const Scalar _tmp139 = _tmp55 + _tmp79;
  const Scalar _tmp140 = _tmp139 * _tmp82;
  const Scalar _tmp141 = Scalar(1.0) / (-_tmp140 - _tmp58 + _tmp81);
  const Scalar _tmp142 = Scalar(1.0) * _tmp141;
  const Scalar _tmp143 = _tmp139 * _tmp141;
  const Scalar _tmp144 = -_tmp123 + _tmp125 * _tmp143 - _tmp126 * _tmp77;
  const Scalar _tmp145 = Scalar(1.0) * _tmp80;
  const Scalar _tmp146 = _tmp125 * _tmp142 - _tmp144 * _tmp145;
  const Scalar _tmp147 = Scalar(1.0) * _tmp108;
  const Scalar _tmp148 = _tmp146 * _tmp147;
  const Scalar _tmp149 = _tmp65 + _tmp69;
  const Scalar _tmp150 = _tmp108 * _tmp149;
  const Scalar _tmp151 = _tmp102 * _tmp150 + Scalar(40.024799999999999) * _tmp11 + _tmp17 * fv1;
  const Scalar _tmp152 = _tmp139 * _tmp80;
  const Scalar _tmp153 = _tmp142 * _tmp152;
  const Scalar _tmp154 = -Scalar(1.0) * _tmp142 + Scalar(1.0) * _tmp153;
  const Scalar _tmp155 = _tmp142 * _tmp97;
  const Scalar _tmp156 = -_tmp118 * _tmp77 + _tmp139 * _tmp155;
  const Scalar _tmp157 = -Scalar(1.0) * _tmp145 * _tmp156 + Scalar(1.0) * _tmp155;
  const Scalar _tmp158 = _tmp135 * _tmp141;
  const Scalar _tmp159 = _tmp80 * (-_tmp136 * _tmp77 - _tmp139 * _tmp158 + _tmp79);
  const Scalar _tmp160 = -_tmp104 * _tmp150 - Scalar(40.024799999999999) * _tmp25 - _tmp29 * fv1;
  const Scalar _tmp161 = _tmp80 * (_tmp140 * _tmp142 + Scalar(1.0));
  const Scalar _tmp162 = _tmp142 * _tmp82;
  const Scalar _tmp163 = -Scalar(1.0) * _tmp161 + Scalar(1.0) * _tmp162;
  const Scalar _tmp164 = _tmp143 * _tmp98 - _tmp77 * _tmp99 + _tmp92;
  const Scalar _tmp165 = _tmp142 * _tmp98 - _tmp145 * _tmp164;
  const Scalar _tmp166 = _tmp147 * _tmp165;
  const Scalar _tmp167 =
      _tmp102 * _tmp166 + _tmp104 * _tmp148 + _tmp133 * _tmp157 +
      Scalar(1.0) * _tmp134 * (-_tmp135 * _tmp142 - Scalar(1.0) * _tmp159 + Scalar(1.0)) +
      _tmp151 * _tmp154 + _tmp160 * _tmp163;
  const Scalar _tmp168 = std::asinh(_tmp138 * _tmp167);
  const Scalar _tmp169 = Scalar(1.0) * _tmp168;
  const Scalar _tmp170 = Scalar(1.4083112389913199) * _tmp137;
  const Scalar _tmp171 =
      -_tmp168 * _tmp170 - std::sqrt(Scalar(std::pow(Scalar(-_tmp47 + p_a(0, 0)), Scalar(2)) +
                                            std::pow(Scalar(-_tmp51 + p_a(1, 0)), Scalar(2))));
  const Scalar _tmp172 = Scalar(0.71007031138673404) * _tmp138;
  const Scalar _tmp173 = _tmp171 * _tmp172;
  const Scalar _tmp174 = -Scalar(1.4083112389913199) * std::sinh(_tmp169) -
                         Scalar(1.4083112389913199) * std::sinh(_tmp173);
  const Scalar _tmp175 = std::pow(_tmp137, Scalar(-2));
  const Scalar _tmp176 = _tmp167 * _tmp175;
  const Scalar _tmp177 = _tmp149 * fh1;
  const Scalar _tmp178 = _tmp112 * _tmp177 - _tmp150;
  const Scalar _tmp179 = Scalar(1.0) * _tmp146;
  const Scalar _tmp180 = Scalar(1.0) * _tmp165;
  const Scalar _tmp181 = _tmp115 * _tmp177;
  const Scalar _tmp182 =
      std::pow(Scalar(std::pow(_tmp167, Scalar(2)) * _tmp175 + 1), Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp183 =
      _tmp182 *
      (-_tmp130 * _tmp176 + _tmp138 * (_tmp113 * _tmp180 + _tmp117 * _tmp157 + _tmp121 * _tmp179 +
                                       _tmp154 * _tmp178 - _tmp163 * _tmp181 - _tmp166));
  const Scalar _tmp184 = Scalar(1.0) * std::cosh(_tmp169);
  const Scalar _tmp185 = std::cosh(_tmp173);
  const Scalar _tmp186 = Scalar(1.4083112389913199) * _tmp168;
  const Scalar _tmp187 = Scalar(0.71007031138673404) * _tmp171 * _tmp175;
  const Scalar _tmp188 = _tmp134 * _tmp136;
  const Scalar _tmp189 = _tmp118 * _tmp133;
  const Scalar _tmp190 = _tmp100 * _tmp108;
  const Scalar _tmp191 = _tmp108 * _tmp127;
  const Scalar _tmp192 =
      _tmp102 * _tmp190 + _tmp104 * _tmp191 - _tmp188 * _tmp76 - _tmp189 * _tmp76;
  const Scalar _tmp193 = Scalar(1.0) / (_tmp192);
  const Scalar _tmp194 = _tmp142 * _tmp151;
  const Scalar _tmp195 = _tmp156 * _tmp80;
  const Scalar _tmp196 = _tmp108 * _tmp80;
  const Scalar _tmp197 = _tmp164 * _tmp196;
  const Scalar _tmp198 = _tmp144 * _tmp196;
  const Scalar _tmp199 = _tmp102 * _tmp197 + _tmp104 * _tmp198 + _tmp133 * _tmp195 +
                         _tmp134 * _tmp159 - _tmp152 * _tmp194 + _tmp160 * _tmp161;
  const Scalar _tmp200 = std::asinh(_tmp193 * _tmp199);
  const Scalar _tmp201 = Scalar(1.4083112389913199) * _tmp192;
  const Scalar _tmp202 =
      -_tmp200 * _tmp201 - std::sqrt(Scalar(std::pow(Scalar(-_tmp37 + p_d(0, 0)), Scalar(2)) +
                                            std::pow(Scalar(-_tmp41 + p_d(1, 0)), Scalar(2))));
  const Scalar _tmp203 = Scalar(0.71007031138673404) * _tmp193;
  const Scalar _tmp204 = _tmp202 * _tmp203;
  const Scalar _tmp205 = std::cosh(_tmp204);
  const Scalar _tmp206 = _tmp142 * _tmp178;
  const Scalar _tmp207 = _tmp144 * _tmp80;
  const Scalar _tmp208 = _tmp164 * _tmp80;
  const Scalar _tmp209 = _tmp117 * _tmp118;
  const Scalar _tmp210 = _tmp100 * _tmp113 + _tmp121 * _tmp127 - _tmp190 - _tmp209 * _tmp76;
  const Scalar _tmp211 = std::pow(_tmp192, Scalar(-2));
  const Scalar _tmp212 = _tmp199 * _tmp211;
  const Scalar _tmp213 = _tmp193 * (_tmp113 * _tmp208 + _tmp117 * _tmp195 + _tmp121 * _tmp207 -
                                    _tmp152 * _tmp206 - _tmp161 * _tmp181 - _tmp197) -
                         _tmp210 * _tmp212;
  const Scalar _tmp214 =
      std::pow(Scalar(std::pow(_tmp199, Scalar(2)) * _tmp211 + 1), Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp215 = _tmp201 * _tmp214;
  const Scalar _tmp216 = Scalar(1.4083112389913199) * _tmp200;
  const Scalar _tmp217 = Scalar(0.71007031138673404) * _tmp202 * _tmp211;
  const Scalar _tmp218 = Scalar(1.0) * _tmp200;
  const Scalar _tmp219 = Scalar(1.0) * _tmp214 * std::cosh(_tmp218);
  const Scalar _tmp220 = -Scalar(1.4083112389913199) * std::sinh(_tmp204) -
                         Scalar(1.4083112389913199) * std::sinh(_tmp218);
  const Scalar _tmp221 = _tmp108 * _tmp99;
  const Scalar _tmp222 = _tmp113 * _tmp99 + _tmp121 * _tmp126 + _tmp209 - _tmp221;
  const Scalar _tmp223 = _tmp108 * _tmp126;
  const Scalar _tmp224 = _tmp102 * _tmp221 + _tmp104 * _tmp223 + _tmp188 + _tmp189;
  const Scalar _tmp225 = Scalar(1.0) / (_tmp224);
  const Scalar _tmp226 = _tmp108 * _tmp141;
  const Scalar _tmp227 = _tmp226 * _tmp98;
  const Scalar _tmp228 = _tmp125 * _tmp226;
  const Scalar _tmp229 = -_tmp102 * _tmp227 - _tmp104 * _tmp228 - _tmp133 * _tmp155 +
                         _tmp134 * _tmp158 - _tmp160 * _tmp162 + _tmp194;
  const Scalar _tmp230 = std::asinh(_tmp225 * _tmp229);
  const Scalar _tmp231 = Scalar(1.4083112389913199) * _tmp230;
  const Scalar _tmp232 =
      -_tmp224 * _tmp231 - std::sqrt(Scalar(std::pow(Scalar(-_tmp56 + p_c(1, 0)), Scalar(2)) +
                                            std::pow(Scalar(-_tmp59 + p_c(0, 0)), Scalar(2))));
  const Scalar _tmp233 = Scalar(0.71007031138673404) * _tmp225;
  const Scalar _tmp234 = _tmp232 * _tmp233;
  const Scalar _tmp235 = Scalar(1.0) * _tmp230;
  const Scalar _tmp236 = -Scalar(1.4083112389913199) * std::sinh(_tmp234) -
                         Scalar(1.4083112389913199) * std::sinh(_tmp235);
  const Scalar _tmp237 = std::cosh(_tmp234);
  const Scalar _tmp238 = std::pow(_tmp224, Scalar(-2));
  const Scalar _tmp239 = _tmp229 * _tmp238;
  const Scalar _tmp240 = _tmp141 * _tmp98;
  const Scalar _tmp241 = _tmp125 * _tmp141;
  const Scalar _tmp242 =
      -_tmp222 * _tmp239 + _tmp225 * (-_tmp113 * _tmp240 - _tmp117 * _tmp155 - _tmp121 * _tmp241 +
                                      _tmp162 * _tmp181 + _tmp206 + _tmp227);
  const Scalar _tmp243 =
      std::pow(Scalar(std::pow(_tmp229, Scalar(2)) * _tmp238 + 1), Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp244 = Scalar(1.4083112389913199) * _tmp224;
  const Scalar _tmp245 = _tmp243 * _tmp244;
  const Scalar _tmp246 = Scalar(0.71007031138673404) * _tmp232 * _tmp238;
  const Scalar _tmp247 = Scalar(1.0) * _tmp243 * std::cosh(_tmp235);
  const Scalar _tmp248 = _tmp105 * _tmp111;
  const Scalar _tmp249 = _tmp248 * fh1;
  const Scalar _tmp250 = fh1 * (-_tmp115 * _tmp29 - _tmp132 + _tmp17 * _tmp248);
  const Scalar _tmp251 = -_tmp114 * _tmp121 - _tmp120 * _tmp250 - _tmp129 * _tmp249 + _tmp131;
  const Scalar _tmp252 = _tmp150 - _tmp177 * _tmp248;
  const Scalar _tmp253 =
      _tmp182 * (_tmp138 * (_tmp121 * _tmp180 - _tmp148 + _tmp154 * _tmp181 + _tmp157 * _tmp250 +
                            _tmp163 * _tmp252 + _tmp179 * _tmp249) -
                 _tmp176 * _tmp251);
  const Scalar _tmp254 = _tmp118 * _tmp250;
  const Scalar _tmp255 = _tmp100 * _tmp121 + _tmp127 * _tmp249 - _tmp191 - _tmp254 * _tmp76;
  const Scalar _tmp256 = _tmp193 * (_tmp121 * _tmp208 - _tmp153 * _tmp181 + _tmp161 * _tmp252 +
                                    _tmp195 * _tmp250 - _tmp198 + _tmp207 * _tmp249) -
                         _tmp212 * _tmp255;
  const Scalar _tmp257 = _tmp121 * _tmp99 + _tmp126 * _tmp249 - _tmp223 + _tmp254;
  const Scalar _tmp258 = _tmp225 * (-_tmp121 * _tmp240 + _tmp142 * _tmp181 - _tmp155 * _tmp250 -
                                    _tmp162 * _tmp252 + _tmp228 - _tmp241 * _tmp249) -
                         _tmp239 * _tmp257;

  // Output terms (1)
  Eigen::Matrix<Scalar, 4, 3> _res;

  _res(0, 0) = _tmp19 * _tmp34;
  _res(1, 0) =
      _tmp130 * _tmp174 +
      _tmp170 *
          (-_tmp183 * _tmp184 -
           _tmp185 * (-_tmp130 * _tmp187 + _tmp172 * (-_tmp130 * _tmp186 - _tmp170 * _tmp183)));
  _res(2, 0) =
      _tmp201 *
          (-_tmp205 * (_tmp203 * (-_tmp210 * _tmp216 - _tmp213 * _tmp215) - _tmp210 * _tmp217) -
           _tmp213 * _tmp219) +
      _tmp210 * _tmp220;
  _res(3, 0) =
      _tmp222 * _tmp236 +
      _tmp244 *
          (-_tmp237 * (-_tmp222 * _tmp246 + _tmp233 * (-_tmp222 * _tmp231 - _tmp242 * _tmp245)) -
           _tmp242 * _tmp247);
  _res(0, 1) = _tmp31 * _tmp34;
  _res(1, 1) =
      _tmp170 *
          (-_tmp184 * _tmp253 -
           _tmp185 * (_tmp172 * (-_tmp170 * _tmp253 - _tmp186 * _tmp251) - _tmp187 * _tmp251)) +
      _tmp174 * _tmp251;
  _res(2, 1) =
      _tmp201 *
          (-_tmp205 * (_tmp203 * (-_tmp215 * _tmp256 - _tmp216 * _tmp255) - _tmp217 * _tmp255) -
           _tmp219 * _tmp256) +
      _tmp220 * _tmp255;
  _res(3, 1) =
      _tmp236 * _tmp257 +
      _tmp244 *
          (-_tmp237 * (_tmp233 * (-_tmp231 * _tmp257 - _tmp245 * _tmp258) - _tmp246 * _tmp257) -
           _tmp247 * _tmp258);
  _res(0, 2) = 0;
  _res(1, 2) = 0;
  _res(2, 2) = 0;
  _res(3, 2) = 0;

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
