// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

#include <sym/rot3.h>

namespace sym {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: IK_residual_func_cost4_wrt_pc_Nl11
 *
 * Args:
 *     fh1: Scalar
 *     fv1: Scalar
 *     DeltaRot: Rot3
 *     position_vector: Matrix31
 *     encoder: Matrix41
 *     p_a: Matrix31
 *     p_b: Matrix31
 *     p_c: Matrix31
 *     p_d: Matrix31
 *     Rot_init: Rot3
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix43
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 4, 3> IkResidualFuncCost4WrtPcNl11(
    const Scalar fh1, const Scalar fv1, const sym::Rot3<Scalar>& DeltaRot,
    const Eigen::Matrix<Scalar, 3, 1>& position_vector, const Eigen::Matrix<Scalar, 4, 1>& encoder,
    const Eigen::Matrix<Scalar, 3, 1>& p_a, const Eigen::Matrix<Scalar, 3, 1>& p_b,
    const Eigen::Matrix<Scalar, 3, 1>& p_c, const Eigen::Matrix<Scalar, 3, 1>& p_d,
    const sym::Rot3<Scalar>& Rot_init, const Scalar epsilon) {
  // Total ops: 1146

  // Unused inputs
  (void)encoder;
  (void)epsilon;

  // Input arrays
  const Eigen::Matrix<Scalar, 4, 1>& _DeltaRot = DeltaRot.Data();
  const Eigen::Matrix<Scalar, 4, 1>& _Rot_init = Rot_init.Data();

  // Intermediate terms (363)
  const Scalar _tmp0 = -_DeltaRot[0] * _Rot_init[1] + _DeltaRot[1] * _Rot_init[0] +
                       _DeltaRot[2] * _Rot_init[3] + _DeltaRot[3] * _Rot_init[2];
  const Scalar _tmp1 = -2 * std::pow(_tmp0, Scalar(2));
  const Scalar _tmp2 = _DeltaRot[0] * _Rot_init[2] + _DeltaRot[1] * _Rot_init[3] -
                       _DeltaRot[2] * _Rot_init[0] + _DeltaRot[3] * _Rot_init[1];
  const Scalar _tmp3 = 1 - 2 * std::pow(_tmp2, Scalar(2));
  const Scalar _tmp4 = Scalar(0.20999999999999999) * _tmp1 + Scalar(0.20999999999999999) * _tmp3;
  const Scalar _tmp5 = -_tmp4;
  const Scalar _tmp6 = _DeltaRot[0] * _Rot_init[3] - _DeltaRot[1] * _Rot_init[2] +
                       _DeltaRot[2] * _Rot_init[1] + _DeltaRot[3] * _Rot_init[0];
  const Scalar _tmp7 = 2 * _tmp0;
  const Scalar _tmp8 = _tmp6 * _tmp7;
  const Scalar _tmp9 = -2 * _DeltaRot[0] * _Rot_init[0] - 2 * _DeltaRot[1] * _Rot_init[1] -
                       2 * _DeltaRot[2] * _Rot_init[2] + 2 * _DeltaRot[3] * _Rot_init[3];
  const Scalar _tmp10 = _tmp2 * _tmp9;
  const Scalar _tmp11 = _tmp10 + _tmp8;
  const Scalar _tmp12 = -Scalar(0.010999999999999999) * _tmp11;
  const Scalar _tmp13 = 2 * _tmp2 * _tmp6;
  const Scalar _tmp14 = _tmp0 * _tmp9;
  const Scalar _tmp15 = Scalar(0.20999999999999999) * _tmp13 - Scalar(0.20999999999999999) * _tmp14;
  const Scalar _tmp16 = _tmp12 + _tmp15;
  const Scalar _tmp17 = _tmp16 + _tmp5;
  const Scalar _tmp18 = _tmp17 + position_vector(0, 0);
  const Scalar _tmp19 = _tmp18 - p_d(0, 0);
  const Scalar _tmp20 = Scalar(1.0) / (_tmp19);
  const Scalar _tmp21 = -2 * std::pow(_tmp6, Scalar(2));
  const Scalar _tmp22 = Scalar(0.20999999999999999) * _tmp1 + Scalar(0.20999999999999999) * _tmp21 +
                        Scalar(0.20999999999999999);
  const Scalar _tmp23 = Scalar(0.20999999999999999) * _tmp13 + Scalar(0.20999999999999999) * _tmp14;
  const Scalar _tmp24 = _tmp2 * _tmp7;
  const Scalar _tmp25 = _tmp6 * _tmp9;
  const Scalar _tmp26 = _tmp24 - _tmp25;
  const Scalar _tmp27 = -Scalar(0.010999999999999999) * _tmp26;
  const Scalar _tmp28 = -_tmp23 + _tmp27;
  const Scalar _tmp29 = _tmp22 + _tmp28;
  const Scalar _tmp30 = _tmp29 + position_vector(1, 0);
  const Scalar _tmp31 = _tmp30 - p_d(1, 0);
  const Scalar _tmp32 = _tmp20 * _tmp31;
  const Scalar _tmp33 = _tmp12 - _tmp15;
  const Scalar _tmp34 = _tmp33 + _tmp5;
  const Scalar _tmp35 = _tmp34 + position_vector(0, 0);
  const Scalar _tmp36 = _tmp35 - p_a(0, 0);
  const Scalar _tmp37 = -_tmp22;
  const Scalar _tmp38 = _tmp28 + _tmp37;
  const Scalar _tmp39 = _tmp38 + position_vector(1, 0);
  const Scalar _tmp40 = _tmp39 - p_a(1, 0);
  const Scalar _tmp41 = std::pow(Scalar(std::pow(_tmp36, Scalar(2)) + std::pow(_tmp40, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp42 = _tmp36 * _tmp41;
  const Scalar _tmp43 = _tmp40 * _tmp41;
  const Scalar _tmp44 = _tmp32 * _tmp42 - _tmp43;
  const Scalar _tmp45 = _tmp16 + _tmp4;
  const Scalar _tmp46 = _tmp45 + position_vector(0, 0);
  const Scalar _tmp47 = _tmp46 - p_c(0, 0);
  const Scalar _tmp48 = _tmp23 + _tmp27;
  const Scalar _tmp49 = _tmp22 + _tmp48;
  const Scalar _tmp50 = _tmp49 + position_vector(1, 0);
  const Scalar _tmp51 = _tmp50 - p_c(1, 0);
  const Scalar _tmp52 = std::pow(_tmp47, Scalar(2));
  const Scalar _tmp53 = std::pow(_tmp51, Scalar(2));
  const Scalar _tmp54 = _tmp52 + _tmp53;
  const Scalar _tmp55 = std::pow(_tmp54, Scalar(Scalar(-3) / Scalar(2)));
  const Scalar _tmp56 = _tmp47 * _tmp51 * _tmp55;
  const Scalar _tmp57 = _tmp52 * _tmp55;
  const Scalar _tmp58 = std::pow(_tmp54, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp59 = _tmp32 * _tmp58;
  const Scalar _tmp60 = _tmp32 * _tmp57 - _tmp56 - _tmp59;
  const Scalar _tmp61 = _tmp44 * _tmp60;
  const Scalar _tmp62 =
      std::sqrt(Scalar(std::pow(_tmp19, Scalar(2)) + std::pow(_tmp31, Scalar(2))));
  const Scalar _tmp63 = Scalar(1.0) / (_tmp62);
  const Scalar _tmp64 = _tmp20 * _tmp62;
  const Scalar _tmp65 = _tmp64 * (_tmp17 * _tmp31 * _tmp63 - _tmp19 * _tmp29 * _tmp63);
  const Scalar _tmp66 = _tmp58 * _tmp65;
  const Scalar _tmp67 = _tmp49 * _tmp58;
  const Scalar _tmp68 = _tmp51 * _tmp58;
  const Scalar _tmp69 = -_tmp45 * _tmp68 + _tmp47 * _tmp66 + _tmp47 * _tmp67;
  const Scalar _tmp70 = _tmp47 * _tmp59 - _tmp68;
  const Scalar _tmp71 = std::pow(_tmp70, Scalar(-2));
  const Scalar _tmp72 = _tmp69 * _tmp71;
  const Scalar _tmp73 = -_tmp45 * _tmp56 + _tmp49 * _tmp57 + _tmp57 * _tmp65 - _tmp66 - _tmp67;
  const Scalar _tmp74 = Scalar(1.0) / (_tmp70);
  const Scalar _tmp75 = _tmp44 * _tmp74;
  const Scalar _tmp76 = _tmp61 * _tmp72 - _tmp73 * _tmp75;
  const Scalar _tmp77 = Scalar(0.20999999999999999) * _tmp24 + Scalar(0.20999999999999999) * _tmp25;
  const Scalar _tmp78 = -_tmp77;
  const Scalar _tmp79 =
      -Scalar(0.010999999999999999) * _tmp21 - Scalar(0.010999999999999999) * _tmp3;
  const Scalar _tmp80 = -Scalar(0.20999999999999999) * _tmp10 + Scalar(0.20999999999999999) * _tmp8;
  const Scalar _tmp81 = _tmp79 - _tmp80;
  const Scalar _tmp82 = _tmp78 + _tmp81;
  const Scalar _tmp83 = _tmp77 + _tmp81;
  const Scalar _tmp84 = _tmp58 * _tmp83;
  const Scalar _tmp85 = _tmp47 * _tmp84;
  const Scalar _tmp86 = _tmp79 + _tmp80;
  const Scalar _tmp87 = _tmp77 + _tmp86;
  const Scalar _tmp88 = -_tmp32 * _tmp85 + _tmp68 * _tmp87;
  const Scalar _tmp89 = _tmp32 * _tmp83;
  const Scalar _tmp90 = -_tmp42 * _tmp89 + _tmp43 * _tmp82 - _tmp75 * _tmp88;
  const Scalar _tmp91 = Scalar(1.0) * _tmp29;
  const Scalar _tmp92 = -_tmp91;
  const Scalar _tmp93 = Scalar(1.0) / (_tmp49 + _tmp92);
  const Scalar _tmp94 = Scalar(1.0) * _tmp17;
  const Scalar _tmp95 = _tmp93 * (-_tmp45 + _tmp94);
  const Scalar _tmp96 = _tmp58 * _tmp87;
  const Scalar _tmp97 = -_tmp47 * _tmp96 + _tmp85;
  const Scalar _tmp98 = -_tmp42 * _tmp82 + _tmp42 * _tmp83 - _tmp75 * _tmp97 - _tmp90 * _tmp95;
  const Scalar _tmp99 = Scalar(1.0) / (_tmp98);
  const Scalar _tmp100 = _tmp32 * _tmp74;
  const Scalar _tmp101 = _tmp100 * _tmp88 + _tmp89;
  const Scalar _tmp102 = _tmp100 * _tmp97 - _tmp101 * _tmp95 - _tmp83;
  const Scalar _tmp103 = _tmp102 * _tmp99;
  const Scalar _tmp104 = _tmp57 * _tmp83 - _tmp57 * _tmp87 - _tmp84 + _tmp96;
  const Scalar _tmp105 = _tmp71 * _tmp97;
  const Scalar _tmp106 = _tmp71 * _tmp88;
  const Scalar _tmp107 = _tmp56 * _tmp87;
  const Scalar _tmp108 = _tmp107 + _tmp32 * _tmp84 - _tmp57 * _tmp89;
  const Scalar _tmp109 = _tmp106 * _tmp61 - _tmp108 * _tmp75;
  const Scalar _tmp110 = -_tmp104 * _tmp75 + _tmp105 * _tmp61 - _tmp109 * _tmp95;
  const Scalar _tmp111 = -_tmp34 * _tmp43 + _tmp38 * _tmp42 + _tmp42 * _tmp65 - _tmp69 * _tmp75;
  const Scalar _tmp112 = std::pow(_tmp98, Scalar(-2));
  const Scalar _tmp113 = _tmp111 * _tmp112;
  const Scalar _tmp114 = _tmp102 * _tmp113;
  const Scalar _tmp115 = _tmp32 * _tmp60;
  const Scalar _tmp116 = _tmp100 * _tmp108 - _tmp106 * _tmp115;
  const Scalar _tmp117 = _tmp100 * _tmp104 - _tmp105 * _tmp115 - _tmp116 * _tmp95;
  const Scalar _tmp118 = _tmp111 * _tmp99;
  const Scalar _tmp119 = Scalar(1.0) / (_tmp111);
  const Scalar _tmp120 = _tmp119 * _tmp98;
  const Scalar _tmp121 = _tmp120 * (_tmp100 * _tmp73 - _tmp103 * _tmp76 + _tmp110 * _tmp114 -
                                    _tmp115 * _tmp72 - _tmp117 * _tmp118);
  const Scalar _tmp122 = _tmp38 + _tmp92;
  const Scalar _tmp123 = _tmp122 * _tmp95;
  const Scalar _tmp124 = Scalar(1.0) / (-_tmp123 - _tmp34 + _tmp94);
  const Scalar _tmp125 = _tmp122 * _tmp124;
  const Scalar _tmp126 = _tmp100 * _tmp69 - _tmp102 * _tmp118 - _tmp65;
  const Scalar _tmp127 = _tmp119 * _tmp126;
  const Scalar _tmp128 = _tmp110 * _tmp127;
  const Scalar _tmp129 = std::pow(_tmp111, Scalar(-2));
  const Scalar _tmp130 = _tmp129 * _tmp76;
  const Scalar _tmp131 = _tmp126 * _tmp98;
  const Scalar _tmp132 = _tmp130 * _tmp131;
  const Scalar _tmp133 = _tmp117 + _tmp121 + _tmp128 - _tmp132;
  const Scalar _tmp134 = _tmp90 * _tmp99;
  const Scalar _tmp135 = _tmp120 * _tmp126;
  const Scalar _tmp136 = _tmp102 + _tmp135;
  const Scalar _tmp137 = _tmp110 * _tmp112;
  const Scalar _tmp138 = _tmp137 * _tmp90;
  const Scalar _tmp139 = _tmp109 * _tmp99;
  const Scalar _tmp140 = _tmp116 + _tmp121 * _tmp125 + _tmp125 * _tmp128 - _tmp125 * _tmp132 -
                         _tmp133 * _tmp134 + _tmp136 * _tmp138 - _tmp136 * _tmp139;
  const Scalar _tmp141 = Scalar(1.0) * _tmp93;
  const Scalar _tmp142 = Scalar(1.0) * _tmp124;
  const Scalar _tmp143 = _tmp33 + _tmp4;
  const Scalar _tmp144 = _tmp143 - p_b(0, 0) + position_vector(0, 0);
  const Scalar _tmp145 = _tmp37 + _tmp48;
  const Scalar _tmp146 = _tmp145 - p_b(1, 0) + position_vector(1, 0);
  const Scalar _tmp147 =
      std::pow(Scalar(std::pow(_tmp144, Scalar(2)) + std::pow(_tmp146, Scalar(2))),
               Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp148 = _tmp144 * _tmp147;
  const Scalar _tmp149 = _tmp148 * fh1;
  const Scalar _tmp150 = Scalar(1.0) * _tmp149;
  const Scalar _tmp151 = Scalar(1.0) * _tmp74;
  const Scalar _tmp152 = _tmp151 * _tmp88;
  const Scalar _tmp153 = -_tmp151 * _tmp97 + _tmp152 * _tmp95;
  const Scalar _tmp154 = -_tmp118 * _tmp153 - _tmp151 * _tmp69;
  const Scalar _tmp155 = _tmp119 * _tmp154;
  const Scalar _tmp156 = _tmp155 * _tmp98;
  const Scalar _tmp157 = _tmp153 + _tmp156;
  const Scalar _tmp158 = Scalar(1.0) * _tmp60;
  const Scalar _tmp159 = _tmp153 * _tmp99;
  const Scalar _tmp160 = _tmp113 * _tmp153;
  const Scalar _tmp161 = _tmp106 * _tmp158;
  const Scalar _tmp162 = _tmp108 * _tmp151;
  const Scalar _tmp163 =
      -_tmp104 * _tmp151 + _tmp105 * _tmp158 - _tmp161 * _tmp95 + _tmp162 * _tmp95;
  const Scalar _tmp164 = _tmp120 * (_tmp110 * _tmp160 - _tmp118 * _tmp163 - _tmp151 * _tmp73 +
                                    _tmp158 * _tmp72 - _tmp159 * _tmp76);
  const Scalar _tmp165 = _tmp110 * _tmp155;
  const Scalar _tmp166 = _tmp154 * _tmp98;
  const Scalar _tmp167 = _tmp130 * _tmp166;
  const Scalar _tmp168 = _tmp163 + _tmp164 + _tmp165 - _tmp167;
  const Scalar _tmp169 = _tmp125 * _tmp164 + _tmp125 * _tmp165 - _tmp125 * _tmp167 -
                         _tmp134 * _tmp168 + _tmp138 * _tmp157 - _tmp139 * _tmp157 + _tmp161 -
                         _tmp162;
  const Scalar _tmp170 = _tmp146 * _tmp147;
  const Scalar _tmp171 = _tmp170 * fh1;
  const Scalar _tmp172 = Scalar(1.0) * _tmp171;
  const Scalar _tmp173 = Scalar(1.0) * _tmp119;
  const Scalar _tmp174 = Scalar(1.0) * _tmp90;
  const Scalar _tmp175 = _tmp119 * _tmp142;
  const Scalar _tmp176 = _tmp110 * _tmp175;
  const Scalar _tmp177 = _tmp142 * _tmp98;
  const Scalar _tmp178 = _tmp130 * _tmp177;
  const Scalar _tmp179 =
      -_tmp109 * _tmp173 + _tmp122 * _tmp176 - _tmp122 * _tmp178 + _tmp130 * _tmp174;
  const Scalar _tmp180 = fh1 * (_tmp143 * _tmp170 - _tmp145 * _tmp148);
  const Scalar _tmp181 = Scalar(1.0) * _tmp180;
  const Scalar _tmp182 = _tmp91 * _tmp95 + _tmp94;
  const Scalar _tmp183 = 0;
  const Scalar _tmp184 = _tmp138 * _tmp183 - _tmp139 * _tmp183;
  const Scalar _tmp185 = Scalar(333.54000000000002) - fv1;
  const Scalar _tmp186 = _tmp141 * _tmp185;
  const Scalar _tmp187 = _tmp44 * _tmp99;
  const Scalar _tmp188 = -_tmp157 * _tmp187 + Scalar(1.0);
  const Scalar _tmp189 = _tmp58 * _tmp74;
  const Scalar _tmp190 = _tmp188 * _tmp189;
  const Scalar _tmp191 = _tmp42 * _tmp99;
  const Scalar _tmp192 = _tmp171 * _tmp64;
  const Scalar _tmp193 = _tmp136 * _tmp99;
  const Scalar _tmp194 = -_tmp136 * _tmp187 - _tmp32;
  const Scalar _tmp195 = _tmp189 * _tmp194;
  const Scalar _tmp196 = _tmp149 * _tmp64;
  const Scalar _tmp197 = _tmp189 * _tmp47;
  const Scalar _tmp198 = _tmp183 * _tmp187;
  const Scalar _tmp199 = _tmp183 * _tmp99;
  const Scalar _tmp200 = _tmp185 * _tmp64;
  const Scalar _tmp201 = _tmp47 * _tmp58;
  const Scalar _tmp202 = _tmp151 * _tmp44;
  const Scalar _tmp203 = _tmp119 * _tmp202;
  const Scalar _tmp204 = _tmp180 * _tmp64;
  const Scalar _tmp205 = -_tmp192 * (_tmp157 * _tmp191 + _tmp190 * _tmp47) -
                         _tmp196 * (_tmp193 * _tmp42 + _tmp195 * _tmp47 + Scalar(1.0)) -
                         _tmp200 * (-_tmp197 * _tmp198 + _tmp199 * _tmp42) -
                         _tmp204 * (_tmp173 * _tmp42 - _tmp201 * _tmp203);
  const Scalar _tmp206 = Scalar(1.0) / (_tmp205);
  const Scalar _tmp207 = _tmp183 * _tmp201 * _tmp75;
  const Scalar _tmp208 = _tmp201 * _tmp60;
  const Scalar _tmp209 = _tmp57 * _tmp74;
  const Scalar _tmp210 = _tmp137 * _tmp42;
  const Scalar _tmp211 = _tmp136 * _tmp44;
  const Scalar _tmp212 = -_tmp133 * _tmp187 + _tmp137 * _tmp211;
  const Scalar _tmp213 = _tmp194 * _tmp71;
  const Scalar _tmp214 = Scalar(1.0) * _tmp42;
  const Scalar _tmp215 = _tmp201 * _tmp202;
  const Scalar _tmp216 = _tmp201 * _tmp71;
  const Scalar _tmp217 = _tmp173 * _tmp216;
  const Scalar _tmp218 = _tmp157 * _tmp44;
  const Scalar _tmp219 = _tmp137 * _tmp218 - _tmp168 * _tmp187;
  const Scalar _tmp220 = _tmp188 * _tmp71;
  const Scalar _tmp221 = -_tmp192 * (-_tmp157 * _tmp210 + _tmp168 * _tmp191 + _tmp188 * _tmp209 -
                                     _tmp190 + _tmp197 * _tmp219 - _tmp208 * _tmp220) -
                         _tmp196 * (_tmp133 * _tmp191 - _tmp136 * _tmp210 + _tmp194 * _tmp209 -
                                    _tmp195 + _tmp197 * _tmp212 - _tmp208 * _tmp213) -
                         _tmp200 * (_tmp137 * _tmp207 - _tmp183 * _tmp210 + _tmp189 * _tmp198 +
                                    _tmp198 * _tmp208 * _tmp71 - _tmp198 * _tmp209) -
                         _tmp204 * (-_tmp130 * _tmp214 + _tmp130 * _tmp215 - _tmp203 * _tmp57 +
                                    _tmp203 * _tmp58 + _tmp217 * _tmp61);
  const Scalar _tmp222 = _tmp122 * _tmp93;
  const Scalar _tmp223 = fh1 * (_tmp78 + _tmp86);
  const Scalar _tmp224 = Scalar(40.024799999999999) * _tmp11 + _tmp143 * fv1 + _tmp148 * _tmp223;
  const Scalar _tmp225 = _tmp101 + _tmp125 * _tmp135 - _tmp193 * _tmp90;
  const Scalar _tmp226 = _tmp124 * _tmp182;
  const Scalar _tmp227 = -_tmp122 * _tmp226 - _tmp134 * _tmp183 + _tmp92;
  const Scalar _tmp228 = _tmp125 * _tmp156 - _tmp134 * _tmp157 - _tmp152;
  const Scalar _tmp229 = -_tmp145 * fv1 - _tmp170 * _tmp223 - Scalar(40.024799999999999) * _tmp26;
  const Scalar _tmp230 = _tmp142 * _tmp95;
  const Scalar _tmp231 = _tmp123 * _tmp142 + Scalar(1.0);
  const Scalar _tmp232 = _tmp120 * _tmp142;
  const Scalar _tmp233 = _tmp122 * _tmp232 - _tmp173 * _tmp90;
  const Scalar _tmp234 =
      _tmp150 * (_tmp135 * _tmp142 - _tmp141 * _tmp225) +
      _tmp172 * (-_tmp141 * _tmp228 + _tmp142 * _tmp156) +
      _tmp181 * (-_tmp141 * _tmp233 + _tmp232) +
      Scalar(1.0) * _tmp185 * (-_tmp141 * _tmp227 - _tmp142 * _tmp182 + Scalar(1.0)) +
      Scalar(1.0) * _tmp224 * (_tmp142 * _tmp222 - _tmp142) +
      Scalar(1.0) * _tmp229 * (-_tmp141 * _tmp231 + _tmp230);
  const Scalar _tmp235 = std::pow(_tmp205, Scalar(-2));
  const Scalar _tmp236 = _tmp234 * _tmp235;
  const Scalar _tmp237 =
      _tmp206 * (_tmp150 * (_tmp121 * _tmp142 + _tmp128 * _tmp142 - _tmp132 * _tmp142 -
                            _tmp140 * _tmp141) +
                 _tmp172 * (-_tmp141 * _tmp169 + _tmp142 * _tmp164 + _tmp142 * _tmp165 -
                            _tmp142 * _tmp167) +
                 _tmp181 * (-_tmp141 * _tmp179 + _tmp176 - _tmp178) - _tmp184 * _tmp186) -
      _tmp221 * _tmp236;
  const Scalar _tmp238 =
      std::pow(Scalar(std::pow(_tmp234, Scalar(2)) * _tmp235 + 1), Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp239 = std::asinh(_tmp206 * _tmp234);
  const Scalar _tmp240 = Scalar(1.0) * _tmp239;
  const Scalar _tmp241 = Scalar(1.0) * _tmp238 * std::cosh(_tmp240);
  const Scalar _tmp242 = Scalar(1.4083112389913199) * _tmp239;
  const Scalar _tmp243 =
      -_tmp205 * _tmp242 - std::sqrt(Scalar(std::pow(Scalar(-_tmp18 + p_d(0, 0)), Scalar(2)) +
                                            std::pow(Scalar(-_tmp30 + p_d(1, 0)), Scalar(2))));
  const Scalar _tmp244 = Scalar(0.71007031138673404) * _tmp206;
  const Scalar _tmp245 = _tmp243 * _tmp244;
  const Scalar _tmp246 = std::cosh(_tmp245);
  const Scalar _tmp247 = Scalar(1.4083112389913199) * _tmp205;
  const Scalar _tmp248 = _tmp238 * _tmp247;
  const Scalar _tmp249 = Scalar(0.71007031138673404) * _tmp235 * _tmp243;
  const Scalar _tmp250 = -std::sinh(_tmp240) - std::sinh(_tmp245);
  const Scalar _tmp251 = -_tmp50 + p_c(1, 0);
  const Scalar _tmp252 = -_tmp46 + p_c(0, 0);
  const Scalar _tmp253 =
      std::sqrt(Scalar(std::pow(_tmp251, Scalar(2)) + std::pow(_tmp252, Scalar(2))));
  const Scalar _tmp254 = _tmp142 * _tmp224;
  const Scalar _tmp255 = _tmp180 * _tmp93;
  const Scalar _tmp256 = _tmp185 * _tmp93;
  const Scalar _tmp257 = _tmp171 * _tmp93;
  const Scalar _tmp258 = _tmp149 * _tmp93;
  const Scalar _tmp259 = -_tmp222 * _tmp254 + _tmp225 * _tmp258 + _tmp227 * _tmp256 +
                         _tmp228 * _tmp257 + _tmp229 * _tmp231 * _tmp93 + _tmp233 * _tmp255;
  const Scalar _tmp260 = _tmp149 * _tmp74;
  const Scalar _tmp261 = _tmp171 * _tmp74;
  const Scalar _tmp262 = _tmp183 * _tmp185;
  const Scalar _tmp263 = _tmp187 * _tmp262;
  const Scalar _tmp264 =
      -_tmp180 * _tmp203 + _tmp188 * _tmp261 + _tmp194 * _tmp260 - _tmp263 * _tmp74;
  const Scalar _tmp265 = Scalar(1.0) / (_tmp264);
  const Scalar _tmp266 = std::asinh(_tmp259 * _tmp265);
  const Scalar _tmp267 = Scalar(1.4083112389913199) * _tmp264;
  const Scalar _tmp268 = -_tmp253 - _tmp266 * _tmp267;
  const Scalar _tmp269 = Scalar(0.71007031138673404) * _tmp265;
  const Scalar _tmp270 = _tmp268 * _tmp269;
  const Scalar _tmp271 = Scalar(1.0) * _tmp266;
  const Scalar _tmp272 = -std::sinh(_tmp270) - std::sinh(_tmp271);
  const Scalar _tmp273 = _tmp263 * _tmp71;
  const Scalar _tmp274 = _tmp137 * _tmp262;
  const Scalar _tmp275 = _tmp173 * _tmp180;
  const Scalar _tmp276 = _tmp275 * _tmp71;
  const Scalar _tmp277 = _tmp180 * _tmp202;
  const Scalar _tmp278 = _tmp130 * _tmp277 - _tmp149 * _tmp213 * _tmp60 -
                         _tmp171 * _tmp220 * _tmp60 + _tmp212 * _tmp260 + _tmp219 * _tmp261 +
                         _tmp273 * _tmp60 + _tmp274 * _tmp75 + _tmp276 * _tmp61;
  const Scalar _tmp279 = Scalar(1.4083112389913199) * _tmp278;
  const Scalar _tmp280 = Scalar(1.0) * std::cosh(_tmp271);
  const Scalar _tmp281 = std::pow(_tmp264, Scalar(-2));
  const Scalar _tmp282 =
      std::pow(Scalar(std::pow(_tmp259, Scalar(2)) * _tmp281 + 1), Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp283 = _tmp259 * _tmp281;
  const Scalar _tmp284 =
      _tmp282 *
      (_tmp265 * (_tmp140 * _tmp258 + _tmp169 * _tmp257 + _tmp179 * _tmp255 + _tmp184 * _tmp256) -
       _tmp278 * _tmp283);
  const Scalar _tmp285 = std::cosh(_tmp270);
  const Scalar _tmp286 = Scalar(0.71007031138673404) * _tmp268 * _tmp281;
  const Scalar _tmp287 = Scalar(1.0) / (_tmp253);
  const Scalar _tmp288 = _tmp149 * _tmp99;
  const Scalar _tmp289 = _tmp136 * _tmp149;
  const Scalar _tmp290 = _tmp171 * _tmp99;
  const Scalar _tmp291 = _tmp157 * _tmp171;
  const Scalar _tmp292 = -_tmp130 * _tmp181 + _tmp133 * _tmp288 - _tmp137 * _tmp289 -
                         _tmp137 * _tmp291 + _tmp168 * _tmp290 - _tmp274;
  const Scalar _tmp293 = _tmp124 * _tmp171;
  const Scalar _tmp294 = _tmp124 * _tmp149;
  const Scalar _tmp295 = -_tmp135 * _tmp294 - _tmp156 * _tmp293 - _tmp180 * _tmp232 +
                         _tmp185 * _tmp226 - _tmp229 * _tmp230 + _tmp254;
  const Scalar _tmp296 = _tmp149 * _tmp193 + _tmp157 * _tmp290 + _tmp185 * _tmp199 + _tmp275;
  const Scalar _tmp297 = Scalar(1.0) / (_tmp296);
  const Scalar _tmp298 = std::asinh(_tmp295 * _tmp297);
  const Scalar _tmp299 = Scalar(1.4083112389913199) * _tmp296;
  const Scalar _tmp300 =
      -_tmp298 * _tmp299 - std::sqrt(Scalar(std::pow(Scalar(-_tmp35 + p_a(0, 0)), Scalar(2)) +
                                            std::pow(Scalar(-_tmp39 + p_a(1, 0)), Scalar(2))));
  const Scalar _tmp301 = Scalar(0.71007031138673404) * _tmp297;
  const Scalar _tmp302 = _tmp300 * _tmp301;
  const Scalar _tmp303 = Scalar(1.0) * _tmp298;
  const Scalar _tmp304 = -Scalar(1.4083112389913199) * std::sinh(_tmp302) -
                         Scalar(1.4083112389913199) * std::sinh(_tmp303);
  const Scalar _tmp305 = std::pow(_tmp296, Scalar(-2));
  const Scalar _tmp306 =
      std::pow(Scalar(std::pow(_tmp295, Scalar(2)) * _tmp305 + 1), Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp307 = _tmp295 * _tmp305;
  const Scalar _tmp308 =
      _tmp306 *
      (-_tmp292 * _tmp307 +
       _tmp297 * (-_tmp121 * _tmp294 - _tmp128 * _tmp294 + _tmp132 * _tmp294 - _tmp164 * _tmp293 -
                  _tmp165 * _tmp293 + _tmp167 * _tmp293 - _tmp176 * _tmp180 + _tmp178 * _tmp180));
  const Scalar _tmp309 = Scalar(1.0) * std::cosh(_tmp303);
  const Scalar _tmp310 = std::cosh(_tmp302);
  const Scalar _tmp311 = Scalar(1.4083112389913199) * _tmp298;
  const Scalar _tmp312 = Scalar(0.71007031138673404) * _tmp300 * _tmp305;
  const Scalar _tmp313 = -_tmp107 + _tmp56 * _tmp83;
  const Scalar _tmp314 = _tmp53 * _tmp55;
  const Scalar _tmp315 = -_tmp314 + _tmp32 * _tmp56 + _tmp58;
  const Scalar _tmp316 = _tmp315 * _tmp44;
  const Scalar _tmp317 = _tmp314 * _tmp87 - _tmp56 * _tmp89 - _tmp96;
  const Scalar _tmp318 = _tmp106 * _tmp316 - _tmp317 * _tmp75;
  const Scalar _tmp319 = _tmp105 * _tmp315;
  const Scalar _tmp320 = -_tmp313 * _tmp75 - _tmp318 * _tmp95 + _tmp319 * _tmp44;
  const Scalar _tmp321 = _tmp112 * _tmp320;
  const Scalar _tmp322 = _tmp321 * _tmp42;
  const Scalar _tmp323 = _tmp56 * _tmp74;
  const Scalar _tmp324 = -_tmp314 * _tmp45 + _tmp45 * _tmp58 + _tmp49 * _tmp56 + _tmp56 * _tmp65;
  const Scalar _tmp325 = _tmp316 * _tmp72 - _tmp324 * _tmp75;
  const Scalar _tmp326 = _tmp129 * _tmp325;
  const Scalar _tmp327 = _tmp166 * _tmp326;
  const Scalar _tmp328 = _tmp155 * _tmp320;
  const Scalar _tmp329 = Scalar(1.0) * _tmp315;
  const Scalar _tmp330 = _tmp151 * _tmp317;
  const Scalar _tmp331 = _tmp106 * _tmp329;
  const Scalar _tmp332 =
      -_tmp151 * _tmp313 + Scalar(1.0) * _tmp319 + _tmp330 * _tmp95 - _tmp331 * _tmp95;
  const Scalar _tmp333 = _tmp120 * (-_tmp118 * _tmp332 - _tmp151 * _tmp324 - _tmp159 * _tmp325 +
                                    _tmp160 * _tmp320 + _tmp329 * _tmp72);
  const Scalar _tmp334 = -_tmp327 + _tmp328 + _tmp332 + _tmp333;
  const Scalar _tmp335 = -_tmp187 * _tmp334 + _tmp218 * _tmp321;
  const Scalar _tmp336 = _tmp220 * _tmp315;
  const Scalar _tmp337 = _tmp131 * _tmp326;
  const Scalar _tmp338 = _tmp127 * _tmp320;
  const Scalar _tmp339 = _tmp315 * _tmp32;
  const Scalar _tmp340 = _tmp100 * _tmp317 - _tmp106 * _tmp339;
  const Scalar _tmp341 = _tmp100 * _tmp313 - _tmp319 * _tmp32 - _tmp340 * _tmp95;
  const Scalar _tmp342 = _tmp120 * (_tmp100 * _tmp324 - _tmp103 * _tmp325 + _tmp114 * _tmp320 -
                                    _tmp118 * _tmp341 - _tmp339 * _tmp72);
  const Scalar _tmp343 = -_tmp337 + _tmp338 + _tmp341 + _tmp342;
  const Scalar _tmp344 = -_tmp187 * _tmp343 + _tmp211 * _tmp321;
  const Scalar _tmp345 = _tmp213 * _tmp315;
  const Scalar _tmp346 =
      -_tmp192 * (-_tmp157 * _tmp322 + _tmp188 * _tmp323 + _tmp191 * _tmp334 + _tmp197 * _tmp335 -
                  _tmp201 * _tmp336) -
      _tmp196 * (-_tmp136 * _tmp322 + _tmp191 * _tmp343 + _tmp194 * _tmp323 + _tmp197 * _tmp344 -
                 _tmp201 * _tmp345) -
      _tmp200 * (-_tmp183 * _tmp322 + _tmp198 * _tmp216 * _tmp315 - _tmp198 * _tmp323 +
                 _tmp207 * _tmp321) -
      _tmp204 * (-_tmp203 * _tmp56 - _tmp214 * _tmp326 + _tmp215 * _tmp326 + _tmp217 * _tmp316);
  const Scalar _tmp347 = Scalar(1.4083112389913199) * _tmp346;
  const Scalar _tmp348 = _tmp318 * _tmp99;
  const Scalar _tmp349 = _tmp321 * _tmp90;
  const Scalar _tmp350 = -_tmp125 * _tmp327 + _tmp125 * _tmp328 + _tmp125 * _tmp333 -
                         _tmp134 * _tmp334 - _tmp157 * _tmp348 + _tmp157 * _tmp349 - _tmp330 +
                         _tmp331;
  const Scalar _tmp351 = -_tmp183 * _tmp348 + _tmp183 * _tmp349;
  const Scalar _tmp352 = _tmp177 * _tmp326;
  const Scalar _tmp353 = _tmp175 * _tmp320;
  const Scalar _tmp354 =
      -_tmp122 * _tmp352 + _tmp122 * _tmp353 - _tmp173 * _tmp318 + _tmp174 * _tmp326;
  const Scalar _tmp355 = -_tmp125 * _tmp337 + _tmp125 * _tmp338 + _tmp125 * _tmp342 -
                         _tmp134 * _tmp343 + _tmp136 * _tmp349 - _tmp193 * _tmp318 + _tmp340;
  const Scalar _tmp356 =
      _tmp206 * (_tmp150 * (-_tmp141 * _tmp355 - _tmp142 * _tmp337 + _tmp142 * _tmp338 +
                            _tmp142 * _tmp342) +
                 _tmp172 * (-_tmp141 * _tmp350 - _tmp142 * _tmp327 + _tmp142 * _tmp328 +
                            _tmp142 * _tmp333) +
                 _tmp181 * (-_tmp141 * _tmp354 - _tmp352 + _tmp353) - _tmp186 * _tmp351) -
      _tmp236 * _tmp346;
  const Scalar _tmp357 = _tmp262 * _tmp321;
  const Scalar _tmp358 = -_tmp149 * _tmp345 - _tmp171 * _tmp336 + _tmp260 * _tmp344 +
                         _tmp261 * _tmp335 + _tmp273 * _tmp315 + _tmp276 * _tmp316 +
                         _tmp277 * _tmp326 + _tmp357 * _tmp75;
  const Scalar _tmp359 = Scalar(1.4083112389913199) * _tmp358;
  const Scalar _tmp360 =
      _tmp282 *
      (_tmp265 * (_tmp255 * _tmp354 + _tmp256 * _tmp351 + _tmp257 * _tmp350 + _tmp258 * _tmp355) -
       _tmp283 * _tmp358);
  const Scalar _tmp361 = -_tmp181 * _tmp326 + _tmp288 * _tmp343 - _tmp289 * _tmp321 +
                         _tmp290 * _tmp334 - _tmp291 * _tmp321 - _tmp357;
  const Scalar _tmp362 =
      _tmp306 *
      (_tmp297 * (_tmp180 * _tmp352 - _tmp180 * _tmp353 + _tmp293 * _tmp327 - _tmp293 * _tmp328 -
                  _tmp293 * _tmp333 + _tmp294 * _tmp337 - _tmp294 * _tmp338 - _tmp294 * _tmp342) -
       _tmp307 * _tmp361);

  // Output terms (1)
  Eigen::Matrix<Scalar, 4, 3> _res;

  _res(0, 0) = 0;
  _res(1, 0) =
      Scalar(1.4083112389913199) * _tmp221 * _tmp250 +
      _tmp247 *
          (-_tmp237 * _tmp241 -
           _tmp246 * (-_tmp221 * _tmp249 + _tmp244 * (-_tmp221 * _tmp242 - _tmp237 * _tmp248)));
  _res(2, 0) =
      _tmp267 * (-_tmp280 * _tmp284 -
                 _tmp285 * (_tmp269 * (-_tmp252 * _tmp287 - _tmp266 * _tmp279 - _tmp267 * _tmp284) -
                            _tmp278 * _tmp286)) +
      _tmp272 * _tmp279;
  _res(3, 0) =
      _tmp292 * _tmp304 +
      _tmp299 *
          (-_tmp308 * _tmp309 -
           _tmp310 * (-_tmp292 * _tmp312 + _tmp301 * (-_tmp292 * _tmp311 - _tmp299 * _tmp308)));
  _res(0, 1) = 0;
  _res(1, 1) =
      _tmp247 *
          (-_tmp241 * _tmp356 -
           _tmp246 * (_tmp244 * (-_tmp239 * _tmp347 - _tmp248 * _tmp356) - _tmp249 * _tmp346)) +
      _tmp250 * _tmp347;
  _res(2, 1) =
      _tmp267 * (-_tmp280 * _tmp360 -
                 _tmp285 * (_tmp269 * (-_tmp251 * _tmp287 - _tmp266 * _tmp359 - _tmp267 * _tmp360) -
                            _tmp286 * _tmp358)) +
      _tmp272 * _tmp359;
  _res(3, 1) =
      _tmp299 *
          (-_tmp309 * _tmp362 -
           _tmp310 * (_tmp301 * (-_tmp299 * _tmp362 - _tmp311 * _tmp361) - _tmp312 * _tmp361)) +
      _tmp304 * _tmp361;
  _res(0, 2) = 0;
  _res(1, 2) = 0;
  _res(2, 2) = 0;
  _res(3, 2) = 0;

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
