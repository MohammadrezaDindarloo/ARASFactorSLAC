// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

#include <sym/rot3.h>

namespace sym {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: IK_residual_func_cost1_Nl1
 *
 * Args:
 *     fh1: Scalar
 *     fv1: Scalar
 *     DeltaRot: Rot3
 *     position_vector: Matrix31
 *     encoder: Matrix41
 *     p_a: Matrix31
 *     p_b: Matrix31
 *     p_c: Matrix31
 *     p_d: Matrix31
 *     Rot_init: Rot3
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix41
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 4, 1> IkResidualFuncCost1Nl1(
    const Scalar fh1, const Scalar fv1, const sym::Rot3<Scalar>& DeltaRot,
    const Eigen::Matrix<Scalar, 3, 1>& position_vector, const Eigen::Matrix<Scalar, 4, 1>& encoder,
    const Eigen::Matrix<Scalar, 3, 1>& p_a, const Eigen::Matrix<Scalar, 3, 1>& p_b,
    const Eigen::Matrix<Scalar, 3, 1>& p_c, const Eigen::Matrix<Scalar, 3, 1>& p_d,
    const sym::Rot3<Scalar>& Rot_init, const Scalar epsilon) {
  // Total ops: 481

  // Unused inputs
  (void)encoder;
  (void)epsilon;

  // Input arrays
  const Eigen::Matrix<Scalar, 4, 1>& _DeltaRot = DeltaRot.Data();
  const Eigen::Matrix<Scalar, 4, 1>& _Rot_init = Rot_init.Data();

  // Intermediate terms (157)
  const Scalar _tmp0 = Scalar(1.0) / (fh1);
  const Scalar _tmp1 = std::asinh(_tmp0 * fv1);
  const Scalar _tmp2 = Scalar(0.71007031138673404) * _tmp0;
  const Scalar _tmp3 = _DeltaRot[0] * _Rot_init[3] - _DeltaRot[1] * _Rot_init[2] +
                       _DeltaRot[2] * _Rot_init[1] + _DeltaRot[3] * _Rot_init[0];
  const Scalar _tmp4 = -2 * std::pow(_tmp3, Scalar(2));
  const Scalar _tmp5 = -_DeltaRot[0] * _Rot_init[1] + _DeltaRot[1] * _Rot_init[0] +
                       _DeltaRot[2] * _Rot_init[3] + _DeltaRot[3] * _Rot_init[2];
  const Scalar _tmp6 = 1 - 2 * std::pow(_tmp5, Scalar(2));
  const Scalar _tmp7 = Scalar(0.20999999999999999) * _tmp4 + Scalar(0.20999999999999999) * _tmp6;
  const Scalar _tmp8 = -_tmp7;
  const Scalar _tmp9 = _DeltaRot[0] * _Rot_init[2] + _DeltaRot[1] * _Rot_init[3] -
                       _DeltaRot[2] * _Rot_init[0] + _DeltaRot[3] * _Rot_init[1];
  const Scalar _tmp10 = 2 * _tmp3 * _tmp9;
  const Scalar _tmp11 = -2 * _DeltaRot[0] * _Rot_init[0] - 2 * _DeltaRot[1] * _Rot_init[1] -
                        2 * _DeltaRot[2] * _Rot_init[2] + 2 * _DeltaRot[3] * _Rot_init[3];
  const Scalar _tmp12 = _tmp11 * _tmp5;
  const Scalar _tmp13 = Scalar(0.20999999999999999) * _tmp10 + Scalar(0.20999999999999999) * _tmp12;
  const Scalar _tmp14 = 2 * _tmp5;
  const Scalar _tmp15 = _tmp14 * _tmp9;
  const Scalar _tmp16 = _tmp11 * _tmp3;
  const Scalar _tmp17 = _tmp15 - _tmp16;
  const Scalar _tmp18 = -Scalar(0.010999999999999999) * _tmp17;
  const Scalar _tmp19 = -_tmp13 + _tmp18;
  const Scalar _tmp20 = _tmp19 + _tmp8;
  const Scalar _tmp21 = _tmp20 + position_vector(1, 0);
  const Scalar _tmp22 = Scalar(0.20999999999999999) * _tmp10 - Scalar(0.20999999999999999) * _tmp12;
  const Scalar _tmp23 = -_tmp22;
  const Scalar _tmp24 = -2 * std::pow(_tmp9, Scalar(2));
  const Scalar _tmp25 = Scalar(0.20999999999999999) * _tmp24 + Scalar(0.20999999999999999) * _tmp6;
  const Scalar _tmp26 = _tmp14 * _tmp3;
  const Scalar _tmp27 = _tmp11 * _tmp9;
  const Scalar _tmp28 = _tmp26 + _tmp27;
  const Scalar _tmp29 = -Scalar(0.010999999999999999) * _tmp28;
  const Scalar _tmp30 = -_tmp25 + _tmp29;
  const Scalar _tmp31 = _tmp23 + _tmp30;
  const Scalar _tmp32 = _tmp31 + position_vector(0, 0);
  const Scalar _tmp33 = Scalar(1.4083112389913199) * fh1;
  const Scalar _tmp34 = Scalar(0.20999999999999999) * _tmp15 + Scalar(0.20999999999999999) * _tmp16;
  const Scalar _tmp35 = -_tmp34;
  const Scalar _tmp36 = -Scalar(0.010999999999999999) * _tmp24 -
                        Scalar(0.010999999999999999) * _tmp4 + Scalar(-0.010999999999999999);
  const Scalar _tmp37 = Scalar(0.20999999999999999) * _tmp26 - Scalar(0.20999999999999999) * _tmp27;
  const Scalar _tmp38 = _tmp36 - _tmp37;
  const Scalar _tmp39 = _tmp35 + _tmp38;
  const Scalar _tmp40 = _tmp25 + _tmp29;
  const Scalar _tmp41 = _tmp23 + _tmp40;
  const Scalar _tmp42 = _tmp41 + position_vector(0, 0);
  const Scalar _tmp43 = _tmp42 - p_b(0, 0);
  const Scalar _tmp44 = _tmp13 + _tmp18;
  const Scalar _tmp45 = _tmp44 + _tmp8;
  const Scalar _tmp46 = _tmp45 + position_vector(1, 0);
  const Scalar _tmp47 = _tmp46 - p_b(1, 0);
  const Scalar _tmp48 =
      std::sqrt(Scalar(std::pow(_tmp43, Scalar(2)) + std::pow(_tmp47, Scalar(2))));
  const Scalar _tmp49 = Scalar(1.0) / (_tmp48);
  const Scalar _tmp50 = Scalar(1.0) / (_tmp43);
  const Scalar _tmp51 = _tmp48 * _tmp50;
  const Scalar _tmp52 = _tmp51 * (_tmp41 * _tmp47 * _tmp49 - _tmp43 * _tmp45 * _tmp49);
  const Scalar _tmp53 = _tmp36 + _tmp37;
  const Scalar _tmp54 = _tmp35 + _tmp53;
  const Scalar _tmp55 = _tmp47 * _tmp50;
  const Scalar _tmp56 = _tmp34 + _tmp38;
  const Scalar _tmp57 = _tmp22 + _tmp30;
  const Scalar _tmp58 = _tmp57 + position_vector(0, 0);
  const Scalar _tmp59 = _tmp58 - p_d(0, 0);
  const Scalar _tmp60 = _tmp19 + _tmp7;
  const Scalar _tmp61 = _tmp60 + position_vector(1, 0);
  const Scalar _tmp62 = _tmp61 - p_d(1, 0);
  const Scalar _tmp63 = std::pow(Scalar(std::pow(_tmp59, Scalar(2)) + std::pow(_tmp62, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp64 = _tmp62 * _tmp63;
  const Scalar _tmp65 = _tmp59 * _tmp63;
  const Scalar _tmp66 = _tmp54 * _tmp65;
  const Scalar _tmp67 = -_tmp55 * _tmp66 + _tmp56 * _tmp64;
  const Scalar _tmp68 = Scalar(1.0) / (_tmp55 * _tmp65 - _tmp64);
  const Scalar _tmp69 = _tmp55 * _tmp68;
  const Scalar _tmp70 = _tmp54 * _tmp55 + _tmp67 * _tmp69;
  const Scalar _tmp71 = Scalar(1.0) * _tmp41;
  const Scalar _tmp72 = Scalar(1.0) * _tmp45;
  const Scalar _tmp73 = -_tmp72;
  const Scalar _tmp74 = Scalar(1.0) / (_tmp60 + _tmp73);
  const Scalar _tmp75 = _tmp74 * (-_tmp57 + _tmp71);
  const Scalar _tmp76 = -_tmp56 * _tmp65 + _tmp66;
  const Scalar _tmp77 = -_tmp54 + _tmp69 * _tmp76 - _tmp70 * _tmp75;
  const Scalar _tmp78 = _tmp34 + _tmp53;
  const Scalar _tmp79 = _tmp22 + _tmp40;
  const Scalar _tmp80 = _tmp79 + position_vector(0, 0);
  const Scalar _tmp81 = _tmp80 - p_c(0, 0);
  const Scalar _tmp82 = _tmp44 + _tmp7;
  const Scalar _tmp83 = _tmp82 + position_vector(1, 0);
  const Scalar _tmp84 = _tmp83 - p_c(1, 0);
  const Scalar _tmp85 = std::pow(Scalar(std::pow(_tmp81, Scalar(2)) + std::pow(_tmp84, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp86 = _tmp81 * _tmp85;
  const Scalar _tmp87 = _tmp84 * _tmp85;
  const Scalar _tmp88 = _tmp55 * _tmp86 - _tmp87;
  const Scalar _tmp89 = _tmp68 * _tmp88;
  const Scalar _tmp90 = _tmp54 * _tmp86;
  const Scalar _tmp91 = -_tmp55 * _tmp90 - _tmp67 * _tmp89 + _tmp78 * _tmp87;
  const Scalar _tmp92 = -_tmp75 * _tmp91 - _tmp76 * _tmp89 - _tmp78 * _tmp86 + _tmp90;
  const Scalar _tmp93 = Scalar(1.0) / (_tmp92);
  const Scalar _tmp94 = _tmp52 * _tmp65 - _tmp57 * _tmp64 + _tmp60 * _tmp65;
  const Scalar _tmp95 = _tmp52 * _tmp86 - _tmp79 * _tmp87 + _tmp82 * _tmp86 - _tmp89 * _tmp94;
  const Scalar _tmp96 = _tmp93 * _tmp95;
  const Scalar _tmp97 = Scalar(1.0) / (_tmp95);
  const Scalar _tmp98 = _tmp92 * _tmp97;
  const Scalar _tmp99 = _tmp98 * (-_tmp52 + _tmp69 * _tmp94 - _tmp77 * _tmp96);
  const Scalar _tmp100 = _tmp93 * (_tmp77 + _tmp99);
  const Scalar _tmp101 = -_tmp100 * _tmp88 - _tmp55;
  const Scalar _tmp102 = _tmp65 * _tmp68;
  const Scalar _tmp103 = _tmp32 - p_a(0, 0);
  const Scalar _tmp104 = _tmp21 - p_a(1, 0);
  const Scalar _tmp105 =
      std::pow(Scalar(std::pow(_tmp103, Scalar(2)) + std::pow(_tmp104, Scalar(2))),
               Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp106 = _tmp103 * _tmp105;
  const Scalar _tmp107 = _tmp106 * fh1;
  const Scalar _tmp108 = Scalar(1.0) * _tmp97;
  const Scalar _tmp109 = Scalar(1.0) * _tmp68;
  const Scalar _tmp110 = _tmp109 * _tmp88 * _tmp97;
  const Scalar _tmp111 = _tmp104 * _tmp105;
  const Scalar _tmp112 = fh1 * (-_tmp106 * _tmp20 + _tmp111 * _tmp31);
  const Scalar _tmp113 = _tmp109 * _tmp67;
  const Scalar _tmp114 = -_tmp109 * _tmp76 + _tmp113 * _tmp75;
  const Scalar _tmp115 = _tmp98 * (-_tmp109 * _tmp94 - _tmp114 * _tmp96);
  const Scalar _tmp116 = _tmp93 * (_tmp114 + _tmp115);
  const Scalar _tmp117 = -_tmp116 * _tmp88 + Scalar(1.0);
  const Scalar _tmp118 = _tmp111 * fh1;
  const Scalar _tmp119 = Scalar(333.54000000000002) - fv1;
  const Scalar _tmp120 = _tmp71 + _tmp72 * _tmp75;
  const Scalar _tmp121 = 0;
  const Scalar _tmp122 = -_tmp107 * _tmp51 * (_tmp100 * _tmp86 + _tmp101 * _tmp102 + Scalar(1.0)) -
                         _tmp112 * _tmp51 * (_tmp108 * _tmp86 - _tmp110 * _tmp65) -
                         _tmp118 * _tmp51 * (_tmp102 * _tmp117 + _tmp116 * _tmp86) -
                         _tmp119 * _tmp51 * (-_tmp121 * _tmp65 * _tmp89 + _tmp121 * _tmp86);
  const Scalar _tmp123 = Scalar(1.0) / (_tmp122);
  const Scalar _tmp124 = _tmp73 + _tmp82;
  const Scalar _tmp125 = _tmp124 * _tmp75;
  const Scalar _tmp126 = Scalar(1.0) / (-_tmp125 + _tmp71 - _tmp79);
  const Scalar _tmp127 = Scalar(1.0) * _tmp126;
  const Scalar _tmp128 = _tmp127 * _tmp98;
  const Scalar _tmp129 = _tmp124 * _tmp127;
  const Scalar _tmp130 = -_tmp108 * _tmp91 + _tmp129 * _tmp98;
  const Scalar _tmp131 = Scalar(1.0) * _tmp74;
  const Scalar _tmp132 = _tmp39 * fh1;
  const Scalar _tmp133 = -_tmp111 * _tmp132 - Scalar(40.024799999999999) * _tmp17 - _tmp20 * fv1;
  const Scalar _tmp134 = _tmp125 * _tmp127 + Scalar(1.0);
  const Scalar _tmp135 = _tmp127 * _tmp75;
  const Scalar _tmp136 = _tmp106 * _tmp132 + Scalar(40.024799999999999) * _tmp28 + _tmp31 * fv1;
  const Scalar _tmp137 = _tmp124 * _tmp126;
  const Scalar _tmp138 = -_tmp113 + _tmp115 * _tmp137 - _tmp116 * _tmp91;
  const Scalar _tmp139 = -_tmp100 * _tmp91 + _tmp137 * _tmp99 + _tmp70;
  const Scalar _tmp140 = _tmp120 * _tmp126;
  const Scalar _tmp141 = -_tmp121 * _tmp91 - _tmp124 * _tmp140 + _tmp73;
  const Scalar _tmp142 = std::asinh(
      _tmp123 * (Scalar(1.0) * _tmp107 * (_tmp127 * _tmp99 - _tmp131 * _tmp139) +
                 Scalar(1.0) * _tmp112 * (_tmp128 - _tmp130 * _tmp131) +
                 Scalar(1.0) * _tmp118 * (_tmp115 * _tmp127 - _tmp131 * _tmp138) +
                 Scalar(1.0) * _tmp119 * (-_tmp120 * _tmp127 - _tmp131 * _tmp141 + Scalar(1.0)) +
                 Scalar(1.0) * _tmp133 * (-_tmp131 * _tmp134 + _tmp135) +
                 Scalar(1.0) * _tmp136 * (-_tmp127 + _tmp129 * _tmp74)));
  const Scalar _tmp143 = Scalar(0.71007031138673404) * _tmp123;
  const Scalar _tmp144 = Scalar(1.4083112389913199) * _tmp122;
  const Scalar _tmp145 = _tmp119 * _tmp121;
  const Scalar _tmp146 = _tmp101 * _tmp107 * _tmp68 - _tmp110 * _tmp112 +
                         _tmp117 * _tmp118 * _tmp68 - _tmp145 * _tmp89;
  const Scalar _tmp147 = Scalar(1.0) / (_tmp146);
  const Scalar _tmp148 = _tmp127 * _tmp136;
  const Scalar _tmp149 =
      std::asinh(_tmp147 * (_tmp107 * _tmp139 * _tmp74 + _tmp112 * _tmp130 * _tmp74 +
                            _tmp118 * _tmp138 * _tmp74 + _tmp119 * _tmp141 * _tmp74 -
                            _tmp124 * _tmp148 * _tmp74 + _tmp133 * _tmp134 * _tmp74));
  const Scalar _tmp150 = Scalar(1.4083112389913199) * _tmp146;
  const Scalar _tmp151 = Scalar(0.71007031138673404) * _tmp147;
  const Scalar _tmp152 = _tmp100 * _tmp107 + _tmp108 * _tmp112 + _tmp116 * _tmp118 + _tmp145;
  const Scalar _tmp153 = Scalar(1.0) / (_tmp152);
  const Scalar _tmp154 = Scalar(0.71007031138673404) * _tmp153;
  const Scalar _tmp155 = std::asinh(_tmp153 * (-_tmp107 * _tmp126 * _tmp99 - _tmp112 * _tmp128 -
                                               _tmp115 * _tmp118 * _tmp126 + _tmp119 * _tmp140 -
                                               _tmp133 * _tmp135 + _tmp148));
  const Scalar _tmp156 = Scalar(1.4083112389913199) * _tmp152;

  // Output terms (1)
  Eigen::Matrix<Scalar, 4, 1> _res;

  _res(0, 0) =
      -_tmp33 * (_tmp2 * p_a(2, 0) + std::cosh(Scalar(1.0) * _tmp1) -
                 std::cosh(_tmp2 *
                           (-_tmp1 * _tmp33 -
                            std::sqrt(Scalar(std::pow(Scalar(-_tmp21 + p_a(1, 0)), Scalar(2)) +
                                             std::pow(Scalar(-_tmp32 + p_a(0, 0)), Scalar(2))))))) +
      _tmp39 + position_vector(2, 0);
  _res(1, 0) =
      -_tmp144 *
          (_tmp143 * p_b(2, 0) + std::cosh(Scalar(1.0) * _tmp142) -
           std::cosh(_tmp143 *
                     (-_tmp142 * _tmp144 -
                      std::sqrt(Scalar(std::pow(Scalar(-_tmp42 + p_b(0, 0)), Scalar(2)) +
                                       std::pow(Scalar(-_tmp46 + p_b(1, 0)), Scalar(2))))))) +
      _tmp54 + position_vector(2, 0);
  _res(2, 0) =
      -_tmp150 *
          (_tmp151 * p_d(2, 0) + std::cosh(Scalar(1.0) * _tmp149) -
           std::cosh(_tmp151 *
                     (-_tmp149 * _tmp150 -
                      std::sqrt(Scalar(std::pow(Scalar(-_tmp58 + p_d(0, 0)), Scalar(2)) +
                                       std::pow(Scalar(-_tmp61 + p_d(1, 0)), Scalar(2))))))) +
      _tmp56 + position_vector(2, 0);
  _res(3, 0) =
      -_tmp156 *
          (_tmp154 * p_c(2, 0) + std::cosh(Scalar(1.0) * _tmp155) -
           std::cosh(_tmp154 *
                     (-_tmp155 * _tmp156 -
                      std::sqrt(Scalar(std::pow(Scalar(-_tmp80 + p_c(0, 0)), Scalar(2)) +
                                       std::pow(Scalar(-_tmp83 + p_c(1, 0)), Scalar(2))))))) +
      _tmp78 + position_vector(2, 0);

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
