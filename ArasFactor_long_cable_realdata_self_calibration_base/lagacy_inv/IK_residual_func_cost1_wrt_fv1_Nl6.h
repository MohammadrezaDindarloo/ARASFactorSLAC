// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

#include <sym/rot3.h>

namespace sym {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: IK_residual_func_cost1_wrt_fv1_Nl6
 *
 * Args:
 *     fh1: Scalar
 *     fv1: Scalar
 *     DeltaRot: Rot3
 *     position_vector: Matrix31
 *     encoder: Matrix41
 *     p_a: Matrix31
 *     p_b: Matrix31
 *     p_c: Matrix31
 *     p_d: Matrix31
 *     Rot_init: Rot3
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix41
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 4, 1> IkResidualFuncCost1WrtFv1Nl6(
    const Scalar fh1, const Scalar fv1, const sym::Rot3<Scalar>& DeltaRot,
    const Eigen::Matrix<Scalar, 3, 1>& position_vector, const Eigen::Matrix<Scalar, 4, 1>& encoder,
    const Eigen::Matrix<Scalar, 3, 1>& p_a, const Eigen::Matrix<Scalar, 3, 1>& p_b,
    const Eigen::Matrix<Scalar, 3, 1>& p_c, const Eigen::Matrix<Scalar, 3, 1>& p_d,
    const sym::Rot3<Scalar>& Rot_init, const Scalar epsilon) {
  // Total ops: 591

  // Unused inputs
  (void)encoder;
  (void)epsilon;

  // Input arrays
  const Eigen::Matrix<Scalar, 4, 1>& _DeltaRot = DeltaRot.Data();
  const Eigen::Matrix<Scalar, 4, 1>& _Rot_init = Rot_init.Data();

  // Intermediate terms (198)
  const Scalar _tmp0 = Scalar(1.0) / (fh1);
  const Scalar _tmp1 = std::asinh(_tmp0 * fv1);
  const Scalar _tmp2 = Scalar(1.0) * _tmp0 /
                       std::sqrt(Scalar(1 + std::pow(fv1, Scalar(2)) / std::pow(fh1, Scalar(2))));
  const Scalar _tmp3 = _DeltaRot[0] * _Rot_init[3] - _DeltaRot[1] * _Rot_init[2] +
                       _DeltaRot[2] * _Rot_init[1] + _DeltaRot[3] * _Rot_init[0];
  const Scalar _tmp4 = -2 * std::pow(_tmp3, Scalar(2));
  const Scalar _tmp5 = -_DeltaRot[0] * _Rot_init[1] + _DeltaRot[1] * _Rot_init[0] +
                       _DeltaRot[2] * _Rot_init[3] + _DeltaRot[3] * _Rot_init[2];
  const Scalar _tmp6 = 1 - 2 * std::pow(_tmp5, Scalar(2));
  const Scalar _tmp7 = Scalar(0.20999999999999999) * _tmp4 + Scalar(0.20999999999999999) * _tmp6;
  const Scalar _tmp8 = -_tmp7;
  const Scalar _tmp9 = _DeltaRot[0] * _Rot_init[2] + _DeltaRot[1] * _Rot_init[3] -
                       _DeltaRot[2] * _Rot_init[0] + _DeltaRot[3] * _Rot_init[1];
  const Scalar _tmp10 = 2 * _tmp5 * _tmp9;
  const Scalar _tmp11 = -2 * _DeltaRot[0] * _Rot_init[0] - 2 * _DeltaRot[1] * _Rot_init[1] -
                        2 * _DeltaRot[2] * _Rot_init[2] + 2 * _DeltaRot[3] * _Rot_init[3];
  const Scalar _tmp12 = _tmp11 * _tmp3;
  const Scalar _tmp13 = _tmp10 - _tmp12;
  const Scalar _tmp14 = Scalar(0.010999999999999999) * _tmp13;
  const Scalar _tmp15 = -_tmp14;
  const Scalar _tmp16 = 2 * _tmp3;
  const Scalar _tmp17 = _tmp16 * _tmp9;
  const Scalar _tmp18 = _tmp11 * _tmp5;
  const Scalar _tmp19 = Scalar(0.20999999999999999) * _tmp17 + Scalar(0.20999999999999999) * _tmp18;
  const Scalar _tmp20 = _tmp15 + _tmp19;
  const Scalar _tmp21 = _tmp20 + _tmp8;
  const Scalar _tmp22 = _tmp21 + position_vector(1, 0);
  const Scalar _tmp23 = Scalar(0.20999999999999999) * _tmp17 - Scalar(0.20999999999999999) * _tmp18;
  const Scalar _tmp24 = -_tmp23;
  const Scalar _tmp25 = -2 * std::pow(_tmp9, Scalar(2));
  const Scalar _tmp26 = Scalar(0.20999999999999999) * _tmp25 + Scalar(0.20999999999999999) * _tmp6;
  const Scalar _tmp27 = _tmp16 * _tmp5;
  const Scalar _tmp28 = _tmp11 * _tmp9;
  const Scalar _tmp29 = _tmp27 + _tmp28;
  const Scalar _tmp30 = -Scalar(0.010999999999999999) * _tmp29;
  const Scalar _tmp31 = _tmp26 + _tmp30;
  const Scalar _tmp32 = _tmp24 + _tmp31;
  const Scalar _tmp33 = _tmp32 + position_vector(0, 0);
  const Scalar _tmp34 = Scalar(1.4083112389913199) * fh1;
  const Scalar _tmp35 = -_tmp26 + _tmp30;
  const Scalar _tmp36 = _tmp24 + _tmp35;
  const Scalar _tmp37 = _tmp36 + position_vector(0, 0);
  const Scalar _tmp38 = _tmp37 - p_a(0, 0);
  const Scalar _tmp39 = Scalar(1.0) / (_tmp38);
  const Scalar _tmp40 = -_tmp19;
  const Scalar _tmp41 = _tmp15 + _tmp40;
  const Scalar _tmp42 = _tmp41 + _tmp8;
  const Scalar _tmp43 = _tmp42 + position_vector(1, 0);
  const Scalar _tmp44 = _tmp43 - p_a(1, 0);
  const Scalar _tmp45 = _tmp39 * _tmp44;
  const Scalar _tmp46 =
      std::sqrt(Scalar(std::pow(_tmp38, Scalar(2)) + std::pow(_tmp44, Scalar(2))));
  const Scalar _tmp47 = Scalar(1.0) / (_tmp46);
  const Scalar _tmp48 = _tmp39 * _tmp46;
  const Scalar _tmp49 = _tmp48 * (_tmp36 * _tmp44 * _tmp47 - _tmp38 * _tmp42 * _tmp47);
  const Scalar _tmp50 = Scalar(0.20999999999999999) * _tmp27 - Scalar(0.20999999999999999) * _tmp28;
  const Scalar _tmp51 = -_tmp50;
  const Scalar _tmp52 = -Scalar(0.010999999999999999) * _tmp25 -
                        Scalar(0.010999999999999999) * _tmp4 + Scalar(-0.010999999999999999);
  const Scalar _tmp53 = Scalar(0.20999999999999999) * _tmp10 + Scalar(0.20999999999999999) * _tmp12;
  const Scalar _tmp54 = _tmp52 - _tmp53;
  const Scalar _tmp55 = _tmp51 + _tmp54;
  const Scalar _tmp56 = _tmp45 * _tmp55;
  const Scalar _tmp57 = _tmp52 + _tmp53;
  const Scalar _tmp58 = _tmp50 + _tmp57;
  const Scalar _tmp59 = _tmp20 + _tmp7;
  const Scalar _tmp60 = _tmp59 + position_vector(1, 0);
  const Scalar _tmp61 = _tmp60 - p_c(1, 0);
  const Scalar _tmp62 = _tmp23 + _tmp31;
  const Scalar _tmp63 = _tmp62 + position_vector(0, 0);
  const Scalar _tmp64 = _tmp63 - p_c(0, 0);
  const Scalar _tmp65 = std::pow(Scalar(std::pow(_tmp61, Scalar(2)) + std::pow(_tmp64, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp66 = _tmp61 * _tmp65;
  const Scalar _tmp67 = _tmp64 * _tmp65;
  const Scalar _tmp68 = -_tmp56 * _tmp67 + _tmp58 * _tmp66;
  const Scalar _tmp69 = Scalar(1.0) / (_tmp45 * _tmp67 - _tmp66);
  const Scalar _tmp70 = _tmp45 * _tmp69;
  const Scalar _tmp71 = _tmp56 + _tmp68 * _tmp70;
  const Scalar _tmp72 = Scalar(1.0) * _tmp42;
  const Scalar _tmp73 = -_tmp72;
  const Scalar _tmp74 = Scalar(1.0) / (_tmp59 + _tmp73);
  const Scalar _tmp75 = Scalar(1.0) * _tmp36;
  const Scalar _tmp76 = -_tmp62 + _tmp75;
  const Scalar _tmp77 = _tmp74 * _tmp76;
  const Scalar _tmp78 = _tmp55 * _tmp67 - _tmp58 * _tmp67;
  const Scalar _tmp79 = -_tmp55 + _tmp70 * _tmp78 - _tmp71 * _tmp77;
  const Scalar _tmp80 = _tmp23 + _tmp35;
  const Scalar _tmp81 = _tmp80 + position_vector(0, 0);
  const Scalar _tmp82 = _tmp81 - p_d(0, 0);
  const Scalar _tmp83 = _tmp41 + _tmp7;
  const Scalar _tmp84 = _tmp83 + position_vector(1, 0);
  const Scalar _tmp85 = _tmp84 - p_d(1, 0);
  const Scalar _tmp86 = std::pow(Scalar(std::pow(_tmp82, Scalar(2)) + std::pow(_tmp85, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp87 = _tmp82 * _tmp86;
  const Scalar _tmp88 = _tmp55 * _tmp87;
  const Scalar _tmp89 = _tmp51 + _tmp57;
  const Scalar _tmp90 = _tmp85 * _tmp86;
  const Scalar _tmp91 = _tmp45 * _tmp87 - _tmp90;
  const Scalar _tmp92 = _tmp69 * _tmp91;
  const Scalar _tmp93 = -_tmp45 * _tmp88 - _tmp68 * _tmp92 + _tmp89 * _tmp90;
  const Scalar _tmp94 = -_tmp77 * _tmp93 - _tmp78 * _tmp92 - _tmp87 * _tmp89 + _tmp88;
  const Scalar _tmp95 = Scalar(1.0) / (_tmp94);
  const Scalar _tmp96 = _tmp49 * _tmp67 + _tmp59 * _tmp67 - _tmp62 * _tmp66;
  const Scalar _tmp97 = _tmp49 * _tmp87 - _tmp80 * _tmp90 + _tmp83 * _tmp87 - _tmp92 * _tmp96;
  const Scalar _tmp98 = _tmp95 * _tmp97;
  const Scalar _tmp99 = Scalar(1.0) / (_tmp97);
  const Scalar _tmp100 = _tmp94 * _tmp99;
  const Scalar _tmp101 = _tmp100 * (-_tmp49 + _tmp70 * _tmp96 - _tmp79 * _tmp98);
  const Scalar _tmp102 = _tmp101 + _tmp79;
  const Scalar _tmp103 = _tmp91 * _tmp95;
  const Scalar _tmp104 = -_tmp102 * _tmp103 - _tmp45;
  const Scalar _tmp105 = _tmp67 * _tmp69;
  const Scalar _tmp106 = _tmp87 * _tmp95;
  const Scalar _tmp107 = _tmp33 - p_b(0, 0);
  const Scalar _tmp108 = _tmp22 - p_b(1, 0);
  const Scalar _tmp109 =
      std::pow(Scalar(std::pow(_tmp107, Scalar(2)) + std::pow(_tmp108, Scalar(2))),
               Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp110 = _tmp107 * _tmp109;
  const Scalar _tmp111 = _tmp110 * fh1;
  const Scalar _tmp112 = Scalar(1.0) * _tmp69;
  const Scalar _tmp113 = Scalar(1.0) * _tmp74;
  const Scalar _tmp114 = -_tmp112 * _tmp78 + _tmp113 * _tmp68 * _tmp69 * _tmp76;
  const Scalar _tmp115 = _tmp100 * (-_tmp112 * _tmp96 - _tmp114 * _tmp98);
  const Scalar _tmp116 = _tmp114 + _tmp115;
  const Scalar _tmp117 = -_tmp103 * _tmp116 + Scalar(1.0);
  const Scalar _tmp118 = _tmp108 * _tmp109;
  const Scalar _tmp119 = _tmp118 * fh1;
  const Scalar _tmp120 = Scalar(333.54000000000002) - fv1;
  const Scalar _tmp121 = _tmp72 * _tmp77 + _tmp75;
  const Scalar _tmp122 = 0;
  const Scalar _tmp123 = _tmp122 * _tmp92;
  const Scalar _tmp124 = _tmp48 * (_tmp122 * _tmp87 - _tmp123 * _tmp67);
  const Scalar _tmp125 = Scalar(1.0) * _tmp99;
  const Scalar _tmp126 = _tmp112 * _tmp91 * _tmp99;
  const Scalar _tmp127 = fh1 * (-_tmp110 * _tmp21 + _tmp118 * _tmp32);
  const Scalar _tmp128 = -_tmp111 * _tmp48 * (_tmp102 * _tmp106 + _tmp104 * _tmp105 + Scalar(1.0)) -
                         _tmp119 * _tmp48 * (_tmp105 * _tmp117 + _tmp106 * _tmp116) -
                         _tmp120 * _tmp124 -
                         _tmp127 * _tmp48 * (_tmp125 * _tmp87 - _tmp126 * _tmp67);
  const Scalar _tmp129 = Scalar(1.0) / (_tmp128);
  const Scalar _tmp130 = _tmp73 + _tmp83;
  const Scalar _tmp131 = _tmp130 * _tmp77;
  const Scalar _tmp132 = Scalar(1.0) / (-_tmp131 + _tmp75 - _tmp80);
  const Scalar _tmp133 = _tmp121 * _tmp132;
  const Scalar _tmp134 = _tmp74 * (-_tmp122 * _tmp93 - _tmp130 * _tmp133 + _tmp73);
  const Scalar _tmp135 = -Scalar(1.0) * _tmp133 - Scalar(1.0) * _tmp134 + Scalar(1.0);
  const Scalar _tmp136 = _tmp130 * _tmp132;
  const Scalar _tmp137 = _tmp93 * _tmp95;
  const Scalar _tmp138 = _tmp101 * _tmp136 - _tmp102 * _tmp137 + _tmp71;
  const Scalar _tmp139 = Scalar(1.0) * _tmp132;
  const Scalar _tmp140 = Scalar(1.0) * fh1;
  const Scalar _tmp141 = fh1 * (_tmp50 + _tmp54);
  const Scalar _tmp142 = _tmp110 * _tmp141 + Scalar(40.024799999999999) * _tmp29 + _tmp32 * fv1;
  const Scalar _tmp143 = _tmp130 * _tmp74;
  const Scalar _tmp144 = Scalar(1.0) * _tmp139 * _tmp143 - Scalar(1.0) * _tmp139;
  const Scalar _tmp145 = _tmp100 * _tmp139;
  const Scalar _tmp146 = -_tmp125 * _tmp93 + _tmp130 * _tmp145;
  const Scalar _tmp147 = -_tmp112 * _tmp68 + _tmp115 * _tmp136 - _tmp116 * _tmp137;
  const Scalar _tmp148 = -_tmp118 * _tmp141 - Scalar(40.024799999999999) * _tmp13 - _tmp21 * fv1;
  const Scalar _tmp149 = _tmp131 * _tmp139 + Scalar(1.0);
  const Scalar _tmp150 = _tmp139 * _tmp77;
  const Scalar _tmp151 = -Scalar(1.0) * _tmp113 * _tmp149 + Scalar(1.0) * _tmp150;
  const Scalar _tmp152 = _tmp110 * _tmp140 * (_tmp101 * _tmp139 - _tmp113 * _tmp138) +
                         _tmp118 * _tmp140 * (-_tmp113 * _tmp147 + _tmp115 * _tmp139) +
                         _tmp120 * _tmp135 +
                         Scalar(1.0) * _tmp127 * (-_tmp113 * _tmp146 + _tmp145) +
                         _tmp142 * _tmp144 + _tmp148 * _tmp151;
  const Scalar _tmp153 = std::asinh(_tmp129 * _tmp152);
  const Scalar _tmp154 = Scalar(1.0) * _tmp153;
  const Scalar _tmp155 = Scalar(0.71007031138673404) * _tmp129;
  const Scalar _tmp156 = Scalar(1.4083112389913199) * _tmp128;
  const Scalar _tmp157 =
      -_tmp153 * _tmp156 - std::sqrt(Scalar(std::pow(Scalar(-_tmp37 + p_a(0, 0)), Scalar(2)) +
                                            std::pow(Scalar(-_tmp43 + p_a(1, 0)), Scalar(2))));
  const Scalar _tmp158 = _tmp155 * _tmp157;
  const Scalar _tmp159 = Scalar(1.4083112389913199) * _tmp124;
  const Scalar _tmp160 = std::pow(_tmp128, Scalar(-2));
  const Scalar _tmp161 = _tmp124 * _tmp160;
  const Scalar _tmp162 = Scalar(0.71007031138673404) * _tmp161;
  const Scalar _tmp163 = _tmp14 + _tmp40 + _tmp7;
  const Scalar _tmp164 =
      (_tmp129 * (-_tmp135 + _tmp144 * _tmp32 + _tmp151 * _tmp163) - _tmp152 * _tmp161) /
      std::sqrt(Scalar(std::pow(_tmp152, Scalar(2)) * _tmp160 + 1));
  const Scalar _tmp165 = _tmp139 * _tmp142;
  const Scalar _tmp166 = _tmp149 * _tmp74;
  const Scalar _tmp167 = _tmp111 * _tmp138 * _tmp74 + _tmp119 * _tmp147 * _tmp74 +
                         _tmp120 * _tmp134 + _tmp127 * _tmp146 * _tmp74 - _tmp143 * _tmp165 +
                         _tmp148 * _tmp166;
  const Scalar _tmp168 = _tmp120 * _tmp122;
  const Scalar _tmp169 = _tmp104 * _tmp111 * _tmp69 + _tmp117 * _tmp119 * _tmp69 -
                         _tmp126 * _tmp127 - _tmp168 * _tmp92;
  const Scalar _tmp170 = Scalar(1.0) / (_tmp169);
  const Scalar _tmp171 = std::asinh(_tmp167 * _tmp170);
  const Scalar _tmp172 = Scalar(1.0) * _tmp171;
  const Scalar _tmp173 = std::pow(_tmp169, Scalar(-2));
  const Scalar _tmp174 = _tmp139 * _tmp32;
  const Scalar _tmp175 = _tmp123 * _tmp173;
  const Scalar _tmp176 =
      (-_tmp167 * _tmp175 + _tmp170 * (-_tmp134 - _tmp143 * _tmp174 + _tmp163 * _tmp166)) /
      std::sqrt(Scalar(std::pow(_tmp167, Scalar(2)) * _tmp173 + 1));
  const Scalar _tmp177 = Scalar(1.4083112389913199) * _tmp169;
  const Scalar _tmp178 =
      -_tmp171 * _tmp177 - std::sqrt(Scalar(std::pow(Scalar(-_tmp60 + p_c(1, 0)), Scalar(2)) +
                                            std::pow(Scalar(-_tmp63 + p_c(0, 0)), Scalar(2))));
  const Scalar _tmp179 = Scalar(0.71007031138673404) * _tmp175;
  const Scalar _tmp180 = Scalar(1.4083112389913199) * _tmp122;
  const Scalar _tmp181 = _tmp180 * _tmp92;
  const Scalar _tmp182 = Scalar(0.71007031138673404) * _tmp170;
  const Scalar _tmp183 = _tmp178 * _tmp182;
  const Scalar _tmp184 = _tmp95 * fh1;
  const Scalar _tmp185 =
      _tmp102 * _tmp110 * _tmp184 + _tmp116 * _tmp118 * _tmp184 + _tmp125 * _tmp127 + _tmp168;
  const Scalar _tmp186 = std::pow(_tmp185, Scalar(-2));
  const Scalar _tmp187 = _tmp122 * _tmp186;
  const Scalar _tmp188 = Scalar(0.71007031138673404) * _tmp187;
  const Scalar _tmp189 = -_tmp101 * _tmp111 * _tmp132 - _tmp115 * _tmp119 * _tmp132 +
                         _tmp120 * _tmp133 - _tmp127 * _tmp145 - _tmp148 * _tmp150 + _tmp165;
  const Scalar _tmp190 = Scalar(1.0) / (_tmp185);
  const Scalar _tmp191 = std::asinh(_tmp189 * _tmp190);
  const Scalar _tmp192 = Scalar(1.4083112389913199) * _tmp185;
  const Scalar _tmp193 =
      -_tmp191 * _tmp192 - std::sqrt(Scalar(std::pow(Scalar(-_tmp81 + p_d(0, 0)), Scalar(2)) +
                                            std::pow(Scalar(-_tmp84 + p_d(1, 0)), Scalar(2))));
  const Scalar _tmp194 = Scalar(0.71007031138673404) * _tmp190;
  const Scalar _tmp195 = _tmp193 * _tmp194;
  const Scalar _tmp196 = (_tmp187 * _tmp189 + _tmp190 * (-_tmp133 - _tmp150 * _tmp163 + _tmp174)) /
                         std::sqrt(Scalar(_tmp186 * std::pow(_tmp189, Scalar(2)) + 1));
  const Scalar _tmp197 = Scalar(1.0) * _tmp191;

  // Output terms (1)
  Eigen::Matrix<Scalar, 4, 1> _res;

  _res(0, 0) =
      -_tmp34 *
      (_tmp2 * std::sinh(Scalar(1.0) * _tmp1) +
       _tmp2 * std::sinh(Scalar(0.71007031138673404) * _tmp0 *
                         (-_tmp1 * _tmp34 -
                          std::sqrt(Scalar(std::pow(Scalar(-_tmp22 + p_b(1, 0)), Scalar(2)) +
                                           std::pow(Scalar(-_tmp33 + p_b(0, 0)), Scalar(2)))))));
  _res(1, 0) =
      -_tmp156 * (-_tmp162 * p_a(2, 0) + Scalar(1.0) * _tmp164 * std::sinh(_tmp154) -
                  (_tmp155 * (-_tmp153 * _tmp159 - _tmp156 * _tmp164) - _tmp157 * _tmp162) *
                      std::sinh(_tmp158)) -
      _tmp159 * (_tmp155 * p_a(2, 0) + std::cosh(_tmp154) - std::cosh(_tmp158));
  _res(2, 0) =
      -_tmp177 * (Scalar(1.0) * _tmp176 * std::sinh(_tmp172) - _tmp179 * p_c(2, 0) -
                  (-_tmp178 * _tmp179 + _tmp182 * (-_tmp171 * _tmp181 - _tmp176 * _tmp177)) *
                      std::sinh(_tmp183)) -
      _tmp181 * (_tmp182 * p_c(2, 0) + std::cosh(_tmp172) - std::cosh(_tmp183));
  _res(3, 0) = _tmp180 * (_tmp194 * p_d(2, 0) - std::cosh(_tmp195) + std::cosh(_tmp197)) -
               _tmp192 * (_tmp188 * p_d(2, 0) + Scalar(1.0) * _tmp196 * std::sinh(_tmp197) -
                          (_tmp188 * _tmp193 + _tmp194 * (_tmp180 * _tmp191 - _tmp192 * _tmp196)) *
                              std::sinh(_tmp195));

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
