// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

#include <sym/rot3.h>

namespace sym {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: IK_residual_func_cost2_Nl20
 *
 * Args:
 *     fh1: Scalar
 *     fv1: Scalar
 *     DeltaRot: Rot3
 *     position_vector: Matrix31
 *     encoder: Matrix41
 *     p_a: Matrix31
 *     p_b: Matrix31
 *     p_c: Matrix31
 *     p_d: Matrix31
 *     Rot_init: Rot3
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix41
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 4, 1> IkResidualFuncCost2Nl20(
    const Scalar fh1, const Scalar fv1, const sym::Rot3<Scalar>& DeltaRot,
    const Eigen::Matrix<Scalar, 3, 1>& position_vector, const Eigen::Matrix<Scalar, 4, 1>& encoder,
    const Eigen::Matrix<Scalar, 3, 1>& p_a, const Eigen::Matrix<Scalar, 3, 1>& p_b,
    const Eigen::Matrix<Scalar, 3, 1>& p_c, const Eigen::Matrix<Scalar, 3, 1>& p_d,
    const sym::Rot3<Scalar>& Rot_init, const Scalar epsilon) {
  // Total ops: 499

  // Unused inputs
  (void)encoder;
  (void)epsilon;

  // Input arrays
  const Eigen::Matrix<Scalar, 4, 1>& _DeltaRot = DeltaRot.Data();
  const Eigen::Matrix<Scalar, 4, 1>& _Rot_init = Rot_init.Data();

  // Intermediate terms (158)
  const Scalar _tmp0 = Scalar(1.0) / (fh1);
  const Scalar _tmp1 = _DeltaRot[0] * _Rot_init[2] + _DeltaRot[1] * _Rot_init[3] -
                       _DeltaRot[2] * _Rot_init[0] + _DeltaRot[3] * _Rot_init[1];
  const Scalar _tmp2 = _DeltaRot[0] * _Rot_init[3] - _DeltaRot[1] * _Rot_init[2] +
                       _DeltaRot[2] * _Rot_init[1] + _DeltaRot[3] * _Rot_init[0];
  const Scalar _tmp3 = 2 * _tmp1 * _tmp2;
  const Scalar _tmp4 = -_DeltaRot[0] * _Rot_init[1] + _DeltaRot[1] * _Rot_init[0] +
                       _DeltaRot[2] * _Rot_init[3] + _DeltaRot[3] * _Rot_init[2];
  const Scalar _tmp5 = -2 * _DeltaRot[0] * _Rot_init[0] - 2 * _DeltaRot[1] * _Rot_init[1] -
                       2 * _DeltaRot[2] * _Rot_init[2] + 2 * _DeltaRot[3] * _Rot_init[3];
  const Scalar _tmp6 = _tmp4 * _tmp5;
  const Scalar _tmp7 = Scalar(0.20999999999999999) * _tmp3 + Scalar(0.20999999999999999) * _tmp6;
  const Scalar _tmp8 = -_tmp7;
  const Scalar _tmp9 = -2 * std::pow(_tmp2, Scalar(2));
  const Scalar _tmp10 = 1 - 2 * std::pow(_tmp4, Scalar(2));
  const Scalar _tmp11 = Scalar(0.20999999999999999) * _tmp10 + Scalar(0.20999999999999999) * _tmp9;
  const Scalar _tmp12 = 2 * _tmp4;
  const Scalar _tmp13 = _tmp1 * _tmp12;
  const Scalar _tmp14 = _tmp2 * _tmp5;
  const Scalar _tmp15 = _tmp13 - _tmp14;
  const Scalar _tmp16 = -Scalar(0.010999999999999999) * _tmp15;
  const Scalar _tmp17 = _tmp11 + _tmp16;
  const Scalar _tmp18 = _tmp17 + _tmp8;
  const Scalar _tmp19 = _tmp18 + position_vector(1, 0);
  const Scalar _tmp20 = -2 * std::pow(_tmp1, Scalar(2));
  const Scalar _tmp21 = Scalar(0.20999999999999999) * _tmp10 + Scalar(0.20999999999999999) * _tmp20;
  const Scalar _tmp22 = -_tmp21;
  const Scalar _tmp23 = _tmp12 * _tmp2;
  const Scalar _tmp24 = _tmp1 * _tmp5;
  const Scalar _tmp25 = _tmp23 + _tmp24;
  const Scalar _tmp26 = -Scalar(0.010999999999999999) * _tmp25;
  const Scalar _tmp27 = Scalar(0.20999999999999999) * _tmp3 - Scalar(0.20999999999999999) * _tmp6;
  const Scalar _tmp28 = _tmp26 + _tmp27;
  const Scalar _tmp29 = _tmp22 + _tmp28;
  const Scalar _tmp30 = _tmp29 + position_vector(0, 0);
  const Scalar _tmp31 = std::pow(Scalar(-_tmp19 + p_d(1, 0)), Scalar(2)) +
                        std::pow(Scalar(-_tmp30 + p_d(0, 0)), Scalar(2));
  const Scalar _tmp32 = std::asinh(_tmp0 * fv1);
  const Scalar _tmp33 = Scalar(1.4083112389913199) * fh1;
  const Scalar _tmp34 = Scalar(0.20999999999999999) * _tmp13 + Scalar(0.20999999999999999) * _tmp14;
  const Scalar _tmp35 = -Scalar(0.010999999999999999) * _tmp20 -
                        Scalar(0.010999999999999999) * _tmp9 + Scalar(-0.010999999999999999);
  const Scalar _tmp36 = Scalar(0.20999999999999999) * _tmp23 - Scalar(0.20999999999999999) * _tmp24;
  const Scalar _tmp37 = _tmp35 - _tmp36;
  const Scalar _tmp38 = _tmp34 + _tmp37;
  const Scalar _tmp39 = -_tmp11 + _tmp16;
  const Scalar _tmp40 = _tmp39 + _tmp7;
  const Scalar _tmp41 = _tmp40 + position_vector(1, 0);
  const Scalar _tmp42 = _tmp26 - _tmp27;
  const Scalar _tmp43 = _tmp21 + _tmp42;
  const Scalar _tmp44 = _tmp43 + position_vector(0, 0);
  const Scalar _tmp45 = std::pow(Scalar(-_tmp41 + p_b(1, 0)), Scalar(2)) +
                        std::pow(Scalar(-_tmp44 + p_b(0, 0)), Scalar(2));
  const Scalar _tmp46 = -_tmp34;
  const Scalar _tmp47 = _tmp37 + _tmp46;
  const Scalar _tmp48 = _tmp22 + _tmp42;
  const Scalar _tmp49 = _tmp48 + position_vector(0, 0);
  const Scalar _tmp50 = _tmp49 - p_a(0, 0);
  const Scalar _tmp51 = _tmp39 + _tmp8;
  const Scalar _tmp52 = _tmp51 + position_vector(1, 0);
  const Scalar _tmp53 = _tmp52 - p_a(1, 0);
  const Scalar _tmp54 = std::pow(Scalar(std::pow(_tmp50, Scalar(2)) + std::pow(_tmp53, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp55 = _tmp50 * _tmp54;
  const Scalar _tmp56 = _tmp35 + _tmp36;
  const Scalar _tmp57 = _tmp46 + _tmp56;
  const Scalar _tmp58 = _tmp55 * _tmp57;
  const Scalar _tmp59 = _tmp44 - p_b(0, 0);
  const Scalar _tmp60 = Scalar(1.0) / (_tmp59);
  const Scalar _tmp61 = _tmp41 - p_b(1, 0);
  const Scalar _tmp62 = _tmp60 * _tmp61;
  const Scalar _tmp63 = _tmp53 * _tmp54;
  const Scalar _tmp64 = Scalar(1.0) / (_tmp55 * _tmp62 - _tmp63);
  const Scalar _tmp65 = _tmp64 * (-_tmp47 * _tmp55 + _tmp58);
  const Scalar _tmp66 = Scalar(1.0) * _tmp43;
  const Scalar _tmp67 = -_tmp48 + _tmp66;
  const Scalar _tmp68 = Scalar(1.0) * _tmp40;
  const Scalar _tmp69 = -_tmp68;
  const Scalar _tmp70 = Scalar(1.0) / (_tmp51 + _tmp69);
  const Scalar _tmp71 = Scalar(1.0) * _tmp70;
  const Scalar _tmp72 = _tmp64 * (_tmp47 * _tmp63 - _tmp58 * _tmp62);
  const Scalar _tmp73 = -Scalar(1.0) * _tmp65 + _tmp67 * _tmp71 * _tmp72;
  const Scalar _tmp74 = _tmp17 + _tmp7;
  const Scalar _tmp75 = _tmp21 + _tmp28;
  const Scalar _tmp76 = _tmp75 + position_vector(0, 0);
  const Scalar _tmp77 = _tmp76 - p_c(0, 0);
  const Scalar _tmp78 = _tmp74 + position_vector(1, 0);
  const Scalar _tmp79 = _tmp78 - p_c(1, 0);
  const Scalar _tmp80 = std::pow(Scalar(std::pow(_tmp77, Scalar(2)) + std::pow(_tmp79, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp81 = _tmp77 * _tmp80;
  const Scalar _tmp82 = _tmp79 * _tmp80;
  const Scalar _tmp83 =
      std::sqrt(Scalar(std::pow(_tmp59, Scalar(2)) + std::pow(_tmp61, Scalar(2))));
  const Scalar _tmp84 = Scalar(1.0) / (_tmp83);
  const Scalar _tmp85 = _tmp60 * _tmp83;
  const Scalar _tmp86 = _tmp85 * (-_tmp40 * _tmp59 * _tmp84 + _tmp43 * _tmp61 * _tmp84);
  const Scalar _tmp87 = _tmp62 * _tmp81 - _tmp82;
  const Scalar _tmp88 = _tmp64 * (-_tmp48 * _tmp63 + _tmp51 * _tmp55 + _tmp55 * _tmp86);
  const Scalar _tmp89 = _tmp74 * _tmp81 - _tmp75 * _tmp82 + _tmp81 * _tmp86 - _tmp87 * _tmp88;
  const Scalar _tmp90 = _tmp57 * _tmp81;
  const Scalar _tmp91 = _tmp34 + _tmp56;
  const Scalar _tmp92 = -_tmp62 * _tmp90 - _tmp72 * _tmp87 + _tmp82 * _tmp91;
  const Scalar _tmp93 = _tmp67 * _tmp70;
  const Scalar _tmp94 = -_tmp65 * _tmp87 - _tmp81 * _tmp91 + _tmp90 - _tmp92 * _tmp93;
  const Scalar _tmp95 = Scalar(1.0) / (_tmp94);
  const Scalar _tmp96 = _tmp89 * _tmp95;
  const Scalar _tmp97 = Scalar(1.0) / (_tmp89);
  const Scalar _tmp98 = _tmp94 * _tmp97;
  const Scalar _tmp99 = _tmp98 * (-_tmp73 * _tmp96 - Scalar(1.0) * _tmp88);
  const Scalar _tmp100 = _tmp73 + _tmp99;
  const Scalar _tmp101 = _tmp81 * _tmp95;
  const Scalar _tmp102 = _tmp87 * _tmp95;
  const Scalar _tmp103 = -_tmp100 * _tmp102 + Scalar(1.0);
  const Scalar _tmp104 = _tmp55 * _tmp64;
  const Scalar _tmp105 = _tmp30 - p_d(0, 0);
  const Scalar _tmp106 = _tmp19 - p_d(1, 0);
  const Scalar _tmp107 =
      std::pow(Scalar(std::pow(_tmp105, Scalar(2)) + std::pow(_tmp106, Scalar(2))),
               Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp108 = _tmp106 * _tmp107;
  const Scalar _tmp109 = _tmp108 * fh1;
  const Scalar _tmp110 = _tmp57 * _tmp62 + _tmp62 * _tmp72;
  const Scalar _tmp111 = -_tmp110 * _tmp93 - _tmp57 + _tmp62 * _tmp65;
  const Scalar _tmp112 = _tmp98 * (-_tmp111 * _tmp96 + _tmp62 * _tmp88 - _tmp86);
  const Scalar _tmp113 = _tmp111 + _tmp112;
  const Scalar _tmp114 = -_tmp102 * _tmp113 - _tmp62;
  const Scalar _tmp115 = _tmp105 * _tmp107;
  const Scalar _tmp116 = _tmp115 * fh1;
  const Scalar _tmp117 = Scalar(1.0) * _tmp97;
  const Scalar _tmp118 = fh1 * (_tmp108 * _tmp29 - _tmp115 * _tmp18);
  const Scalar _tmp119 = Scalar(333.54000000000002) - fv1;
  const Scalar _tmp120 = _tmp66 + _tmp68 * _tmp93;
  const Scalar _tmp121 = 0;
  const Scalar _tmp122 = _tmp102 * _tmp121;
  const Scalar _tmp123 = _tmp121 * _tmp95;
  const Scalar _tmp124 = -_tmp109 * _tmp85 * (_tmp100 * _tmp101 + _tmp103 * _tmp104) -
                         _tmp116 * _tmp85 * (_tmp101 * _tmp113 + _tmp104 * _tmp114 + Scalar(1.0)) -
                         _tmp118 * _tmp85 * (-_tmp104 * _tmp117 * _tmp87 + _tmp117 * _tmp81) -
                         _tmp119 * _tmp85 * (-_tmp104 * _tmp122 + _tmp123 * _tmp81);
  const Scalar _tmp125 = Scalar(1.0) / (_tmp124);
  const Scalar _tmp126 = _tmp69 + _tmp74;
  const Scalar _tmp127 = _tmp126 * _tmp93;
  const Scalar _tmp128 = Scalar(1.0) / (-_tmp127 + _tmp66 - _tmp75);
  const Scalar _tmp129 = Scalar(1.0) * _tmp128;
  const Scalar _tmp130 = _tmp92 * _tmp95;
  const Scalar _tmp131 = _tmp126 * _tmp128;
  const Scalar _tmp132 = -_tmp100 * _tmp130 + _tmp131 * _tmp99 - Scalar(1.0) * _tmp72;
  const Scalar _tmp133 = _tmp126 * _tmp70;
  const Scalar _tmp134 = _tmp38 * fh1;
  const Scalar _tmp135 = _tmp115 * _tmp134 + Scalar(40.024799999999999) * _tmp25 + _tmp29 * fv1;
  const Scalar _tmp136 = _tmp110 + _tmp112 * _tmp131 - _tmp113 * _tmp130;
  const Scalar _tmp137 = -_tmp108 * _tmp134 - Scalar(40.024799999999999) * _tmp15 - _tmp18 * fv1;
  const Scalar _tmp138 = _tmp127 * _tmp129 + Scalar(1.0);
  const Scalar _tmp139 = _tmp120 * _tmp128;
  const Scalar _tmp140 = -_tmp121 * _tmp130 - _tmp126 * _tmp139 + _tmp69;
  const Scalar _tmp141 = _tmp129 * _tmp98;
  const Scalar _tmp142 = -_tmp117 * _tmp92 + _tmp126 * _tmp141;
  const Scalar _tmp143 = std::asinh(
      _tmp125 * (Scalar(1.0) * _tmp109 * (_tmp129 * _tmp99 - _tmp132 * _tmp71) +
                 Scalar(1.0) * _tmp116 * (_tmp112 * _tmp129 - _tmp136 * _tmp71) +
                 Scalar(1.0) * _tmp118 * (_tmp141 - _tmp142 * _tmp71) +
                 Scalar(1.0) * _tmp119 * (-_tmp120 * _tmp129 - _tmp140 * _tmp71 + Scalar(1.0)) +
                 Scalar(1.0) * _tmp135 * (_tmp129 * _tmp133 - _tmp129) +
                 Scalar(1.0) * _tmp137 * (_tmp129 * _tmp93 - _tmp138 * _tmp71)));
  const Scalar _tmp144 = Scalar(1.4083112389913199) * _tmp124;
  const Scalar _tmp145 = std::pow(Scalar(-_tmp49 + p_a(0, 0)), Scalar(2)) +
                         std::pow(Scalar(-_tmp52 + p_a(1, 0)), Scalar(2));
  const Scalar _tmp146 = _tmp129 * _tmp135;
  const Scalar _tmp147 = _tmp137 * _tmp70;
  const Scalar _tmp148 = _tmp117 * _tmp118;
  const Scalar _tmp149 = _tmp103 * _tmp109 * _tmp64 + _tmp114 * _tmp116 * _tmp64 -
                         _tmp119 * _tmp122 * _tmp64 - _tmp148 * _tmp64 * _tmp87;
  const Scalar _tmp150 = Scalar(1.0) / (_tmp149);
  const Scalar _tmp151 =
      std::asinh(_tmp150 * (_tmp109 * _tmp132 * _tmp70 + _tmp116 * _tmp136 * _tmp70 +
                            _tmp118 * _tmp142 * _tmp70 + _tmp119 * _tmp140 * _tmp70 -
                            _tmp133 * _tmp146 + _tmp138 * _tmp147));
  const Scalar _tmp152 = Scalar(1.4083112389913199) * _tmp149;
  const Scalar _tmp153 =
      _tmp100 * _tmp109 * _tmp95 + _tmp113 * _tmp116 * _tmp95 + _tmp119 * _tmp123 + _tmp148;
  const Scalar _tmp154 = Scalar(1.0) / (_tmp153);
  const Scalar _tmp155 = std::asinh(
      _tmp154 * (-_tmp109 * _tmp128 * _tmp99 - _tmp112 * _tmp116 * _tmp128 - _tmp118 * _tmp141 +
                 _tmp119 * _tmp139 - _tmp129 * _tmp147 * _tmp67 + _tmp146));
  const Scalar _tmp156 = std::pow(Scalar(-_tmp76 + p_c(0, 0)), Scalar(2)) +
                         std::pow(Scalar(-_tmp78 + p_c(1, 0)), Scalar(2));
  const Scalar _tmp157 = Scalar(1.4083112389913199) * _tmp153;

  // Output terms (1)
  Eigen::Matrix<Scalar, 4, 1> _res;

  _res(0, 0) =
      _tmp33 *
          (-std::sinh(Scalar(1.0) * _tmp32) - std::sinh(Scalar(0.71007031138673404) * _tmp0 *
                                                        (-std::sqrt(_tmp31) - _tmp32 * _tmp33))) -
      std::sqrt(Scalar(_tmp31 +
                       std::pow(Scalar(-_tmp38 + p_d(2, 0) - position_vector(2, 0)), Scalar(2))));
  _res(1, 0) =
      _tmp144 * (-std::sinh(Scalar(1.0) * _tmp143) -
                 std::sinh(Scalar(0.71007031138673404) * _tmp125 *
                           (-_tmp143 * _tmp144 - std::sqrt(_tmp45)))) -
      std::sqrt(Scalar(_tmp45 +
                       std::pow(Scalar(-_tmp57 + p_b(2, 0) - position_vector(2, 0)), Scalar(2))));
  _res(2, 0) =
      _tmp152 * (-std::sinh(Scalar(1.0) * _tmp151) -
                 std::sinh(Scalar(0.71007031138673404) * _tmp150 *
                           (-std::sqrt(_tmp145) - _tmp151 * _tmp152))) -
      std::sqrt(Scalar(_tmp145 +
                       std::pow(Scalar(-_tmp47 + p_a(2, 0) - position_vector(2, 0)), Scalar(2))));
  _res(3, 0) =
      _tmp157 * (-std::sinh(Scalar(1.0) * _tmp155) -
                 std::sinh(Scalar(0.71007031138673404) * _tmp154 *
                           (-_tmp155 * _tmp157 - std::sqrt(_tmp156)))) -
      std::sqrt(Scalar(_tmp156 +
                       std::pow(Scalar(-_tmp91 + p_c(2, 0) - position_vector(2, 0)), Scalar(2))));

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
