// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

#include <sym/rot3.h>

namespace sym {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: IK_residual_func_cost2_wrt_fv1_Nl19
 *
 * Args:
 *     fh1: Scalar
 *     fv1: Scalar
 *     DeltaRot: Rot3
 *     position_vector: Matrix31
 *     encoder: Matrix41
 *     p_a: Matrix31
 *     p_b: Matrix31
 *     p_c: Matrix31
 *     p_d: Matrix31
 *     Rot_init: Rot3
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix41
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 4, 1> IkResidualFuncCost2WrtFv1Nl19(
    const Scalar fh1, const Scalar fv1, const sym::Rot3<Scalar>& DeltaRot,
    const Eigen::Matrix<Scalar, 3, 1>& position_vector, const Eigen::Matrix<Scalar, 4, 1>& encoder,
    const Eigen::Matrix<Scalar, 3, 1>& p_a, const Eigen::Matrix<Scalar, 3, 1>& p_b,
    const Eigen::Matrix<Scalar, 3, 1>& p_c, const Eigen::Matrix<Scalar, 3, 1>& p_d,
    const sym::Rot3<Scalar>& Rot_init, const Scalar epsilon) {
  // Total ops: 575

  // Unused inputs
  (void)encoder;
  (void)epsilon;

  // Input arrays
  const Eigen::Matrix<Scalar, 4, 1>& _DeltaRot = DeltaRot.Data();
  const Eigen::Matrix<Scalar, 4, 1>& _Rot_init = Rot_init.Data();

  // Intermediate terms (189)
  const Scalar _tmp0 = Scalar(1.0) / (fh1);
  const Scalar _tmp1 = std::asinh(_tmp0 * fv1);
  const Scalar _tmp2 = Scalar(1.0) * _tmp0 /
                       std::sqrt(Scalar(1 + std::pow(fv1, Scalar(2)) / std::pow(fh1, Scalar(2))));
  const Scalar _tmp3 = -_DeltaRot[0] * _Rot_init[1] + _DeltaRot[1] * _Rot_init[0] +
                       _DeltaRot[2] * _Rot_init[3] + _DeltaRot[3] * _Rot_init[2];
  const Scalar _tmp4 = -2 * std::pow(_tmp3, Scalar(2));
  const Scalar _tmp5 = _DeltaRot[0] * _Rot_init[3] - _DeltaRot[1] * _Rot_init[2] +
                       _DeltaRot[2] * _Rot_init[1] + _DeltaRot[3] * _Rot_init[0];
  const Scalar _tmp6 = 1 - 2 * std::pow(_tmp5, Scalar(2));
  const Scalar _tmp7 = Scalar(0.20999999999999999) * _tmp4 + Scalar(0.20999999999999999) * _tmp6;
  const Scalar _tmp8 = _DeltaRot[0] * _Rot_init[2] + _DeltaRot[1] * _Rot_init[3] -
                       _DeltaRot[2] * _Rot_init[0] + _DeltaRot[3] * _Rot_init[1];
  const Scalar _tmp9 = 2 * _tmp5;
  const Scalar _tmp10 = _tmp8 * _tmp9;
  const Scalar _tmp11 = -2 * _DeltaRot[0] * _Rot_init[0] - 2 * _DeltaRot[1] * _Rot_init[1] -
                        2 * _DeltaRot[2] * _Rot_init[2] + 2 * _DeltaRot[3] * _Rot_init[3];
  const Scalar _tmp12 = _tmp11 * _tmp3;
  const Scalar _tmp13 = Scalar(0.20999999999999999) * _tmp10 + Scalar(0.20999999999999999) * _tmp12;
  const Scalar _tmp14 = 2 * _tmp3 * _tmp8;
  const Scalar _tmp15 = _tmp11 * _tmp5;
  const Scalar _tmp16 = _tmp14 - _tmp15;
  const Scalar _tmp17 = Scalar(0.010999999999999999) * _tmp16;
  const Scalar _tmp18 = -_tmp17;
  const Scalar _tmp19 = -_tmp13 + _tmp18;
  const Scalar _tmp20 = _tmp19 + _tmp7;
  const Scalar _tmp21 = _tmp20 + position_vector(1, 0);
  const Scalar _tmp22 = -2 * std::pow(_tmp8, Scalar(2));
  const Scalar _tmp23 = Scalar(0.20999999999999999) * _tmp22 + Scalar(0.20999999999999999) * _tmp4 +
                        Scalar(0.20999999999999999);
  const Scalar _tmp24 = -_tmp23;
  const Scalar _tmp25 = _tmp3 * _tmp9;
  const Scalar _tmp26 = _tmp11 * _tmp8;
  const Scalar _tmp27 = _tmp25 + _tmp26;
  const Scalar _tmp28 = -Scalar(0.010999999999999999) * _tmp27;
  const Scalar _tmp29 = Scalar(0.20999999999999999) * _tmp10 - Scalar(0.20999999999999999) * _tmp12;
  const Scalar _tmp30 = _tmp28 + _tmp29;
  const Scalar _tmp31 = _tmp24 + _tmp30;
  const Scalar _tmp32 = _tmp31 + position_vector(0, 0);
  const Scalar _tmp33 = Scalar(1.4083112389913199) * fh1;
  const Scalar _tmp34 = _tmp28 - _tmp29;
  const Scalar _tmp35 = _tmp23 + _tmp34;
  const Scalar _tmp36 = _tmp35 + position_vector(0, 0);
  const Scalar _tmp37 = _tmp36 - p_b(0, 0);
  const Scalar _tmp38 = -_tmp7;
  const Scalar _tmp39 = _tmp13 + _tmp38;
  const Scalar _tmp40 = _tmp18 + _tmp39;
  const Scalar _tmp41 = _tmp40 + position_vector(1, 0);
  const Scalar _tmp42 = _tmp41 - p_b(1, 0);
  const Scalar _tmp43 = std::pow(Scalar(std::pow(_tmp37, Scalar(2)) + std::pow(_tmp42, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp44 = _tmp37 * _tmp43;
  const Scalar _tmp45 = Scalar(0.20999999999999999) * _tmp25 - Scalar(0.20999999999999999) * _tmp26;
  const Scalar _tmp46 =
      -Scalar(0.010999999999999999) * _tmp22 - Scalar(0.010999999999999999) * _tmp6;
  const Scalar _tmp47 = Scalar(0.20999999999999999) * _tmp14 + Scalar(0.20999999999999999) * _tmp15;
  const Scalar _tmp48 = _tmp46 - _tmp47;
  const Scalar _tmp49 = _tmp45 + _tmp48;
  const Scalar _tmp50 = _tmp42 * _tmp43;
  const Scalar _tmp51 = _tmp46 + _tmp47;
  const Scalar _tmp52 = _tmp45 + _tmp51;
  const Scalar _tmp53 = _tmp13 + _tmp18 + _tmp7;
  const Scalar _tmp54 = _tmp53 + position_vector(1, 0);
  const Scalar _tmp55 = _tmp54 - p_c(1, 0);
  const Scalar _tmp56 = _tmp23 + _tmp30;
  const Scalar _tmp57 = _tmp56 + position_vector(0, 0);
  const Scalar _tmp58 = _tmp57 - p_c(0, 0);
  const Scalar _tmp59 = std::pow(Scalar(std::pow(_tmp55, Scalar(2)) + std::pow(_tmp58, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp60 = _tmp55 * _tmp59;
  const Scalar _tmp61 = -_tmp45;
  const Scalar _tmp62 = _tmp48 + _tmp61;
  const Scalar _tmp63 = _tmp24 + _tmp34;
  const Scalar _tmp64 = _tmp63 + position_vector(0, 0);
  const Scalar _tmp65 = _tmp64 - p_a(0, 0);
  const Scalar _tmp66 = Scalar(1.0) / (_tmp65);
  const Scalar _tmp67 = _tmp19 + _tmp38;
  const Scalar _tmp68 = _tmp67 + position_vector(1, 0);
  const Scalar _tmp69 = _tmp68 - p_a(1, 0);
  const Scalar _tmp70 = _tmp66 * _tmp69;
  const Scalar _tmp71 = _tmp62 * _tmp70;
  const Scalar _tmp72 = _tmp58 * _tmp59;
  const Scalar _tmp73 = _tmp52 * _tmp60 - _tmp71 * _tmp72;
  const Scalar _tmp74 = _tmp44 * _tmp70 - _tmp50;
  const Scalar _tmp75 = Scalar(1.0) / (-_tmp60 + _tmp70 * _tmp72);
  const Scalar _tmp76 = _tmp74 * _tmp75;
  const Scalar _tmp77 = _tmp44 * _tmp62;
  const Scalar _tmp78 = _tmp49 * _tmp50 - _tmp70 * _tmp77 - _tmp73 * _tmp76;
  const Scalar _tmp79 = Scalar(1.0) * _tmp67;
  const Scalar _tmp80 = -_tmp79;
  const Scalar _tmp81 = Scalar(1.0) / (_tmp53 + _tmp80);
  const Scalar _tmp82 = Scalar(1.0) * _tmp63;
  const Scalar _tmp83 = -_tmp56 + _tmp82;
  const Scalar _tmp84 = _tmp81 * _tmp83;
  const Scalar _tmp85 = -_tmp52 * _tmp72 + _tmp62 * _tmp72;
  const Scalar _tmp86 = -_tmp44 * _tmp49 - _tmp76 * _tmp85 + _tmp77 - _tmp78 * _tmp84;
  const Scalar _tmp87 = Scalar(1.0) / (_tmp86);
  const Scalar _tmp88 =
      std::sqrt(Scalar(std::pow(_tmp65, Scalar(2)) + std::pow(_tmp69, Scalar(2))));
  const Scalar _tmp89 = Scalar(1.0) / (_tmp88);
  const Scalar _tmp90 = _tmp66 * _tmp88;
  const Scalar _tmp91 = _tmp90 * (_tmp63 * _tmp69 * _tmp89 - _tmp65 * _tmp67 * _tmp89);
  const Scalar _tmp92 = _tmp53 * _tmp72 - _tmp56 * _tmp60 + _tmp72 * _tmp91;
  const Scalar _tmp93 = _tmp70 * _tmp75;
  const Scalar _tmp94 = _tmp71 + _tmp73 * _tmp93;
  const Scalar _tmp95 = -_tmp62 - _tmp84 * _tmp94 + _tmp85 * _tmp93;
  const Scalar _tmp96 = -_tmp35 * _tmp50 + _tmp40 * _tmp44 + _tmp44 * _tmp91 - _tmp76 * _tmp92;
  const Scalar _tmp97 = _tmp87 * _tmp96;
  const Scalar _tmp98 = Scalar(1.0) / (_tmp96);
  const Scalar _tmp99 = _tmp86 * _tmp98;
  const Scalar _tmp100 = _tmp99 * (-_tmp91 + _tmp92 * _tmp93 - _tmp95 * _tmp97);
  const Scalar _tmp101 = _tmp87 * (_tmp100 + _tmp95);
  const Scalar _tmp102 = -_tmp101 * _tmp74 - _tmp70;
  const Scalar _tmp103 = _tmp72 * _tmp75;
  const Scalar _tmp104 = _tmp32 - p_d(0, 0);
  const Scalar _tmp105 = _tmp21 - p_d(1, 0);
  const Scalar _tmp106 =
      std::pow(Scalar(std::pow(_tmp104, Scalar(2)) + std::pow(_tmp105, Scalar(2))),
               Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp107 = _tmp104 * _tmp106;
  const Scalar _tmp108 = _tmp107 * fh1;
  const Scalar _tmp109 = Scalar(333.54000000000002) - fv1;
  const Scalar _tmp110 = _tmp79 * _tmp84 + _tmp82;
  const Scalar _tmp111 = 0;
  const Scalar _tmp112 = _tmp72 * _tmp76;
  const Scalar _tmp113 = _tmp90 * (-_tmp111 * _tmp112 + _tmp111 * _tmp44);
  const Scalar _tmp114 = Scalar(1.0) * _tmp98;
  const Scalar _tmp115 = _tmp105 * _tmp106;
  const Scalar _tmp116 = fh1 * (-_tmp107 * _tmp20 + _tmp115 * _tmp31);
  const Scalar _tmp117 = Scalar(1.0) * _tmp75;
  const Scalar _tmp118 = Scalar(1.0) * _tmp81;
  const Scalar _tmp119 = -_tmp117 * _tmp85 + _tmp118 * _tmp73 * _tmp75 * _tmp83;
  const Scalar _tmp120 = _tmp99 * (-_tmp117 * _tmp92 - _tmp119 * _tmp97);
  const Scalar _tmp121 = _tmp87 * (_tmp119 + _tmp120);
  const Scalar _tmp122 = -_tmp121 * _tmp74 + Scalar(1.0);
  const Scalar _tmp123 = _tmp115 * fh1;
  const Scalar _tmp124 = -_tmp108 * _tmp90 * (_tmp101 * _tmp44 + _tmp102 * _tmp103 + Scalar(1.0)) -
                         _tmp109 * _tmp113 -
                         _tmp116 * _tmp90 * (-_tmp112 * _tmp114 + _tmp114 * _tmp44) -
                         _tmp123 * _tmp90 * (_tmp103 * _tmp122 + _tmp121 * _tmp44);
  const Scalar _tmp125 = Scalar(1.0) / (_tmp124);
  const Scalar _tmp126 = fh1 * (_tmp51 + _tmp61);
  const Scalar _tmp127 = -_tmp115 * _tmp126 - Scalar(40.024799999999999) * _tmp16 - _tmp20 * fv1;
  const Scalar _tmp128 = _tmp40 + _tmp80;
  const Scalar _tmp129 = _tmp128 * _tmp84;
  const Scalar _tmp130 = Scalar(1.0) / (-_tmp129 - _tmp35 + _tmp82);
  const Scalar _tmp131 = Scalar(1.0) * _tmp130;
  const Scalar _tmp132 = _tmp129 * _tmp131 + Scalar(1.0);
  const Scalar _tmp133 = _tmp131 * _tmp84;
  const Scalar _tmp134 = -Scalar(1.0) * _tmp118 * _tmp132 + Scalar(1.0) * _tmp133;
  const Scalar _tmp135 = _tmp131 * _tmp99;
  const Scalar _tmp136 = -_tmp114 * _tmp78 + _tmp128 * _tmp135;
  const Scalar _tmp137 = _tmp128 * _tmp130;
  const Scalar _tmp138 = -_tmp117 * _tmp73 + _tmp120 * _tmp137 - _tmp121 * _tmp78;
  const Scalar _tmp139 = _tmp100 * _tmp137 - _tmp101 * _tmp78 + _tmp94;
  const Scalar _tmp140 = _tmp107 * _tmp126 + Scalar(40.024799999999999) * _tmp27 + _tmp31 * fv1;
  const Scalar _tmp141 = _tmp128 * _tmp81;
  const Scalar _tmp142 = Scalar(1.0) * _tmp131 * _tmp141 - Scalar(1.0) * _tmp131;
  const Scalar _tmp143 = _tmp110 * _tmp130;
  const Scalar _tmp144 = _tmp81 * (-_tmp111 * _tmp78 - _tmp128 * _tmp143 + _tmp80);
  const Scalar _tmp145 = -Scalar(1.0) * _tmp143 - Scalar(1.0) * _tmp144 + Scalar(1.0);
  const Scalar _tmp146 = Scalar(1.0) * _tmp108 * (_tmp100 * _tmp131 - _tmp118 * _tmp139) +
                         _tmp109 * _tmp145 +
                         Scalar(1.0) * _tmp116 * (-_tmp118 * _tmp136 + _tmp135) +
                         Scalar(1.0) * _tmp123 * (-_tmp118 * _tmp138 + _tmp120 * _tmp131) +
                         _tmp127 * _tmp134 + _tmp140 * _tmp142;
  const Scalar _tmp147 = std::asinh(_tmp125 * _tmp146);
  const Scalar _tmp148 = Scalar(1.0) * _tmp147;
  const Scalar _tmp149 = std::pow(_tmp124, Scalar(-2));
  const Scalar _tmp150 = _tmp113 * _tmp149;
  const Scalar _tmp151 = _tmp17 + _tmp39;
  const Scalar _tmp152 =
      (_tmp125 * (_tmp134 * _tmp151 + _tmp142 * _tmp31 - _tmp145) - _tmp146 * _tmp150) /
      std::sqrt(Scalar(std::pow(_tmp146, Scalar(2)) * _tmp149 + 1));
  const Scalar _tmp153 = Scalar(1.4083112389913199) * _tmp124;
  const Scalar _tmp154 =
      -_tmp147 * _tmp153 - std::sqrt(Scalar(std::pow(Scalar(-_tmp64 + p_a(0, 0)), Scalar(2)) +
                                            std::pow(Scalar(-_tmp68 + p_a(1, 0)), Scalar(2))));
  const Scalar _tmp155 = Scalar(0.71007031138673404) * _tmp125;
  const Scalar _tmp156 = _tmp154 * _tmp155;
  const Scalar _tmp157 = Scalar(1.4083112389913199) * _tmp113;
  const Scalar _tmp158 = _tmp114 * _tmp116;
  const Scalar _tmp159 = _tmp109 * _tmp111;
  const Scalar _tmp160 =
      _tmp102 * _tmp108 * _tmp75 + _tmp122 * _tmp123 * _tmp75 - _tmp158 * _tmp76 - _tmp159 * _tmp76;
  const Scalar _tmp161 = Scalar(1.0) / (_tmp160);
  const Scalar _tmp162 = _tmp132 * _tmp81;
  const Scalar _tmp163 = _tmp131 * _tmp140;
  const Scalar _tmp164 = _tmp108 * _tmp139 * _tmp81 + _tmp109 * _tmp144 +
                         _tmp116 * _tmp136 * _tmp81 + _tmp123 * _tmp138 * _tmp81 +
                         _tmp127 * _tmp162 - _tmp141 * _tmp163;
  const Scalar _tmp165 = std::asinh(_tmp161 * _tmp164);
  const Scalar _tmp166 = Scalar(1.4083112389913199) * _tmp160;
  const Scalar _tmp167 =
      -_tmp165 * _tmp166 - std::sqrt(Scalar(std::pow(Scalar(-_tmp54 + p_c(1, 0)), Scalar(2)) +
                                            std::pow(Scalar(-_tmp57 + p_c(0, 0)), Scalar(2))));
  const Scalar _tmp168 = Scalar(0.71007031138673404) * _tmp161;
  const Scalar _tmp169 = _tmp167 * _tmp168;
  const Scalar _tmp170 = Scalar(1.0) * _tmp165;
  const Scalar _tmp171 = Scalar(1.4083112389913199) * _tmp111;
  const Scalar _tmp172 = _tmp171 * _tmp76;
  const Scalar _tmp173 = std::pow(_tmp160, Scalar(-2));
  const Scalar _tmp174 = _tmp111 * _tmp173 * _tmp76;
  const Scalar _tmp175 = _tmp131 * _tmp31;
  const Scalar _tmp176 =
      (_tmp161 * (-_tmp141 * _tmp175 - _tmp144 + _tmp151 * _tmp162) - _tmp164 * _tmp174) /
      std::sqrt(Scalar(std::pow(_tmp164, Scalar(2)) * _tmp173 + 1));
  const Scalar _tmp177 = _tmp101 * _tmp108 + _tmp121 * _tmp123 + _tmp158 + _tmp159;
  const Scalar _tmp178 = Scalar(1.0) / (_tmp177);
  const Scalar _tmp179 = -_tmp100 * _tmp108 * _tmp130 + _tmp109 * _tmp143 - _tmp116 * _tmp135 -
                         _tmp120 * _tmp123 * _tmp130 - _tmp127 * _tmp133 + _tmp163;
  const Scalar _tmp180 = std::asinh(_tmp178 * _tmp179);
  const Scalar _tmp181 = Scalar(1.0) * _tmp180;
  const Scalar _tmp182 = Scalar(1.4083112389913199) * _tmp177;
  const Scalar _tmp183 =
      -_tmp180 * _tmp182 - std::sqrt(Scalar(std::pow(Scalar(-_tmp36 + p_b(0, 0)), Scalar(2)) +
                                            std::pow(Scalar(-_tmp41 + p_b(1, 0)), Scalar(2))));
  const Scalar _tmp184 = Scalar(0.71007031138673404) * _tmp178;
  const Scalar _tmp185 = _tmp183 * _tmp184;
  const Scalar _tmp186 = std::pow(_tmp177, Scalar(-2));
  const Scalar _tmp187 = _tmp111 * _tmp186;
  const Scalar _tmp188 = (_tmp178 * (-_tmp133 * _tmp151 - _tmp143 + _tmp175) + _tmp179 * _tmp187) /
                         std::sqrt(Scalar(std::pow(_tmp179, Scalar(2)) * _tmp186 + 1));

  // Output terms (1)
  Eigen::Matrix<Scalar, 4, 1> _res;

  _res(0, 0) =
      _tmp33 *
      (-_tmp2 * std::cosh(Scalar(1.0) * _tmp1) +
       _tmp2 * std::cosh(Scalar(0.71007031138673404) * _tmp0 *
                         (-_tmp1 * _tmp33 -
                          std::sqrt(Scalar(std::pow(Scalar(-_tmp21 + p_d(1, 0)), Scalar(2)) +
                                           std::pow(Scalar(-_tmp32 + p_d(0, 0)), Scalar(2)))))));
  _res(1, 0) = _tmp153 * (-Scalar(1.0) * _tmp152 * std::cosh(_tmp148) -
                          (-Scalar(0.71007031138673404) * _tmp150 * _tmp154 +
                           _tmp155 * (-_tmp147 * _tmp157 - _tmp152 * _tmp153)) *
                              std::cosh(_tmp156)) +
               _tmp157 * (-std::sinh(_tmp148) - std::sinh(_tmp156));
  _res(2, 0) = _tmp166 * (-Scalar(1.0) * _tmp176 * std::cosh(_tmp170) -
                          (-Scalar(0.71007031138673404) * _tmp167 * _tmp174 +
                           _tmp168 * (-_tmp165 * _tmp172 - _tmp166 * _tmp176)) *
                              std::cosh(_tmp169)) +
               _tmp172 * (-std::sinh(_tmp169) - std::sinh(_tmp170));
  _res(3, 0) = -_tmp171 * (-std::sinh(_tmp181) - std::sinh(_tmp185)) +
               _tmp182 * (-Scalar(1.0) * _tmp188 * std::cosh(_tmp181) -
                          (Scalar(0.71007031138673404) * _tmp183 * _tmp187 +
                           _tmp184 * (_tmp171 * _tmp180 - _tmp182 * _tmp188)) *
                              std::cosh(_tmp185));

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
