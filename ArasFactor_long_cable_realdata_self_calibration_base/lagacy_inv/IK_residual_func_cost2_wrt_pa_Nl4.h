// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

#include <sym/rot3.h>

namespace sym {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: IK_residual_func_cost2_wrt_pa_Nl4
 *
 * Args:
 *     fh1: Scalar
 *     fv1: Scalar
 *     DeltaRot: Rot3
 *     position_vector: Matrix31
 *     encoder: Matrix41
 *     p_a: Matrix31
 *     p_b: Matrix31
 *     p_c: Matrix31
 *     p_d: Matrix31
 *     Rot_init: Rot3
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix43
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 4, 3> IkResidualFuncCost2WrtPaNl4(
    const Scalar fh1, const Scalar fv1, const sym::Rot3<Scalar>& DeltaRot,
    const Eigen::Matrix<Scalar, 3, 1>& position_vector, const Eigen::Matrix<Scalar, 4, 1>& encoder,
    const Eigen::Matrix<Scalar, 3, 1>& p_a, const Eigen::Matrix<Scalar, 3, 1>& p_b,
    const Eigen::Matrix<Scalar, 3, 1>& p_c, const Eigen::Matrix<Scalar, 3, 1>& p_d,
    const sym::Rot3<Scalar>& Rot_init, const Scalar epsilon) {
  // Total ops: 767

  // Unused inputs
  (void)encoder;
  (void)epsilon;

  // Input arrays
  const Eigen::Matrix<Scalar, 4, 1>& _DeltaRot = DeltaRot.Data();
  const Eigen::Matrix<Scalar, 4, 1>& _Rot_init = Rot_init.Data();

  // Intermediate terms (275)
  const Scalar _tmp0 = _DeltaRot[0] * _Rot_init[2] + _DeltaRot[1] * _Rot_init[3] -
                       _DeltaRot[2] * _Rot_init[0] + _DeltaRot[3] * _Rot_init[1];
  const Scalar _tmp1 = _DeltaRot[0] * _Rot_init[3] - _DeltaRot[1] * _Rot_init[2] +
                       _DeltaRot[2] * _Rot_init[1] + _DeltaRot[3] * _Rot_init[0];
  const Scalar _tmp2 = 2 * _tmp1;
  const Scalar _tmp3 = _tmp0 * _tmp2;
  const Scalar _tmp4 = -_DeltaRot[0] * _Rot_init[1] + _DeltaRot[1] * _Rot_init[0] +
                       _DeltaRot[2] * _Rot_init[3] + _DeltaRot[3] * _Rot_init[2];
  const Scalar _tmp5 = -2 * _DeltaRot[0] * _Rot_init[0] - 2 * _DeltaRot[1] * _Rot_init[1] -
                       2 * _DeltaRot[2] * _Rot_init[2] + 2 * _DeltaRot[3] * _Rot_init[3];
  const Scalar _tmp6 = _tmp4 * _tmp5;
  const Scalar _tmp7 = Scalar(0.20999999999999999) * _tmp3 - Scalar(0.20999999999999999) * _tmp6;
  const Scalar _tmp8 = -_tmp7;
  const Scalar _tmp9 = -2 * std::pow(_tmp4, Scalar(2));
  const Scalar _tmp10 = 1 - 2 * std::pow(_tmp0, Scalar(2));
  const Scalar _tmp11 = Scalar(0.20999999999999999) * _tmp10 + Scalar(0.20999999999999999) * _tmp9;
  const Scalar _tmp12 = _tmp2 * _tmp4;
  const Scalar _tmp13 = _tmp0 * _tmp5;
  const Scalar _tmp14 = _tmp12 + _tmp13;
  const Scalar _tmp15 = -Scalar(0.010999999999999999) * _tmp14;
  const Scalar _tmp16 = -_tmp11 + _tmp15;
  const Scalar _tmp17 = _tmp16 + _tmp8;
  const Scalar _tmp18 = _tmp17 + position_vector(0, 0);
  const Scalar _tmp19 = -_tmp18 + p_a(0, 0);
  const Scalar _tmp20 = Scalar(0.20999999999999999) * _tmp12 - Scalar(0.20999999999999999) * _tmp13;
  const Scalar _tmp21 = -_tmp20;
  const Scalar _tmp22 = -2 * std::pow(_tmp1, Scalar(2));
  const Scalar _tmp23 =
      -Scalar(0.010999999999999999) * _tmp10 - Scalar(0.010999999999999999) * _tmp22;
  const Scalar _tmp24 = 2 * _tmp0 * _tmp4;
  const Scalar _tmp25 = _tmp1 * _tmp5;
  const Scalar _tmp26 = Scalar(0.20999999999999999) * _tmp24 + Scalar(0.20999999999999999) * _tmp25;
  const Scalar _tmp27 = _tmp23 - _tmp26;
  const Scalar _tmp28 = _tmp21 + _tmp27;
  const Scalar _tmp29 = -_tmp28 + p_a(2, 0) - position_vector(2, 0);
  const Scalar _tmp30 = Scalar(0.20999999999999999) * _tmp22 + Scalar(0.20999999999999999) * _tmp9 +
                        Scalar(0.20999999999999999);
  const Scalar _tmp31 = -_tmp30;
  const Scalar _tmp32 = Scalar(0.20999999999999999) * _tmp3 + Scalar(0.20999999999999999) * _tmp6;
  const Scalar _tmp33 = _tmp24 - _tmp25;
  const Scalar _tmp34 = -Scalar(0.010999999999999999) * _tmp33;
  const Scalar _tmp35 = -_tmp32 + _tmp34;
  const Scalar _tmp36 = _tmp31 + _tmp35;
  const Scalar _tmp37 = _tmp36 + position_vector(1, 0);
  const Scalar _tmp38 = -_tmp37 + p_a(1, 0);
  const Scalar _tmp39 = std::pow(_tmp19, Scalar(2)) + std::pow(_tmp38, Scalar(2));
  const Scalar _tmp40 =
      std::pow(Scalar(std::pow(_tmp29, Scalar(2)) + _tmp39), Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp41 = Scalar(1.0) / (fh1);
  const Scalar _tmp42 = std::sqrt(_tmp39);
  const Scalar _tmp43 =
      Scalar(1.0) *
      std::cosh(Scalar(0.71007031138673404) * _tmp41 *
                (-_tmp42 - Scalar(1.4083112389913199) * fh1 * std::asinh(_tmp41 * fv1))) /
      _tmp42;
  const Scalar _tmp44 = _tmp18 - p_a(0, 0);
  const Scalar _tmp45 = std::pow(_tmp44, Scalar(2));
  const Scalar _tmp46 = _tmp37 - p_a(1, 0);
  const Scalar _tmp47 = std::pow(_tmp46, Scalar(2));
  const Scalar _tmp48 = _tmp45 + _tmp47;
  const Scalar _tmp49 = std::pow(_tmp48, Scalar(Scalar(-3) / Scalar(2)));
  const Scalar _tmp50 = _tmp44 * _tmp46;
  const Scalar _tmp51 = _tmp49 * _tmp50;
  const Scalar _tmp52 = _tmp51 * fh1;
  const Scalar _tmp53 = _tmp11 + _tmp15;
  const Scalar _tmp54 = _tmp53 + _tmp8;
  const Scalar _tmp55 = _tmp54 + position_vector(0, 0);
  const Scalar _tmp56 = _tmp55 - p_b(0, 0);
  const Scalar _tmp57 = _tmp32 + _tmp34;
  const Scalar _tmp58 = _tmp31 + _tmp57;
  const Scalar _tmp59 = _tmp58 + position_vector(1, 0);
  const Scalar _tmp60 = _tmp59 - p_b(1, 0);
  const Scalar _tmp61 = std::pow(Scalar(std::pow(_tmp56, Scalar(2)) + std::pow(_tmp60, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp62 = _tmp56 * _tmp61;
  const Scalar _tmp63 = _tmp16 + _tmp7;
  const Scalar _tmp64 = _tmp63 + position_vector(0, 0);
  const Scalar _tmp65 = _tmp64 - p_d(0, 0);
  const Scalar _tmp66 = Scalar(1.0) / (_tmp65);
  const Scalar _tmp67 = _tmp30 + _tmp35;
  const Scalar _tmp68 = _tmp67 + position_vector(1, 0);
  const Scalar _tmp69 = _tmp68 - p_d(1, 0);
  const Scalar _tmp70 = _tmp66 * _tmp69;
  const Scalar _tmp71 = _tmp60 * _tmp61;
  const Scalar _tmp72 = Scalar(1.0) / (_tmp62 * _tmp70 - _tmp71);
  const Scalar _tmp73 = _tmp20 + _tmp27;
  const Scalar _tmp74 = _tmp23 + _tmp26;
  const Scalar _tmp75 = _tmp21 + _tmp74;
  const Scalar _tmp76 = _tmp70 * _tmp75;
  const Scalar _tmp77 = -_tmp62 * _tmp76 + _tmp71 * _tmp73;
  const Scalar _tmp78 = Scalar(1.0) * _tmp63;
  const Scalar _tmp79 = -_tmp54 + _tmp78;
  const Scalar _tmp80 = Scalar(1.0) * _tmp67;
  const Scalar _tmp81 = -_tmp80;
  const Scalar _tmp82 = Scalar(1.0) / (_tmp58 + _tmp81);
  const Scalar _tmp83 = Scalar(1.0) * _tmp82;
  const Scalar _tmp84 = -_tmp62 * _tmp73 + _tmp62 * _tmp75;
  const Scalar _tmp85 = Scalar(1.0) * _tmp72;
  const Scalar _tmp86 = _tmp72 * _tmp77 * _tmp79 * _tmp83 - _tmp84 * _tmp85;
  const Scalar _tmp87 = _tmp53 + _tmp7;
  const Scalar _tmp88 = _tmp87 + position_vector(0, 0);
  const Scalar _tmp89 = _tmp88 - p_c(0, 0);
  const Scalar _tmp90 = _tmp30 + _tmp57;
  const Scalar _tmp91 = _tmp90 + position_vector(1, 0);
  const Scalar _tmp92 = _tmp91 - p_c(1, 0);
  const Scalar _tmp93 = std::pow(Scalar(std::pow(_tmp89, Scalar(2)) + std::pow(_tmp92, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp94 = _tmp89 * _tmp93;
  const Scalar _tmp95 = _tmp92 * _tmp93;
  const Scalar _tmp96 = _tmp70 * _tmp94 - _tmp95;
  const Scalar _tmp97 = _tmp72 * _tmp96;
  const Scalar _tmp98 = _tmp75 * _tmp94;
  const Scalar _tmp99 = _tmp20 + _tmp74;
  const Scalar _tmp100 = -_tmp70 * _tmp98 - _tmp77 * _tmp97 + _tmp95 * _tmp99;
  const Scalar _tmp101 = _tmp79 * _tmp82;
  const Scalar _tmp102 = -_tmp100 * _tmp101 - _tmp84 * _tmp97 - _tmp94 * _tmp99 + _tmp98;
  const Scalar _tmp103 = Scalar(1.0) / (_tmp102);
  const Scalar _tmp104 =
      std::sqrt(Scalar(std::pow(_tmp65, Scalar(2)) + std::pow(_tmp69, Scalar(2))));
  const Scalar _tmp105 = Scalar(1.0) / (_tmp104);
  const Scalar _tmp106 = _tmp104 * _tmp66;
  const Scalar _tmp107 = _tmp106 * (_tmp105 * _tmp63 * _tmp69 - _tmp105 * _tmp65 * _tmp67);
  const Scalar _tmp108 = _tmp107 * _tmp62 - _tmp54 * _tmp71 + _tmp58 * _tmp62;
  const Scalar _tmp109 = _tmp107 * _tmp94 - _tmp108 * _tmp97 - _tmp87 * _tmp95 + _tmp90 * _tmp94;
  const Scalar _tmp110 = _tmp103 * _tmp109;
  const Scalar _tmp111 = Scalar(1.0) / (_tmp109);
  const Scalar _tmp112 = _tmp102 * _tmp111;
  const Scalar _tmp113 = _tmp112 * (-_tmp108 * _tmp85 - _tmp110 * _tmp86);
  const Scalar _tmp114 = _tmp113 + _tmp86;
  const Scalar _tmp115 = _tmp103 * _tmp96;
  const Scalar _tmp116 = _tmp72 * (-_tmp114 * _tmp115 + Scalar(1.0));
  const Scalar _tmp117 = _tmp103 * _tmp114;
  const Scalar _tmp118 = _tmp116 * _tmp62 + _tmp117 * _tmp94;
  const Scalar _tmp119 = _tmp106 * _tmp118;
  const Scalar _tmp120 = Scalar(1.0) * _tmp111;
  const Scalar _tmp121 = _tmp62 * _tmp97;
  const Scalar _tmp122 = _tmp106 * (-_tmp120 * _tmp121 + _tmp120 * _tmp94);
  const Scalar _tmp123 = _tmp36 * _tmp49;
  const Scalar _tmp124 = std::pow(_tmp48, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp125 = _tmp124 * _tmp36;
  const Scalar _tmp126 = -_tmp123 * _tmp45 + _tmp125 + _tmp17 * _tmp51;
  const Scalar _tmp127 = _tmp126 * fh1;
  const Scalar _tmp128 = _tmp45 * _tmp49;
  const Scalar _tmp129 = _tmp128 * fh1;
  const Scalar _tmp130 = _tmp70 * _tmp72;
  const Scalar _tmp131 = _tmp130 * _tmp77 + _tmp76;
  const Scalar _tmp132 = -_tmp101 * _tmp131 + _tmp130 * _tmp84 - _tmp75;
  const Scalar _tmp133 = _tmp112 * (-_tmp107 + _tmp108 * _tmp130 - _tmp110 * _tmp132);
  const Scalar _tmp134 = _tmp132 + _tmp133;
  const Scalar _tmp135 = _tmp103 * _tmp134;
  const Scalar _tmp136 = _tmp72 * (-_tmp115 * _tmp134 - _tmp70);
  const Scalar _tmp137 = _tmp135 * _tmp94 + _tmp136 * _tmp62 + Scalar(1.0);
  const Scalar _tmp138 = _tmp106 * _tmp137;
  const Scalar _tmp139 = _tmp124 * fh1;
  const Scalar _tmp140 = _tmp106 * _tmp139;
  const Scalar _tmp141 = _tmp137 * _tmp140;
  const Scalar _tmp142 = -_tmp119 * _tmp52 - _tmp122 * _tmp127 - _tmp129 * _tmp138 + _tmp141;
  const Scalar _tmp143 = _tmp28 * fh1;
  const Scalar _tmp144 = _tmp124 * _tmp143;
  const Scalar _tmp145 = -_tmp144 * _tmp46 - Scalar(40.024799999999999) * _tmp33 - _tmp36 * fv1;
  const Scalar _tmp146 = _tmp81 + _tmp90;
  const Scalar _tmp147 = _tmp101 * _tmp146;
  const Scalar _tmp148 = Scalar(1.0) / (-_tmp147 + _tmp78 - _tmp87);
  const Scalar _tmp149 = Scalar(1.0) * _tmp148;
  const Scalar _tmp150 = _tmp82 * (_tmp147 * _tmp149 + Scalar(1.0));
  const Scalar _tmp151 = _tmp101 * _tmp149;
  const Scalar _tmp152 = -Scalar(1.0) * _tmp150 + Scalar(1.0) * _tmp151;
  const Scalar _tmp153 = _tmp100 * _tmp103;
  const Scalar _tmp154 = _tmp146 * _tmp148;
  const Scalar _tmp155 = _tmp113 * _tmp154 - _tmp114 * _tmp153 - _tmp77 * _tmp85;
  const Scalar _tmp156 = _tmp113 * _tmp149 - _tmp155 * _tmp83;
  const Scalar _tmp157 = Scalar(1.0) * fh1;
  const Scalar _tmp158 = _tmp124 * _tmp157;
  const Scalar _tmp159 = _tmp156 * _tmp158;
  const Scalar _tmp160 = Scalar(40.024799999999999) * _tmp14 + _tmp144 * _tmp44 + _tmp17 * fv1;
  const Scalar _tmp161 = _tmp146 * _tmp149;
  const Scalar _tmp162 = _tmp161 * _tmp82;
  const Scalar _tmp163 = -Scalar(1.0) * _tmp149 + Scalar(1.0) * _tmp162;
  const Scalar _tmp164 = _tmp131 + _tmp133 * _tmp154 - _tmp134 * _tmp153;
  const Scalar _tmp165 = _tmp133 * _tmp149 - _tmp164 * _tmp83;
  const Scalar _tmp166 = _tmp158 * _tmp165;
  const Scalar _tmp167 = _tmp124 * _tmp17;
  const Scalar _tmp168 = -_tmp125 * _tmp44 + _tmp167 * _tmp46;
  const Scalar _tmp169 = _tmp112 * _tmp149;
  const Scalar _tmp170 = -_tmp100 * _tmp120 + _tmp112 * _tmp161;
  const Scalar _tmp171 = _tmp157 * (_tmp169 - _tmp170 * _tmp83);
  const Scalar _tmp172 = _tmp101 * _tmp80 + _tmp78;
  const Scalar _tmp173 = 0;
  const Scalar _tmp174 = _tmp148 * _tmp172;
  const Scalar _tmp175 = -_tmp100 * _tmp173 - _tmp146 * _tmp174 + _tmp81;
  const Scalar _tmp176 = Scalar(333.54000000000002) - fv1;
  const Scalar _tmp177 =
      _tmp145 * _tmp152 + _tmp159 * _tmp46 + _tmp160 * _tmp163 + _tmp166 * _tmp44 +
      _tmp168 * _tmp171 +
      Scalar(1.0) * _tmp176 * (-_tmp149 * _tmp172 - _tmp175 * _tmp83 + Scalar(1.0));
  const Scalar _tmp178 = _tmp118 * _tmp140;
  const Scalar _tmp179 = _tmp168 * fh1;
  const Scalar _tmp180 = -_tmp106 * _tmp176 * (-_tmp121 * _tmp173 + _tmp173 * _tmp94) -
                         _tmp122 * _tmp179 - _tmp141 * _tmp44 - _tmp178 * _tmp46;
  const Scalar _tmp181 = std::pow(_tmp180, Scalar(-2));
  const Scalar _tmp182 = _tmp177 * _tmp181;
  const Scalar _tmp183 = _tmp128 * _tmp143 - _tmp144;
  const Scalar _tmp184 = _tmp143 * _tmp51;
  const Scalar _tmp185 = _tmp156 * _tmp157;
  const Scalar _tmp186 = _tmp157 * _tmp165;
  const Scalar _tmp187 = Scalar(1.0) / (_tmp180);
  const Scalar _tmp188 =
      -_tmp142 * _tmp182 + _tmp187 * (_tmp126 * _tmp171 + _tmp128 * _tmp186 - _tmp152 * _tmp184 +
                                      _tmp163 * _tmp183 - _tmp166 + _tmp185 * _tmp51);
  const Scalar _tmp189 =
      std::pow(Scalar(std::pow(_tmp177, Scalar(2)) * _tmp181 + 1), Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp190 = std::asinh(_tmp177 * _tmp187);
  const Scalar _tmp191 = Scalar(1.0) * _tmp190;
  const Scalar _tmp192 = Scalar(1.0) * _tmp189 * std::cosh(_tmp191);
  const Scalar _tmp193 = Scalar(1.4083112389913199) * _tmp180;
  const Scalar _tmp194 =
      -_tmp190 * _tmp193 - std::sqrt(Scalar(std::pow(Scalar(-_tmp64 + p_d(0, 0)), Scalar(2)) +
                                            std::pow(Scalar(-_tmp68 + p_d(1, 0)), Scalar(2))));
  const Scalar _tmp195 = Scalar(0.71007031138673404) * _tmp181 * _tmp194;
  const Scalar _tmp196 = Scalar(1.4083112389913199) * _tmp190;
  const Scalar _tmp197 = _tmp189 * _tmp193;
  const Scalar _tmp198 = Scalar(0.71007031138673404) * _tmp187;
  const Scalar _tmp199 = _tmp194 * _tmp198;
  const Scalar _tmp200 = std::cosh(_tmp199);
  const Scalar _tmp201 = -Scalar(1.4083112389913199) * std::sinh(_tmp191) -
                         Scalar(1.4083112389913199) * std::sinh(_tmp199);
  const Scalar _tmp202 = _tmp120 * fh1;
  const Scalar _tmp203 = _tmp126 * _tmp202;
  const Scalar _tmp204 = _tmp136 * _tmp139;
  const Scalar _tmp205 = _tmp116 * _tmp52 + _tmp129 * _tmp136 - _tmp203 * _tmp97 - _tmp204;
  const Scalar _tmp206 = _tmp173 * _tmp176;
  const Scalar _tmp207 = _tmp168 * _tmp202;
  const Scalar _tmp208 = _tmp116 * _tmp139;
  const Scalar _tmp209 = _tmp204 * _tmp44 - _tmp206 * _tmp97 - _tmp207 * _tmp97 + _tmp208 * _tmp46;
  const Scalar _tmp210 = Scalar(1.0) / (_tmp209);
  const Scalar _tmp211 = _tmp139 * _tmp82;
  const Scalar _tmp212 = _tmp155 * _tmp211;
  const Scalar _tmp213 = _tmp164 * _tmp211;
  const Scalar _tmp214 = _tmp170 * _tmp82;
  const Scalar _tmp215 = _tmp214 * fh1;
  const Scalar _tmp216 = _tmp149 * _tmp160;
  const Scalar _tmp217 = _tmp146 * _tmp82;
  const Scalar _tmp218 = _tmp145 * _tmp150 + _tmp168 * _tmp215 + _tmp175 * _tmp176 * _tmp82 +
                         _tmp212 * _tmp46 + _tmp213 * _tmp44 - _tmp216 * _tmp217;
  const Scalar _tmp219 = std::asinh(_tmp210 * _tmp218);
  const Scalar _tmp220 = Scalar(1.4083112389913199) * _tmp219;
  const Scalar _tmp221 =
      -_tmp209 * _tmp220 - std::sqrt(Scalar(std::pow(Scalar(-_tmp55 + p_b(0, 0)), Scalar(2)) +
                                            std::pow(Scalar(-_tmp59 + p_b(1, 0)), Scalar(2))));
  const Scalar _tmp222 = Scalar(0.71007031138673404) * _tmp210;
  const Scalar _tmp223 = _tmp221 * _tmp222;
  const Scalar _tmp224 = Scalar(1.0) * _tmp219;
  const Scalar _tmp225 = -Scalar(1.4083112389913199) * std::sinh(_tmp223) -
                         Scalar(1.4083112389913199) * std::sinh(_tmp224);
  const Scalar _tmp226 = std::cosh(_tmp223);
  const Scalar _tmp227 = Scalar(1.4083112389913199) * _tmp209;
  const Scalar _tmp228 = std::pow(_tmp209, Scalar(-2));
  const Scalar _tmp229 =
      std::pow(Scalar(std::pow(_tmp218, Scalar(2)) * _tmp228 + 1), Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp230 = _tmp218 * _tmp228;
  const Scalar _tmp231 = _tmp155 * _tmp82;
  const Scalar _tmp232 = _tmp164 * _tmp82;
  const Scalar _tmp233 = _tmp149 * _tmp183;
  const Scalar _tmp234 =
      _tmp229 *
      (-_tmp205 * _tmp230 + _tmp210 * (_tmp126 * _tmp215 + _tmp129 * _tmp232 - _tmp150 * _tmp184 -
                                       _tmp213 - _tmp217 * _tmp233 + _tmp231 * _tmp52));
  const Scalar _tmp235 = Scalar(0.71007031138673404) * _tmp221 * _tmp228;
  const Scalar _tmp236 = Scalar(1.0) * std::cosh(_tmp224);
  const Scalar _tmp237 = _tmp135 * _tmp139;
  const Scalar _tmp238 = _tmp117 * _tmp52 + _tmp129 * _tmp135 + _tmp203 - _tmp237;
  const Scalar _tmp239 = _tmp117 * _tmp139;
  const Scalar _tmp240 = _tmp206 + _tmp207 + _tmp237 * _tmp44 + _tmp239 * _tmp46;
  const Scalar _tmp241 = Scalar(1.0) / (_tmp240);
  const Scalar _tmp242 = _tmp139 * _tmp148;
  const Scalar _tmp243 = _tmp113 * _tmp242;
  const Scalar _tmp244 = _tmp133 * _tmp242;
  const Scalar _tmp245 = -_tmp145 * _tmp151 - _tmp169 * _tmp179 + _tmp174 * _tmp176 + _tmp216 -
                         _tmp243 * _tmp46 - _tmp244 * _tmp44;
  const Scalar _tmp246 = std::asinh(_tmp241 * _tmp245);
  const Scalar _tmp247 = Scalar(1.0) * _tmp246;
  const Scalar _tmp248 = Scalar(1.4083112389913199) * _tmp246;
  const Scalar _tmp249 =
      -_tmp240 * _tmp248 - std::sqrt(Scalar(std::pow(Scalar(-_tmp88 + p_c(0, 0)), Scalar(2)) +
                                            std::pow(Scalar(-_tmp91 + p_c(1, 0)), Scalar(2))));
  const Scalar _tmp250 = Scalar(0.71007031138673404) * _tmp241;
  const Scalar _tmp251 = _tmp249 * _tmp250;
  const Scalar _tmp252 = -Scalar(1.4083112389913199) * std::sinh(_tmp247) -
                         Scalar(1.4083112389913199) * std::sinh(_tmp251);
  const Scalar _tmp253 = Scalar(1.0) * std::cosh(_tmp247);
  const Scalar _tmp254 = std::pow(_tmp240, Scalar(-2));
  const Scalar _tmp255 =
      std::pow(Scalar(std::pow(_tmp245, Scalar(2)) * _tmp254 + 1), Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp256 = _tmp245 * _tmp254;
  const Scalar _tmp257 = _tmp113 * _tmp148;
  const Scalar _tmp258 = _tmp133 * _tmp148;
  const Scalar _tmp259 =
      _tmp255 *
      (-_tmp238 * _tmp256 + _tmp241 * (-_tmp127 * _tmp169 - _tmp129 * _tmp258 + _tmp151 * _tmp184 +
                                       _tmp233 + _tmp244 - _tmp257 * _tmp52));
  const Scalar _tmp260 = std::cosh(_tmp251);
  const Scalar _tmp261 = Scalar(0.71007031138673404) * _tmp249 * _tmp254;
  const Scalar _tmp262 = Scalar(1.4083112389913199) * _tmp240;
  const Scalar _tmp263 = _tmp47 * _tmp49;
  const Scalar _tmp264 = _tmp263 * fh1;
  const Scalar _tmp265 = -_tmp123 * _tmp50 - _tmp167 + _tmp17 * _tmp263;
  const Scalar _tmp266 = _tmp265 * fh1;
  const Scalar _tmp267 = -_tmp119 * _tmp264 - _tmp122 * _tmp266 - _tmp138 * _tmp52 + _tmp178;
  const Scalar _tmp268 = -_tmp143 * _tmp263 + _tmp144;
  const Scalar _tmp269 =
      -_tmp182 * _tmp267 + _tmp187 * (_tmp152 * _tmp268 - _tmp159 + _tmp163 * _tmp184 +
                                      _tmp171 * _tmp265 + _tmp185 * _tmp263 + _tmp186 * _tmp51);
  const Scalar _tmp270 = _tmp202 * _tmp265;
  const Scalar _tmp271 = _tmp116 * _tmp264 + _tmp136 * _tmp52 - _tmp208 - _tmp270 * _tmp97;
  const Scalar _tmp272 =
      _tmp229 * (_tmp210 * (_tmp150 * _tmp268 - _tmp162 * _tmp184 - _tmp212 + _tmp214 * _tmp266 +
                            _tmp231 * _tmp264 + _tmp232 * _tmp52) -
                 _tmp230 * _tmp271);
  const Scalar _tmp273 = _tmp117 * _tmp264 + _tmp135 * _tmp52 - _tmp239 + _tmp270;
  const Scalar _tmp274 =
      _tmp255 * (_tmp241 * (_tmp149 * _tmp184 - _tmp151 * _tmp268 - _tmp169 * _tmp266 + _tmp243 -
                            _tmp257 * _tmp264 - _tmp258 * _tmp52) -
                 _tmp256 * _tmp273);

  // Output terms (1)
  Eigen::Matrix<Scalar, 4, 3> _res;

  _res(0, 0) = -_tmp19 * _tmp40 + _tmp19 * _tmp43;
  _res(1, 0) =
      _tmp142 * _tmp201 +
      _tmp193 *
          (-_tmp188 * _tmp192 -
           _tmp200 * (-_tmp142 * _tmp195 + _tmp198 * (-_tmp142 * _tmp196 - _tmp188 * _tmp197)));
  _res(2, 0) =
      _tmp205 * _tmp225 +
      _tmp227 *
          (-_tmp226 * (-_tmp205 * _tmp235 + _tmp222 * (-_tmp205 * _tmp220 - _tmp227 * _tmp234)) -
           _tmp234 * _tmp236);
  _res(3, 0) =
      _tmp238 * _tmp252 +
      _tmp262 *
          (-_tmp253 * _tmp259 -
           _tmp260 * (-_tmp238 * _tmp261 + _tmp250 * (-_tmp238 * _tmp248 - _tmp259 * _tmp262)));
  _res(0, 1) = -_tmp38 * _tmp40 + _tmp38 * _tmp43;
  _res(1, 1) =
      _tmp193 *
          (-_tmp192 * _tmp269 -
           _tmp200 * (-_tmp195 * _tmp267 + _tmp198 * (-_tmp196 * _tmp267 - _tmp197 * _tmp269))) +
      _tmp201 * _tmp267;
  _res(2, 1) =
      _tmp225 * _tmp271 +
      _tmp227 *
          (-_tmp226 * (_tmp222 * (-_tmp220 * _tmp271 - _tmp227 * _tmp272) - _tmp235 * _tmp271) -
           _tmp236 * _tmp272);
  _res(3, 1) =
      _tmp252 * _tmp273 + _tmp262 * (-_tmp253 * _tmp274 -
                                     _tmp260 * (_tmp250 * (-_tmp248 * _tmp273 - _tmp262 * _tmp274) -
                                                _tmp261 * _tmp273));
  _res(0, 2) = -_tmp29 * _tmp40;
  _res(1, 2) = 0;
  _res(2, 2) = 0;
  _res(3, 2) = 0;

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
