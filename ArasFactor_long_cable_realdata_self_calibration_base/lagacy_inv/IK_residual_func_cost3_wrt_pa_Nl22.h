// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

#include <sym/rot3.h>

namespace sym {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: IK_residual_func_cost3_wrt_pa_Nl22
 *
 * Args:
 *     fh1: Scalar
 *     fv1: Scalar
 *     DeltaRot: Rot3
 *     position_vector: Matrix31
 *     encoder: Matrix41
 *     p_a: Matrix31
 *     p_b: Matrix31
 *     p_c: Matrix31
 *     p_d: Matrix31
 *     Rot_init: Rot3
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix43
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 4, 3> IkResidualFuncCost3WrtPaNl22(
    const Scalar fh1, const Scalar fv1, const sym::Rot3<Scalar>& DeltaRot,
    const Eigen::Matrix<Scalar, 3, 1>& position_vector, const Eigen::Matrix<Scalar, 4, 1>& encoder,
    const Eigen::Matrix<Scalar, 3, 1>& p_a, const Eigen::Matrix<Scalar, 3, 1>& p_b,
    const Eigen::Matrix<Scalar, 3, 1>& p_c, const Eigen::Matrix<Scalar, 3, 1>& p_d,
    const sym::Rot3<Scalar>& Rot_init, const Scalar epsilon) {
  // Total ops: 664

  // Unused inputs
  (void)encoder;
  (void)epsilon;

  // Input arrays
  const Eigen::Matrix<Scalar, 4, 1>& _DeltaRot = DeltaRot.Data();
  const Eigen::Matrix<Scalar, 4, 1>& _Rot_init = Rot_init.Data();

  // Intermediate terms (219)
  const Scalar _tmp0 = -_DeltaRot[0] * _Rot_init[1] + _DeltaRot[1] * _Rot_init[0] +
                       _DeltaRot[2] * _Rot_init[3] + _DeltaRot[3] * _Rot_init[2];
  const Scalar _tmp1 = -2 * std::pow(_tmp0, Scalar(2));
  const Scalar _tmp2 = _DeltaRot[0] * _Rot_init[2] + _DeltaRot[1] * _Rot_init[3] -
                       _DeltaRot[2] * _Rot_init[0] + _DeltaRot[3] * _Rot_init[1];
  const Scalar _tmp3 = 1 - 2 * std::pow(_tmp2, Scalar(2));
  const Scalar _tmp4 = Scalar(0.20999999999999999) * _tmp1 + Scalar(0.20999999999999999) * _tmp3;
  const Scalar _tmp5 = -_tmp4;
  const Scalar _tmp6 = _DeltaRot[0] * _Rot_init[3] - _DeltaRot[1] * _Rot_init[2] +
                       _DeltaRot[2] * _Rot_init[1] + _DeltaRot[3] * _Rot_init[0];
  const Scalar _tmp7 = 2 * _tmp0;
  const Scalar _tmp8 = _tmp6 * _tmp7;
  const Scalar _tmp9 = -2 * _DeltaRot[0] * _Rot_init[0] - 2 * _DeltaRot[1] * _Rot_init[1] -
                       2 * _DeltaRot[2] * _Rot_init[2] + 2 * _DeltaRot[3] * _Rot_init[3];
  const Scalar _tmp10 = _tmp2 * _tmp9;
  const Scalar _tmp11 =
      -Scalar(0.010999999999999999) * _tmp10 - Scalar(0.010999999999999999) * _tmp8;
  const Scalar _tmp12 = 2 * _tmp2 * _tmp6;
  const Scalar _tmp13 = _tmp0 * _tmp9;
  const Scalar _tmp14 = Scalar(0.20999999999999999) * _tmp12 - Scalar(0.20999999999999999) * _tmp13;
  const Scalar _tmp15 = _tmp11 - _tmp14;
  const Scalar _tmp16 = _tmp15 + _tmp5;
  const Scalar _tmp17 = _tmp16 - p_a(0, 0) + position_vector(0, 0);
  const Scalar _tmp18 = std::pow(_tmp17, Scalar(2));
  const Scalar _tmp19 = -2 * std::pow(_tmp6, Scalar(2));
  const Scalar _tmp20 = Scalar(0.20999999999999999) * _tmp1 + Scalar(0.20999999999999999) * _tmp19 +
                        Scalar(0.20999999999999999);
  const Scalar _tmp21 = -_tmp20;
  const Scalar _tmp22 = _tmp2 * _tmp7;
  const Scalar _tmp23 = _tmp6 * _tmp9;
  const Scalar _tmp24 =
      -Scalar(0.010999999999999999) * _tmp22 + Scalar(0.010999999999999999) * _tmp23;
  const Scalar _tmp25 = Scalar(0.20999999999999999) * _tmp12 + Scalar(0.20999999999999999) * _tmp13;
  const Scalar _tmp26 = _tmp24 - _tmp25;
  const Scalar _tmp27 = _tmp21 + _tmp26;
  const Scalar _tmp28 = _tmp27 - p_a(1, 0) + position_vector(1, 0);
  const Scalar _tmp29 = std::pow(_tmp28, Scalar(2));
  const Scalar _tmp30 = _tmp18 + _tmp29;
  const Scalar _tmp31 = std::pow(_tmp30, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp32 = _tmp17 * _tmp31;
  const Scalar _tmp33 = _tmp28 * _tmp31;
  const Scalar _tmp34 = _tmp11 + _tmp14;
  const Scalar _tmp35 = _tmp34 + _tmp4;
  const Scalar _tmp36 = _tmp35 - p_c(0, 0) + position_vector(0, 0);
  const Scalar _tmp37 = Scalar(1.0) / (_tmp36);
  const Scalar _tmp38 = _tmp24 + _tmp25;
  const Scalar _tmp39 = _tmp20 + _tmp38;
  const Scalar _tmp40 = _tmp39 - p_c(1, 0) + position_vector(1, 0);
  const Scalar _tmp41 = _tmp37 * _tmp40;
  const Scalar _tmp42 = _tmp31 * _tmp41;
  const Scalar _tmp43 = _tmp17 * _tmp42 - _tmp33;
  const Scalar _tmp44 = Scalar(1.0) / (_tmp43);
  const Scalar _tmp45 = _tmp15 + _tmp4;
  const Scalar _tmp46 = _tmp45 - p_b(0, 0) + position_vector(0, 0);
  const Scalar _tmp47 = _tmp21 + _tmp38;
  const Scalar _tmp48 = _tmp47 - p_b(1, 0) + position_vector(1, 0);
  const Scalar _tmp49 = std::pow(Scalar(std::pow(_tmp46, Scalar(2)) + std::pow(_tmp48, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp50 = _tmp48 * _tmp49;
  const Scalar _tmp51 = _tmp46 * _tmp49;
  const Scalar _tmp52 = _tmp41 * _tmp51 - _tmp50;
  const Scalar _tmp53 = _tmp44 * _tmp52;
  const Scalar _tmp54 = Scalar(0.20999999999999999) * _tmp22 + Scalar(0.20999999999999999) * _tmp23;
  const Scalar _tmp55 = -_tmp54;
  const Scalar _tmp56 =
      -Scalar(0.010999999999999999) * _tmp19 - Scalar(0.010999999999999999) * _tmp3;
  const Scalar _tmp57 = -Scalar(0.20999999999999999) * _tmp10 + Scalar(0.20999999999999999) * _tmp8;
  const Scalar _tmp58 = _tmp56 + _tmp57;
  const Scalar _tmp59 = _tmp55 + _tmp58;
  const Scalar _tmp60 = _tmp55 + _tmp56 - _tmp57;
  const Scalar _tmp61 = _tmp31 * _tmp60;
  const Scalar _tmp62 = _tmp54 + _tmp58;
  const Scalar _tmp63 = _tmp31 * _tmp62;
  const Scalar _tmp64 = _tmp17 * _tmp63;
  const Scalar _tmp65 = -_tmp17 * _tmp61 + _tmp64;
  const Scalar _tmp66 = _tmp41 * _tmp62;
  const Scalar _tmp67 = _tmp33 * _tmp60 - _tmp41 * _tmp64;
  const Scalar _tmp68 = Scalar(1.0) * _tmp35;
  const Scalar _tmp69 = Scalar(1.0) * _tmp39;
  const Scalar _tmp70 = (-_tmp16 + _tmp68) / (_tmp27 - _tmp69);
  const Scalar _tmp71 = -_tmp51 * _tmp59 + _tmp51 * _tmp62 - _tmp53 * _tmp65 -
                        _tmp70 * (_tmp50 * _tmp59 - _tmp51 * _tmp66 - _tmp53 * _tmp67);
  const Scalar _tmp72 = Scalar(1.0) / (_tmp71);
  const Scalar _tmp73 = _tmp68 + _tmp69 * _tmp70;
  const Scalar _tmp74 = 0;
  const Scalar _tmp75 = _tmp72 * _tmp74;
  const Scalar _tmp76 = _tmp53 * _tmp75;
  const Scalar _tmp77 = Scalar(333.54000000000002) - fv1;
  const Scalar _tmp78 =
      std::sqrt(Scalar(std::pow(_tmp36, Scalar(2)) + std::pow(_tmp40, Scalar(2))));
  const Scalar _tmp79 = _tmp37 * _tmp78;
  const Scalar _tmp80 = _tmp77 * _tmp79;
  const Scalar _tmp81 = Scalar(1.0) / (_tmp78);
  const Scalar _tmp82 = _tmp79 * (_tmp35 * _tmp40 * _tmp81 - _tmp36 * _tmp39 * _tmp81);
  const Scalar _tmp83 = _tmp31 * _tmp82;
  const Scalar _tmp84 = _tmp27 * _tmp31;
  const Scalar _tmp85 = -_tmp16 * _tmp33 + _tmp17 * _tmp83 + _tmp17 * _tmp84;
  const Scalar _tmp86 = Scalar(1.0) * _tmp44;
  const Scalar _tmp87 = _tmp70 * _tmp86;
  const Scalar _tmp88 = -_tmp65 * _tmp86 + _tmp67 * _tmp87;
  const Scalar _tmp89 = -_tmp45 * _tmp50 + _tmp47 * _tmp51 + _tmp51 * _tmp82 - _tmp53 * _tmp85;
  const Scalar _tmp90 = _tmp72 * _tmp89;
  const Scalar _tmp91 = -_tmp85 * _tmp86 - _tmp88 * _tmp90;
  const Scalar _tmp92 = Scalar(1.0) / (_tmp89);
  const Scalar _tmp93 = _tmp71 * _tmp92;
  const Scalar _tmp94 = _tmp88 + _tmp91 * _tmp93;
  const Scalar _tmp95 = _tmp51 * _tmp72;
  const Scalar _tmp96 = _tmp52 * _tmp72;
  const Scalar _tmp97 = -_tmp94 * _tmp96 + Scalar(1.0);
  const Scalar _tmp98 = _tmp31 * _tmp44;
  const Scalar _tmp99 = _tmp97 * _tmp98;
  const Scalar _tmp100 = _tmp34 + _tmp5;
  const Scalar _tmp101 = _tmp100 - p_d(0, 0) + position_vector(0, 0);
  const Scalar _tmp102 = _tmp20 + _tmp26;
  const Scalar _tmp103 = _tmp102 - p_d(1, 0) + position_vector(1, 0);
  const Scalar _tmp104 =
      std::pow(Scalar(std::pow(_tmp101, Scalar(2)) + std::pow(_tmp103, Scalar(2))),
               Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp105 = _tmp103 * _tmp104;
  const Scalar _tmp106 = _tmp105 * fh1;
  const Scalar _tmp107 = _tmp106 * _tmp79;
  const Scalar _tmp108 = _tmp52 * _tmp86;
  const Scalar _tmp109 = _tmp108 * _tmp92;
  const Scalar _tmp110 = Scalar(1.0) * _tmp92;
  const Scalar _tmp111 = _tmp101 * _tmp104;
  const Scalar _tmp112 = fh1 * (_tmp100 * _tmp105 - _tmp102 * _tmp111);
  const Scalar _tmp113 = _tmp112 * _tmp79;
  const Scalar _tmp114 = _tmp41 * _tmp44;
  const Scalar _tmp115 = _tmp114 * _tmp65 - _tmp62 - _tmp70 * (_tmp114 * _tmp67 + _tmp66);
  const Scalar _tmp116 = _tmp114 * _tmp85 - _tmp115 * _tmp90 - _tmp82;
  const Scalar _tmp117 = _tmp115 + _tmp116 * _tmp93;
  const Scalar _tmp118 = -_tmp117 * _tmp96 - _tmp41;
  const Scalar _tmp119 = _tmp118 * _tmp98;
  const Scalar _tmp120 = _tmp111 * fh1;
  const Scalar _tmp121 = _tmp120 * _tmp79;
  const Scalar _tmp122 = std::exp(_tmp107 * (_tmp17 * _tmp99 + _tmp94 * _tmp95) +
                                  _tmp113 * (-_tmp109 * _tmp32 + _tmp110 * _tmp51) +
                                  _tmp121 * (_tmp117 * _tmp95 + _tmp119 * _tmp17 + Scalar(1.0)) +
                                  _tmp80 * (-_tmp32 * _tmp76 + _tmp51 * _tmp75));
  const Scalar _tmp123 = std::pow(_tmp30, Scalar(Scalar(-3) / Scalar(2)));
  const Scalar _tmp124 = _tmp123 * _tmp17 * _tmp28;
  const Scalar _tmp125 = _tmp123 * _tmp18;
  const Scalar _tmp126 = -_tmp124 + _tmp125 * _tmp41 - _tmp42;
  const Scalar _tmp127 = std::pow(_tmp43, Scalar(-2));
  const Scalar _tmp128 = _tmp127 * _tmp52;
  const Scalar _tmp129 = _tmp126 * _tmp128;
  const Scalar _tmp130 = _tmp125 * _tmp62;
  const Scalar _tmp131 = -_tmp125 * _tmp60 + _tmp130 + _tmp61 - _tmp63;
  const Scalar _tmp132 = _tmp124 * _tmp60;
  const Scalar _tmp133 = -_tmp130 * _tmp41 + _tmp132 + _tmp41 * _tmp63;
  const Scalar _tmp134 =
      _tmp129 * _tmp65 - _tmp131 * _tmp53 - _tmp70 * (_tmp129 * _tmp67 - _tmp133 * _tmp53);
  const Scalar _tmp135 = _tmp134 * _tmp92;
  const Scalar _tmp136 = std::pow(_tmp71, Scalar(-2));
  const Scalar _tmp137 = _tmp134 * _tmp136;
  const Scalar _tmp138 = _tmp137 * _tmp89;
  const Scalar _tmp139 = -_tmp124 * _tmp16 + _tmp125 * _tmp27 + _tmp125 * _tmp82 - _tmp83 - _tmp84;
  const Scalar _tmp140 = _tmp129 * _tmp85 - _tmp139 * _tmp53;
  const Scalar _tmp141 = _tmp72 * _tmp88;
  const Scalar _tmp142 = Scalar(1.0) * _tmp127;
  const Scalar _tmp143 = _tmp142 * _tmp65;
  const Scalar _tmp144 = _tmp67 * _tmp70;
  const Scalar _tmp145 = _tmp126 * _tmp142;
  const Scalar _tmp146 =
      _tmp126 * _tmp143 - _tmp131 * _tmp86 + _tmp133 * _tmp87 - _tmp144 * _tmp145;
  const Scalar _tmp147 = _tmp142 * _tmp85;
  const Scalar _tmp148 = std::pow(_tmp89, Scalar(-2));
  const Scalar _tmp149 = _tmp148 * _tmp71;
  const Scalar _tmp150 = _tmp140 * _tmp149;
  const Scalar _tmp151 = _tmp135 * _tmp91 + _tmp146 - _tmp150 * _tmp91 +
                         _tmp93 * (_tmp126 * _tmp147 + _tmp138 * _tmp88 - _tmp139 * _tmp86 -
                                   _tmp140 * _tmp141 - _tmp146 * _tmp90);
  const Scalar _tmp152 = _tmp136 * _tmp52;
  const Scalar _tmp153 = _tmp152 * _tmp94;
  const Scalar _tmp154 = _tmp134 * _tmp153 - _tmp151 * _tmp96;
  const Scalar _tmp155 = _tmp17 * _tmp98;
  const Scalar _tmp156 = _tmp137 * _tmp51;
  const Scalar _tmp157 = _tmp125 * _tmp44;
  const Scalar _tmp158 = _tmp32 * _tmp97;
  const Scalar _tmp159 = _tmp126 * _tmp127;
  const Scalar _tmp160 = _tmp159 * _tmp41;
  const Scalar _tmp161 =
      _tmp114 * _tmp131 - _tmp160 * _tmp65 - _tmp70 * (_tmp114 * _tmp133 - _tmp160 * _tmp67);
  const Scalar _tmp162 = _tmp115 * _tmp72;
  const Scalar _tmp163 = _tmp116 * _tmp135 - _tmp116 * _tmp150 + _tmp161 +
                         _tmp93 * (_tmp114 * _tmp139 + _tmp115 * _tmp138 - _tmp140 * _tmp162 -
                                   _tmp160 * _tmp85 - _tmp161 * _tmp90);
  const Scalar _tmp164 = _tmp117 * _tmp152;
  const Scalar _tmp165 = _tmp134 * _tmp164 - _tmp163 * _tmp96;
  const Scalar _tmp166 = _tmp118 * _tmp159;
  const Scalar _tmp167 = _tmp32 * _tmp74;
  const Scalar _tmp168 = _tmp167 * _tmp96;
  const Scalar _tmp169 = _tmp167 * _tmp53;
  const Scalar _tmp170 = Scalar(1.0) * _tmp148;
  const Scalar _tmp171 = _tmp170 * _tmp51;
  const Scalar _tmp172 = _tmp108 * _tmp148;
  const Scalar _tmp173 = _tmp140 * _tmp172;
  const Scalar _tmp174 = _tmp52 * _tmp92;
  const Scalar _tmp175 = _tmp145 * _tmp174;
  const Scalar _tmp176 = _tmp44 * fh1;
  const Scalar _tmp177 = _tmp111 * _tmp176;
  const Scalar _tmp178 = _tmp105 * _tmp176;
  const Scalar _tmp179 = _tmp75 * _tmp77;
  const Scalar _tmp180 =
      std::exp(_tmp109 * _tmp112 - _tmp118 * _tmp177 - _tmp178 * _tmp97 + _tmp179 * _tmp53);
  const Scalar _tmp181 = _tmp106 * _tmp97;
  const Scalar _tmp182 = _tmp74 * _tmp77;
  const Scalar _tmp183 = _tmp137 * _tmp182;
  const Scalar _tmp184 = _tmp182 * _tmp96;
  const Scalar _tmp185 = _tmp72 * fh1;
  const Scalar _tmp186 = _tmp105 * _tmp185;
  const Scalar _tmp187 = _tmp111 * _tmp185;
  const Scalar _tmp188 =
      std::exp(-_tmp110 * _tmp112 - _tmp117 * _tmp187 - _tmp179 - _tmp186 * _tmp94);
  const Scalar _tmp189 = _tmp106 * _tmp94;
  const Scalar _tmp190 = _tmp112 * _tmp170;
  const Scalar _tmp191 = _tmp117 * _tmp120;
  const Scalar _tmp192 = _tmp123 * _tmp29;
  const Scalar _tmp193 = _tmp124 * _tmp41 - _tmp192 + _tmp31;
  const Scalar _tmp194 = _tmp128 * _tmp193;
  const Scalar _tmp195 = _tmp124 * _tmp27 + _tmp124 * _tmp82 - _tmp16 * _tmp192 + _tmp16 * _tmp31;
  const Scalar _tmp196 = _tmp194 * _tmp85 - _tmp195 * _tmp53;
  const Scalar _tmp197 = _tmp172 * _tmp196;
  const Scalar _tmp198 = _tmp142 * _tmp193;
  const Scalar _tmp199 = _tmp174 * _tmp198;
  const Scalar _tmp200 = _tmp127 * _tmp193;
  const Scalar _tmp201 = -_tmp124 * _tmp66 + _tmp192 * _tmp60 - _tmp61;
  const Scalar _tmp202 = _tmp124 * _tmp62 - _tmp132;
  const Scalar _tmp203 =
      _tmp194 * _tmp65 - _tmp202 * _tmp53 - _tmp70 * (_tmp194 * _tmp67 - _tmp201 * _tmp53);
  const Scalar _tmp204 = _tmp136 * _tmp203;
  const Scalar _tmp205 = _tmp204 * _tmp51;
  const Scalar _tmp206 = _tmp124 * _tmp44;
  const Scalar _tmp207 = _tmp203 * _tmp92;
  const Scalar _tmp208 = _tmp149 * _tmp196;
  const Scalar _tmp209 =
      _tmp143 * _tmp193 - _tmp144 * _tmp198 + _tmp201 * _tmp87 - _tmp202 * _tmp86;
  const Scalar _tmp210 = _tmp204 * _tmp89;
  const Scalar _tmp211 = _tmp207 * _tmp91 - _tmp208 * _tmp91 + _tmp209 +
                         _tmp93 * (-_tmp141 * _tmp196 + _tmp147 * _tmp193 - _tmp195 * _tmp86 -
                                   _tmp209 * _tmp90 + _tmp210 * _tmp88);
  const Scalar _tmp212 = _tmp153 * _tmp203 - _tmp211 * _tmp96;
  const Scalar _tmp213 = _tmp200 * _tmp41;
  const Scalar _tmp214 =
      _tmp114 * _tmp202 - _tmp213 * _tmp65 - _tmp70 * (_tmp114 * _tmp201 - _tmp213 * _tmp67);
  const Scalar _tmp215 = _tmp116 * _tmp207 - _tmp116 * _tmp208 + _tmp214 +
                         _tmp93 * (_tmp114 * _tmp195 + _tmp115 * _tmp210 - _tmp162 * _tmp196 -
                                   _tmp213 * _tmp85 - _tmp214 * _tmp90);
  const Scalar _tmp216 = _tmp164 * _tmp203 - _tmp215 * _tmp96;
  const Scalar _tmp217 = _tmp118 * _tmp200;
  const Scalar _tmp218 = _tmp182 * _tmp204;

  // Output terms (1)
  Eigen::Matrix<Scalar, 4, 3> _res;

  _res(0, 0) = 0;
  _res(1, 0) = -_tmp122 * (-_tmp107 * (_tmp151 * _tmp95 + _tmp154 * _tmp155 - _tmp156 * _tmp94 +
                                       _tmp157 * _tmp97 - _tmp158 * _tmp159 - _tmp99) -
                           _tmp113 * (-_tmp109 * _tmp125 + _tmp109 * _tmp31 - _tmp140 * _tmp171 +
                                      _tmp173 * _tmp32 + _tmp175 * _tmp32) -
                           _tmp121 * (-_tmp117 * _tmp156 + _tmp118 * _tmp157 - _tmp119 +
                                      _tmp155 * _tmp165 + _tmp163 * _tmp95 - _tmp166 * _tmp32) -
                           _tmp80 * (-_tmp125 * _tmp76 + _tmp137 * _tmp169 - _tmp156 * _tmp74 +
                                     _tmp159 * _tmp168 + _tmp31 * _tmp76));
  _res(2, 0) =
      -_tmp180 * (_tmp112 * _tmp173 + _tmp112 * _tmp175 - _tmp120 * _tmp166 + _tmp154 * _tmp178 -
                  _tmp159 * _tmp181 + _tmp159 * _tmp184 + _tmp165 * _tmp177 + _tmp183 * _tmp53);
  _res(3, 0) = -_tmp188 * (-_tmp137 * _tmp189 - _tmp137 * _tmp191 - _tmp140 * _tmp190 +
                           _tmp151 * _tmp186 + _tmp163 * _tmp187 - _tmp183);
  _res(0, 1) = 0;
  _res(1, 1) =
      -_tmp122 *
      (-_tmp107 * (_tmp155 * _tmp212 - _tmp158 * _tmp200 - _tmp205 * _tmp94 + _tmp206 * _tmp97 +
                   _tmp211 * _tmp95) -
       _tmp113 * (-_tmp109 * _tmp124 - _tmp171 * _tmp196 + _tmp197 * _tmp32 + _tmp199 * _tmp32) -
       _tmp121 * (-_tmp117 * _tmp205 + _tmp118 * _tmp206 + _tmp155 * _tmp216 + _tmp215 * _tmp95 -
                  _tmp217 * _tmp32) -
       _tmp80 * (-_tmp124 * _tmp76 + _tmp168 * _tmp200 + _tmp169 * _tmp204 - _tmp205 * _tmp74));
  _res(2, 1) =
      -_tmp180 * (_tmp112 * _tmp197 + _tmp112 * _tmp199 - _tmp120 * _tmp217 + _tmp177 * _tmp216 +
                  _tmp178 * _tmp212 - _tmp181 * _tmp200 + _tmp184 * _tmp200 + _tmp218 * _tmp53);
  _res(3, 1) = -_tmp188 * (_tmp186 * _tmp211 + _tmp187 * _tmp215 - _tmp189 * _tmp204 -
                           _tmp190 * _tmp196 - _tmp191 * _tmp204 - _tmp218);
  _res(0, 2) = 0;
  _res(1, 2) = 0;
  _res(2, 2) = 0;
  _res(3, 2) = 0;

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
