// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

#include <sym/rot3.h>

namespace sym {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: IK_residual_func_cost3_wrt_pb_Nl23
 *
 * Args:
 *     fh1: Scalar
 *     fv1: Scalar
 *     DeltaRot: Rot3
 *     position_vector: Matrix31
 *     encoder: Matrix41
 *     p_a: Matrix31
 *     p_b: Matrix31
 *     p_c: Matrix31
 *     p_d: Matrix31
 *     Rot_init: Rot3
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix43
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 4, 3> IkResidualFuncCost3WrtPbNl23(
    const Scalar fh1, const Scalar fv1, const sym::Rot3<Scalar>& DeltaRot,
    const Eigen::Matrix<Scalar, 3, 1>& position_vector, const Eigen::Matrix<Scalar, 4, 1>& encoder,
    const Eigen::Matrix<Scalar, 3, 1>& p_a, const Eigen::Matrix<Scalar, 3, 1>& p_b,
    const Eigen::Matrix<Scalar, 3, 1>& p_c, const Eigen::Matrix<Scalar, 3, 1>& p_d,
    const sym::Rot3<Scalar>& Rot_init, const Scalar epsilon) {
  // Total ops: 665

  // Unused inputs
  (void)encoder;
  (void)epsilon;

  // Input arrays
  const Eigen::Matrix<Scalar, 4, 1>& _DeltaRot = DeltaRot.Data();
  const Eigen::Matrix<Scalar, 4, 1>& _Rot_init = Rot_init.Data();

  // Intermediate terms (224)
  const Scalar _tmp0 = _DeltaRot[0] * _Rot_init[3] - _DeltaRot[1] * _Rot_init[2] +
                       _DeltaRot[2] * _Rot_init[1] + _DeltaRot[3] * _Rot_init[0];
  const Scalar _tmp1 = _DeltaRot[0] * _Rot_init[2] + _DeltaRot[1] * _Rot_init[3] -
                       _DeltaRot[2] * _Rot_init[0] + _DeltaRot[3] * _Rot_init[1];
  const Scalar _tmp2 = 2 * _tmp1;
  const Scalar _tmp3 = _tmp0 * _tmp2;
  const Scalar _tmp4 = -_DeltaRot[0] * _Rot_init[0] - _DeltaRot[1] * _Rot_init[1] -
                       _DeltaRot[2] * _Rot_init[2] + _DeltaRot[3] * _Rot_init[3];
  const Scalar _tmp5 = -_DeltaRot[0] * _Rot_init[1] + _DeltaRot[1] * _Rot_init[0] +
                       _DeltaRot[2] * _Rot_init[3] + _DeltaRot[3] * _Rot_init[2];
  const Scalar _tmp6 = 2 * _tmp5;
  const Scalar _tmp7 = _tmp4 * _tmp6;
  const Scalar _tmp8 = Scalar(0.20999999999999999) * _tmp3 - Scalar(0.20999999999999999) * _tmp7;
  const Scalar _tmp9 = -_tmp8;
  const Scalar _tmp10 = -2 * std::pow(_tmp5, Scalar(2));
  const Scalar _tmp11 = 1 - 2 * std::pow(_tmp1, Scalar(2));
  const Scalar _tmp12 = Scalar(0.20999999999999999) * _tmp10 + Scalar(0.20999999999999999) * _tmp11;
  const Scalar _tmp13 = _tmp0 * _tmp6;
  const Scalar _tmp14 = _tmp2 * _tmp4;
  const Scalar _tmp15 =
      -Scalar(0.010999999999999999) * _tmp13 - Scalar(0.010999999999999999) * _tmp14;
  const Scalar _tmp16 = _tmp12 + _tmp15;
  const Scalar _tmp17 = _tmp16 + _tmp9;
  const Scalar _tmp18 = _tmp17 - p_b(0, 0) + position_vector(0, 0);
  const Scalar _tmp19 = std::pow(_tmp18, Scalar(2));
  const Scalar _tmp20 = Scalar(0.20999999999999999) * _tmp3 + Scalar(0.20999999999999999) * _tmp7;
  const Scalar _tmp21 = _tmp1 * _tmp6;
  const Scalar _tmp22 = 2 * _tmp0 * _tmp4;
  const Scalar _tmp23 =
      -Scalar(0.010999999999999999) * _tmp21 + Scalar(0.010999999999999999) * _tmp22;
  const Scalar _tmp24 = -2 * std::pow(_tmp0, Scalar(2));
  const Scalar _tmp25 = Scalar(0.20999999999999999) * _tmp10 +
                        Scalar(0.20999999999999999) * _tmp24 + Scalar(0.20999999999999999);
  const Scalar _tmp26 = _tmp23 - _tmp25;
  const Scalar _tmp27 = _tmp20 + _tmp26;
  const Scalar _tmp28 = _tmp27 - p_b(1, 0) + position_vector(1, 0);
  const Scalar _tmp29 = std::pow(_tmp28, Scalar(2));
  const Scalar _tmp30 = _tmp19 + _tmp29;
  const Scalar _tmp31 = std::pow(_tmp30, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp32 = _tmp23 + _tmp25;
  const Scalar _tmp33 = _tmp20 + _tmp32;
  const Scalar _tmp34 = Scalar(1.0) * _tmp33;
  const Scalar _tmp35 = _tmp16 + _tmp8;
  const Scalar _tmp36 = Scalar(1.0) * _tmp35;
  const Scalar _tmp37 = (-_tmp17 + _tmp36) / (_tmp27 - _tmp34);
  const Scalar _tmp38 = _tmp34 * _tmp37 + _tmp36;
  const Scalar _tmp39 = 0;
  const Scalar _tmp40 = _tmp31 * _tmp39;
  const Scalar _tmp41 = Scalar(0.20999999999999999) * _tmp13 - Scalar(0.20999999999999999) * _tmp14;
  const Scalar _tmp42 =
      -Scalar(0.010999999999999999) * _tmp11 - Scalar(0.010999999999999999) * _tmp24;
  const Scalar _tmp43 = Scalar(0.20999999999999999) * _tmp21 + Scalar(0.20999999999999999) * _tmp22;
  const Scalar _tmp44 = _tmp42 - _tmp43;
  const Scalar _tmp45 = -_tmp41 + _tmp44;
  const Scalar _tmp46 = -_tmp12 + _tmp15;
  const Scalar _tmp47 = _tmp46 + _tmp9;
  const Scalar _tmp48 = _tmp47 - p_a(0, 0) + position_vector(0, 0);
  const Scalar _tmp49 = -_tmp20;
  const Scalar _tmp50 = _tmp26 + _tmp49;
  const Scalar _tmp51 = _tmp50 - p_a(1, 0) + position_vector(1, 0);
  const Scalar _tmp52 = std::pow(Scalar(std::pow(_tmp48, Scalar(2)) + std::pow(_tmp51, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp53 = _tmp48 * _tmp52;
  const Scalar _tmp54 = _tmp41 + _tmp42 + _tmp43;
  const Scalar _tmp55 = _tmp41 + _tmp44;
  const Scalar _tmp56 = _tmp28 * _tmp31;
  const Scalar _tmp57 = _tmp35 - p_c(0, 0) + position_vector(0, 0);
  const Scalar _tmp58 = Scalar(1.0) / (_tmp57);
  const Scalar _tmp59 = _tmp33 - p_c(1, 0) + position_vector(1, 0);
  const Scalar _tmp60 = _tmp58 * _tmp59;
  const Scalar _tmp61 = _tmp31 * _tmp54;
  const Scalar _tmp62 = _tmp18 * _tmp61;
  const Scalar _tmp63 = _tmp55 * _tmp56 - _tmp60 * _tmp62;
  const Scalar _tmp64 = _tmp31 * _tmp60;
  const Scalar _tmp65 = _tmp18 * _tmp64 - _tmp56;
  const Scalar _tmp66 = Scalar(1.0) / (_tmp65);
  const Scalar _tmp67 = _tmp51 * _tmp52;
  const Scalar _tmp68 = _tmp53 * _tmp60 - _tmp67;
  const Scalar _tmp69 = _tmp66 * _tmp68;
  const Scalar _tmp70 = _tmp54 * _tmp60;
  const Scalar _tmp71 = _tmp31 * _tmp55;
  const Scalar _tmp72 = -_tmp18 * _tmp71 + _tmp62;
  const Scalar _tmp73 = -_tmp37 * (_tmp45 * _tmp67 - _tmp53 * _tmp70 - _tmp63 * _tmp69) -
                        _tmp45 * _tmp53 + _tmp53 * _tmp54 - _tmp69 * _tmp72;
  const Scalar _tmp74 = Scalar(1.0) / (_tmp73);
  const Scalar _tmp75 = _tmp69 * _tmp74;
  const Scalar _tmp76 = _tmp40 * _tmp75;
  const Scalar _tmp77 = _tmp53 * _tmp74;
  const Scalar _tmp78 = Scalar(333.54000000000002) - fv1;
  const Scalar _tmp79 =
      std::sqrt(Scalar(std::pow(_tmp57, Scalar(2)) + std::pow(_tmp59, Scalar(2))));
  const Scalar _tmp80 = _tmp58 * _tmp79;
  const Scalar _tmp81 = _tmp78 * _tmp80;
  const Scalar _tmp82 = _tmp27 * _tmp31;
  const Scalar _tmp83 = Scalar(1.0) / (_tmp79);
  const Scalar _tmp84 = _tmp80 * (-_tmp33 * _tmp57 * _tmp83 + _tmp35 * _tmp59 * _tmp83);
  const Scalar _tmp85 = _tmp31 * _tmp84;
  const Scalar _tmp86 = -_tmp17 * _tmp56 + _tmp18 * _tmp82 + _tmp18 * _tmp85;
  const Scalar _tmp87 = Scalar(1.0) * _tmp66;
  const Scalar _tmp88 = _tmp37 * _tmp87;
  const Scalar _tmp89 = _tmp63 * _tmp88 - _tmp72 * _tmp87;
  const Scalar _tmp90 = -_tmp47 * _tmp67 + _tmp50 * _tmp53 + _tmp53 * _tmp84 - _tmp69 * _tmp86;
  const Scalar _tmp91 = _tmp74 * _tmp90;
  const Scalar _tmp92 = -_tmp86 * _tmp87 - _tmp89 * _tmp91;
  const Scalar _tmp93 = Scalar(1.0) / (_tmp90);
  const Scalar _tmp94 = _tmp92 * _tmp93;
  const Scalar _tmp95 = _tmp73 * _tmp94 + _tmp89;
  const Scalar _tmp96 = _tmp68 * _tmp74;
  const Scalar _tmp97 = -_tmp95 * _tmp96 + Scalar(1.0);
  const Scalar _tmp98 = _tmp31 * _tmp66;
  const Scalar _tmp99 = _tmp97 * _tmp98;
  const Scalar _tmp100 = _tmp46 + _tmp8;
  const Scalar _tmp101 = _tmp100 - p_d(0, 0) + position_vector(0, 0);
  const Scalar _tmp102 = _tmp32 + _tmp49;
  const Scalar _tmp103 = _tmp102 - p_d(1, 0) + position_vector(1, 0);
  const Scalar _tmp104 =
      std::pow(Scalar(std::pow(_tmp101, Scalar(2)) + std::pow(_tmp103, Scalar(2))),
               Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp105 = _tmp103 * _tmp104;
  const Scalar _tmp106 = _tmp105 * fh1;
  const Scalar _tmp107 = _tmp106 * _tmp80;
  const Scalar _tmp108 = Scalar(1.0) * _tmp93;
  const Scalar _tmp109 = _tmp18 * _tmp31;
  const Scalar _tmp110 = _tmp68 * _tmp87;
  const Scalar _tmp111 = _tmp110 * _tmp93;
  const Scalar _tmp112 = _tmp101 * _tmp104;
  const Scalar _tmp113 = fh1 * (_tmp100 * _tmp105 - _tmp102 * _tmp112);
  const Scalar _tmp114 = _tmp113 * _tmp80;
  const Scalar _tmp115 = _tmp60 * _tmp66;
  const Scalar _tmp116 = _tmp115 * _tmp72 - _tmp37 * (_tmp115 * _tmp63 + _tmp70) - _tmp54;
  const Scalar _tmp117 = _tmp116 * _tmp74;
  const Scalar _tmp118 = _tmp115 * _tmp86 - _tmp117 * _tmp90 - _tmp84;
  const Scalar _tmp119 = _tmp73 * _tmp93;
  const Scalar _tmp120 = _tmp116 + _tmp118 * _tmp119;
  const Scalar _tmp121 = -_tmp120 * _tmp96 - _tmp60;
  const Scalar _tmp122 = _tmp121 * _tmp98;
  const Scalar _tmp123 = _tmp112 * fh1;
  const Scalar _tmp124 = _tmp123 * _tmp80;
  const Scalar _tmp125 = std::exp(_tmp107 * (_tmp18 * _tmp99 + _tmp77 * _tmp95) +
                                  _tmp114 * (_tmp108 * _tmp53 - _tmp109 * _tmp111) +
                                  _tmp124 * (_tmp120 * _tmp77 + _tmp122 * _tmp18 + Scalar(1.0)) +
                                  _tmp81 * (-_tmp18 * _tmp76 + _tmp39 * _tmp77));
  const Scalar _tmp126 = std::pow(_tmp65, Scalar(-2));
  const Scalar _tmp127 = _tmp126 * _tmp68;
  const Scalar _tmp128 = std::pow(_tmp30, Scalar(Scalar(-3) / Scalar(2)));
  const Scalar _tmp129 = _tmp128 * _tmp18 * _tmp28;
  const Scalar _tmp130 = _tmp128 * _tmp19;
  const Scalar _tmp131 = -_tmp129 + _tmp130 * _tmp60 - _tmp64;
  const Scalar _tmp132 = _tmp131 * _tmp72;
  const Scalar _tmp133 = _tmp130 * _tmp54 - _tmp130 * _tmp55 - _tmp61 + _tmp71;
  const Scalar _tmp134 = _tmp129 * _tmp55;
  const Scalar _tmp135 = -_tmp130 * _tmp70 + _tmp134 + _tmp60 * _tmp61;
  const Scalar _tmp136 = _tmp127 * _tmp63;
  const Scalar _tmp137 =
      _tmp127 * _tmp132 - _tmp133 * _tmp69 - _tmp37 * (_tmp131 * _tmp136 - _tmp135 * _tmp69);
  const Scalar _tmp138 = std::pow(_tmp73, Scalar(-2));
  const Scalar _tmp139 = _tmp137 * _tmp138;
  const Scalar _tmp140 = _tmp18 * _tmp40;
  const Scalar _tmp141 = _tmp140 * _tmp69;
  const Scalar _tmp142 = _tmp39 * _tmp75;
  const Scalar _tmp143 = _tmp138 * _tmp53;
  const Scalar _tmp144 = _tmp137 * _tmp143;
  const Scalar _tmp145 = _tmp126 * _tmp131;
  const Scalar _tmp146 = _tmp140 * _tmp96;
  const Scalar _tmp147 = -_tmp129 * _tmp17 + _tmp130 * _tmp27 + _tmp130 * _tmp84 - _tmp82 - _tmp85;
  const Scalar _tmp148 = _tmp127 * _tmp86;
  const Scalar _tmp149 = _tmp131 * _tmp148 - _tmp147 * _tmp69;
  const Scalar _tmp150 = std::pow(_tmp90, Scalar(-2));
  const Scalar _tmp151 = _tmp110 * _tmp150;
  const Scalar _tmp152 = _tmp109 * _tmp151;
  const Scalar _tmp153 = _tmp108 * _tmp109;
  const Scalar _tmp154 = _tmp127 * _tmp131;
  const Scalar _tmp155 = Scalar(1.0) * _tmp150;
  const Scalar _tmp156 = _tmp149 * _tmp155;
  const Scalar _tmp157 = _tmp130 * _tmp66;
  const Scalar _tmp158 = _tmp118 * _tmp93;
  const Scalar _tmp159 = _tmp138 * _tmp90;
  const Scalar _tmp160 = _tmp116 * _tmp159;
  const Scalar _tmp161 = _tmp126 * _tmp60;
  const Scalar _tmp162 = _tmp161 * _tmp86;
  const Scalar _tmp163 = _tmp161 * _tmp63;
  const Scalar _tmp164 =
      _tmp115 * _tmp133 - _tmp132 * _tmp161 - _tmp37 * (_tmp115 * _tmp135 - _tmp131 * _tmp163);
  const Scalar _tmp165 = _tmp150 * _tmp73;
  const Scalar _tmp166 = _tmp118 * _tmp165;
  const Scalar _tmp167 = _tmp119 * (_tmp115 * _tmp147 - _tmp117 * _tmp149 - _tmp131 * _tmp162 +
                                    _tmp137 * _tmp160 - _tmp164 * _tmp91) +
                         _tmp137 * _tmp158 - _tmp149 * _tmp166 + _tmp164;
  const Scalar _tmp168 = _tmp109 * _tmp121;
  const Scalar _tmp169 = _tmp138 * _tmp68;
  const Scalar _tmp170 = _tmp120 * _tmp169;
  const Scalar _tmp171 = _tmp137 * _tmp170 - _tmp167 * _tmp96;
  const Scalar _tmp172 = _tmp18 * _tmp98;
  const Scalar _tmp173 = _tmp165 * _tmp92;
  const Scalar _tmp174 = Scalar(1.0) * _tmp126;
  const Scalar _tmp175 = _tmp174 * _tmp37 * _tmp63;
  const Scalar _tmp176 =
      -_tmp131 * _tmp175 + _tmp132 * _tmp174 - _tmp133 * _tmp87 + _tmp135 * _tmp88;
  const Scalar _tmp177 = _tmp74 * _tmp89;
  const Scalar _tmp178 = _tmp159 * _tmp89;
  const Scalar _tmp179 = _tmp174 * _tmp86;
  const Scalar _tmp180 = _tmp119 * (_tmp131 * _tmp179 + _tmp137 * _tmp178 - _tmp147 * _tmp87 -
                                    _tmp149 * _tmp177 - _tmp176 * _tmp91) +
                         _tmp137 * _tmp94 - _tmp149 * _tmp173 + _tmp176;
  const Scalar _tmp181 = _tmp169 * _tmp95;
  const Scalar _tmp182 = _tmp137 * _tmp181 - _tmp180 * _tmp96;
  const Scalar _tmp183 = _tmp145 * _tmp97;
  const Scalar _tmp184 = _tmp66 * fh1;
  const Scalar _tmp185 = _tmp105 * _tmp184;
  const Scalar _tmp186 = _tmp112 * _tmp184;
  const Scalar _tmp187 = _tmp39 * _tmp78;
  const Scalar _tmp188 = _tmp187 * _tmp74;
  const Scalar _tmp189 =
      std::exp(_tmp111 * _tmp113 - _tmp121 * _tmp186 - _tmp185 * _tmp97 + _tmp188 * _tmp69);
  const Scalar _tmp190 = _tmp127 * _tmp188;
  const Scalar _tmp191 = _tmp108 * _tmp113;
  const Scalar _tmp192 = _tmp113 * _tmp151;
  const Scalar _tmp193 = _tmp121 * _tmp123;
  const Scalar _tmp194 = _tmp138 * _tmp187;
  const Scalar _tmp195 = _tmp137 * _tmp194;
  const Scalar _tmp196 = _tmp74 * fh1;
  const Scalar _tmp197 = _tmp105 * _tmp196;
  const Scalar _tmp198 = _tmp112 * _tmp196;
  const Scalar _tmp199 = std::exp(-_tmp120 * _tmp198 - _tmp188 - _tmp191 - _tmp197 * _tmp95);
  const Scalar _tmp200 = _tmp106 * _tmp95;
  const Scalar _tmp201 = _tmp120 * _tmp123;
  const Scalar _tmp202 = _tmp128 * _tmp29;
  const Scalar _tmp203 = _tmp129 * _tmp60 - _tmp202 + _tmp31;
  const Scalar _tmp204 = _tmp129 * _tmp27 + _tmp129 * _tmp84 - _tmp17 * _tmp202 + _tmp17 * _tmp31;
  const Scalar _tmp205 = _tmp148 * _tmp203 - _tmp204 * _tmp69;
  const Scalar _tmp206 = _tmp127 * _tmp203;
  const Scalar _tmp207 = _tmp155 * _tmp205;
  const Scalar _tmp208 = _tmp203 * _tmp72;
  const Scalar _tmp209 = -_tmp129 * _tmp70 + _tmp202 * _tmp55 - _tmp71;
  const Scalar _tmp210 = _tmp129 * _tmp54 - _tmp134;
  const Scalar _tmp211 =
      _tmp127 * _tmp208 - _tmp210 * _tmp69 - _tmp37 * (_tmp136 * _tmp203 - _tmp209 * _tmp69);
  const Scalar _tmp212 = _tmp143 * _tmp211;
  const Scalar _tmp213 = _tmp129 * _tmp66;
  const Scalar _tmp214 = _tmp126 * _tmp203;
  const Scalar _tmp215 =
      _tmp115 * _tmp210 - _tmp161 * _tmp208 - _tmp37 * (_tmp115 * _tmp209 - _tmp163 * _tmp203);
  const Scalar _tmp216 = _tmp119 * (_tmp115 * _tmp204 - _tmp117 * _tmp205 + _tmp160 * _tmp211 -
                                    _tmp162 * _tmp203 - _tmp215 * _tmp91) +
                         _tmp158 * _tmp211 - _tmp166 * _tmp205 + _tmp215;
  const Scalar _tmp217 = _tmp170 * _tmp211 - _tmp216 * _tmp96;
  const Scalar _tmp218 = _tmp138 * _tmp211;
  const Scalar _tmp219 =
      _tmp174 * _tmp208 - _tmp175 * _tmp203 + _tmp209 * _tmp88 - _tmp210 * _tmp87;
  const Scalar _tmp220 = _tmp119 * (-_tmp177 * _tmp205 + _tmp178 * _tmp211 + _tmp179 * _tmp203 -
                                    _tmp204 * _tmp87 - _tmp219 * _tmp91) -
                         _tmp173 * _tmp205 + _tmp211 * _tmp94 + _tmp219;
  const Scalar _tmp221 = _tmp214 * _tmp97;
  const Scalar _tmp222 = _tmp181 * _tmp211 - _tmp220 * _tmp96;
  const Scalar _tmp223 = _tmp194 * _tmp211;

  // Output terms (1)
  Eigen::Matrix<Scalar, 4, 3> _res;

  _res(0, 0) = 0;
  _res(1, 0) = -_tmp125 * (-_tmp107 * (-_tmp109 * _tmp183 - _tmp144 * _tmp95 + _tmp157 * _tmp97 +
                                       _tmp172 * _tmp182 + _tmp180 * _tmp77 - _tmp99) -
                           _tmp114 * (-_tmp111 * _tmp130 + _tmp111 * _tmp31 + _tmp149 * _tmp152 +
                                      _tmp153 * _tmp154 - _tmp156 * _tmp53) -
                           _tmp124 * (-_tmp120 * _tmp144 + _tmp121 * _tmp157 - _tmp122 -
                                      _tmp145 * _tmp168 + _tmp167 * _tmp77 + _tmp171 * _tmp172) -
                           _tmp81 * (-_tmp130 * _tmp142 + _tmp139 * _tmp141 - _tmp144 * _tmp39 +
                                     _tmp145 * _tmp146 + _tmp76));
  _res(2, 0) =
      -_tmp189 * (-_tmp106 * _tmp183 + _tmp131 * _tmp190 - _tmp145 * _tmp193 + _tmp149 * _tmp192 +
                  _tmp154 * _tmp191 + _tmp171 * _tmp186 + _tmp182 * _tmp185 + _tmp195 * _tmp69);
  _res(3, 0) = -_tmp199 * (-_tmp113 * _tmp156 - _tmp139 * _tmp200 - _tmp139 * _tmp201 +
                           _tmp167 * _tmp198 + _tmp180 * _tmp197 - _tmp195);
  _res(0, 1) = 0;
  _res(1, 1) =
      -_tmp125 *
      (-_tmp107 * (-_tmp109 * _tmp221 + _tmp172 * _tmp222 - _tmp212 * _tmp95 + _tmp213 * _tmp97 +
                   _tmp220 * _tmp77) -
       _tmp114 * (-_tmp111 * _tmp129 + _tmp152 * _tmp205 + _tmp153 * _tmp206 - _tmp207 * _tmp53) -
       _tmp124 * (-_tmp120 * _tmp212 + _tmp121 * _tmp213 - _tmp168 * _tmp214 + _tmp172 * _tmp217 +
                  _tmp216 * _tmp77) -
       _tmp81 * (-_tmp129 * _tmp142 + _tmp141 * _tmp218 + _tmp146 * _tmp214 - _tmp212 * _tmp39));
  _res(2, 1) =
      -_tmp189 * (-_tmp106 * _tmp221 + _tmp185 * _tmp222 + _tmp186 * _tmp217 + _tmp190 * _tmp203 +
                  _tmp191 * _tmp206 + _tmp192 * _tmp205 - _tmp193 * _tmp214 + _tmp223 * _tmp69);
  _res(3, 1) = -_tmp199 * (-_tmp113 * _tmp207 + _tmp197 * _tmp220 + _tmp198 * _tmp216 -
                           _tmp200 * _tmp218 - _tmp201 * _tmp218 - _tmp223);
  _res(0, 2) = 0;
  _res(1, 2) = 0;
  _res(2, 2) = 0;
  _res(3, 2) = 0;

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
