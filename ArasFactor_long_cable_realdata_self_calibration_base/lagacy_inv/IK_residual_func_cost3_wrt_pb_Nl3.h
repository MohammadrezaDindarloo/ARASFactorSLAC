// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

#include <sym/rot3.h>

namespace sym {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: IK_residual_func_cost3_wrt_pb_Nl3
 *
 * Args:
 *     fh1: Scalar
 *     fv1: Scalar
 *     DeltaRot: Rot3
 *     position_vector: Matrix31
 *     encoder: Matrix41
 *     p_a: Matrix31
 *     p_b: Matrix31
 *     p_c: Matrix31
 *     p_d: Matrix31
 *     Rot_init: Rot3
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix43
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 4, 3> IkResidualFuncCost3WrtPbNl3(
    const Scalar fh1, const Scalar fv1, const sym::Rot3<Scalar>& DeltaRot,
    const Eigen::Matrix<Scalar, 3, 1>& position_vector, const Eigen::Matrix<Scalar, 4, 1>& encoder,
    const Eigen::Matrix<Scalar, 3, 1>& p_a, const Eigen::Matrix<Scalar, 3, 1>& p_b,
    const Eigen::Matrix<Scalar, 3, 1>& p_c, const Eigen::Matrix<Scalar, 3, 1>& p_d,
    const sym::Rot3<Scalar>& Rot_init, const Scalar epsilon) {
  // Total ops: 567

  // Unused inputs
  (void)encoder;
  (void)epsilon;

  // Input arrays
  const Eigen::Matrix<Scalar, 4, 1>& _DeltaRot = DeltaRot.Data();
  const Eigen::Matrix<Scalar, 4, 1>& _Rot_init = Rot_init.Data();

  // Intermediate terms (184)
  const Scalar _tmp0 = _DeltaRot[0] * _Rot_init[2] + _DeltaRot[1] * _Rot_init[3] -
                       _DeltaRot[2] * _Rot_init[0] + _DeltaRot[3] * _Rot_init[1];
  const Scalar _tmp1 = -2 * std::pow(_tmp0, Scalar(2));
  const Scalar _tmp2 = -_DeltaRot[0] * _Rot_init[1] + _DeltaRot[1] * _Rot_init[0] +
                       _DeltaRot[2] * _Rot_init[3] + _DeltaRot[3] * _Rot_init[2];
  const Scalar _tmp3 = 1 - 2 * std::pow(_tmp2, Scalar(2));
  const Scalar _tmp4 = Scalar(0.20999999999999999) * _tmp1 + Scalar(0.20999999999999999) * _tmp3;
  const Scalar _tmp5 = _DeltaRot[0] * _Rot_init[3] - _DeltaRot[1] * _Rot_init[2] +
                       _DeltaRot[2] * _Rot_init[1] + _DeltaRot[3] * _Rot_init[0];
  const Scalar _tmp6 = 2 * _tmp2;
  const Scalar _tmp7 = _tmp5 * _tmp6;
  const Scalar _tmp8 = -2 * _DeltaRot[0] * _Rot_init[0] - 2 * _DeltaRot[1] * _Rot_init[1] -
                       2 * _DeltaRot[2] * _Rot_init[2] + 2 * _DeltaRot[3] * _Rot_init[3];
  const Scalar _tmp9 = _tmp0 * _tmp8;
  const Scalar _tmp10 =
      -Scalar(0.010999999999999999) * _tmp7 - Scalar(0.010999999999999999) * _tmp9;
  const Scalar _tmp11 = 2 * _tmp0 * _tmp5;
  const Scalar _tmp12 = _tmp2 * _tmp8;
  const Scalar _tmp13 = Scalar(0.20999999999999999) * _tmp11 - Scalar(0.20999999999999999) * _tmp12;
  const Scalar _tmp14 = _tmp10 - _tmp13;
  const Scalar _tmp15 = _tmp14 + _tmp4;
  const Scalar _tmp16 = _tmp15 - p_b(0, 0) + position_vector(0, 0);
  const Scalar _tmp17 = std::pow(_tmp16, Scalar(2));
  const Scalar _tmp18 = -2 * std::pow(_tmp5, Scalar(2));
  const Scalar _tmp19 = Scalar(0.20999999999999999) * _tmp18 + Scalar(0.20999999999999999) * _tmp3;
  const Scalar _tmp20 = -_tmp19;
  const Scalar _tmp21 = Scalar(0.20999999999999999) * _tmp11 + Scalar(0.20999999999999999) * _tmp12;
  const Scalar _tmp22 = _tmp0 * _tmp6;
  const Scalar _tmp23 = _tmp5 * _tmp8;
  const Scalar _tmp24 =
      -Scalar(0.010999999999999999) * _tmp22 + Scalar(0.010999999999999999) * _tmp23;
  const Scalar _tmp25 = _tmp21 + _tmp24;
  const Scalar _tmp26 = _tmp20 + _tmp25;
  const Scalar _tmp27 = _tmp26 - p_b(1, 0) + position_vector(1, 0);
  const Scalar _tmp28 = std::pow(_tmp27, Scalar(2));
  const Scalar _tmp29 = _tmp17 + _tmp28;
  const Scalar _tmp30 = std::pow(_tmp29, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp31 = _tmp27 * _tmp30;
  const Scalar _tmp32 = _tmp26 * _tmp30;
  const Scalar _tmp33 = _tmp10 + _tmp13;
  const Scalar _tmp34 = _tmp33 + _tmp4;
  const Scalar _tmp35 = _tmp34 - p_c(0, 0) + position_vector(0, 0);
  const Scalar _tmp36 = Scalar(1.0) / (_tmp35);
  const Scalar _tmp37 = _tmp19 + _tmp25;
  const Scalar _tmp38 = _tmp37 - p_c(1, 0) + position_vector(1, 0);
  const Scalar _tmp39 = _tmp36 * _tmp38;
  const Scalar _tmp40 = _tmp30 * _tmp39;
  const Scalar _tmp41 = _tmp16 * _tmp40 - _tmp31;
  const Scalar _tmp42 = -_tmp4;
  const Scalar _tmp43 = _tmp33 + _tmp42;
  const Scalar _tmp44 = _tmp43 - p_d(0, 0) + position_vector(0, 0);
  const Scalar _tmp45 = -_tmp21 + _tmp24;
  const Scalar _tmp46 = _tmp19 + _tmp45;
  const Scalar _tmp47 = _tmp46 - p_d(1, 0) + position_vector(1, 0);
  const Scalar _tmp48 = std::pow(Scalar(std::pow(_tmp44, Scalar(2)) + std::pow(_tmp47, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp49 = _tmp47 * _tmp48;
  const Scalar _tmp50 = _tmp44 * _tmp48;
  const Scalar _tmp51 = Scalar(1.0) / (_tmp39 * _tmp50 - _tmp49);
  const Scalar _tmp52 =
      std::sqrt(Scalar(std::pow(_tmp35, Scalar(2)) + std::pow(_tmp38, Scalar(2))));
  const Scalar _tmp53 = Scalar(1.0) / (_tmp52);
  const Scalar _tmp54 = _tmp36 * _tmp52;
  const Scalar _tmp55 = _tmp54 * (_tmp34 * _tmp38 * _tmp53 - _tmp35 * _tmp37 * _tmp53);
  const Scalar _tmp56 = -_tmp43 * _tmp49 + _tmp46 * _tmp50 + _tmp50 * _tmp55;
  const Scalar _tmp57 = _tmp51 * _tmp56;
  const Scalar _tmp58 = _tmp30 * _tmp55;
  const Scalar _tmp59 = -_tmp15 * _tmp31 + _tmp16 * _tmp32 + _tmp16 * _tmp58 - _tmp41 * _tmp57;
  const Scalar _tmp60 = -Scalar(0.010999999999999999) * _tmp1 -
                        Scalar(0.010999999999999999) * _tmp18 + Scalar(-0.010999999999999999);
  const Scalar _tmp61 = Scalar(0.20999999999999999) * _tmp7 - Scalar(0.20999999999999999) * _tmp9;
  const Scalar _tmp62 = Scalar(0.20999999999999999) * _tmp22 + Scalar(0.20999999999999999) * _tmp23;
  const Scalar _tmp63 = _tmp60 + _tmp61 - _tmp62;
  const Scalar _tmp64 = _tmp30 * _tmp63;
  const Scalar _tmp65 = _tmp60 + _tmp62;
  const Scalar _tmp66 = _tmp61 + _tmp65;
  const Scalar _tmp67 = _tmp30 * _tmp66;
  const Scalar _tmp68 = _tmp16 * _tmp67;
  const Scalar _tmp69 = -_tmp61 + _tmp65;
  const Scalar _tmp70 = _tmp50 * _tmp66 - _tmp50 * _tmp69;
  const Scalar _tmp71 = _tmp51 * _tmp70;
  const Scalar _tmp72 = _tmp39 * _tmp66;
  const Scalar _tmp73 = _tmp49 * _tmp69 - _tmp50 * _tmp72;
  const Scalar _tmp74 = _tmp51 * _tmp73;
  const Scalar _tmp75 = Scalar(1.0) * _tmp37;
  const Scalar _tmp76 = Scalar(1.0) * _tmp34;
  const Scalar _tmp77 = (-_tmp43 + _tmp76) / (_tmp46 - _tmp75);
  const Scalar _tmp78 = -_tmp16 * _tmp64 - _tmp41 * _tmp71 + _tmp68 -
                        _tmp77 * (_tmp27 * _tmp64 - _tmp39 * _tmp68 - _tmp41 * _tmp74);
  const Scalar _tmp79 = Scalar(1.0) / (_tmp78);
  const Scalar _tmp80 = -Scalar(1.0) * _tmp71 + Scalar(1.0) * _tmp74 * _tmp77;
  const Scalar _tmp81 = _tmp79 * _tmp80;
  const Scalar _tmp82 = -Scalar(1.0) * _tmp57 - _tmp59 * _tmp81;
  const Scalar _tmp83 = Scalar(1.0) / (_tmp59);
  const Scalar _tmp84 = _tmp78 * _tmp83;
  const Scalar _tmp85 = _tmp80 + _tmp82 * _tmp84;
  const Scalar _tmp86 = _tmp30 * _tmp79;
  const Scalar _tmp87 = _tmp85 * _tmp86;
  const Scalar _tmp88 = _tmp41 * _tmp79;
  const Scalar _tmp89 = -_tmp85 * _tmp88 + Scalar(1.0);
  const Scalar _tmp90 = _tmp50 * _tmp51;
  const Scalar _tmp91 = _tmp14 + _tmp42;
  const Scalar _tmp92 = _tmp91 - p_a(0, 0) + position_vector(0, 0);
  const Scalar _tmp93 = _tmp20 + _tmp45;
  const Scalar _tmp94 = _tmp93 - p_a(1, 0) + position_vector(1, 0);
  const Scalar _tmp95 = std::pow(Scalar(std::pow(_tmp92, Scalar(2)) + std::pow(_tmp94, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp96 = _tmp94 * _tmp95;
  const Scalar _tmp97 = _tmp96 * fh1;
  const Scalar _tmp98 = _tmp54 * _tmp97;
  const Scalar _tmp99 = Scalar(1.0) * _tmp83;
  const Scalar _tmp100 = _tmp30 * _tmp99;
  const Scalar _tmp101 = _tmp90 * _tmp99;
  const Scalar _tmp102 = _tmp92 * _tmp95;
  const Scalar _tmp103 = fh1 * (-_tmp102 * _tmp93 + _tmp91 * _tmp96);
  const Scalar _tmp104 = _tmp103 * _tmp54;
  const Scalar _tmp105 = _tmp75 * _tmp77 + _tmp76;
  const Scalar _tmp106 = 0;
  const Scalar _tmp107 = _tmp106 * _tmp90;
  const Scalar _tmp108 = _tmp106 * _tmp86;
  const Scalar _tmp109 = Scalar(333.54000000000002) - fv1;
  const Scalar _tmp110 = _tmp109 * _tmp54;
  const Scalar _tmp111 = _tmp39 * _tmp71 - _tmp66 - _tmp77 * (_tmp39 * _tmp74 + _tmp72);
  const Scalar _tmp112 = _tmp111 * _tmp79;
  const Scalar _tmp113 = -_tmp112 * _tmp59 + _tmp39 * _tmp57 - _tmp55;
  const Scalar _tmp114 = _tmp111 + _tmp113 * _tmp84;
  const Scalar _tmp115 = _tmp114 * _tmp86;
  const Scalar _tmp116 = -_tmp114 * _tmp88 - _tmp39;
  const Scalar _tmp117 = _tmp102 * fh1;
  const Scalar _tmp118 = _tmp117 * _tmp54;
  const Scalar _tmp119 = std::exp(_tmp104 * (_tmp100 * _tmp16 - _tmp101 * _tmp41) +
                                  _tmp110 * (-_tmp107 * _tmp88 + _tmp108 * _tmp16) +
                                  _tmp118 * (_tmp115 * _tmp16 + _tmp116 * _tmp90 + Scalar(1.0)) +
                                  _tmp98 * (_tmp16 * _tmp87 + _tmp89 * _tmp90));
  const Scalar _tmp120 = std::pow(_tmp29, Scalar(Scalar(-3) / Scalar(2)));
  const Scalar _tmp121 = _tmp120 * _tmp17;
  const Scalar _tmp122 = _tmp121 * _tmp79;
  const Scalar _tmp123 = _tmp120 * _tmp16 * _tmp27;
  const Scalar _tmp124 = _tmp121 * _tmp39 - _tmp123 - _tmp40;
  const Scalar _tmp125 = _tmp124 * _tmp51;
  const Scalar _tmp126 =
      _tmp121 * _tmp26 + _tmp121 * _tmp55 - _tmp123 * _tmp15 - _tmp125 * _tmp56 - _tmp32 - _tmp58;
  const Scalar _tmp127 = std::pow(_tmp59, Scalar(-2));
  const Scalar _tmp128 = _tmp127 * _tmp78;
  const Scalar _tmp129 = _tmp113 * _tmp128;
  const Scalar _tmp130 = _tmp121 * _tmp66;
  const Scalar _tmp131 = _tmp123 * _tmp63;
  const Scalar _tmp132 =
      -_tmp121 * _tmp63 - _tmp125 * _tmp70 + _tmp130 + _tmp64 - _tmp67 -
      _tmp77 * (-_tmp125 * _tmp73 - _tmp130 * _tmp39 + _tmp131 + _tmp39 * _tmp67);
  const Scalar _tmp133 = std::pow(_tmp78, Scalar(-2));
  const Scalar _tmp134 = _tmp132 * _tmp133;
  const Scalar _tmp135 = _tmp111 * _tmp59;
  const Scalar _tmp136 = _tmp132 * _tmp83;
  const Scalar _tmp137 =
      _tmp113 * _tmp136 - _tmp126 * _tmp129 + _tmp84 * (-_tmp112 * _tmp126 + _tmp134 * _tmp135);
  const Scalar _tmp138 = _tmp124 * _tmp79;
  const Scalar _tmp139 = _tmp134 * _tmp41;
  const Scalar _tmp140 = -_tmp114 * _tmp138 + _tmp114 * _tmp139 - _tmp137 * _tmp88;
  const Scalar _tmp141 = _tmp16 * _tmp30;
  const Scalar _tmp142 = _tmp134 * _tmp141;
  const Scalar _tmp143 = _tmp16 * _tmp86;
  const Scalar _tmp144 = _tmp125 * _tmp50;
  const Scalar _tmp145 = Scalar(1.0) * _tmp127;
  const Scalar _tmp146 = _tmp126 * _tmp145;
  const Scalar _tmp147 = _tmp41 * _tmp90;
  const Scalar _tmp148 = _tmp128 * _tmp82;
  const Scalar _tmp149 = _tmp59 * _tmp80;
  const Scalar _tmp150 =
      -_tmp126 * _tmp148 + _tmp136 * _tmp82 + _tmp84 * (-_tmp126 * _tmp81 + _tmp134 * _tmp149);
  const Scalar _tmp151 = -_tmp138 * _tmp85 + _tmp139 * _tmp85 - _tmp150 * _tmp88;
  const Scalar _tmp152 = _tmp103 * _tmp99;
  const Scalar _tmp153 = _tmp41 * _tmp51;
  const Scalar _tmp154 = _tmp106 * _tmp109;
  const Scalar _tmp155 = _tmp154 * _tmp51;
  const Scalar _tmp156 = _tmp117 * _tmp51;
  const Scalar _tmp157 = _tmp51 * _tmp97;
  const Scalar _tmp158 =
      std::exp(-_tmp116 * _tmp156 + _tmp152 * _tmp153 + _tmp155 * _tmp88 - _tmp157 * _tmp89);
  const Scalar _tmp159 = _tmp154 * _tmp79;
  const Scalar _tmp160 = _tmp134 * _tmp154;
  const Scalar _tmp161 = _tmp103 * _tmp146;
  const Scalar _tmp162 = _tmp114 * _tmp79;
  const Scalar _tmp163 = _tmp79 * _tmp97;
  const Scalar _tmp164 = std::exp(-_tmp117 * _tmp162 - _tmp152 - _tmp159 - _tmp163 * _tmp85);
  const Scalar _tmp165 = _tmp114 * _tmp117;
  const Scalar _tmp166 = _tmp85 * _tmp97;
  const Scalar _tmp167 = _tmp117 * _tmp79;
  const Scalar _tmp168 = _tmp120 * _tmp28;
  const Scalar _tmp169 = _tmp123 * _tmp39 - _tmp168 + _tmp30;
  const Scalar _tmp170 =
      _tmp123 * _tmp66 - _tmp131 - _tmp169 * _tmp71 -
      _tmp77 * (-_tmp123 * _tmp72 + _tmp168 * _tmp63 - _tmp169 * _tmp74 - _tmp64);
  const Scalar _tmp171 = _tmp133 * _tmp170;
  const Scalar _tmp172 = _tmp171 * _tmp41;
  const Scalar _tmp173 = _tmp170 * _tmp83;
  const Scalar _tmp174 =
      _tmp123 * _tmp26 + _tmp123 * _tmp55 - _tmp15 * _tmp168 + _tmp15 * _tmp30 - _tmp169 * _tmp57;
  const Scalar _tmp175 =
      _tmp113 * _tmp173 - _tmp129 * _tmp174 + _tmp84 * (-_tmp112 * _tmp174 + _tmp135 * _tmp171);
  const Scalar _tmp176 = _tmp169 * _tmp79;
  const Scalar _tmp177 = _tmp114 * _tmp172 - _tmp114 * _tmp176 - _tmp175 * _tmp88;
  const Scalar _tmp178 = _tmp141 * _tmp171;
  const Scalar _tmp179 = _tmp123 * _tmp79;
  const Scalar _tmp180 =
      -_tmp148 * _tmp174 + _tmp173 * _tmp82 + _tmp84 * (_tmp149 * _tmp171 - _tmp174 * _tmp81);
  const Scalar _tmp181 = _tmp172 * _tmp85 - _tmp176 * _tmp85 - _tmp180 * _tmp88;
  const Scalar _tmp182 = _tmp145 * _tmp174;
  const Scalar _tmp183 = _tmp103 * _tmp182;

  // Output terms (1)
  Eigen::Matrix<Scalar, 4, 3> _res;

  _res(0, 0) = 0;
  _res(1, 0) = -_tmp119 * (-_tmp104 * (-_tmp100 + _tmp121 * _tmp99 - _tmp141 * _tmp146 -
                                       _tmp144 * _tmp99 + _tmp146 * _tmp147) -
                           _tmp110 * (_tmp106 * _tmp122 - _tmp106 * _tmp142 -
                                      _tmp106 * _tmp144 * _tmp79 + _tmp107 * _tmp139 - _tmp108) -
                           _tmp118 * (_tmp114 * _tmp122 - _tmp114 * _tmp142 - _tmp115 +
                                      _tmp137 * _tmp143 + _tmp140 * _tmp90) -
                           _tmp98 * (_tmp122 * _tmp85 - _tmp142 * _tmp85 + _tmp143 * _tmp150 +
                                     _tmp151 * _tmp90 - _tmp87));
  _res(2, 0) = -_tmp158 * (-_tmp125 * _tmp152 - _tmp125 * _tmp159 + _tmp140 * _tmp156 +
                           _tmp151 * _tmp157 + _tmp153 * _tmp160 + _tmp153 * _tmp161);
  _res(3, 0) = -_tmp164 * (-_tmp134 * _tmp165 - _tmp134 * _tmp166 + _tmp137 * _tmp167 +
                           _tmp150 * _tmp163 - _tmp160 - _tmp161);
  _res(0, 1) = 0;
  _res(1, 1) =
      -_tmp119 *
      (-_tmp104 * (-_tmp101 * _tmp169 + _tmp123 * _tmp99 - _tmp141 * _tmp182 + _tmp147 * _tmp182) -
       _tmp110 * (-_tmp106 * _tmp178 + _tmp106 * _tmp179 + _tmp107 * _tmp172 - _tmp107 * _tmp176) -
       _tmp118 * (-_tmp114 * _tmp178 + _tmp123 * _tmp162 + _tmp143 * _tmp175 + _tmp177 * _tmp90) -
       _tmp98 * (_tmp143 * _tmp180 - _tmp178 * _tmp85 + _tmp179 * _tmp85 + _tmp181 * _tmp90));
  _res(2, 1) = -_tmp158 * (-_tmp152 * _tmp169 * _tmp51 + _tmp153 * _tmp183 + _tmp155 * _tmp172 -
                           _tmp155 * _tmp176 + _tmp156 * _tmp177 + _tmp157 * _tmp181);
  _res(3, 1) = -_tmp164 * (-_tmp154 * _tmp171 + _tmp163 * _tmp180 - _tmp165 * _tmp171 -
                           _tmp166 * _tmp171 + _tmp167 * _tmp175 - _tmp183);
  _res(0, 2) = 0;
  _res(1, 2) = 0;
  _res(2, 2) = 0;
  _res(3, 2) = 0;

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
