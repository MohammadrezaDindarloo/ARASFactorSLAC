// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

#include <sym/rot3.h>

namespace sym {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: IK_residual_func_cost3_wrt_pb_Nl5
 *
 * Args:
 *     fh1: Scalar
 *     fv1: Scalar
 *     DeltaRot: Rot3
 *     position_vector: Matrix31
 *     encoder: Matrix41
 *     p_a: Matrix31
 *     p_b: Matrix31
 *     p_c: Matrix31
 *     p_d: Matrix31
 *     Rot_init: Rot3
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix43
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 4, 3> IkResidualFuncCost3WrtPbNl5(
    const Scalar fh1, const Scalar fv1, const sym::Rot3<Scalar>& DeltaRot,
    const Eigen::Matrix<Scalar, 3, 1>& position_vector, const Eigen::Matrix<Scalar, 4, 1>& encoder,
    const Eigen::Matrix<Scalar, 3, 1>& p_a, const Eigen::Matrix<Scalar, 3, 1>& p_b,
    const Eigen::Matrix<Scalar, 3, 1>& p_c, const Eigen::Matrix<Scalar, 3, 1>& p_d,
    const sym::Rot3<Scalar>& Rot_init, const Scalar epsilon) {
  // Total ops: 565

  // Unused inputs
  (void)encoder;
  (void)epsilon;

  // Input arrays
  const Eigen::Matrix<Scalar, 4, 1>& _DeltaRot = DeltaRot.Data();
  const Eigen::Matrix<Scalar, 4, 1>& _Rot_init = Rot_init.Data();

  // Intermediate terms (182)
  const Scalar _tmp0 = _DeltaRot[0] * _Rot_init[2] + _DeltaRot[1] * _Rot_init[3] -
                       _DeltaRot[2] * _Rot_init[0] + _DeltaRot[3] * _Rot_init[1];
  const Scalar _tmp1 = -2 * std::pow(_tmp0, Scalar(2));
  const Scalar _tmp2 = -_DeltaRot[0] * _Rot_init[1] + _DeltaRot[1] * _Rot_init[0] +
                       _DeltaRot[2] * _Rot_init[3] + _DeltaRot[3] * _Rot_init[2];
  const Scalar _tmp3 = 1 - 2 * std::pow(_tmp2, Scalar(2));
  const Scalar _tmp4 = Scalar(0.20999999999999999) * _tmp1 + Scalar(0.20999999999999999) * _tmp3;
  const Scalar _tmp5 = _DeltaRot[0] * _Rot_init[3] - _DeltaRot[1] * _Rot_init[2] +
                       _DeltaRot[2] * _Rot_init[1] + _DeltaRot[3] * _Rot_init[0];
  const Scalar _tmp6 = 2 * _tmp2;
  const Scalar _tmp7 = _tmp5 * _tmp6;
  const Scalar _tmp8 = -2 * _DeltaRot[0] * _Rot_init[0] - 2 * _DeltaRot[1] * _Rot_init[1] -
                       2 * _DeltaRot[2] * _Rot_init[2] + 2 * _DeltaRot[3] * _Rot_init[3];
  const Scalar _tmp9 = _tmp0 * _tmp8;
  const Scalar _tmp10 =
      -Scalar(0.010999999999999999) * _tmp7 - Scalar(0.010999999999999999) * _tmp9;
  const Scalar _tmp11 = 2 * _tmp0 * _tmp5;
  const Scalar _tmp12 = _tmp2 * _tmp8;
  const Scalar _tmp13 = Scalar(0.20999999999999999) * _tmp11 - Scalar(0.20999999999999999) * _tmp12;
  const Scalar _tmp14 = _tmp10 - _tmp13;
  const Scalar _tmp15 = _tmp14 + _tmp4;
  const Scalar _tmp16 = _tmp15 - p_b(0, 0) + position_vector(0, 0);
  const Scalar _tmp17 = Scalar(0.20999999999999999) * _tmp7 - Scalar(0.20999999999999999) * _tmp9;
  const Scalar _tmp18 = -2 * std::pow(_tmp5, Scalar(2));
  const Scalar _tmp19 = -Scalar(0.010999999999999999) * _tmp1 -
                        Scalar(0.010999999999999999) * _tmp18 + Scalar(-0.010999999999999999);
  const Scalar _tmp20 = _tmp0 * _tmp6;
  const Scalar _tmp21 = _tmp5 * _tmp8;
  const Scalar _tmp22 = Scalar(0.20999999999999999) * _tmp20 + Scalar(0.20999999999999999) * _tmp21;
  const Scalar _tmp23 = _tmp19 + _tmp22;
  const Scalar _tmp24 = -_tmp17 + _tmp23;
  const Scalar _tmp25 = std::pow(_tmp16, Scalar(2));
  const Scalar _tmp26 = Scalar(0.20999999999999999) * _tmp11 + Scalar(0.20999999999999999) * _tmp12;
  const Scalar _tmp27 = Scalar(0.20999999999999999) * _tmp18 + Scalar(0.20999999999999999) * _tmp3;
  const Scalar _tmp28 =
      -Scalar(0.010999999999999999) * _tmp20 + Scalar(0.010999999999999999) * _tmp21;
  const Scalar _tmp29 = -_tmp27 + _tmp28;
  const Scalar _tmp30 = _tmp26 + _tmp29;
  const Scalar _tmp31 = _tmp30 - p_b(1, 0) + position_vector(1, 0);
  const Scalar _tmp32 = std::pow(_tmp31, Scalar(2));
  const Scalar _tmp33 = _tmp25 + _tmp32;
  const Scalar _tmp34 = std::pow(_tmp33, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp35 = _tmp24 * _tmp34;
  const Scalar _tmp36 = _tmp16 * _tmp35;
  const Scalar _tmp37 = _tmp17 + _tmp19 - _tmp22;
  const Scalar _tmp38 = _tmp34 * _tmp37;
  const Scalar _tmp39 = _tmp31 * _tmp34;
  const Scalar _tmp40 = -_tmp4;
  const Scalar _tmp41 = _tmp10 + _tmp13;
  const Scalar _tmp42 = _tmp40 + _tmp41;
  const Scalar _tmp43 = _tmp42 - p_d(0, 0) + position_vector(0, 0);
  const Scalar _tmp44 = Scalar(1.0) / (_tmp43);
  const Scalar _tmp45 = -_tmp26;
  const Scalar _tmp46 = _tmp27 + _tmp28;
  const Scalar _tmp47 = _tmp45 + _tmp46;
  const Scalar _tmp48 = _tmp47 - p_d(1, 0) + position_vector(1, 0);
  const Scalar _tmp49 = _tmp44 * _tmp48;
  const Scalar _tmp50 = _tmp34 * _tmp49;
  const Scalar _tmp51 = _tmp16 * _tmp50 - _tmp39;
  const Scalar _tmp52 = _tmp4 + _tmp41;
  const Scalar _tmp53 = _tmp52 - p_c(0, 0) + position_vector(0, 0);
  const Scalar _tmp54 = _tmp26 + _tmp46;
  const Scalar _tmp55 = _tmp54 - p_c(1, 0) + position_vector(1, 0);
  const Scalar _tmp56 = std::pow(Scalar(std::pow(_tmp53, Scalar(2)) + std::pow(_tmp55, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp57 = _tmp53 * _tmp56;
  const Scalar _tmp58 = _tmp55 * _tmp56;
  const Scalar _tmp59 = Scalar(1.0) / (_tmp49 * _tmp57 - _tmp58);
  const Scalar _tmp60 = _tmp24 * _tmp49;
  const Scalar _tmp61 = _tmp17 + _tmp23;
  const Scalar _tmp62 = -_tmp57 * _tmp60 + _tmp58 * _tmp61;
  const Scalar _tmp63 = _tmp59 * _tmp62;
  const Scalar _tmp64 = Scalar(1.0) * _tmp47;
  const Scalar _tmp65 = Scalar(1.0) * _tmp42;
  const Scalar _tmp66 = (-_tmp52 + _tmp65) / (_tmp54 - _tmp64);
  const Scalar _tmp67 = _tmp24 * _tmp57 - _tmp57 * _tmp61;
  const Scalar _tmp68 = _tmp59 * _tmp67;
  const Scalar _tmp69 = -_tmp16 * _tmp38 + _tmp36 - _tmp51 * _tmp68 -
                        _tmp66 * (-_tmp36 * _tmp49 + _tmp37 * _tmp39 - _tmp51 * _tmp63);
  const Scalar _tmp70 = _tmp15 * _tmp34;
  const Scalar _tmp71 = _tmp30 * _tmp34;
  const Scalar _tmp72 =
      std::sqrt(Scalar(std::pow(_tmp43, Scalar(2)) + std::pow(_tmp48, Scalar(2))));
  const Scalar _tmp73 = Scalar(1.0) / (_tmp72);
  const Scalar _tmp74 = _tmp44 * _tmp72;
  const Scalar _tmp75 = _tmp74 * (_tmp42 * _tmp48 * _tmp73 - _tmp43 * _tmp47 * _tmp73);
  const Scalar _tmp76 = -_tmp52 * _tmp58 + _tmp54 * _tmp57 + _tmp57 * _tmp75;
  const Scalar _tmp77 = _tmp59 * _tmp76;
  const Scalar _tmp78 = _tmp16 * _tmp34;
  const Scalar _tmp79 = _tmp16 * _tmp71 - _tmp31 * _tmp70 - _tmp51 * _tmp77 + _tmp75 * _tmp78;
  const Scalar _tmp80 = Scalar(1.0) / (_tmp79);
  const Scalar _tmp81 = Scalar(1.0) / (_tmp69);
  const Scalar _tmp82 = -_tmp24 + _tmp49 * _tmp68 - _tmp66 * (_tmp49 * _tmp63 + _tmp60);
  const Scalar _tmp83 = _tmp81 * _tmp82;
  const Scalar _tmp84 = _tmp49 * _tmp77 - _tmp75 - _tmp79 * _tmp83;
  const Scalar _tmp85 = _tmp80 * _tmp84;
  const Scalar _tmp86 = _tmp69 * _tmp85 + _tmp82;
  const Scalar _tmp87 = _tmp51 * _tmp81;
  const Scalar _tmp88 = -_tmp49 - _tmp86 * _tmp87;
  const Scalar _tmp89 = _tmp57 * _tmp59;
  const Scalar _tmp90 = _tmp81 * _tmp86;
  const Scalar _tmp91 = _tmp34 * _tmp90;
  const Scalar _tmp92 = _tmp14 + _tmp40;
  const Scalar _tmp93 = _tmp92 - p_a(0, 0) + position_vector(0, 0);
  const Scalar _tmp94 = _tmp29 + _tmp45;
  const Scalar _tmp95 = _tmp94 - p_a(1, 0) + position_vector(1, 0);
  const Scalar _tmp96 = std::pow(Scalar(std::pow(_tmp93, Scalar(2)) + std::pow(_tmp95, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp97 = _tmp93 * _tmp96;
  const Scalar _tmp98 = _tmp97 * fh1;
  const Scalar _tmp99 = _tmp74 * _tmp98;
  const Scalar _tmp100 = Scalar(1.0) * _tmp80;
  const Scalar _tmp101 = _tmp51 * _tmp89;
  const Scalar _tmp102 = _tmp100 * _tmp34;
  const Scalar _tmp103 = _tmp95 * _tmp96;
  const Scalar _tmp104 = fh1 * (_tmp103 * _tmp92 - _tmp94 * _tmp97);
  const Scalar _tmp105 = _tmp104 * _tmp74;
  const Scalar _tmp106 = Scalar(1.0) * _tmp63 * _tmp66 - Scalar(1.0) * _tmp68;
  const Scalar _tmp107 = _tmp106 * _tmp81;
  const Scalar _tmp108 = -_tmp107 * _tmp79 - Scalar(1.0) * _tmp77;
  const Scalar _tmp109 = _tmp108 * _tmp80;
  const Scalar _tmp110 = _tmp106 + _tmp109 * _tmp69;
  const Scalar _tmp111 = _tmp110 * _tmp81;
  const Scalar _tmp112 = _tmp111 * _tmp34;
  const Scalar _tmp113 = -_tmp110 * _tmp87 + Scalar(1.0);
  const Scalar _tmp114 = _tmp103 * fh1;
  const Scalar _tmp115 = _tmp114 * _tmp74;
  const Scalar _tmp116 = _tmp64 * _tmp66 + _tmp65;
  const Scalar _tmp117 = 0;
  const Scalar _tmp118 = _tmp117 * _tmp81;
  const Scalar _tmp119 = _tmp118 * _tmp34;
  const Scalar _tmp120 = Scalar(333.54000000000002) - fv1;
  const Scalar _tmp121 = _tmp120 * _tmp74;
  const Scalar _tmp122 = std::exp(_tmp105 * (-_tmp100 * _tmp101 + _tmp102 * _tmp16) +
                                  _tmp115 * (_tmp112 * _tmp16 + _tmp113 * _tmp89) +
                                  _tmp121 * (-_tmp101 * _tmp118 + _tmp119 * _tmp16) +
                                  _tmp99 * (_tmp16 * _tmp91 + _tmp88 * _tmp89 + Scalar(1.0)));
  const Scalar _tmp123 = std::pow(_tmp33, Scalar(Scalar(-3) / Scalar(2)));
  const Scalar _tmp124 = _tmp123 * _tmp25;
  const Scalar _tmp125 = _tmp123 * _tmp16 * _tmp31;
  const Scalar _tmp126 = _tmp124 * _tmp49 - _tmp125 - _tmp50;
  const Scalar _tmp127 = _tmp126 * _tmp89;
  const Scalar _tmp128 = _tmp125 * _tmp37;
  const Scalar _tmp129 =
      _tmp124 * _tmp24 - _tmp124 * _tmp37 - _tmp126 * _tmp68 - _tmp35 + _tmp38 -
      _tmp66 * (-_tmp124 * _tmp60 - _tmp126 * _tmp63 + _tmp128 + _tmp35 * _tmp49);
  const Scalar _tmp130 = std::pow(_tmp69, Scalar(-2));
  const Scalar _tmp131 = _tmp129 * _tmp130;
  const Scalar _tmp132 = _tmp131 * _tmp78;
  const Scalar _tmp133 = _tmp101 * _tmp117;
  const Scalar _tmp134 = _tmp124 * _tmp30 + _tmp124 * _tmp75 - _tmp125 * _tmp15 - _tmp126 * _tmp77 -
                         _tmp34 * _tmp75 - _tmp71;
  const Scalar _tmp135 = std::pow(_tmp79, Scalar(-2));
  const Scalar _tmp136 = Scalar(1.0) * _tmp135;
  const Scalar _tmp137 = _tmp134 * _tmp136;
  const Scalar _tmp138 = _tmp110 * _tmp51;
  const Scalar _tmp139 = _tmp106 * _tmp79;
  const Scalar _tmp140 = _tmp69 * _tmp80;
  const Scalar _tmp141 = _tmp135 * _tmp69;
  const Scalar _tmp142 = _tmp134 * _tmp141;
  const Scalar _tmp143 =
      -_tmp108 * _tmp142 + _tmp109 * _tmp129 + _tmp140 * (-_tmp107 * _tmp134 + _tmp131 * _tmp139);
  const Scalar _tmp144 = -_tmp111 * _tmp126 + _tmp131 * _tmp138 - _tmp143 * _tmp87;
  const Scalar _tmp145 = _tmp78 * _tmp81;
  const Scalar _tmp146 = _tmp110 * _tmp78;
  const Scalar _tmp147 = _tmp79 * _tmp82;
  const Scalar _tmp148 =
      _tmp129 * _tmp85 + _tmp140 * (_tmp131 * _tmp147 - _tmp134 * _tmp83) - _tmp142 * _tmp84;
  const Scalar _tmp149 = _tmp51 * _tmp86;
  const Scalar _tmp150 = -_tmp126 * _tmp90 + _tmp131 * _tmp149 - _tmp148 * _tmp87;
  const Scalar _tmp151 = _tmp100 * _tmp104;
  const Scalar _tmp152 = _tmp51 * _tmp59;
  const Scalar _tmp153 = _tmp59 * _tmp98;
  const Scalar _tmp154 = _tmp114 * _tmp59;
  const Scalar _tmp155 = _tmp118 * _tmp120;
  const Scalar _tmp156 = _tmp155 * _tmp59;
  const Scalar _tmp157 =
      std::exp(-_tmp113 * _tmp154 + _tmp151 * _tmp152 - _tmp153 * _tmp88 + _tmp156 * _tmp51);
  const Scalar _tmp158 = _tmp104 * _tmp137;
  const Scalar _tmp159 = _tmp117 * _tmp120;
  const Scalar _tmp160 = _tmp131 * _tmp159;
  const Scalar _tmp161 = std::exp(-_tmp111 * _tmp114 - _tmp151 - _tmp155 - _tmp90 * _tmp98);
  const Scalar _tmp162 = _tmp114 * _tmp81;
  const Scalar _tmp163 = _tmp110 * _tmp114;
  const Scalar _tmp164 = _tmp86 * _tmp98;
  const Scalar _tmp165 = _tmp123 * _tmp32;
  const Scalar _tmp166 = _tmp125 * _tmp49 - _tmp165 + _tmp34;
  const Scalar _tmp167 = _tmp166 * _tmp59;
  const Scalar _tmp168 =
      _tmp125 * _tmp24 - _tmp128 - _tmp167 * _tmp67 -
      _tmp66 * (-_tmp125 * _tmp60 + _tmp165 * _tmp37 - _tmp167 * _tmp62 - _tmp38);
  const Scalar _tmp169 = _tmp130 * _tmp168;
  const Scalar _tmp170 = _tmp167 * _tmp57;
  const Scalar _tmp171 = _tmp169 * _tmp78;
  const Scalar _tmp172 =
      _tmp125 * _tmp30 + _tmp125 * _tmp75 - _tmp15 * _tmp165 - _tmp167 * _tmp76 + _tmp70;
  const Scalar _tmp173 = _tmp136 * _tmp172;
  const Scalar _tmp174 = _tmp141 * _tmp172;
  const Scalar _tmp175 =
      _tmp140 * (_tmp147 * _tmp169 - _tmp172 * _tmp83) + _tmp168 * _tmp85 - _tmp174 * _tmp84;
  const Scalar _tmp176 = _tmp149 * _tmp169 - _tmp166 * _tmp90 - _tmp175 * _tmp87;
  const Scalar _tmp177 = _tmp175 * _tmp81;
  const Scalar _tmp178 =
      -_tmp108 * _tmp174 + _tmp109 * _tmp168 + _tmp140 * (-_tmp107 * _tmp172 + _tmp139 * _tmp169);
  const Scalar _tmp179 = -_tmp111 * _tmp166 + _tmp138 * _tmp169 - _tmp178 * _tmp87;
  const Scalar _tmp180 = _tmp159 * _tmp169;
  const Scalar _tmp181 = _tmp104 * _tmp173;

  // Output terms (1)
  Eigen::Matrix<Scalar, 4, 3> _res;

  _res(0, 0) = 0;
  _res(1, 0) = -_tmp122 * (-_tmp105 * (_tmp100 * _tmp124 - _tmp100 * _tmp127 + _tmp101 * _tmp137 -
                                       _tmp102 - _tmp137 * _tmp78) -
                           _tmp115 * (_tmp111 * _tmp124 - _tmp112 - _tmp131 * _tmp146 +
                                      _tmp143 * _tmp145 + _tmp144 * _tmp89) -
                           _tmp121 * (-_tmp117 * _tmp132 + _tmp118 * _tmp124 - _tmp118 * _tmp127 -
                                      _tmp119 + _tmp131 * _tmp133) -
                           _tmp99 * (_tmp124 * _tmp90 - _tmp132 * _tmp86 + _tmp145 * _tmp148 +
                                     _tmp150 * _tmp89 - _tmp91));
  _res(2, 0) = -_tmp157 * (-_tmp126 * _tmp151 * _tmp59 - _tmp126 * _tmp156 + _tmp144 * _tmp154 +
                           _tmp150 * _tmp153 + _tmp152 * _tmp158 + _tmp152 * _tmp160);
  _res(3, 0) = -_tmp161 * (-_tmp131 * _tmp163 - _tmp131 * _tmp164 + _tmp143 * _tmp162 +
                           _tmp148 * _tmp81 * _tmp98 - _tmp158 - _tmp160);
  _res(0, 1) = 0;
  _res(1, 1) =
      -_tmp122 *
      (-_tmp105 * (_tmp100 * _tmp125 - _tmp100 * _tmp170 + _tmp101 * _tmp173 - _tmp173 * _tmp78) -
       _tmp115 * (_tmp111 * _tmp125 + _tmp145 * _tmp178 - _tmp146 * _tmp169 + _tmp179 * _tmp89) -
       _tmp121 * (-_tmp117 * _tmp171 + _tmp118 * _tmp125 - _tmp118 * _tmp170 + _tmp133 * _tmp169) -
       _tmp99 * (_tmp125 * _tmp90 - _tmp171 * _tmp86 + _tmp176 * _tmp89 + _tmp177 * _tmp78));
  _res(2, 1) = -_tmp157 * (-_tmp151 * _tmp167 + _tmp152 * _tmp180 + _tmp152 * _tmp181 +
                           _tmp153 * _tmp176 + _tmp154 * _tmp179 - _tmp155 * _tmp167);
  _res(3, 1) = -_tmp161 * (_tmp162 * _tmp178 - _tmp163 * _tmp169 - _tmp164 * _tmp169 +
                           _tmp177 * _tmp98 - _tmp180 - _tmp181);
  _res(0, 2) = 0;
  _res(1, 2) = 0;
  _res(2, 2) = 0;
  _res(3, 2) = 0;

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
