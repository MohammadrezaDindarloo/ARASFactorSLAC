// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

#include <sym/rot3.h>

namespace sym {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: IK_residual_func_cost4_Nl2
 *
 * Args:
 *     fh1: Scalar
 *     fv1: Scalar
 *     DeltaRot: Rot3
 *     position_vector: Matrix31
 *     encoder: Matrix41
 *     p_a: Matrix31
 *     p_b: Matrix31
 *     p_c: Matrix31
 *     p_d: Matrix31
 *     Rot_init: Rot3
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix41
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 4, 1> IkResidualFuncCost4Nl2(
    const Scalar fh1, const Scalar fv1, const sym::Rot3<Scalar>& DeltaRot,
    const Eigen::Matrix<Scalar, 3, 1>& position_vector, const Eigen::Matrix<Scalar, 4, 1>& encoder,
    const Eigen::Matrix<Scalar, 3, 1>& p_a, const Eigen::Matrix<Scalar, 3, 1>& p_b,
    const Eigen::Matrix<Scalar, 3, 1>& p_c, const Eigen::Matrix<Scalar, 3, 1>& p_d,
    const sym::Rot3<Scalar>& Rot_init, const Scalar epsilon) {
  // Total ops: 472

  // Unused inputs
  (void)epsilon;

  // Input arrays
  const Eigen::Matrix<Scalar, 4, 1>& _DeltaRot = DeltaRot.Data();
  const Eigen::Matrix<Scalar, 4, 1>& _Rot_init = Rot_init.Data();

  // Intermediate terms (152)
  const Scalar _tmp0 = Scalar(1.0) / (fh1);
  const Scalar _tmp1 = _DeltaRot[0] * _Rot_init[3] - _DeltaRot[1] * _Rot_init[2] +
                       _DeltaRot[2] * _Rot_init[1] + _DeltaRot[3] * _Rot_init[0];
  const Scalar _tmp2 = _DeltaRot[0] * _Rot_init[2] + _DeltaRot[1] * _Rot_init[3] -
                       _DeltaRot[2] * _Rot_init[0] + _DeltaRot[3] * _Rot_init[1];
  const Scalar _tmp3 = 2 * _tmp2;
  const Scalar _tmp4 = _tmp1 * _tmp3;
  const Scalar _tmp5 = -_DeltaRot[0] * _Rot_init[1] + _DeltaRot[1] * _Rot_init[0] +
                       _DeltaRot[2] * _Rot_init[3] + _DeltaRot[3] * _Rot_init[2];
  const Scalar _tmp6 = -2 * _DeltaRot[0] * _Rot_init[0] - 2 * _DeltaRot[1] * _Rot_init[1] -
                       2 * _DeltaRot[2] * _Rot_init[2] + 2 * _DeltaRot[3] * _Rot_init[3];
  const Scalar _tmp7 = _tmp5 * _tmp6;
  const Scalar _tmp8 = Scalar(0.20999999999999999) * _tmp4 + Scalar(0.20999999999999999) * _tmp7;
  const Scalar _tmp9 = -_tmp8;
  const Scalar _tmp10 = -2 * std::pow(_tmp1, Scalar(2));
  const Scalar _tmp11 = -2 * std::pow(_tmp5, Scalar(2));
  const Scalar _tmp12 = Scalar(0.20999999999999999) * _tmp10 +
                        Scalar(0.20999999999999999) * _tmp11 + Scalar(0.20999999999999999);
  const Scalar _tmp13 = _tmp3 * _tmp5;
  const Scalar _tmp14 = _tmp1 * _tmp6;
  const Scalar _tmp15 = _tmp13 - _tmp14;
  const Scalar _tmp16 = -Scalar(0.010999999999999999) * _tmp15;
  const Scalar _tmp17 = -_tmp12 + _tmp16;
  const Scalar _tmp18 = _tmp17 + _tmp9;
  const Scalar _tmp19 = _tmp18 + position_vector(1, 0);
  const Scalar _tmp20 = 1 - 2 * std::pow(_tmp2, Scalar(2));
  const Scalar _tmp21 = Scalar(0.20999999999999999) * _tmp11 + Scalar(0.20999999999999999) * _tmp20;
  const Scalar _tmp22 = -_tmp21;
  const Scalar _tmp23 = 2 * _tmp1 * _tmp5;
  const Scalar _tmp24 = _tmp2 * _tmp6;
  const Scalar _tmp25 = _tmp23 + _tmp24;
  const Scalar _tmp26 = -Scalar(0.010999999999999999) * _tmp25;
  const Scalar _tmp27 = Scalar(0.20999999999999999) * _tmp4 - Scalar(0.20999999999999999) * _tmp7;
  const Scalar _tmp28 = _tmp26 - _tmp27;
  const Scalar _tmp29 = _tmp22 + _tmp28;
  const Scalar _tmp30 = _tmp29 + position_vector(0, 0);
  const Scalar _tmp31 = std::asinh(_tmp0 * fv1);
  const Scalar _tmp32 = Scalar(1.4083112389913199) * fh1;
  const Scalar _tmp33 = _tmp26 + _tmp27;
  const Scalar _tmp34 = _tmp22 + _tmp33;
  const Scalar _tmp35 = _tmp34 + position_vector(0, 0);
  const Scalar _tmp36 = _tmp35 - p_d(0, 0);
  const Scalar _tmp37 = _tmp12 + _tmp16;
  const Scalar _tmp38 = _tmp37 + _tmp9;
  const Scalar _tmp39 = _tmp38 + position_vector(1, 0);
  const Scalar _tmp40 = _tmp39 - p_d(1, 0);
  const Scalar _tmp41 = std::pow(Scalar(std::pow(_tmp36, Scalar(2)) + std::pow(_tmp40, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp42 = _tmp36 * _tmp41;
  const Scalar _tmp43 = _tmp21 + _tmp33;
  const Scalar _tmp44 = _tmp43 + position_vector(0, 0);
  const Scalar _tmp45 = _tmp44 - p_c(0, 0);
  const Scalar _tmp46 = _tmp37 + _tmp8;
  const Scalar _tmp47 = _tmp46 + position_vector(1, 0);
  const Scalar _tmp48 = _tmp47 - p_c(1, 0);
  const Scalar _tmp49 =
      std::sqrt(Scalar(std::pow(_tmp45, Scalar(2)) + std::pow(_tmp48, Scalar(2))));
  const Scalar _tmp50 = Scalar(1.0) / (_tmp49);
  const Scalar _tmp51 = Scalar(1.0) / (_tmp45);
  const Scalar _tmp52 = _tmp49 * _tmp51;
  const Scalar _tmp53 = _tmp52 * (_tmp43 * _tmp48 * _tmp50 - _tmp45 * _tmp46 * _tmp50);
  const Scalar _tmp54 = _tmp21 + _tmp28;
  const Scalar _tmp55 = _tmp54 + position_vector(0, 0);
  const Scalar _tmp56 = _tmp55 - p_b(0, 0);
  const Scalar _tmp57 = _tmp17 + _tmp8;
  const Scalar _tmp58 = _tmp57 + position_vector(1, 0);
  const Scalar _tmp59 = _tmp58 - p_b(1, 0);
  const Scalar _tmp60 = std::pow(Scalar(std::pow(_tmp56, Scalar(2)) + std::pow(_tmp59, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp61 = _tmp59 * _tmp60;
  const Scalar _tmp62 = _tmp56 * _tmp60;
  const Scalar _tmp63 = _tmp53 * _tmp62 - _tmp54 * _tmp61 + _tmp57 * _tmp62;
  const Scalar _tmp64 = _tmp48 * _tmp51;
  const Scalar _tmp65 = Scalar(1.0) / (-_tmp61 + _tmp62 * _tmp64);
  const Scalar _tmp66 = _tmp40 * _tmp41;
  const Scalar _tmp67 = _tmp42 * _tmp64 - _tmp66;
  const Scalar _tmp68 = _tmp65 * _tmp67;
  const Scalar _tmp69 = -_tmp34 * _tmp66 + _tmp38 * _tmp42 + _tmp42 * _tmp53 - _tmp63 * _tmp68;
  const Scalar _tmp70 = Scalar(1.0) / (_tmp69);
  const Scalar _tmp71 = Scalar(1.0) * _tmp70;
  const Scalar _tmp72 = Scalar(1.0) * _tmp65;
  const Scalar _tmp73 = _tmp67 * _tmp70 * _tmp72;
  const Scalar _tmp74 = _tmp30 - p_a(0, 0);
  const Scalar _tmp75 = _tmp19 - p_a(1, 0);
  const Scalar _tmp76 = std::pow(Scalar(std::pow(_tmp74, Scalar(2)) + std::pow(_tmp75, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp77 = _tmp74 * _tmp76;
  const Scalar _tmp78 = _tmp75 * _tmp76;
  const Scalar _tmp79 = fh1 * (-_tmp18 * _tmp77 + _tmp29 * _tmp78);
  const Scalar _tmp80 = Scalar(333.54000000000002) - fv1;
  const Scalar _tmp81 = Scalar(0.20999999999999999) * _tmp13 + Scalar(0.20999999999999999) * _tmp14;
  const Scalar _tmp82 =
      -Scalar(0.010999999999999999) * _tmp10 - Scalar(0.010999999999999999) * _tmp20;
  const Scalar _tmp83 = Scalar(0.20999999999999999) * _tmp23 - Scalar(0.20999999999999999) * _tmp24;
  const Scalar _tmp84 = _tmp82 + _tmp83;
  const Scalar _tmp85 = _tmp81 + _tmp84;
  const Scalar _tmp86 = _tmp42 * _tmp85;
  const Scalar _tmp87 = _tmp82 - _tmp83;
  const Scalar _tmp88 = _tmp81 + _tmp87;
  const Scalar _tmp89 = -_tmp81;
  const Scalar _tmp90 = _tmp84 + _tmp89;
  const Scalar _tmp91 = _tmp62 * _tmp85;
  const Scalar _tmp92 = -_tmp62 * _tmp90 + _tmp91;
  const Scalar _tmp93 = _tmp61 * _tmp90 - _tmp64 * _tmp91;
  const Scalar _tmp94 = -_tmp64 * _tmp86 + _tmp66 * _tmp88 - _tmp68 * _tmp93;
  const Scalar _tmp95 = Scalar(1.0) * _tmp46;
  const Scalar _tmp96 = -_tmp95;
  const Scalar _tmp97 = Scalar(1.0) / (_tmp57 + _tmp96);
  const Scalar _tmp98 = Scalar(1.0) * _tmp43;
  const Scalar _tmp99 = _tmp97 * (-_tmp54 + _tmp98);
  const Scalar _tmp100 = -_tmp42 * _tmp88 - _tmp68 * _tmp92 + _tmp86 - _tmp94 * _tmp99;
  const Scalar _tmp101 = Scalar(1.0) / (_tmp100);
  const Scalar _tmp102 = _tmp95 * _tmp99 + _tmp98;
  const Scalar _tmp103 = 0;
  const Scalar _tmp104 = _tmp64 * _tmp65;
  const Scalar _tmp105 = _tmp104 * _tmp93 + _tmp64 * _tmp85;
  const Scalar _tmp106 = _tmp104 * _tmp92 - _tmp105 * _tmp99 - _tmp85;
  const Scalar _tmp107 = _tmp101 * _tmp69;
  const Scalar _tmp108 = _tmp100 * _tmp70;
  const Scalar _tmp109 = _tmp108 * (_tmp104 * _tmp63 - _tmp106 * _tmp107 - _tmp53);
  const Scalar _tmp110 = _tmp101 * (_tmp106 + _tmp109);
  const Scalar _tmp111 = -_tmp110 * _tmp67 - _tmp64;
  const Scalar _tmp112 = _tmp62 * _tmp65;
  const Scalar _tmp113 = _tmp77 * fh1;
  const Scalar _tmp114 = _tmp72 * _tmp93;
  const Scalar _tmp115 = _tmp114 * _tmp99 - _tmp72 * _tmp92;
  const Scalar _tmp116 = _tmp108 * (-_tmp107 * _tmp115 - _tmp63 * _tmp72);
  const Scalar _tmp117 = _tmp101 * (_tmp115 + _tmp116);
  const Scalar _tmp118 = -_tmp117 * _tmp67 + Scalar(1.0);
  const Scalar _tmp119 = _tmp78 * fh1;
  const Scalar _tmp120 = -_tmp113 * _tmp52 * (_tmp110 * _tmp42 + _tmp111 * _tmp112 + Scalar(1.0)) -
                         _tmp119 * _tmp52 * (_tmp112 * _tmp118 + _tmp117 * _tmp42) -
                         _tmp52 * _tmp79 * (_tmp42 * _tmp71 - _tmp62 * _tmp73) -
                         _tmp52 * _tmp80 * (_tmp103 * _tmp42 - _tmp103 * _tmp62 * _tmp68);
  const Scalar _tmp121 = Scalar(1.0) / (_tmp120);
  const Scalar _tmp122 = fh1 * (_tmp87 + _tmp89);
  const Scalar _tmp123 = _tmp122 * _tmp77 + Scalar(40.024799999999999) * _tmp25 + _tmp29 * fv1;
  const Scalar _tmp124 = _tmp38 + _tmp96;
  const Scalar _tmp125 = _tmp124 * _tmp99;
  const Scalar _tmp126 = Scalar(1.0) / (-_tmp125 - _tmp34 + _tmp98);
  const Scalar _tmp127 = Scalar(1.0) * _tmp126;
  const Scalar _tmp128 = _tmp124 * _tmp97;
  const Scalar _tmp129 = _tmp102 * _tmp126;
  const Scalar _tmp130 = _tmp97 * (-_tmp103 * _tmp94 - _tmp124 * _tmp129 + _tmp96);
  const Scalar _tmp131 = _tmp124 * _tmp126;
  const Scalar _tmp132 = -_tmp114 + _tmp116 * _tmp131 - _tmp117 * _tmp94;
  const Scalar _tmp133 = Scalar(1.0) * _tmp97;
  const Scalar _tmp134 = -_tmp122 * _tmp78 - Scalar(40.024799999999999) * _tmp15 - _tmp18 * fv1;
  const Scalar _tmp135 = _tmp127 * _tmp99;
  const Scalar _tmp136 = _tmp97 * (_tmp125 * _tmp127 + Scalar(1.0));
  const Scalar _tmp137 = _tmp105 + _tmp109 * _tmp131 - _tmp110 * _tmp94;
  const Scalar _tmp138 = _tmp108 * _tmp127;
  const Scalar _tmp139 = _tmp124 * _tmp138 - _tmp71 * _tmp94;
  const Scalar _tmp140 =
      std::asinh(_tmp121 * (Scalar(1.0) * _tmp113 * (_tmp109 * _tmp127 - _tmp133 * _tmp137) +
                            Scalar(1.0) * _tmp119 * (_tmp116 * _tmp127 - _tmp132 * _tmp133) +
                            Scalar(1.0) * _tmp123 * (_tmp127 * _tmp128 - _tmp127) +
                            Scalar(1.0) * _tmp134 * (_tmp135 - Scalar(1.0) * _tmp136) +
                            Scalar(1.0) * _tmp79 * (-_tmp133 * _tmp139 + _tmp138) +
                            Scalar(1.0) * _tmp80 *
                                (-_tmp102 * _tmp127 - Scalar(1.0) * _tmp130 + Scalar(1.0))));
  const Scalar _tmp141 = Scalar(1.4083112389913199) * _tmp120;
  const Scalar _tmp142 = _tmp103 * _tmp80;
  const Scalar _tmp143 =
      _tmp111 * _tmp113 * _tmp65 + _tmp118 * _tmp119 * _tmp65 - _tmp142 * _tmp68 - _tmp73 * _tmp79;
  const Scalar _tmp144 = Scalar(1.0) / (_tmp143);
  const Scalar _tmp145 = _tmp123 * _tmp127;
  const Scalar _tmp146 = std::asinh(
      _tmp144 * (_tmp113 * _tmp137 * _tmp97 + _tmp119 * _tmp132 * _tmp97 - _tmp128 * _tmp145 +
                 _tmp130 * _tmp80 + _tmp134 * _tmp136 + _tmp139 * _tmp79 * _tmp97));
  const Scalar _tmp147 = Scalar(1.4083112389913199) * _tmp143;
  const Scalar _tmp148 = _tmp110 * _tmp113 + _tmp117 * _tmp119 + _tmp142 + _tmp71 * _tmp79;
  const Scalar _tmp149 = Scalar(1.0) / (_tmp148);
  const Scalar _tmp150 =
      std::asinh(_tmp149 * (-_tmp109 * _tmp113 * _tmp126 - _tmp116 * _tmp119 * _tmp126 +
                            _tmp129 * _tmp80 - _tmp134 * _tmp135 - _tmp138 * _tmp79 + _tmp145));
  const Scalar _tmp151 = Scalar(1.4083112389913199) * _tmp148;

  // Output terms (1)
  Eigen::Matrix<Scalar, 4, 1> _res;

  _res(0, 0) =
      _tmp32 * (-std::sinh(Scalar(1.0) * _tmp31) -
                std::sinh(Scalar(0.71007031138673404) * _tmp0 *
                          (-_tmp31 * _tmp32 -
                           std::sqrt(Scalar(std::pow(Scalar(-_tmp19 + p_a(1, 0)), Scalar(2)) +
                                            std::pow(Scalar(-_tmp30 + p_a(0, 0)), Scalar(2))))))) -
      encoder(0, 0);
  _res(1, 0) =
      _tmp141 * (-std::sinh(Scalar(1.0) * _tmp140) -
                 std::sinh(Scalar(0.71007031138673404) * _tmp121 *
                           (-_tmp140 * _tmp141 -
                            std::sqrt(Scalar(std::pow(Scalar(-_tmp44 + p_c(0, 0)), Scalar(2)) +
                                             std::pow(Scalar(-_tmp47 + p_c(1, 0)), Scalar(2))))))) -
      encoder(1, 0);
  _res(2, 0) =
      _tmp147 * (-std::sinh(Scalar(1.0) * _tmp146) -
                 std::sinh(Scalar(0.71007031138673404) * _tmp144 *
                           (-_tmp146 * _tmp147 -
                            std::sqrt(Scalar(std::pow(Scalar(-_tmp55 + p_b(0, 0)), Scalar(2)) +
                                             std::pow(Scalar(-_tmp58 + p_b(1, 0)), Scalar(2))))))) -
      encoder(2, 0);
  _res(3, 0) =
      _tmp151 * (-std::sinh(Scalar(1.0) * _tmp150) -
                 std::sinh(Scalar(0.71007031138673404) * _tmp149 *
                           (-_tmp150 * _tmp151 -
                            std::sqrt(Scalar(std::pow(Scalar(-_tmp35 + p_d(0, 0)), Scalar(2)) +
                                             std::pow(Scalar(-_tmp39 + p_d(1, 0)), Scalar(2))))))) -
      encoder(3, 0);

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
