// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

#include <sym/rot3.h>

namespace sym {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: IK_residual_func_cost4_Nl23
 *
 * Args:
 *     fh1: Scalar
 *     fv1: Scalar
 *     DeltaRot: Rot3
 *     position_vector: Matrix31
 *     encoder: Matrix41
 *     p_a: Matrix31
 *     p_b: Matrix31
 *     p_c: Matrix31
 *     p_d: Matrix31
 *     Rot_init: Rot3
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix41
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 4, 1> IkResidualFuncCost4Nl23(
    const Scalar fh1, const Scalar fv1, const sym::Rot3<Scalar>& DeltaRot,
    const Eigen::Matrix<Scalar, 3, 1>& position_vector, const Eigen::Matrix<Scalar, 4, 1>& encoder,
    const Eigen::Matrix<Scalar, 3, 1>& p_a, const Eigen::Matrix<Scalar, 3, 1>& p_b,
    const Eigen::Matrix<Scalar, 3, 1>& p_c, const Eigen::Matrix<Scalar, 3, 1>& p_d,
    const sym::Rot3<Scalar>& Rot_init, const Scalar epsilon) {
  // Total ops: 476

  // Unused inputs
  (void)epsilon;

  // Input arrays
  const Eigen::Matrix<Scalar, 4, 1>& _DeltaRot = DeltaRot.Data();
  const Eigen::Matrix<Scalar, 4, 1>& _Rot_init = Rot_init.Data();

  // Intermediate terms (158)
  const Scalar _tmp0 = Scalar(1.0) / (fh1);
  const Scalar _tmp1 = _DeltaRot[0] * _Rot_init[3] - _DeltaRot[1] * _Rot_init[2] +
                       _DeltaRot[2] * _Rot_init[1] + _DeltaRot[3] * _Rot_init[0];
  const Scalar _tmp2 = _DeltaRot[0] * _Rot_init[2] + _DeltaRot[1] * _Rot_init[3] -
                       _DeltaRot[2] * _Rot_init[0] + _DeltaRot[3] * _Rot_init[1];
  const Scalar _tmp3 = 2 * _tmp2;
  const Scalar _tmp4 = _tmp1 * _tmp3;
  const Scalar _tmp5 = -_DeltaRot[0] * _Rot_init[1] + _DeltaRot[1] * _Rot_init[0] +
                       _DeltaRot[2] * _Rot_init[3] + _DeltaRot[3] * _Rot_init[2];
  const Scalar _tmp6 = -2 * _DeltaRot[0] * _Rot_init[0] - 2 * _DeltaRot[1] * _Rot_init[1] -
                       2 * _DeltaRot[2] * _Rot_init[2] + 2 * _DeltaRot[3] * _Rot_init[3];
  const Scalar _tmp7 = _tmp5 * _tmp6;
  const Scalar _tmp8 = Scalar(0.20999999999999999) * _tmp4 + Scalar(0.20999999999999999) * _tmp7;
  const Scalar _tmp9 = -_tmp8;
  const Scalar _tmp10 = -2 * std::pow(_tmp1, Scalar(2));
  const Scalar _tmp11 = -2 * std::pow(_tmp5, Scalar(2));
  const Scalar _tmp12 = Scalar(0.20999999999999999) * _tmp10 +
                        Scalar(0.20999999999999999) * _tmp11 + Scalar(0.20999999999999999);
  const Scalar _tmp13 = _tmp3 * _tmp5;
  const Scalar _tmp14 = _tmp1 * _tmp6;
  const Scalar _tmp15 = _tmp13 - _tmp14;
  const Scalar _tmp16 = -Scalar(0.010999999999999999) * _tmp15;
  const Scalar _tmp17 = _tmp12 + _tmp16;
  const Scalar _tmp18 = _tmp17 + _tmp9;
  const Scalar _tmp19 = _tmp18 + position_vector(1, 0);
  const Scalar _tmp20 = Scalar(0.20999999999999999) * _tmp4 - Scalar(0.20999999999999999) * _tmp7;
  const Scalar _tmp21 = 2 * _tmp1 * _tmp5;
  const Scalar _tmp22 = _tmp2 * _tmp6;
  const Scalar _tmp23 = _tmp21 + _tmp22;
  const Scalar _tmp24 = -Scalar(0.010999999999999999) * _tmp23;
  const Scalar _tmp25 = 1 - 2 * std::pow(_tmp2, Scalar(2));
  const Scalar _tmp26 = Scalar(0.20999999999999999) * _tmp11 + Scalar(0.20999999999999999) * _tmp25;
  const Scalar _tmp27 = _tmp24 - _tmp26;
  const Scalar _tmp28 = _tmp20 + _tmp27;
  const Scalar _tmp29 = _tmp28 + position_vector(0, 0);
  const Scalar _tmp30 = std::asinh(_tmp0 * fv1);
  const Scalar _tmp31 = Scalar(1.4083112389913199) * fh1;
  const Scalar _tmp32 = _tmp17 + _tmp8;
  const Scalar _tmp33 = Scalar(1.0) * _tmp32;
  const Scalar _tmp34 = -_tmp33;
  const Scalar _tmp35 = -_tmp12 + _tmp16;
  const Scalar _tmp36 = _tmp35 + _tmp9;
  const Scalar _tmp37 = _tmp34 + _tmp36;
  const Scalar _tmp38 = _tmp35 + _tmp8;
  const Scalar _tmp39 = Scalar(1.0) / (_tmp34 + _tmp38);
  const Scalar _tmp40 = -_tmp20;
  const Scalar _tmp41 = _tmp24 + _tmp26;
  const Scalar _tmp42 = _tmp40 + _tmp41;
  const Scalar _tmp43 = _tmp20 + _tmp41;
  const Scalar _tmp44 = Scalar(1.0) * _tmp43;
  const Scalar _tmp45 = _tmp39 * (-_tmp42 + _tmp44);
  const Scalar _tmp46 = _tmp37 * _tmp45;
  const Scalar _tmp47 = _tmp27 + _tmp40;
  const Scalar _tmp48 = Scalar(1.0) / (_tmp44 - _tmp46 - _tmp47);
  const Scalar _tmp49 = _tmp33 * _tmp45 + _tmp44;
  const Scalar _tmp50 = _tmp48 * _tmp49;
  const Scalar _tmp51 = 0;
  const Scalar _tmp52 = Scalar(0.20999999999999999) * _tmp13 + Scalar(0.20999999999999999) * _tmp14;
  const Scalar _tmp53 = -_tmp52;
  const Scalar _tmp54 =
      -Scalar(0.010999999999999999) * _tmp10 - Scalar(0.010999999999999999) * _tmp25;
  const Scalar _tmp55 = Scalar(0.20999999999999999) * _tmp21 - Scalar(0.20999999999999999) * _tmp22;
  const Scalar _tmp56 = _tmp54 + _tmp55;
  const Scalar _tmp57 = _tmp53 + _tmp56;
  const Scalar _tmp58 = _tmp42 + position_vector(0, 0);
  const Scalar _tmp59 = _tmp58 - p_b(0, 0);
  const Scalar _tmp60 = _tmp38 + position_vector(1, 0);
  const Scalar _tmp61 = _tmp60 - p_b(1, 0);
  const Scalar _tmp62 = std::pow(Scalar(std::pow(_tmp59, Scalar(2)) + std::pow(_tmp61, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp63 = _tmp61 * _tmp62;
  const Scalar _tmp64 = _tmp43 + position_vector(0, 0);
  const Scalar _tmp65 = _tmp64 - p_c(0, 0);
  const Scalar _tmp66 = Scalar(1.0) / (_tmp65);
  const Scalar _tmp67 = _tmp32 + position_vector(1, 0);
  const Scalar _tmp68 = _tmp67 - p_c(1, 0);
  const Scalar _tmp69 = _tmp66 * _tmp68;
  const Scalar _tmp70 = _tmp52 + _tmp56;
  const Scalar _tmp71 = _tmp59 * _tmp62;
  const Scalar _tmp72 = _tmp70 * _tmp71;
  const Scalar _tmp73 = _tmp57 * _tmp63 - _tmp69 * _tmp72;
  const Scalar _tmp74 = Scalar(1.0) / (-_tmp63 + _tmp69 * _tmp71);
  const Scalar _tmp75 = _tmp36 + position_vector(1, 0);
  const Scalar _tmp76 = _tmp75 - p_a(1, 0);
  const Scalar _tmp77 = _tmp47 + position_vector(0, 0);
  const Scalar _tmp78 = _tmp77 - p_a(0, 0);
  const Scalar _tmp79 = std::pow(Scalar(std::pow(_tmp76, Scalar(2)) + std::pow(_tmp78, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp80 = _tmp76 * _tmp79;
  const Scalar _tmp81 = _tmp78 * _tmp79;
  const Scalar _tmp82 = _tmp69 * _tmp81 - _tmp80;
  const Scalar _tmp83 = _tmp74 * _tmp82;
  const Scalar _tmp84 = _tmp69 * _tmp70;
  const Scalar _tmp85 = _tmp54 - _tmp55;
  const Scalar _tmp86 = _tmp53 + _tmp85;
  const Scalar _tmp87 = -_tmp73 * _tmp83 + _tmp80 * _tmp86 - _tmp81 * _tmp84;
  const Scalar _tmp88 = -_tmp57 * _tmp71 + _tmp72;
  const Scalar _tmp89 = -_tmp45 * _tmp87 + _tmp70 * _tmp81 - _tmp81 * _tmp86 - _tmp83 * _tmp88;
  const Scalar _tmp90 = Scalar(1.0) / (_tmp89);
  const Scalar _tmp91 = _tmp87 * _tmp90;
  const Scalar _tmp92 = _tmp34 - _tmp37 * _tmp50 - _tmp51 * _tmp91;
  const Scalar _tmp93 = Scalar(1.0) * _tmp39;
  const Scalar _tmp94 = Scalar(1.0) * _tmp48;
  const Scalar _tmp95 = Scalar(333.54000000000002) - fv1;
  const Scalar _tmp96 = _tmp37 * _tmp94;
  const Scalar _tmp97 = _tmp29 - p_d(0, 0);
  const Scalar _tmp98 = _tmp19 - p_d(1, 0);
  const Scalar _tmp99 = std::pow(Scalar(std::pow(_tmp97, Scalar(2)) + std::pow(_tmp98, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp100 = _tmp97 * _tmp99;
  const Scalar _tmp101 = fh1 * (_tmp52 + _tmp85);
  const Scalar _tmp102 = _tmp100 * _tmp101 + Scalar(40.024799999999999) * _tmp23 + _tmp28 * fv1;
  const Scalar _tmp103 = _tmp69 * _tmp74;
  const Scalar _tmp104 = _tmp103 * _tmp73 + _tmp84;
  const Scalar _tmp105 = _tmp103 * _tmp88 - _tmp104 * _tmp45 - _tmp70;
  const Scalar _tmp106 =
      std::sqrt(Scalar(std::pow(_tmp65, Scalar(2)) + std::pow(_tmp68, Scalar(2))));
  const Scalar _tmp107 = Scalar(1.0) / (_tmp106);
  const Scalar _tmp108 = _tmp106 * _tmp66;
  const Scalar _tmp109 = _tmp108 * (-_tmp107 * _tmp32 * _tmp65 + _tmp107 * _tmp43 * _tmp68);
  const Scalar _tmp110 = _tmp109 * _tmp71 + _tmp38 * _tmp71 - _tmp42 * _tmp63;
  const Scalar _tmp111 = _tmp109 * _tmp81 - _tmp110 * _tmp83 + _tmp36 * _tmp81 - _tmp47 * _tmp80;
  const Scalar _tmp112 = _tmp111 * _tmp90;
  const Scalar _tmp113 = Scalar(1.0) / (_tmp111);
  const Scalar _tmp114 = _tmp113 * _tmp89;
  const Scalar _tmp115 = _tmp114 * (_tmp103 * _tmp110 - _tmp105 * _tmp112 - _tmp109);
  const Scalar _tmp116 = _tmp105 + _tmp115;
  const Scalar _tmp117 = _tmp37 * _tmp48;
  const Scalar _tmp118 = _tmp104 + _tmp115 * _tmp117 - _tmp116 * _tmp91;
  const Scalar _tmp119 = _tmp100 * fh1;
  const Scalar _tmp120 = Scalar(1.0) * _tmp74;
  const Scalar _tmp121 = _tmp120 * _tmp73;
  const Scalar _tmp122 = -_tmp120 * _tmp88 + _tmp121 * _tmp45;
  const Scalar _tmp123 = _tmp114 * (-_tmp110 * _tmp120 - _tmp112 * _tmp122);
  const Scalar _tmp124 = _tmp122 + _tmp123;
  const Scalar _tmp125 = _tmp117 * _tmp123 - _tmp121 - _tmp124 * _tmp91;
  const Scalar _tmp126 = _tmp98 * _tmp99;
  const Scalar _tmp127 = _tmp126 * fh1;
  const Scalar _tmp128 = -_tmp101 * _tmp126 - Scalar(40.024799999999999) * _tmp15 - _tmp18 * fv1;
  const Scalar _tmp129 = _tmp46 * _tmp94 + Scalar(1.0);
  const Scalar _tmp130 = _tmp45 * _tmp94;
  const Scalar _tmp131 = Scalar(1.0) * _tmp113;
  const Scalar _tmp132 = _tmp114 * _tmp96 - _tmp131 * _tmp87;
  const Scalar _tmp133 = _tmp114 * _tmp94;
  const Scalar _tmp134 = fh1 * (-_tmp100 * _tmp18 + _tmp126 * _tmp28);
  const Scalar _tmp135 = _tmp51 * _tmp90;
  const Scalar _tmp136 = _tmp71 * _tmp83;
  const Scalar _tmp137 = _tmp82 * _tmp90;
  const Scalar _tmp138 = -_tmp124 * _tmp137 + Scalar(1.0);
  const Scalar _tmp139 = _tmp71 * _tmp74;
  const Scalar _tmp140 = _tmp81 * _tmp90;
  const Scalar _tmp141 = -_tmp116 * _tmp137 - _tmp69;
  const Scalar _tmp142 =
      -_tmp108 * _tmp119 * (_tmp116 * _tmp140 + _tmp139 * _tmp141 + Scalar(1.0)) -
      _tmp108 * _tmp127 * (_tmp124 * _tmp140 + _tmp138 * _tmp139) -
      _tmp108 * _tmp134 * (-_tmp131 * _tmp136 + _tmp131 * _tmp81) -
      _tmp108 * _tmp95 * (-_tmp135 * _tmp136 + _tmp135 * _tmp81);
  const Scalar _tmp143 = Scalar(1.0) / (_tmp142);
  const Scalar _tmp144 = std::asinh(
      _tmp143 * (Scalar(1.0) * _tmp102 * (_tmp39 * _tmp96 - _tmp94) +
                 Scalar(1.0) * _tmp119 * (_tmp115 * _tmp94 - _tmp118 * _tmp93) +
                 Scalar(1.0) * _tmp127 * (_tmp123 * _tmp94 - _tmp125 * _tmp93) +
                 Scalar(1.0) * _tmp128 * (-_tmp129 * _tmp93 + _tmp130) +
                 Scalar(1.0) * _tmp134 * (-_tmp132 * _tmp93 + _tmp133) +
                 Scalar(1.0) * _tmp95 * (-_tmp49 * _tmp94 - _tmp92 * _tmp93 + Scalar(1.0))));
  const Scalar _tmp145 = Scalar(1.4083112389913199) * _tmp142;
  const Scalar _tmp146 = _tmp102 * _tmp94;
  const Scalar _tmp147 = _tmp74 * fh1;
  const Scalar _tmp148 = _tmp135 * _tmp95;
  const Scalar _tmp149 = _tmp131 * _tmp134;
  const Scalar _tmp150 = _tmp100 * _tmp141 * _tmp147 + _tmp126 * _tmp138 * _tmp147 -
                         _tmp148 * _tmp83 - _tmp149 * _tmp83;
  const Scalar _tmp151 = Scalar(1.0) / (_tmp150);
  const Scalar _tmp152 =
      std::asinh(_tmp151 * (_tmp118 * _tmp119 * _tmp39 + _tmp125 * _tmp127 * _tmp39 +
                            _tmp128 * _tmp129 * _tmp39 + _tmp132 * _tmp134 * _tmp39 -
                            _tmp146 * _tmp37 * _tmp39 + _tmp39 * _tmp92 * _tmp95));
  const Scalar _tmp153 = Scalar(1.4083112389913199) * _tmp150;
  const Scalar _tmp154 =
      _tmp116 * _tmp119 * _tmp90 + _tmp124 * _tmp127 * _tmp90 + _tmp148 + _tmp149;
  const Scalar _tmp155 = Scalar(1.0) / (_tmp154);
  const Scalar _tmp156 =
      std::asinh(_tmp155 * (-_tmp115 * _tmp119 * _tmp48 - _tmp123 * _tmp127 * _tmp48 -
                            _tmp128 * _tmp130 - _tmp133 * _tmp134 + _tmp146 + _tmp50 * _tmp95));
  const Scalar _tmp157 = Scalar(1.4083112389913199) * _tmp154;

  // Output terms (1)
  Eigen::Matrix<Scalar, 4, 1> _res;

  _res(0, 0) =
      _tmp31 * (-std::sinh(Scalar(1.0) * _tmp30) -
                std::sinh(Scalar(0.71007031138673404) * _tmp0 *
                          (-_tmp30 * _tmp31 -
                           std::sqrt(Scalar(std::pow(Scalar(-_tmp19 + p_d(1, 0)), Scalar(2)) +
                                            std::pow(Scalar(-_tmp29 + p_d(0, 0)), Scalar(2))))))) -
      encoder(0, 0);
  _res(1, 0) =
      _tmp145 * (-std::sinh(Scalar(1.0) * _tmp144) -
                 std::sinh(Scalar(0.71007031138673404) * _tmp143 *
                           (-_tmp144 * _tmp145 -
                            std::sqrt(Scalar(std::pow(Scalar(-_tmp64 + p_c(0, 0)), Scalar(2)) +
                                             std::pow(Scalar(-_tmp67 + p_c(1, 0)), Scalar(2))))))) -
      encoder(1, 0);
  _res(2, 0) =
      _tmp153 * (-std::sinh(Scalar(1.0) * _tmp152) -
                 std::sinh(Scalar(0.71007031138673404) * _tmp151 *
                           (-_tmp152 * _tmp153 -
                            std::sqrt(Scalar(std::pow(Scalar(-_tmp58 + p_b(0, 0)), Scalar(2)) +
                                             std::pow(Scalar(-_tmp60 + p_b(1, 0)), Scalar(2))))))) -
      encoder(2, 0);
  _res(3, 0) =
      _tmp157 * (-std::sinh(Scalar(1.0) * _tmp156) -
                 std::sinh(Scalar(0.71007031138673404) * _tmp155 *
                           (-_tmp156 * _tmp157 -
                            std::sqrt(Scalar(std::pow(Scalar(-_tmp75 + p_a(1, 0)), Scalar(2)) +
                                             std::pow(Scalar(-_tmp77 + p_a(0, 0)), Scalar(2))))))) -
      encoder(3, 0);

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
