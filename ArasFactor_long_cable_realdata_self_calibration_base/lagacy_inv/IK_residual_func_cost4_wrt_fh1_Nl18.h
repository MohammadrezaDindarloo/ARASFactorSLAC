// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

#include <sym/rot3.h>

namespace sym {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: IK_residual_func_cost4_wrt_fh1_Nl18
 *
 * Args:
 *     fh1: Scalar
 *     fv1: Scalar
 *     DeltaRot: Rot3
 *     position_vector: Matrix31
 *     encoder: Matrix41
 *     p_a: Matrix31
 *     p_b: Matrix31
 *     p_c: Matrix31
 *     p_d: Matrix31
 *     Rot_init: Rot3
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix41
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 4, 1> IkResidualFuncCost4WrtFh1Nl18(
    const Scalar fh1, const Scalar fv1, const sym::Rot3<Scalar>& DeltaRot,
    const Eigen::Matrix<Scalar, 3, 1>& position_vector, const Eigen::Matrix<Scalar, 4, 1>& encoder,
    const Eigen::Matrix<Scalar, 3, 1>& p_a, const Eigen::Matrix<Scalar, 3, 1>& p_b,
    const Eigen::Matrix<Scalar, 3, 1>& p_c, const Eigen::Matrix<Scalar, 3, 1>& p_d,
    const sym::Rot3<Scalar>& Rot_init, const Scalar epsilon) {
  // Total ops: 624

  // Unused inputs
  (void)encoder;
  (void)epsilon;

  // Input arrays
  const Eigen::Matrix<Scalar, 4, 1>& _DeltaRot = DeltaRot.Data();
  const Eigen::Matrix<Scalar, 4, 1>& _Rot_init = Rot_init.Data();

  // Intermediate terms (215)
  const Scalar _tmp0 = _DeltaRot[0] * _Rot_init[3] - _DeltaRot[1] * _Rot_init[2] +
                       _DeltaRot[2] * _Rot_init[1] + _DeltaRot[3] * _Rot_init[0];
  const Scalar _tmp1 = _DeltaRot[0] * _Rot_init[2] + _DeltaRot[1] * _Rot_init[3] -
                       _DeltaRot[2] * _Rot_init[0] + _DeltaRot[3] * _Rot_init[1];
  const Scalar _tmp2 = 2 * _tmp1;
  const Scalar _tmp3 = _tmp0 * _tmp2;
  const Scalar _tmp4 = -_DeltaRot[0] * _Rot_init[1] + _DeltaRot[1] * _Rot_init[0] +
                       _DeltaRot[2] * _Rot_init[3] + _DeltaRot[3] * _Rot_init[2];
  const Scalar _tmp5 = -2 * _DeltaRot[0] * _Rot_init[0] - 2 * _DeltaRot[1] * _Rot_init[1] -
                       2 * _DeltaRot[2] * _Rot_init[2] + 2 * _DeltaRot[3] * _Rot_init[3];
  const Scalar _tmp6 = _tmp4 * _tmp5;
  const Scalar _tmp7 = Scalar(0.20999999999999999) * _tmp3 + Scalar(0.20999999999999999) * _tmp6;
  const Scalar _tmp8 = -_tmp7;
  const Scalar _tmp9 = -2 * std::pow(_tmp0, Scalar(2));
  const Scalar _tmp10 = -2 * std::pow(_tmp4, Scalar(2));
  const Scalar _tmp11 = Scalar(0.20999999999999999) * _tmp10 + Scalar(0.20999999999999999) * _tmp9 +
                        Scalar(0.20999999999999999);
  const Scalar _tmp12 = _tmp2 * _tmp4;
  const Scalar _tmp13 = _tmp0 * _tmp5;
  const Scalar _tmp14 = _tmp12 - _tmp13;
  const Scalar _tmp15 = -Scalar(0.010999999999999999) * _tmp14;
  const Scalar _tmp16 = _tmp11 + _tmp15;
  const Scalar _tmp17 = _tmp16 + _tmp8;
  const Scalar _tmp18 = _tmp17 + position_vector(1, 0);
  const Scalar _tmp19 = 1 - 2 * std::pow(_tmp1, Scalar(2));
  const Scalar _tmp20 = Scalar(0.20999999999999999) * _tmp10 + Scalar(0.20999999999999999) * _tmp19;
  const Scalar _tmp21 = -_tmp20;
  const Scalar _tmp22 = 2 * _tmp0 * _tmp4;
  const Scalar _tmp23 = _tmp1 * _tmp5;
  const Scalar _tmp24 = _tmp22 + _tmp23;
  const Scalar _tmp25 = -Scalar(0.010999999999999999) * _tmp24;
  const Scalar _tmp26 = Scalar(0.20999999999999999) * _tmp3 - Scalar(0.20999999999999999) * _tmp6;
  const Scalar _tmp27 = _tmp25 + _tmp26;
  const Scalar _tmp28 = _tmp21 + _tmp27;
  const Scalar _tmp29 = _tmp28 + position_vector(0, 0);
  const Scalar _tmp30 = Scalar(1.0) / (fh1);
  const Scalar _tmp31 = _tmp30 * fv1;
  const Scalar _tmp32 = std::asinh(_tmp31);
  const Scalar _tmp33 = Scalar(1.4083112389913199) * _tmp32;
  const Scalar _tmp34 =
      -_tmp33 * fh1 - std::sqrt(Scalar(std::pow(Scalar(-_tmp18 + p_d(1, 0)), Scalar(2)) +
                                       std::pow(Scalar(-_tmp29 + p_d(0, 0)), Scalar(2))));
  const Scalar _tmp35 = Scalar(0.71007031138673404) * _tmp30;
  const Scalar _tmp36 = _tmp34 * _tmp35;
  const Scalar _tmp37 = Scalar(1.0) * _tmp32;
  const Scalar _tmp38 = std::pow(fh1, Scalar(-2));
  const Scalar _tmp39 =
      std::pow(Scalar(_tmp38 * std::pow(fv1, Scalar(2)) + 1), Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp40 = -_tmp11 + _tmp15;
  const Scalar _tmp41 = _tmp40 + _tmp8;
  const Scalar _tmp42 = Scalar(1.0) * _tmp41;
  const Scalar _tmp43 = -_tmp42;
  const Scalar _tmp44 = _tmp16 + _tmp7;
  const Scalar _tmp45 = _tmp43 + _tmp44;
  const Scalar _tmp46 = _tmp40 + _tmp7;
  const Scalar _tmp47 = Scalar(1.0) / (_tmp43 + _tmp46);
  const Scalar _tmp48 = _tmp25 - _tmp26;
  const Scalar _tmp49 = _tmp20 + _tmp48;
  const Scalar _tmp50 = _tmp21 + _tmp48;
  const Scalar _tmp51 = Scalar(1.0) * _tmp50;
  const Scalar _tmp52 = _tmp47 * (-_tmp49 + _tmp51);
  const Scalar _tmp53 = _tmp45 * _tmp52;
  const Scalar _tmp54 = _tmp20 + _tmp27;
  const Scalar _tmp55 = Scalar(1.0) / (_tmp51 - _tmp53 - _tmp54);
  const Scalar _tmp56 = Scalar(1.0) * _tmp55;
  const Scalar _tmp57 = _tmp50 + position_vector(0, 0);
  const Scalar _tmp58 = _tmp57 - p_a(0, 0);
  const Scalar _tmp59 = _tmp41 + position_vector(1, 0);
  const Scalar _tmp60 = _tmp59 - p_a(1, 0);
  const Scalar _tmp61 =
      std::sqrt(Scalar(std::pow(_tmp58, Scalar(2)) + std::pow(_tmp60, Scalar(2))));
  const Scalar _tmp62 = Scalar(1.0) / (_tmp61);
  const Scalar _tmp63 = Scalar(1.0) / (_tmp58);
  const Scalar _tmp64 = _tmp61 * _tmp63;
  const Scalar _tmp65 = _tmp64 * (-_tmp41 * _tmp58 * _tmp62 + _tmp50 * _tmp60 * _tmp62);
  const Scalar _tmp66 = _tmp49 + position_vector(0, 0);
  const Scalar _tmp67 = _tmp66 - p_b(0, 0);
  const Scalar _tmp68 = _tmp46 + position_vector(1, 0);
  const Scalar _tmp69 = _tmp68 - p_b(1, 0);
  const Scalar _tmp70 = std::pow(Scalar(std::pow(_tmp67, Scalar(2)) + std::pow(_tmp69, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp71 = _tmp69 * _tmp70;
  const Scalar _tmp72 = _tmp67 * _tmp70;
  const Scalar _tmp73 = _tmp46 * _tmp72 - _tmp49 * _tmp71 + _tmp65 * _tmp72;
  const Scalar _tmp74 = _tmp60 * _tmp63;
  const Scalar _tmp75 = Scalar(1.0) / (-_tmp71 + _tmp72 * _tmp74);
  const Scalar _tmp76 = _tmp74 * _tmp75;
  const Scalar _tmp77 = Scalar(0.20999999999999999) * _tmp22 - Scalar(0.20999999999999999) * _tmp23;
  const Scalar _tmp78 = -_tmp77;
  const Scalar _tmp79 =
      -Scalar(0.010999999999999999) * _tmp19 - Scalar(0.010999999999999999) * _tmp9;
  const Scalar _tmp80 = Scalar(0.20999999999999999) * _tmp12 + Scalar(0.20999999999999999) * _tmp13;
  const Scalar _tmp81 = _tmp79 - _tmp80;
  const Scalar _tmp82 = _tmp78 + _tmp81;
  const Scalar _tmp83 = _tmp74 * _tmp82;
  const Scalar _tmp84 = _tmp77 + _tmp81;
  const Scalar _tmp85 = _tmp72 * _tmp82;
  const Scalar _tmp86 = _tmp71 * _tmp84 - _tmp74 * _tmp85;
  const Scalar _tmp87 = _tmp76 * _tmp86 + _tmp83;
  const Scalar _tmp88 = -_tmp72 * _tmp84 + _tmp85;
  const Scalar _tmp89 = -_tmp52 * _tmp87 + _tmp76 * _tmp88 - _tmp82;
  const Scalar _tmp90 = _tmp44 + position_vector(1, 0);
  const Scalar _tmp91 = _tmp90 - p_c(1, 0);
  const Scalar _tmp92 = _tmp54 + position_vector(0, 0);
  const Scalar _tmp93 = _tmp92 - p_c(0, 0);
  const Scalar _tmp94 = std::pow(Scalar(std::pow(_tmp91, Scalar(2)) + std::pow(_tmp93, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp95 = _tmp91 * _tmp94;
  const Scalar _tmp96 = _tmp93 * _tmp94;
  const Scalar _tmp97 = _tmp74 * _tmp96 - _tmp95;
  const Scalar _tmp98 = _tmp75 * _tmp97;
  const Scalar _tmp99 = _tmp79 + _tmp80;
  const Scalar _tmp100 = _tmp77 + _tmp99;
  const Scalar _tmp101 = _tmp100 * _tmp95 - _tmp83 * _tmp96 - _tmp86 * _tmp98;
  const Scalar _tmp102 = -_tmp100 * _tmp96 - _tmp101 * _tmp52 + _tmp82 * _tmp96 - _tmp88 * _tmp98;
  const Scalar _tmp103 = Scalar(1.0) / (_tmp102);
  const Scalar _tmp104 = _tmp44 * _tmp96 - _tmp54 * _tmp95 + _tmp65 * _tmp96 - _tmp73 * _tmp98;
  const Scalar _tmp105 = _tmp103 * _tmp104;
  const Scalar _tmp106 = Scalar(1.0) / (_tmp104);
  const Scalar _tmp107 = _tmp102 * _tmp106;
  const Scalar _tmp108 = _tmp107 * (-_tmp105 * _tmp89 - _tmp65 + _tmp73 * _tmp76);
  const Scalar _tmp109 = _tmp108 + _tmp89;
  const Scalar _tmp110 = _tmp101 * _tmp103;
  const Scalar _tmp111 = _tmp45 * _tmp55;
  const Scalar _tmp112 = _tmp108 * _tmp111 - _tmp109 * _tmp110 + _tmp87;
  const Scalar _tmp113 = Scalar(1.0) * _tmp47;
  const Scalar _tmp114 = _tmp29 - p_d(0, 0);
  const Scalar _tmp115 = _tmp18 - p_d(1, 0);
  const Scalar _tmp116 =
      std::pow(Scalar(std::pow(_tmp114, Scalar(2)) + std::pow(_tmp115, Scalar(2))),
               Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp117 = _tmp114 * _tmp116;
  const Scalar _tmp118 = Scalar(1.0) * _tmp117 * (_tmp108 * _tmp56 - _tmp112 * _tmp113);
  const Scalar _tmp119 = _tmp78 + _tmp99;
  const Scalar _tmp120 = _tmp119 * fh1;
  const Scalar _tmp121 = _tmp117 * _tmp120 + Scalar(40.024799999999999) * _tmp24 + _tmp28 * fv1;
  const Scalar _tmp122 = _tmp45 * _tmp56;
  const Scalar _tmp123 = _tmp122 * _tmp47;
  const Scalar _tmp124 = Scalar(1.0) * _tmp123 - Scalar(1.0) * _tmp56;
  const Scalar _tmp125 = _tmp42 * _tmp52 + _tmp51;
  const Scalar _tmp126 = 0;
  const Scalar _tmp127 = _tmp125 * _tmp55;
  const Scalar _tmp128 = -_tmp110 * _tmp126 - _tmp127 * _tmp45 + _tmp43;
  const Scalar _tmp129 = Scalar(333.54000000000002) - fv1;
  const Scalar _tmp130 = _tmp115 * _tmp116;
  const Scalar _tmp131 = -_tmp117 * _tmp17 + _tmp130 * _tmp28;
  const Scalar _tmp132 = _tmp107 * _tmp56;
  const Scalar _tmp133 = Scalar(1.0) * _tmp106;
  const Scalar _tmp134 = _tmp47 * (-_tmp101 * _tmp133 + _tmp107 * _tmp122);
  const Scalar _tmp135 = Scalar(1.0) * _tmp131 * (_tmp132 - Scalar(1.0) * _tmp134);
  const Scalar _tmp136 = -_tmp120 * _tmp130 - Scalar(40.024799999999999) * _tmp14 - _tmp17 * fv1;
  const Scalar _tmp137 = _tmp53 * _tmp56 + Scalar(1.0);
  const Scalar _tmp138 = _tmp52 * _tmp56;
  const Scalar _tmp139 = -Scalar(1.0) * _tmp113 * _tmp137 + Scalar(1.0) * _tmp138;
  const Scalar _tmp140 = Scalar(1.0) * _tmp75;
  const Scalar _tmp141 = _tmp140 * _tmp86;
  const Scalar _tmp142 = -_tmp140 * _tmp88 + _tmp141 * _tmp52;
  const Scalar _tmp143 = _tmp107 * (-_tmp105 * _tmp142 - _tmp140 * _tmp73);
  const Scalar _tmp144 = _tmp103 * (_tmp142 + _tmp143);
  const Scalar _tmp145 = -_tmp101 * _tmp144 + _tmp111 * _tmp143 - _tmp141;
  const Scalar _tmp146 = Scalar(1.0) * _tmp130 * (-_tmp113 * _tmp145 + _tmp143 * _tmp56);
  const Scalar _tmp147 =
      _tmp118 * fh1 + _tmp121 * _tmp124 +
      Scalar(1.0) * _tmp129 * (-_tmp113 * _tmp128 - _tmp125 * _tmp56 + Scalar(1.0)) +
      _tmp135 * fh1 + _tmp136 * _tmp139 + _tmp146 * fh1;
  const Scalar _tmp148 = -_tmp144 * _tmp97 + Scalar(1.0);
  const Scalar _tmp149 = _tmp72 * _tmp75;
  const Scalar _tmp150 = _tmp130 * _tmp64 * (_tmp144 * _tmp96 + _tmp148 * _tmp149);
  const Scalar _tmp151 = _tmp106 * _tmp140 * _tmp97;
  const Scalar _tmp152 = _tmp131 * _tmp64 * (_tmp133 * _tmp96 - _tmp151 * _tmp72);
  const Scalar _tmp153 = _tmp103 * _tmp109;
  const Scalar _tmp154 = -_tmp153 * _tmp97 - _tmp74;
  const Scalar _tmp155 = _tmp117 * _tmp64 * (_tmp149 * _tmp154 + _tmp153 * _tmp96 + Scalar(1.0));
  const Scalar _tmp156 = _tmp103 * _tmp126;
  const Scalar _tmp157 = -_tmp129 * _tmp64 * (-_tmp156 * _tmp72 * _tmp98 + _tmp156 * _tmp96) -
                         _tmp150 * fh1 - _tmp152 * fh1 - _tmp155 * fh1;
  const Scalar _tmp158 = Scalar(1.0) / (_tmp157);
  const Scalar _tmp159 = std::asinh(_tmp147 * _tmp158);
  const Scalar _tmp160 = Scalar(1.0) * _tmp159;
  const Scalar _tmp161 = Scalar(1.4083112389913199) * _tmp159;
  const Scalar _tmp162 =
      -_tmp157 * _tmp161 - std::sqrt(Scalar(std::pow(Scalar(-_tmp57 + p_a(0, 0)), Scalar(2)) +
                                            std::pow(Scalar(-_tmp59 + p_a(1, 0)), Scalar(2))));
  const Scalar _tmp163 = Scalar(0.71007031138673404) * _tmp158;
  const Scalar _tmp164 = _tmp162 * _tmp163;
  const Scalar _tmp165 = -_tmp150 - _tmp152 - _tmp155;
  const Scalar _tmp166 = _tmp119 * _tmp130;
  const Scalar _tmp167 = _tmp117 * _tmp119;
  const Scalar _tmp168 = std::pow(_tmp157, Scalar(-2));
  const Scalar _tmp169 = _tmp165 * _tmp168;
  const Scalar _tmp170 = (-_tmp147 * _tmp169 + _tmp158 * (_tmp118 + _tmp124 * _tmp167 + _tmp135 -
                                                          _tmp139 * _tmp166 + _tmp146)) /
                         std::sqrt(Scalar(std::pow(_tmp147, Scalar(2)) * _tmp168 + 1));
  const Scalar _tmp171 = Scalar(1.4083112389913199) * _tmp157;
  const Scalar _tmp172 = _tmp117 * _tmp154 * _tmp75;
  const Scalar _tmp173 = _tmp130 * _tmp148 * _tmp75;
  const Scalar _tmp174 = _tmp131 * _tmp151;
  const Scalar _tmp175 = _tmp129 * _tmp156;
  const Scalar _tmp176 = _tmp172 * fh1 + _tmp173 * fh1 - _tmp174 * fh1 - _tmp175 * _tmp98;
  const Scalar _tmp177 = Scalar(1.0) / (_tmp176);
  const Scalar _tmp178 = _tmp137 * _tmp47;
  const Scalar _tmp179 = _tmp112 * _tmp117 * _tmp47;
  const Scalar _tmp180 = _tmp131 * _tmp134;
  const Scalar _tmp181 = _tmp130 * _tmp145 * _tmp47;
  const Scalar _tmp182 = _tmp121 * _tmp56;
  const Scalar _tmp183 = _tmp128 * _tmp129 * _tmp47 + _tmp136 * _tmp178 + _tmp179 * fh1 +
                         _tmp180 * fh1 + _tmp181 * fh1 - _tmp182 * _tmp45 * _tmp47;
  const Scalar _tmp184 = std::asinh(_tmp177 * _tmp183);
  const Scalar _tmp185 = Scalar(1.4083112389913199) * _tmp176;
  const Scalar _tmp186 =
      -_tmp184 * _tmp185 - std::sqrt(Scalar(std::pow(Scalar(-_tmp66 + p_b(0, 0)), Scalar(2)) +
                                            std::pow(Scalar(-_tmp68 + p_b(1, 0)), Scalar(2))));
  const Scalar _tmp187 = Scalar(0.71007031138673404) * _tmp177;
  const Scalar _tmp188 = _tmp186 * _tmp187;
  const Scalar _tmp189 = Scalar(1.0) * _tmp184;
  const Scalar _tmp190 = _tmp172 + _tmp173 - _tmp174;
  const Scalar _tmp191 = Scalar(1.4083112389913199) * _tmp190;
  const Scalar _tmp192 = std::pow(_tmp176, Scalar(-2));
  const Scalar _tmp193 = _tmp190 * _tmp192;
  const Scalar _tmp194 =
      (_tmp177 * (-_tmp123 * _tmp167 - _tmp166 * _tmp178 + _tmp179 + _tmp180 + _tmp181) -
       _tmp183 * _tmp193) /
      std::sqrt(Scalar(std::pow(_tmp183, Scalar(2)) * _tmp192 + 1));
  const Scalar _tmp195 = _tmp117 * _tmp153;
  const Scalar _tmp196 = _tmp130 * _tmp144;
  const Scalar _tmp197 = _tmp131 * _tmp133;
  const Scalar _tmp198 = _tmp195 + _tmp196 + _tmp197;
  const Scalar _tmp199 = _tmp108 * _tmp117 * _tmp55;
  const Scalar _tmp200 = _tmp130 * _tmp143 * _tmp55;
  const Scalar _tmp201 = _tmp131 * _tmp132;
  const Scalar _tmp202 = _tmp127 * _tmp129 - _tmp136 * _tmp138 + _tmp182 - _tmp199 * fh1 -
                         _tmp200 * fh1 - _tmp201 * fh1;
  const Scalar _tmp203 = _tmp175 + _tmp195 * fh1 + _tmp196 * fh1 + _tmp197 * fh1;
  const Scalar _tmp204 = Scalar(1.0) / (_tmp203);
  const Scalar _tmp205 = std::asinh(_tmp202 * _tmp204);
  const Scalar _tmp206 = Scalar(1.0) * _tmp205;
  const Scalar _tmp207 = Scalar(1.4083112389913199) * _tmp205;
  const Scalar _tmp208 =
      -_tmp203 * _tmp207 - std::sqrt(Scalar(std::pow(Scalar(-_tmp90 + p_c(1, 0)), Scalar(2)) +
                                            std::pow(Scalar(-_tmp92 + p_c(0, 0)), Scalar(2))));
  const Scalar _tmp209 = Scalar(0.71007031138673404) * _tmp204;
  const Scalar _tmp210 = _tmp208 * _tmp209;
  const Scalar _tmp211 = std::pow(_tmp203, Scalar(-2));
  const Scalar _tmp212 = _tmp198 * _tmp211;
  const Scalar _tmp213 = (-_tmp202 * _tmp212 + _tmp204 * (_tmp138 * _tmp166 + _tmp167 * _tmp56 -
                                                          _tmp199 - _tmp200 - _tmp201)) /
                         std::sqrt(Scalar(std::pow(_tmp202, Scalar(2)) * _tmp211 + 1));
  const Scalar _tmp214 = Scalar(1.4083112389913199) * _tmp203;

  // Output terms (1)
  Eigen::Matrix<Scalar, 4, 1> _res;

  _res(0, 0) = Scalar(1.4083112389913199) * fh1 *
                   (Scalar(1.0) * _tmp38 * _tmp39 * fv1 * std::cosh(_tmp37) -
                    (-Scalar(0.71007031138673404) * _tmp34 * _tmp38 +
                     _tmp35 * (Scalar(1.4083112389913199) * _tmp31 * _tmp39 - _tmp33)) *
                        std::cosh(_tmp36)) -
               Scalar(1.4083112389913199) * std::sinh(_tmp36) -
               Scalar(1.4083112389913199) * std::sinh(_tmp37);
  _res(1, 0) = Scalar(1.4083112389913199) * _tmp165 * (-std::sinh(_tmp160) - std::sinh(_tmp164)) +
               _tmp171 * (-Scalar(1.0) * _tmp170 * std::cosh(_tmp160) -
                          (-Scalar(0.71007031138673404) * _tmp162 * _tmp169 +
                           _tmp163 * (-_tmp161 * _tmp165 - _tmp170 * _tmp171)) *
                              std::cosh(_tmp164));
  _res(2, 0) = _tmp185 * (-Scalar(1.0) * _tmp194 * std::cosh(_tmp189) -
                          (-Scalar(0.71007031138673404) * _tmp186 * _tmp193 +
                           _tmp187 * (-_tmp184 * _tmp191 - _tmp185 * _tmp194)) *
                              std::cosh(_tmp188)) +
               _tmp191 * (-std::sinh(_tmp188) - std::sinh(_tmp189));
  _res(3, 0) = Scalar(1.4083112389913199) * _tmp198 * (-std::sinh(_tmp206) - std::sinh(_tmp210)) +
               _tmp214 * (-Scalar(1.0) * _tmp213 * std::cosh(_tmp206) -
                          (-Scalar(0.71007031138673404) * _tmp208 * _tmp212 +
                           _tmp209 * (-_tmp198 * _tmp207 - _tmp213 * _tmp214)) *
                              std::cosh(_tmp210));

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
