// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

#include <sym/rot3.h>

namespace sym {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: IK_residual_func_cost4_wrt_pa_Nl2
 *
 * Args:
 *     fh1: Scalar
 *     fv1: Scalar
 *     DeltaRot: Rot3
 *     position_vector: Matrix31
 *     encoder: Matrix41
 *     p_a: Matrix31
 *     p_b: Matrix31
 *     p_c: Matrix31
 *     p_d: Matrix31
 *     Rot_init: Rot3
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix43
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 4, 3> IkResidualFuncCost4WrtPaNl2(
    const Scalar fh1, const Scalar fv1, const sym::Rot3<Scalar>& DeltaRot,
    const Eigen::Matrix<Scalar, 3, 1>& position_vector, const Eigen::Matrix<Scalar, 4, 1>& encoder,
    const Eigen::Matrix<Scalar, 3, 1>& p_a, const Eigen::Matrix<Scalar, 3, 1>& p_b,
    const Eigen::Matrix<Scalar, 3, 1>& p_c, const Eigen::Matrix<Scalar, 3, 1>& p_d,
    const sym::Rot3<Scalar>& Rot_init, const Scalar epsilon) {
  // Total ops: 751

  // Unused inputs
  (void)encoder;
  (void)epsilon;

  // Input arrays
  const Eigen::Matrix<Scalar, 4, 1>& _DeltaRot = DeltaRot.Data();
  const Eigen::Matrix<Scalar, 4, 1>& _Rot_init = Rot_init.Data();

  // Intermediate terms (266)
  const Scalar _tmp0 = -_DeltaRot[0] * _Rot_init[1] + _DeltaRot[1] * _Rot_init[0] +
                       _DeltaRot[2] * _Rot_init[3] + _DeltaRot[3] * _Rot_init[2];
  const Scalar _tmp1 = -2 * std::pow(_tmp0, Scalar(2));
  const Scalar _tmp2 = _DeltaRot[0] * _Rot_init[2] + _DeltaRot[1] * _Rot_init[3] -
                       _DeltaRot[2] * _Rot_init[0] + _DeltaRot[3] * _Rot_init[1];
  const Scalar _tmp3 = 1 - 2 * std::pow(_tmp2, Scalar(2));
  const Scalar _tmp4 = Scalar(0.20999999999999999) * _tmp1 + Scalar(0.20999999999999999) * _tmp3;
  const Scalar _tmp5 = -_tmp4;
  const Scalar _tmp6 = _DeltaRot[0] * _Rot_init[3] - _DeltaRot[1] * _Rot_init[2] +
                       _DeltaRot[2] * _Rot_init[1] + _DeltaRot[3] * _Rot_init[0];
  const Scalar _tmp7 = 2 * _tmp6;
  const Scalar _tmp8 = _tmp0 * _tmp7;
  const Scalar _tmp9 = -_DeltaRot[0] * _Rot_init[0] - _DeltaRot[1] * _Rot_init[1] -
                       _DeltaRot[2] * _Rot_init[2] + _DeltaRot[3] * _Rot_init[3];
  const Scalar _tmp10 = 2 * _tmp2;
  const Scalar _tmp11 = _tmp10 * _tmp9;
  const Scalar _tmp12 = _tmp11 + _tmp8;
  const Scalar _tmp13 = -Scalar(0.010999999999999999) * _tmp12;
  const Scalar _tmp14 = _tmp10 * _tmp6;
  const Scalar _tmp15 = 2 * _tmp0 * _tmp9;
  const Scalar _tmp16 = Scalar(0.20999999999999999) * _tmp14 - Scalar(0.20999999999999999) * _tmp15;
  const Scalar _tmp17 = _tmp13 - _tmp16;
  const Scalar _tmp18 = _tmp17 + _tmp5;
  const Scalar _tmp19 = _tmp18 + position_vector(0, 0);
  const Scalar _tmp20 = -_tmp19 + p_a(0, 0);
  const Scalar _tmp21 = Scalar(1.0) / (fh1);
  const Scalar _tmp22 = -2 * std::pow(_tmp6, Scalar(2));
  const Scalar _tmp23 = Scalar(0.20999999999999999) * _tmp1 + Scalar(0.20999999999999999) * _tmp22 +
                        Scalar(0.20999999999999999);
  const Scalar _tmp24 = -_tmp23;
  const Scalar _tmp25 = Scalar(0.20999999999999999) * _tmp14 + Scalar(0.20999999999999999) * _tmp15;
  const Scalar _tmp26 = _tmp0 * _tmp10;
  const Scalar _tmp27 = _tmp7 * _tmp9;
  const Scalar _tmp28 = _tmp26 - _tmp27;
  const Scalar _tmp29 = -Scalar(0.010999999999999999) * _tmp28;
  const Scalar _tmp30 = -_tmp25 + _tmp29;
  const Scalar _tmp31 = _tmp24 + _tmp30;
  const Scalar _tmp32 = _tmp31 + position_vector(1, 0);
  const Scalar _tmp33 = -_tmp32 + p_a(1, 0);
  const Scalar _tmp34 =
      std::sqrt(Scalar(std::pow(_tmp20, Scalar(2)) + std::pow(_tmp33, Scalar(2))));
  const Scalar _tmp35 =
      Scalar(1.0) *
      std::cosh(Scalar(0.71007031138673404) * _tmp21 *
                (-_tmp34 - Scalar(1.4083112389913199) * fh1 * std::asinh(_tmp21 * fv1))) /
      _tmp34;
  const Scalar _tmp36 = _tmp32 - p_a(1, 0);
  const Scalar _tmp37 = _tmp19 - p_a(0, 0);
  const Scalar _tmp38 = _tmp36 * _tmp37;
  const Scalar _tmp39 = std::pow(_tmp37, Scalar(2));
  const Scalar _tmp40 = std::pow(_tmp36, Scalar(2));
  const Scalar _tmp41 = _tmp39 + _tmp40;
  const Scalar _tmp42 = std::pow(_tmp41, Scalar(Scalar(-3) / Scalar(2)));
  const Scalar _tmp43 = _tmp42 * fh1;
  const Scalar _tmp44 = _tmp38 * _tmp43;
  const Scalar _tmp45 = _tmp17 + _tmp4;
  const Scalar _tmp46 = _tmp45 + position_vector(0, 0);
  const Scalar _tmp47 = _tmp46 - p_b(0, 0);
  const Scalar _tmp48 = _tmp25 + _tmp29;
  const Scalar _tmp49 = _tmp24 + _tmp48;
  const Scalar _tmp50 = _tmp49 + position_vector(1, 0);
  const Scalar _tmp51 = _tmp50 - p_b(1, 0);
  const Scalar _tmp52 = std::pow(Scalar(std::pow(_tmp47, Scalar(2)) + std::pow(_tmp51, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp53 = _tmp47 * _tmp52;
  const Scalar _tmp54 = _tmp51 * _tmp52;
  const Scalar _tmp55 = _tmp13 + _tmp16;
  const Scalar _tmp56 = _tmp4 + _tmp55;
  const Scalar _tmp57 = _tmp56 + position_vector(0, 0);
  const Scalar _tmp58 = _tmp57 - p_c(0, 0);
  const Scalar _tmp59 = Scalar(1.0) / (_tmp58);
  const Scalar _tmp60 = _tmp23 + _tmp48;
  const Scalar _tmp61 = _tmp60 + position_vector(1, 0);
  const Scalar _tmp62 = _tmp61 - p_c(1, 0);
  const Scalar _tmp63 = _tmp59 * _tmp62;
  const Scalar _tmp64 = Scalar(1.0) / (_tmp53 * _tmp63 - _tmp54);
  const Scalar _tmp65 =
      std::sqrt(Scalar(std::pow(_tmp58, Scalar(2)) + std::pow(_tmp62, Scalar(2))));
  const Scalar _tmp66 = Scalar(1.0) / (_tmp65);
  const Scalar _tmp67 = _tmp59 * _tmp65;
  const Scalar _tmp68 = _tmp67 * (_tmp56 * _tmp62 * _tmp66 - _tmp58 * _tmp60 * _tmp66);
  const Scalar _tmp69 = -_tmp45 * _tmp54 + _tmp49 * _tmp53 + _tmp53 * _tmp68;
  const Scalar _tmp70 = Scalar(1.0) * _tmp64;
  const Scalar _tmp71 = Scalar(1.0) * _tmp56;
  const Scalar _tmp72 = -_tmp45 + _tmp71;
  const Scalar _tmp73 = -Scalar(0.20999999999999999) * _tmp11 + Scalar(0.20999999999999999) * _tmp8;
  const Scalar _tmp74 =
      -Scalar(0.010999999999999999) * _tmp22 - Scalar(0.010999999999999999) * _tmp3;
  const Scalar _tmp75 = Scalar(0.20999999999999999) * _tmp26 + Scalar(0.20999999999999999) * _tmp27;
  const Scalar _tmp76 = _tmp74 - _tmp75;
  const Scalar _tmp77 = _tmp73 + _tmp76;
  const Scalar _tmp78 = _tmp74 + _tmp75;
  const Scalar _tmp79 = _tmp73 + _tmp78;
  const Scalar _tmp80 = _tmp53 * _tmp79;
  const Scalar _tmp81 = _tmp64 * (_tmp54 * _tmp77 - _tmp63 * _tmp80);
  const Scalar _tmp82 = Scalar(1.0) * _tmp60;
  const Scalar _tmp83 = -_tmp82;
  const Scalar _tmp84 = Scalar(1.0) / (_tmp49 + _tmp83);
  const Scalar _tmp85 = Scalar(1.0) * _tmp84;
  const Scalar _tmp86 = -_tmp53 * _tmp77 + _tmp80;
  const Scalar _tmp87 = -_tmp70 * _tmp86 + _tmp72 * _tmp81 * _tmp85;
  const Scalar _tmp88 = _tmp5 + _tmp55;
  const Scalar _tmp89 = _tmp88 + position_vector(0, 0);
  const Scalar _tmp90 = _tmp89 - p_d(0, 0);
  const Scalar _tmp91 = _tmp23 + _tmp30;
  const Scalar _tmp92 = _tmp91 + position_vector(1, 0);
  const Scalar _tmp93 = _tmp92 - p_d(1, 0);
  const Scalar _tmp94 = std::pow(Scalar(std::pow(_tmp90, Scalar(2)) + std::pow(_tmp93, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp95 = _tmp90 * _tmp94;
  const Scalar _tmp96 = _tmp79 * _tmp95;
  const Scalar _tmp97 = -_tmp73;
  const Scalar _tmp98 = _tmp78 + _tmp97;
  const Scalar _tmp99 = _tmp93 * _tmp94;
  const Scalar _tmp100 = _tmp63 * _tmp95 - _tmp99;
  const Scalar _tmp101 = _tmp100 * _tmp64;
  const Scalar _tmp102 = -_tmp100 * _tmp81 - _tmp63 * _tmp96 + _tmp98 * _tmp99;
  const Scalar _tmp103 = _tmp72 * _tmp84;
  const Scalar _tmp104 = -_tmp101 * _tmp86 - _tmp102 * _tmp103 - _tmp95 * _tmp98 + _tmp96;
  const Scalar _tmp105 = Scalar(1.0) / (_tmp104);
  const Scalar _tmp106 = -_tmp101 * _tmp69 + _tmp68 * _tmp95 - _tmp88 * _tmp99 + _tmp91 * _tmp95;
  const Scalar _tmp107 = _tmp105 * _tmp106;
  const Scalar _tmp108 = Scalar(1.0) / (_tmp106);
  const Scalar _tmp109 = _tmp104 * _tmp108;
  const Scalar _tmp110 = _tmp109 * (-_tmp107 * _tmp87 - _tmp69 * _tmp70);
  const Scalar _tmp111 = _tmp110 + _tmp87;
  const Scalar _tmp112 = _tmp100 * _tmp105;
  const Scalar _tmp113 = _tmp64 * (-_tmp111 * _tmp112 + Scalar(1.0));
  const Scalar _tmp114 = _tmp105 * _tmp111;
  const Scalar _tmp115 = _tmp113 * _tmp53 + _tmp114 * _tmp95;
  const Scalar _tmp116 = _tmp115 * _tmp67;
  const Scalar _tmp117 = _tmp39 * _tmp43;
  const Scalar _tmp118 = _tmp63 * _tmp79 + _tmp63 * _tmp81;
  const Scalar _tmp119 = _tmp63 * _tmp64;
  const Scalar _tmp120 = -_tmp103 * _tmp118 + _tmp119 * _tmp86 - _tmp79;
  const Scalar _tmp121 = _tmp109 * (-_tmp107 * _tmp120 + _tmp119 * _tmp69 - _tmp68);
  const Scalar _tmp122 = _tmp120 + _tmp121;
  const Scalar _tmp123 = _tmp64 * (-_tmp112 * _tmp122 - _tmp63);
  const Scalar _tmp124 = _tmp105 * _tmp122;
  const Scalar _tmp125 = _tmp123 * _tmp53 + _tmp124 * _tmp95 + Scalar(1.0);
  const Scalar _tmp126 = _tmp125 * _tmp67;
  const Scalar _tmp127 = std::pow(_tmp41, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp128 = _tmp127 * fh1;
  const Scalar _tmp129 = _tmp128 * _tmp67;
  const Scalar _tmp130 = _tmp125 * _tmp129;
  const Scalar _tmp131 = _tmp31 * _tmp42;
  const Scalar _tmp132 = _tmp127 * _tmp31;
  const Scalar _tmp133 = _tmp18 * _tmp42;
  const Scalar _tmp134 = fh1 * (-_tmp131 * _tmp39 + _tmp132 + _tmp133 * _tmp38);
  const Scalar _tmp135 = Scalar(1.0) * _tmp108;
  const Scalar _tmp136 = _tmp101 * _tmp53;
  const Scalar _tmp137 = _tmp67 * (-_tmp135 * _tmp136 + _tmp135 * _tmp95);
  const Scalar _tmp138 = -_tmp116 * _tmp44 - _tmp117 * _tmp126 + _tmp130 - _tmp134 * _tmp137;
  const Scalar _tmp139 = _tmp127 * _tmp18;
  const Scalar _tmp140 = fh1 * (-_tmp132 * _tmp37 + _tmp139 * _tmp36);
  const Scalar _tmp141 = Scalar(333.54000000000002) - fv1;
  const Scalar _tmp142 = _tmp103 * _tmp82 + _tmp71;
  const Scalar _tmp143 = 0;
  const Scalar _tmp144 = _tmp105 * _tmp143;
  const Scalar _tmp145 = _tmp115 * _tmp129;
  const Scalar _tmp146 = -_tmp130 * _tmp37 - _tmp137 * _tmp140 -
                         _tmp141 * _tmp67 * (-_tmp136 * _tmp144 + _tmp144 * _tmp95) -
                         _tmp145 * _tmp36;
  const Scalar _tmp147 = Scalar(1.0) / (_tmp146);
  const Scalar _tmp148 = fh1 * (_tmp76 + _tmp97);
  const Scalar _tmp149 = _tmp127 * _tmp148;
  const Scalar _tmp150 = Scalar(40.024799999999999) * _tmp12 + _tmp149 * _tmp37 + _tmp18 * fv1;
  const Scalar _tmp151 = _tmp83 + _tmp91;
  const Scalar _tmp152 = _tmp103 * _tmp151;
  const Scalar _tmp153 = Scalar(1.0) / (-_tmp152 + _tmp71 - _tmp88);
  const Scalar _tmp154 = Scalar(1.0) * _tmp153;
  const Scalar _tmp155 = _tmp151 * _tmp84;
  const Scalar _tmp156 = _tmp154 * _tmp155;
  const Scalar _tmp157 = -Scalar(1.0) * _tmp154 + Scalar(1.0) * _tmp156;
  const Scalar _tmp158 = _tmp102 * _tmp105;
  const Scalar _tmp159 = _tmp142 * _tmp153;
  const Scalar _tmp160 = -_tmp143 * _tmp158 - _tmp151 * _tmp159 + _tmp83;
  const Scalar _tmp161 = _tmp151 * _tmp153;
  const Scalar _tmp162 = _tmp110 * _tmp161 - _tmp111 * _tmp158 - Scalar(1.0) * _tmp81;
  const Scalar _tmp163 = _tmp110 * _tmp154 - _tmp162 * _tmp85;
  const Scalar _tmp164 = Scalar(1.0) * _tmp128;
  const Scalar _tmp165 = _tmp163 * _tmp164;
  const Scalar _tmp166 = -_tmp149 * _tmp36 - Scalar(40.024799999999999) * _tmp28 - _tmp31 * fv1;
  const Scalar _tmp167 = _tmp103 * _tmp154;
  const Scalar _tmp168 = _tmp84 * (_tmp152 * _tmp154 + Scalar(1.0));
  const Scalar _tmp169 = Scalar(1.0) * _tmp167 - Scalar(1.0) * _tmp168;
  const Scalar _tmp170 = _tmp118 + _tmp121 * _tmp161 - _tmp122 * _tmp158;
  const Scalar _tmp171 = _tmp121 * _tmp154 - _tmp170 * _tmp85;
  const Scalar _tmp172 = _tmp164 * _tmp171;
  const Scalar _tmp173 = _tmp109 * _tmp154;
  const Scalar _tmp174 = -_tmp102 * _tmp135 + _tmp151 * _tmp173;
  const Scalar _tmp175 = Scalar(1.0) * _tmp173 - Scalar(1.0) * _tmp174 * _tmp85;
  const Scalar _tmp176 =
      _tmp140 * _tmp175 +
      Scalar(1.0) * _tmp141 * (-_tmp142 * _tmp154 - _tmp160 * _tmp85 + Scalar(1.0)) +
      _tmp150 * _tmp157 + _tmp165 * _tmp36 + _tmp166 * _tmp169 + _tmp172 * _tmp37;
  const Scalar _tmp177 = std::asinh(_tmp147 * _tmp176);
  const Scalar _tmp178 = Scalar(1.0) * _tmp177;
  const Scalar _tmp179 = Scalar(1.4083112389913199) * _tmp146;
  const Scalar _tmp180 =
      -_tmp177 * _tmp179 - std::sqrt(Scalar(std::pow(Scalar(-_tmp57 + p_c(0, 0)), Scalar(2)) +
                                            std::pow(Scalar(-_tmp61 + p_c(1, 0)), Scalar(2))));
  const Scalar _tmp181 = Scalar(0.71007031138673404) * _tmp147;
  const Scalar _tmp182 = _tmp180 * _tmp181;
  const Scalar _tmp183 = -Scalar(1.4083112389913199) * std::sinh(_tmp178) -
                         Scalar(1.4083112389913199) * std::sinh(_tmp182);
  const Scalar _tmp184 = std::pow(_tmp146, Scalar(-2));
  const Scalar _tmp185 = Scalar(0.71007031138673404) * _tmp180 * _tmp184;
  const Scalar _tmp186 = _tmp176 * _tmp184;
  const Scalar _tmp187 = _tmp148 * _tmp42;
  const Scalar _tmp188 = _tmp187 * _tmp38;
  const Scalar _tmp189 = Scalar(1.0) * _tmp163;
  const Scalar _tmp190 = Scalar(1.0) * _tmp171;
  const Scalar _tmp191 = -_tmp149 + _tmp187 * _tmp39;
  const Scalar _tmp192 =
      std::pow(Scalar(std::pow(_tmp176, Scalar(2)) * _tmp184 + 1), Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp193 =
      _tmp192 *
      (-_tmp138 * _tmp186 + _tmp147 * (_tmp117 * _tmp190 + _tmp134 * _tmp175 + _tmp157 * _tmp191 -
                                       _tmp169 * _tmp188 - _tmp172 + _tmp189 * _tmp44));
  const Scalar _tmp194 = Scalar(1.4083112389913199) * _tmp177;
  const Scalar _tmp195 = std::cosh(_tmp182);
  const Scalar _tmp196 = Scalar(1.0) * std::cosh(_tmp178);
  const Scalar _tmp197 = _tmp134 * _tmp135;
  const Scalar _tmp198 = _tmp123 * _tmp128;
  const Scalar _tmp199 = -_tmp101 * _tmp197 + _tmp113 * _tmp44 + _tmp117 * _tmp123 - _tmp198;
  const Scalar _tmp200 = _tmp135 * _tmp140;
  const Scalar _tmp201 = _tmp113 * _tmp128;
  const Scalar _tmp202 = _tmp141 * _tmp144;
  const Scalar _tmp203 =
      -_tmp101 * _tmp200 - _tmp101 * _tmp202 + _tmp198 * _tmp37 + _tmp201 * _tmp36;
  const Scalar _tmp204 = Scalar(1.0) / (_tmp203);
  const Scalar _tmp205 = _tmp128 * _tmp84;
  const Scalar _tmp206 = _tmp162 * _tmp205;
  const Scalar _tmp207 = _tmp174 * _tmp84;
  const Scalar _tmp208 = _tmp150 * _tmp154;
  const Scalar _tmp209 = _tmp170 * _tmp205;
  const Scalar _tmp210 = _tmp140 * _tmp207 + _tmp141 * _tmp160 * _tmp84 - _tmp155 * _tmp208 +
                         _tmp166 * _tmp168 + _tmp206 * _tmp36 + _tmp209 * _tmp37;
  const Scalar _tmp211 = std::asinh(_tmp204 * _tmp210);
  const Scalar _tmp212 = Scalar(1.0) * _tmp211;
  const Scalar _tmp213 = Scalar(1.4083112389913199) * _tmp211;
  const Scalar _tmp214 =
      -_tmp203 * _tmp213 - std::sqrt(Scalar(std::pow(Scalar(-_tmp46 + p_b(0, 0)), Scalar(2)) +
                                            std::pow(Scalar(-_tmp50 + p_b(1, 0)), Scalar(2))));
  const Scalar _tmp215 = Scalar(0.71007031138673404) * _tmp204;
  const Scalar _tmp216 = _tmp214 * _tmp215;
  const Scalar _tmp217 = -Scalar(1.4083112389913199) * std::sinh(_tmp212) -
                         Scalar(1.4083112389913199) * std::sinh(_tmp216);
  const Scalar _tmp218 = _tmp162 * _tmp84;
  const Scalar _tmp219 = _tmp154 * _tmp191;
  const Scalar _tmp220 = _tmp170 * _tmp84;
  const Scalar _tmp221 = std::pow(_tmp203, Scalar(-2));
  const Scalar _tmp222 = _tmp210 * _tmp221;
  const Scalar _tmp223 =
      std::pow(Scalar(std::pow(_tmp210, Scalar(2)) * _tmp221 + 1), Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp224 =
      _tmp223 *
      (-_tmp199 * _tmp222 + _tmp204 * (_tmp117 * _tmp220 + _tmp134 * _tmp207 - _tmp155 * _tmp219 -
                                       _tmp168 * _tmp188 - _tmp209 + _tmp218 * _tmp44));
  const Scalar _tmp225 = Scalar(1.0) * std::cosh(_tmp212);
  const Scalar _tmp226 = Scalar(0.71007031138673404) * _tmp214 * _tmp221;
  const Scalar _tmp227 = Scalar(1.4083112389913199) * _tmp203;
  const Scalar _tmp228 = std::cosh(_tmp216);
  const Scalar _tmp229 = _tmp124 * _tmp128;
  const Scalar _tmp230 = _tmp114 * _tmp128;
  const Scalar _tmp231 = _tmp200 + _tmp202 + _tmp229 * _tmp37 + _tmp230 * _tmp36;
  const Scalar _tmp232 = std::pow(_tmp231, Scalar(-2));
  const Scalar _tmp233 = _tmp128 * _tmp153;
  const Scalar _tmp234 = _tmp110 * _tmp233;
  const Scalar _tmp235 = _tmp121 * _tmp233;
  const Scalar _tmp236 = -_tmp140 * _tmp173 + _tmp141 * _tmp159 - _tmp166 * _tmp167 + _tmp208 -
                         _tmp234 * _tmp36 - _tmp235 * _tmp37;
  const Scalar _tmp237 =
      std::pow(Scalar(_tmp232 * std::pow(_tmp236, Scalar(2)) + 1), Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp238 = _tmp114 * _tmp44 + _tmp117 * _tmp124 + _tmp197 - _tmp229;
  const Scalar _tmp239 = _tmp232 * _tmp236;
  const Scalar _tmp240 = Scalar(1.0) / (_tmp231);
  const Scalar _tmp241 = _tmp110 * _tmp153;
  const Scalar _tmp242 = _tmp121 * _tmp153;
  const Scalar _tmp243 =
      _tmp237 *
      (-_tmp238 * _tmp239 + _tmp240 * (-_tmp117 * _tmp242 - _tmp134 * _tmp173 + _tmp167 * _tmp188 +
                                       _tmp219 + _tmp235 - _tmp241 * _tmp44));
  const Scalar _tmp244 = std::asinh(_tmp236 * _tmp240);
  const Scalar _tmp245 = Scalar(1.0) * _tmp244;
  const Scalar _tmp246 = Scalar(1.0) * std::cosh(_tmp245);
  const Scalar _tmp247 = Scalar(1.4083112389913199) * _tmp244;
  const Scalar _tmp248 =
      -_tmp231 * _tmp247 - std::sqrt(Scalar(std::pow(Scalar(-_tmp89 + p_d(0, 0)), Scalar(2)) +
                                            std::pow(Scalar(-_tmp92 + p_d(1, 0)), Scalar(2))));
  const Scalar _tmp249 = Scalar(0.71007031138673404) * _tmp240;
  const Scalar _tmp250 = _tmp248 * _tmp249;
  const Scalar _tmp251 = std::cosh(_tmp250);
  const Scalar _tmp252 = Scalar(0.71007031138673404) * _tmp232 * _tmp248;
  const Scalar _tmp253 = Scalar(1.4083112389913199) * _tmp231;
  const Scalar _tmp254 = Scalar(1.4083112389913199) * _tmp238;
  const Scalar _tmp255 = -std::sinh(_tmp245) - std::sinh(_tmp250);
  const Scalar _tmp256 = fh1 * (-_tmp131 * _tmp38 + _tmp133 * _tmp40 - _tmp139);
  const Scalar _tmp257 = _tmp40 * _tmp43;
  const Scalar _tmp258 = -_tmp116 * _tmp257 - _tmp126 * _tmp44 - _tmp137 * _tmp256 + _tmp145;
  const Scalar _tmp259 = _tmp149 - _tmp187 * _tmp40;
  const Scalar _tmp260 =
      _tmp192 * (_tmp147 * (_tmp157 * _tmp188 - _tmp165 + _tmp169 * _tmp259 + _tmp175 * _tmp256 +
                            _tmp189 * _tmp257 + _tmp190 * _tmp44) -
                 _tmp186 * _tmp258);
  const Scalar _tmp261 = _tmp135 * _tmp256;
  const Scalar _tmp262 = -_tmp101 * _tmp261 + _tmp113 * _tmp257 + _tmp123 * _tmp44 - _tmp201;
  const Scalar _tmp263 =
      _tmp223 * (_tmp204 * (-_tmp156 * _tmp188 + _tmp168 * _tmp259 - _tmp206 + _tmp207 * _tmp256 +
                            _tmp218 * _tmp257 + _tmp220 * _tmp44) -
                 _tmp222 * _tmp262);
  const Scalar _tmp264 = _tmp114 * _tmp257 + _tmp124 * _tmp44 - _tmp230 + _tmp261;
  const Scalar _tmp265 =
      _tmp237 *
      (-_tmp239 * _tmp264 + _tmp240 * (_tmp154 * _tmp188 - _tmp167 * _tmp259 - _tmp173 * _tmp256 +
                                       _tmp234 - _tmp241 * _tmp257 - _tmp242 * _tmp44));

  // Output terms (1)
  Eigen::Matrix<Scalar, 4, 3> _res;

  _res(0, 0) = _tmp20 * _tmp35;
  _res(1, 0) =
      _tmp138 * _tmp183 +
      _tmp179 *
          (-_tmp193 * _tmp196 -
           _tmp195 * (-_tmp138 * _tmp185 + _tmp181 * (-_tmp138 * _tmp194 - _tmp179 * _tmp193)));
  _res(2, 0) =
      _tmp199 * _tmp217 +
      _tmp227 *
          (-_tmp224 * _tmp225 -
           _tmp228 * (-_tmp199 * _tmp226 + _tmp215 * (-_tmp199 * _tmp213 - _tmp224 * _tmp227)));
  _res(3, 0) =
      _tmp253 *
          (-_tmp243 * _tmp246 -
           _tmp251 * (-_tmp238 * _tmp252 + _tmp249 * (-_tmp243 * _tmp253 - _tmp244 * _tmp254))) +
      _tmp254 * _tmp255;
  _res(0, 1) = _tmp33 * _tmp35;
  _res(1, 1) =
      _tmp179 *
          (-_tmp195 * (_tmp181 * (-_tmp179 * _tmp260 - _tmp194 * _tmp258) - _tmp185 * _tmp258) -
           _tmp196 * _tmp260) +
      _tmp183 * _tmp258;
  _res(2, 1) =
      _tmp217 * _tmp262 + _tmp227 * (-_tmp225 * _tmp263 -
                                     _tmp228 * (_tmp215 * (-_tmp213 * _tmp262 - _tmp227 * _tmp263) -
                                                _tmp226 * _tmp262));
  _res(3, 1) =
      _tmp253 *
          (-_tmp246 * _tmp265 -
           _tmp251 * (_tmp249 * (-_tmp247 * _tmp264 - _tmp253 * _tmp265) - _tmp252 * _tmp264)) +
      Scalar(1.4083112389913199) * _tmp255 * _tmp264;
  _res(0, 2) = 0;
  _res(1, 2) = 0;
  _res(2, 2) = 0;
  _res(3, 2) = 0;

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
