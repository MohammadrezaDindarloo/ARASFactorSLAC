// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

#include <sym/rot3.h>

namespace sym {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: IK_residual_func_cost4_wrt_pb_Nl10
 *
 * Args:
 *     fh1: Scalar
 *     fv1: Scalar
 *     DeltaRot: Rot3
 *     position_vector: Matrix31
 *     encoder: Matrix41
 *     p_a: Matrix31
 *     p_b: Matrix31
 *     p_c: Matrix31
 *     p_d: Matrix31
 *     Rot_init: Rot3
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix43
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 4, 3> IkResidualFuncCost4WrtPbNl10(
    const Scalar fh1, const Scalar fv1, const sym::Rot3<Scalar>& DeltaRot,
    const Eigen::Matrix<Scalar, 3, 1>& position_vector, const Eigen::Matrix<Scalar, 4, 1>& encoder,
    const Eigen::Matrix<Scalar, 3, 1>& p_a, const Eigen::Matrix<Scalar, 3, 1>& p_b,
    const Eigen::Matrix<Scalar, 3, 1>& p_c, const Eigen::Matrix<Scalar, 3, 1>& p_d,
    const sym::Rot3<Scalar>& Rot_init, const Scalar epsilon) {
  // Total ops: 755

  // Unused inputs
  (void)encoder;
  (void)epsilon;

  // Input arrays
  const Eigen::Matrix<Scalar, 4, 1>& _DeltaRot = DeltaRot.Data();
  const Eigen::Matrix<Scalar, 4, 1>& _Rot_init = Rot_init.Data();

  // Intermediate terms (266)
  const Scalar _tmp0 = _DeltaRot[0] * _Rot_init[2] + _DeltaRot[1] * _Rot_init[3] -
                       _DeltaRot[2] * _Rot_init[0] + _DeltaRot[3] * _Rot_init[1];
  const Scalar _tmp1 = -2 * std::pow(_tmp0, Scalar(2));
  const Scalar _tmp2 = -_DeltaRot[0] * _Rot_init[1] + _DeltaRot[1] * _Rot_init[0] +
                       _DeltaRot[2] * _Rot_init[3] + _DeltaRot[3] * _Rot_init[2];
  const Scalar _tmp3 = 1 - 2 * std::pow(_tmp2, Scalar(2));
  const Scalar _tmp4 = Scalar(0.20999999999999999) * _tmp1 + Scalar(0.20999999999999999) * _tmp3;
  const Scalar _tmp5 = _DeltaRot[0] * _Rot_init[3] - _DeltaRot[1] * _Rot_init[2] +
                       _DeltaRot[2] * _Rot_init[1] + _DeltaRot[3] * _Rot_init[0];
  const Scalar _tmp6 = 2 * _tmp5;
  const Scalar _tmp7 = _tmp2 * _tmp6;
  const Scalar _tmp8 = -2 * _DeltaRot[0] * _Rot_init[0] - 2 * _DeltaRot[1] * _Rot_init[1] -
                       2 * _DeltaRot[2] * _Rot_init[2] + 2 * _DeltaRot[3] * _Rot_init[3];
  const Scalar _tmp9 = _tmp0 * _tmp8;
  const Scalar _tmp10 = _tmp7 + _tmp9;
  const Scalar _tmp11 = -Scalar(0.010999999999999999) * _tmp10;
  const Scalar _tmp12 = _tmp0 * _tmp6;
  const Scalar _tmp13 = _tmp2 * _tmp8;
  const Scalar _tmp14 = Scalar(0.20999999999999999) * _tmp12 - Scalar(0.20999999999999999) * _tmp13;
  const Scalar _tmp15 = _tmp11 - _tmp14;
  const Scalar _tmp16 = _tmp15 + _tmp4;
  const Scalar _tmp17 = _tmp16 + position_vector(0, 0);
  const Scalar _tmp18 = -_tmp17 + p_b(0, 0);
  const Scalar _tmp19 = Scalar(0.20999999999999999) * _tmp12 + Scalar(0.20999999999999999) * _tmp13;
  const Scalar _tmp20 = -2 * std::pow(_tmp5, Scalar(2));
  const Scalar _tmp21 = Scalar(0.20999999999999999) * _tmp20 + Scalar(0.20999999999999999) * _tmp3;
  const Scalar _tmp22 = 2 * _tmp0 * _tmp2;
  const Scalar _tmp23 = _tmp5 * _tmp8;
  const Scalar _tmp24 = _tmp22 - _tmp23;
  const Scalar _tmp25 = -Scalar(0.010999999999999999) * _tmp24;
  const Scalar _tmp26 = -_tmp21 + _tmp25;
  const Scalar _tmp27 = _tmp19 + _tmp26;
  const Scalar _tmp28 = _tmp27 + position_vector(1, 0);
  const Scalar _tmp29 = -_tmp28 + p_b(1, 0);
  const Scalar _tmp30 =
      std::sqrt(Scalar(std::pow(_tmp18, Scalar(2)) + std::pow(_tmp29, Scalar(2))));
  const Scalar _tmp31 = Scalar(1.0) / (fh1);
  const Scalar _tmp32 =
      Scalar(1.0) *
      std::cosh(Scalar(0.71007031138673404) * _tmp31 *
                (-_tmp30 - Scalar(1.4083112389913199) * fh1 * std::asinh(_tmp31 * fv1))) /
      _tmp30;
  const Scalar _tmp33 = _tmp17 - p_b(0, 0);
  const Scalar _tmp34 = std::pow(_tmp33, Scalar(2));
  const Scalar _tmp35 = _tmp28 - p_b(1, 0);
  const Scalar _tmp36 = std::pow(_tmp35, Scalar(2));
  const Scalar _tmp37 = _tmp34 + _tmp36;
  const Scalar _tmp38 = std::pow(_tmp37, Scalar(Scalar(-3) / Scalar(2)));
  const Scalar _tmp39 = _tmp33 * _tmp35;
  const Scalar _tmp40 = _tmp38 * _tmp39;
  const Scalar _tmp41 = _tmp40 * fh1;
  const Scalar _tmp42 = _tmp11 + _tmp14;
  const Scalar _tmp43 = _tmp4 + _tmp42;
  const Scalar _tmp44 = _tmp43 + position_vector(0, 0);
  const Scalar _tmp45 = _tmp44 - p_c(0, 0);
  const Scalar _tmp46 = _tmp21 + _tmp25;
  const Scalar _tmp47 = _tmp19 + _tmp46;
  const Scalar _tmp48 = _tmp47 + position_vector(1, 0);
  const Scalar _tmp49 = _tmp48 - p_c(1, 0);
  const Scalar _tmp50 = std::pow(Scalar(std::pow(_tmp45, Scalar(2)) + std::pow(_tmp49, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp51 = _tmp45 * _tmp50;
  const Scalar _tmp52 = Scalar(0.20999999999999999) * _tmp7 - Scalar(0.20999999999999999) * _tmp9;
  const Scalar _tmp53 = -_tmp52;
  const Scalar _tmp54 = -Scalar(0.010999999999999999) * _tmp1 -
                        Scalar(0.010999999999999999) * _tmp20 + Scalar(-0.010999999999999999);
  const Scalar _tmp55 = Scalar(0.20999999999999999) * _tmp22 + Scalar(0.20999999999999999) * _tmp23;
  const Scalar _tmp56 = _tmp54 - _tmp55;
  const Scalar _tmp57 = _tmp53 + _tmp56;
  const Scalar _tmp58 = -_tmp4;
  const Scalar _tmp59 = _tmp15 + _tmp58;
  const Scalar _tmp60 = _tmp59 + position_vector(0, 0);
  const Scalar _tmp61 = _tmp60 - p_a(0, 0);
  const Scalar _tmp62 = -_tmp19;
  const Scalar _tmp63 = _tmp26 + _tmp62;
  const Scalar _tmp64 = _tmp63 + position_vector(1, 0);
  const Scalar _tmp65 = _tmp64 - p_a(1, 0);
  const Scalar _tmp66 = std::pow(Scalar(std::pow(_tmp61, Scalar(2)) + std::pow(_tmp65, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp67 = _tmp61 * _tmp66;
  const Scalar _tmp68 = _tmp54 + _tmp55;
  const Scalar _tmp69 = _tmp53 + _tmp68;
  const Scalar _tmp70 = _tmp67 * _tmp69;
  const Scalar _tmp71 = -_tmp57 * _tmp67 + _tmp70;
  const Scalar _tmp72 = _tmp42 + _tmp58;
  const Scalar _tmp73 = _tmp72 + position_vector(0, 0);
  const Scalar _tmp74 = _tmp73 - p_d(0, 0);
  const Scalar _tmp75 = Scalar(1.0) / (_tmp74);
  const Scalar _tmp76 = _tmp46 + _tmp62;
  const Scalar _tmp77 = _tmp76 + position_vector(1, 0);
  const Scalar _tmp78 = _tmp77 - p_d(1, 0);
  const Scalar _tmp79 = _tmp75 * _tmp78;
  const Scalar _tmp80 = _tmp65 * _tmp66;
  const Scalar _tmp81 = Scalar(1.0) / (_tmp67 * _tmp79 - _tmp80);
  const Scalar _tmp82 = Scalar(1.0) * _tmp81;
  const Scalar _tmp83 = _tmp57 * _tmp80 - _tmp70 * _tmp79;
  const Scalar _tmp84 = Scalar(1.0) * _tmp72;
  const Scalar _tmp85 = -_tmp59 + _tmp84;
  const Scalar _tmp86 = Scalar(1.0) * _tmp76;
  const Scalar _tmp87 = -_tmp86;
  const Scalar _tmp88 = Scalar(1.0) / (_tmp63 + _tmp87);
  const Scalar _tmp89 = Scalar(1.0) * _tmp88;
  const Scalar _tmp90 = -_tmp71 * _tmp82 + _tmp81 * _tmp83 * _tmp85 * _tmp89;
  const Scalar _tmp91 = _tmp52 + _tmp68;
  const Scalar _tmp92 = _tmp49 * _tmp50;
  const Scalar _tmp93 = _tmp51 * _tmp79 - _tmp92;
  const Scalar _tmp94 = _tmp81 * _tmp93;
  const Scalar _tmp95 = _tmp51 * _tmp69;
  const Scalar _tmp96 = -_tmp79 * _tmp95 - _tmp83 * _tmp94 + _tmp91 * _tmp92;
  const Scalar _tmp97 = _tmp85 * _tmp88;
  const Scalar _tmp98 = -_tmp51 * _tmp91 - _tmp71 * _tmp94 + _tmp95 - _tmp96 * _tmp97;
  const Scalar _tmp99 = Scalar(1.0) / (_tmp98);
  const Scalar _tmp100 =
      std::sqrt(Scalar(std::pow(_tmp74, Scalar(2)) + std::pow(_tmp78, Scalar(2))));
  const Scalar _tmp101 = Scalar(1.0) / (_tmp100);
  const Scalar _tmp102 = _tmp100 * _tmp75;
  const Scalar _tmp103 = _tmp102 * (_tmp101 * _tmp72 * _tmp78 - _tmp101 * _tmp74 * _tmp76);
  const Scalar _tmp104 = _tmp103 * _tmp67 - _tmp59 * _tmp80 + _tmp63 * _tmp67;
  const Scalar _tmp105 = _tmp103 * _tmp51 - _tmp104 * _tmp94 - _tmp43 * _tmp92 + _tmp47 * _tmp51;
  const Scalar _tmp106 = _tmp105 * _tmp99;
  const Scalar _tmp107 = Scalar(1.0) / (_tmp105);
  const Scalar _tmp108 = _tmp107 * _tmp98;
  const Scalar _tmp109 = _tmp108 * (-_tmp104 * _tmp82 - _tmp106 * _tmp90);
  const Scalar _tmp110 = _tmp109 + _tmp90;
  const Scalar _tmp111 = _tmp110 * _tmp99;
  const Scalar _tmp112 = _tmp93 * _tmp99;
  const Scalar _tmp113 = _tmp81 * (-_tmp110 * _tmp112 + Scalar(1.0));
  const Scalar _tmp114 = _tmp111 * _tmp51 + _tmp113 * _tmp67;
  const Scalar _tmp115 = _tmp102 * _tmp114;
  const Scalar _tmp116 = _tmp27 * _tmp38;
  const Scalar _tmp117 = std::pow(_tmp37, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp118 = _tmp117 * _tmp27;
  const Scalar _tmp119 = fh1 * (-_tmp116 * _tmp34 + _tmp118 + _tmp16 * _tmp40);
  const Scalar _tmp120 = Scalar(1.0) * _tmp107;
  const Scalar _tmp121 = _tmp67 * _tmp94;
  const Scalar _tmp122 = _tmp102 * (-_tmp120 * _tmp121 + _tmp120 * _tmp51);
  const Scalar _tmp123 = _tmp34 * _tmp38;
  const Scalar _tmp124 = _tmp123 * fh1;
  const Scalar _tmp125 = _tmp79 * _tmp81;
  const Scalar _tmp126 = _tmp125 * _tmp83 + _tmp69 * _tmp79;
  const Scalar _tmp127 = _tmp125 * _tmp71 - _tmp126 * _tmp97 - _tmp69;
  const Scalar _tmp128 = _tmp108 * (-_tmp103 + _tmp104 * _tmp125 - _tmp106 * _tmp127);
  const Scalar _tmp129 = _tmp127 + _tmp128;
  const Scalar _tmp130 = _tmp129 * _tmp99;
  const Scalar _tmp131 = _tmp81 * (-_tmp112 * _tmp129 - _tmp79);
  const Scalar _tmp132 = _tmp130 * _tmp51 + _tmp131 * _tmp67 + Scalar(1.0);
  const Scalar _tmp133 = _tmp102 * _tmp132;
  const Scalar _tmp134 = _tmp117 * fh1;
  const Scalar _tmp135 = _tmp102 * _tmp134;
  const Scalar _tmp136 = _tmp132 * _tmp135;
  const Scalar _tmp137 = -_tmp115 * _tmp41 - _tmp119 * _tmp122 - _tmp124 * _tmp133 + _tmp136;
  const Scalar _tmp138 = Scalar(333.54000000000002) - fv1;
  const Scalar _tmp139 = _tmp84 + _tmp86 * _tmp97;
  const Scalar _tmp140 = 0;
  const Scalar _tmp141 = _tmp140 * _tmp99;
  const Scalar _tmp142 = _tmp114 * _tmp135;
  const Scalar _tmp143 = _tmp117 * _tmp16;
  const Scalar _tmp144 = fh1 * (-_tmp118 * _tmp33 + _tmp143 * _tmp35);
  const Scalar _tmp145 = -_tmp102 * _tmp138 * (-_tmp121 * _tmp141 + _tmp141 * _tmp51) -
                         _tmp122 * _tmp144 - _tmp136 * _tmp33 - _tmp142 * _tmp35;
  const Scalar _tmp146 = Scalar(1.0) / (_tmp145);
  const Scalar _tmp147 = _tmp52 + _tmp56;
  const Scalar _tmp148 = _tmp134 * _tmp147;
  const Scalar _tmp149 = Scalar(40.024799999999999) * _tmp10 + _tmp148 * _tmp33 + _tmp16 * fv1;
  const Scalar _tmp150 = _tmp47 + _tmp87;
  const Scalar _tmp151 = _tmp150 * _tmp97;
  const Scalar _tmp152 = Scalar(1.0) / (-_tmp151 - _tmp43 + _tmp84);
  const Scalar _tmp153 = Scalar(1.0) * _tmp152;
  const Scalar _tmp154 = _tmp150 * _tmp88;
  const Scalar _tmp155 = _tmp153 * _tmp154;
  const Scalar _tmp156 = -Scalar(1.0) * _tmp153 + Scalar(1.0) * _tmp155;
  const Scalar _tmp157 = -_tmp148 * _tmp35 - Scalar(40.024799999999999) * _tmp24 - _tmp27 * fv1;
  const Scalar _tmp158 = _tmp153 * _tmp97;
  const Scalar _tmp159 = _tmp151 * _tmp153 + Scalar(1.0);
  const Scalar _tmp160 = Scalar(1.0) * _tmp158 - Scalar(1.0) * _tmp159 * _tmp89;
  const Scalar _tmp161 = _tmp108 * _tmp153;
  const Scalar _tmp162 = -_tmp120 * _tmp96 + _tmp150 * _tmp161;
  const Scalar _tmp163 = Scalar(1.0) * _tmp161 - Scalar(1.0) * _tmp162 * _tmp89;
  const Scalar _tmp164 = _tmp139 * _tmp152;
  const Scalar _tmp165 = _tmp96 * _tmp99;
  const Scalar _tmp166 = -_tmp140 * _tmp165 - _tmp150 * _tmp164 + _tmp87;
  const Scalar _tmp167 = _tmp150 * _tmp152;
  const Scalar _tmp168 = _tmp126 + _tmp128 * _tmp167 - _tmp129 * _tmp165;
  const Scalar _tmp169 = _tmp128 * _tmp153 - _tmp168 * _tmp89;
  const Scalar _tmp170 = Scalar(1.0) * _tmp134;
  const Scalar _tmp171 = _tmp169 * _tmp170;
  const Scalar _tmp172 = _tmp109 * _tmp167 - _tmp110 * _tmp165 - _tmp82 * _tmp83;
  const Scalar _tmp173 = _tmp109 * _tmp153 - _tmp172 * _tmp89;
  const Scalar _tmp174 = _tmp170 * _tmp173;
  const Scalar _tmp175 =
      Scalar(1.0) * _tmp138 * (-_tmp139 * _tmp153 - _tmp166 * _tmp89 + Scalar(1.0)) +
      _tmp144 * _tmp163 + _tmp149 * _tmp156 + _tmp157 * _tmp160 + _tmp171 * _tmp33 +
      _tmp174 * _tmp35;
  const Scalar _tmp176 = std::asinh(_tmp146 * _tmp175);
  const Scalar _tmp177 = Scalar(1.0) * _tmp176;
  const Scalar _tmp178 = Scalar(1.4083112389913199) * _tmp145;
  const Scalar _tmp179 =
      -_tmp176 * _tmp178 - std::sqrt(Scalar(std::pow(Scalar(-_tmp73 + p_d(0, 0)), Scalar(2)) +
                                            std::pow(Scalar(-_tmp77 + p_d(1, 0)), Scalar(2))));
  const Scalar _tmp180 = Scalar(0.71007031138673404) * _tmp146;
  const Scalar _tmp181 = _tmp179 * _tmp180;
  const Scalar _tmp182 = -Scalar(1.4083112389913199) * std::sinh(_tmp177) -
                         Scalar(1.4083112389913199) * std::sinh(_tmp181);
  const Scalar _tmp183 = std::cosh(_tmp181);
  const Scalar _tmp184 = std::pow(_tmp145, Scalar(-2));
  const Scalar _tmp185 = Scalar(0.71007031138673404) * _tmp179 * _tmp184;
  const Scalar _tmp186 =
      std::pow(Scalar(std::pow(_tmp175, Scalar(2)) * _tmp184 + 1), Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp187 = _tmp175 * _tmp184;
  const Scalar _tmp188 = Scalar(1.0) * _tmp173;
  const Scalar _tmp189 = Scalar(1.0) * _tmp169;
  const Scalar _tmp190 = _tmp147 * fh1;
  const Scalar _tmp191 = _tmp190 * _tmp40;
  const Scalar _tmp192 = _tmp123 * _tmp190 - _tmp148;
  const Scalar _tmp193 =
      _tmp186 *
      (-_tmp137 * _tmp187 + _tmp146 * (_tmp119 * _tmp163 + _tmp124 * _tmp189 + _tmp156 * _tmp192 -
                                       _tmp160 * _tmp191 - _tmp171 + _tmp188 * _tmp41));
  const Scalar _tmp194 = Scalar(1.4083112389913199) * _tmp176;
  const Scalar _tmp195 = Scalar(1.0) * std::cosh(_tmp177);
  const Scalar _tmp196 = _tmp131 * _tmp134;
  const Scalar _tmp197 = _tmp120 * _tmp144;
  const Scalar _tmp198 = _tmp138 * _tmp141;
  const Scalar _tmp199 = _tmp113 * _tmp134;
  const Scalar _tmp200 = _tmp196 * _tmp33 - _tmp197 * _tmp94 - _tmp198 * _tmp94 + _tmp199 * _tmp35;
  const Scalar _tmp201 = Scalar(1.0) / (_tmp200);
  const Scalar _tmp202 = _tmp149 * _tmp153;
  const Scalar _tmp203 = _tmp134 * _tmp88;
  const Scalar _tmp204 = _tmp168 * _tmp203;
  const Scalar _tmp205 = _tmp172 * _tmp203;
  const Scalar _tmp206 = _tmp159 * _tmp88;
  const Scalar _tmp207 = _tmp162 * _tmp88;
  const Scalar _tmp208 = _tmp138 * _tmp166 * _tmp88 + _tmp144 * _tmp207 - _tmp154 * _tmp202 +
                         _tmp157 * _tmp206 + _tmp204 * _tmp33 + _tmp205 * _tmp35;
  const Scalar _tmp209 = std::asinh(_tmp201 * _tmp208);
  const Scalar _tmp210 = Scalar(1.4083112389913199) * _tmp200;
  const Scalar _tmp211 =
      -_tmp209 * _tmp210 - std::sqrt(Scalar(std::pow(Scalar(-_tmp60 + p_a(0, 0)), Scalar(2)) +
                                            std::pow(Scalar(-_tmp64 + p_a(1, 0)), Scalar(2))));
  const Scalar _tmp212 = Scalar(0.71007031138673404) * _tmp201;
  const Scalar _tmp213 = _tmp211 * _tmp212;
  const Scalar _tmp214 = std::cosh(_tmp213);
  const Scalar _tmp215 = _tmp119 * _tmp120;
  const Scalar _tmp216 = _tmp113 * _tmp41 + _tmp124 * _tmp131 - _tmp196 - _tmp215 * _tmp94;
  const Scalar _tmp217 = Scalar(1.4083112389913199) * _tmp209;
  const Scalar _tmp218 = std::pow(_tmp200, Scalar(-2));
  const Scalar _tmp219 =
      std::pow(Scalar(std::pow(_tmp208, Scalar(2)) * _tmp218 + 1), Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp220 = _tmp168 * _tmp88;
  const Scalar _tmp221 = _tmp172 * _tmp88;
  const Scalar _tmp222 = _tmp153 * _tmp192;
  const Scalar _tmp223 = _tmp208 * _tmp218;
  const Scalar _tmp224 =
      _tmp219 * (_tmp201 * (_tmp119 * _tmp207 + _tmp124 * _tmp220 - _tmp154 * _tmp222 -
                            _tmp191 * _tmp206 - _tmp204 + _tmp221 * _tmp41) -
                 _tmp216 * _tmp223);
  const Scalar _tmp225 = Scalar(0.71007031138673404) * _tmp211 * _tmp218;
  const Scalar _tmp226 = Scalar(1.0) * _tmp209;
  const Scalar _tmp227 = Scalar(1.0) * std::cosh(_tmp226);
  const Scalar _tmp228 = -Scalar(1.4083112389913199) * std::sinh(_tmp213) -
                         Scalar(1.4083112389913199) * std::sinh(_tmp226);
  const Scalar _tmp229 = _tmp134 * _tmp152;
  const Scalar _tmp230 = _tmp109 * _tmp229;
  const Scalar _tmp231 = _tmp128 * _tmp229;
  const Scalar _tmp232 = _tmp138 * _tmp164 - _tmp144 * _tmp161 - _tmp157 * _tmp158 + _tmp202 -
                         _tmp230 * _tmp35 - _tmp231 * _tmp33;
  const Scalar _tmp233 = _tmp130 * _tmp134;
  const Scalar _tmp234 = _tmp111 * _tmp134;
  const Scalar _tmp235 = _tmp197 + _tmp198 + _tmp233 * _tmp33 + _tmp234 * _tmp35;
  const Scalar _tmp236 = Scalar(1.0) / (_tmp235);
  const Scalar _tmp237 = std::asinh(_tmp232 * _tmp236);
  const Scalar _tmp238 = Scalar(1.0) * _tmp237;
  const Scalar _tmp239 = Scalar(1.0) * std::cosh(_tmp238);
  const Scalar _tmp240 = std::pow(_tmp235, Scalar(-2));
  const Scalar _tmp241 =
      std::pow(Scalar(std::pow(_tmp232, Scalar(2)) * _tmp240 + 1), Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp242 = _tmp128 * _tmp152;
  const Scalar _tmp243 = _tmp109 * _tmp152;
  const Scalar _tmp244 = _tmp111 * _tmp41 + _tmp124 * _tmp130 + _tmp215 - _tmp233;
  const Scalar _tmp245 = _tmp232 * _tmp240;
  const Scalar _tmp246 =
      _tmp241 * (_tmp236 * (-_tmp119 * _tmp161 - _tmp124 * _tmp242 + _tmp158 * _tmp191 + _tmp222 +
                            _tmp231 - _tmp243 * _tmp41) -
                 _tmp244 * _tmp245);
  const Scalar _tmp247 = Scalar(1.4083112389913199) * _tmp237;
  const Scalar _tmp248 =
      -_tmp235 * _tmp247 - std::sqrt(Scalar(std::pow(Scalar(-_tmp44 + p_c(0, 0)), Scalar(2)) +
                                            std::pow(Scalar(-_tmp48 + p_c(1, 0)), Scalar(2))));
  const Scalar _tmp249 = Scalar(0.71007031138673404) * _tmp240 * _tmp248;
  const Scalar _tmp250 = Scalar(1.4083112389913199) * _tmp235;
  const Scalar _tmp251 = Scalar(0.71007031138673404) * _tmp236;
  const Scalar _tmp252 = _tmp248 * _tmp251;
  const Scalar _tmp253 = std::cosh(_tmp252);
  const Scalar _tmp254 = -Scalar(1.4083112389913199) * std::sinh(_tmp238) -
                         Scalar(1.4083112389913199) * std::sinh(_tmp252);
  const Scalar _tmp255 = _tmp36 * _tmp38;
  const Scalar _tmp256 = fh1 * (-_tmp116 * _tmp39 - _tmp143 + _tmp16 * _tmp255);
  const Scalar _tmp257 = _tmp148 - _tmp190 * _tmp255;
  const Scalar _tmp258 = _tmp255 * fh1;
  const Scalar _tmp259 = -_tmp115 * _tmp258 - _tmp122 * _tmp256 - _tmp133 * _tmp41 + _tmp142;
  const Scalar _tmp260 =
      _tmp186 * (_tmp146 * (_tmp156 * _tmp191 + _tmp160 * _tmp257 + _tmp163 * _tmp256 - _tmp174 +
                            _tmp188 * _tmp258 + _tmp189 * _tmp41) -
                 _tmp187 * _tmp259);
  const Scalar _tmp261 = _tmp120 * _tmp256;
  const Scalar _tmp262 = _tmp113 * _tmp258 + _tmp131 * _tmp41 - _tmp199 - _tmp261 * _tmp94;
  const Scalar _tmp263 =
      _tmp219 * (_tmp201 * (-_tmp155 * _tmp191 - _tmp205 + _tmp206 * _tmp257 + _tmp207 * _tmp256 +
                            _tmp220 * _tmp41 + _tmp221 * _tmp258) -
                 _tmp223 * _tmp262);
  const Scalar _tmp264 = _tmp111 * _tmp258 + _tmp130 * _tmp41 - _tmp234 + _tmp261;
  const Scalar _tmp265 =
      _tmp241 * (_tmp236 * (_tmp153 * _tmp191 - _tmp158 * _tmp257 - _tmp161 * _tmp256 + _tmp230 -
                            _tmp242 * _tmp41 - _tmp243 * _tmp258) -
                 _tmp245 * _tmp264);

  // Output terms (1)
  Eigen::Matrix<Scalar, 4, 3> _res;

  _res(0, 0) = _tmp18 * _tmp32;
  _res(1, 0) =
      _tmp137 * _tmp182 +
      _tmp178 *
          (-_tmp183 * (-_tmp137 * _tmp185 + _tmp180 * (-_tmp137 * _tmp194 - _tmp178 * _tmp193)) -
           _tmp193 * _tmp195);
  _res(2, 0) =
      _tmp210 *
          (-_tmp214 * (_tmp212 * (-_tmp210 * _tmp224 - _tmp216 * _tmp217) - _tmp216 * _tmp225) -
           _tmp224 * _tmp227) +
      _tmp216 * _tmp228;
  _res(3, 0) =
      _tmp244 * _tmp254 +
      _tmp250 *
          (-_tmp239 * _tmp246 -
           _tmp253 * (-_tmp244 * _tmp249 + _tmp251 * (-_tmp244 * _tmp247 - _tmp246 * _tmp250)));
  _res(0, 1) = _tmp29 * _tmp32;
  _res(1, 1) =
      _tmp178 *
          (-_tmp183 * (_tmp180 * (-_tmp178 * _tmp260 - _tmp194 * _tmp259) - _tmp185 * _tmp259) -
           _tmp195 * _tmp260) +
      _tmp182 * _tmp259;
  _res(2, 1) =
      _tmp210 *
          (-_tmp214 * (_tmp212 * (-_tmp210 * _tmp263 - _tmp217 * _tmp262) - _tmp225 * _tmp262) -
           _tmp227 * _tmp263) +
      _tmp228 * _tmp262;
  _res(3, 1) =
      _tmp250 *
          (-_tmp239 * _tmp265 -
           _tmp253 * (-_tmp249 * _tmp264 + _tmp251 * (-_tmp247 * _tmp264 - _tmp250 * _tmp265))) +
      _tmp254 * _tmp264;
  _res(0, 2) = 0;
  _res(1, 2) = 0;
  _res(2, 2) = 0;
  _res(3, 2) = 0;

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
