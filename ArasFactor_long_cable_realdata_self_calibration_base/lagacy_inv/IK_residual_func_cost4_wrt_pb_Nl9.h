// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

#include <sym/rot3.h>

namespace sym {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: IK_residual_func_cost4_wrt_pb_Nl9
 *
 * Args:
 *     fh1: Scalar
 *     fv1: Scalar
 *     DeltaRot: Rot3
 *     position_vector: Matrix31
 *     encoder: Matrix41
 *     p_a: Matrix31
 *     p_b: Matrix31
 *     p_c: Matrix31
 *     p_d: Matrix31
 *     Rot_init: Rot3
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix43
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 4, 3> IkResidualFuncCost4WrtPbNl9(
    const Scalar fh1, const Scalar fv1, const sym::Rot3<Scalar>& DeltaRot,
    const Eigen::Matrix<Scalar, 3, 1>& position_vector, const Eigen::Matrix<Scalar, 4, 1>& encoder,
    const Eigen::Matrix<Scalar, 3, 1>& p_a, const Eigen::Matrix<Scalar, 3, 1>& p_b,
    const Eigen::Matrix<Scalar, 3, 1>& p_c, const Eigen::Matrix<Scalar, 3, 1>& p_d,
    const sym::Rot3<Scalar>& Rot_init, const Scalar epsilon) {
  // Total ops: 752

  // Unused inputs
  (void)encoder;
  (void)epsilon;

  // Input arrays
  const Eigen::Matrix<Scalar, 4, 1>& _DeltaRot = DeltaRot.Data();
  const Eigen::Matrix<Scalar, 4, 1>& _Rot_init = Rot_init.Data();

  // Intermediate terms (265)
  const Scalar _tmp0 = -_DeltaRot[0] * _Rot_init[1] + _DeltaRot[1] * _Rot_init[0] +
                       _DeltaRot[2] * _Rot_init[3] + _DeltaRot[3] * _Rot_init[2];
  const Scalar _tmp1 = -2 * std::pow(_tmp0, Scalar(2));
  const Scalar _tmp2 = _DeltaRot[0] * _Rot_init[2] + _DeltaRot[1] * _Rot_init[3] -
                       _DeltaRot[2] * _Rot_init[0] + _DeltaRot[3] * _Rot_init[1];
  const Scalar _tmp3 = 1 - 2 * std::pow(_tmp2, Scalar(2));
  const Scalar _tmp4 = Scalar(0.20999999999999999) * _tmp1 + Scalar(0.20999999999999999) * _tmp3;
  const Scalar _tmp5 = _DeltaRot[0] * _Rot_init[3] - _DeltaRot[1] * _Rot_init[2] +
                       _DeltaRot[2] * _Rot_init[1] + _DeltaRot[3] * _Rot_init[0];
  const Scalar _tmp6 = 2 * _tmp0 * _tmp5;
  const Scalar _tmp7 = -2 * _DeltaRot[0] * _Rot_init[0] - 2 * _DeltaRot[1] * _Rot_init[1] -
                       2 * _DeltaRot[2] * _Rot_init[2] + 2 * _DeltaRot[3] * _Rot_init[3];
  const Scalar _tmp8 = _tmp2 * _tmp7;
  const Scalar _tmp9 = _tmp6 + _tmp8;
  const Scalar _tmp10 = -Scalar(0.010999999999999999) * _tmp9;
  const Scalar _tmp11 = 2 * _tmp2;
  const Scalar _tmp12 = _tmp11 * _tmp5;
  const Scalar _tmp13 = _tmp0 * _tmp7;
  const Scalar _tmp14 = Scalar(0.20999999999999999) * _tmp12 - Scalar(0.20999999999999999) * _tmp13;
  const Scalar _tmp15 = _tmp10 - _tmp14;
  const Scalar _tmp16 = _tmp15 + _tmp4;
  const Scalar _tmp17 = _tmp16 + position_vector(0, 0);
  const Scalar _tmp18 = -_tmp17 + p_b(0, 0);
  const Scalar _tmp19 = Scalar(0.20999999999999999) * _tmp12 + Scalar(0.20999999999999999) * _tmp13;
  const Scalar _tmp20 = -2 * std::pow(_tmp5, Scalar(2));
  const Scalar _tmp21 = Scalar(0.20999999999999999) * _tmp1 + Scalar(0.20999999999999999) * _tmp20 +
                        Scalar(0.20999999999999999);
  const Scalar _tmp22 = _tmp0 * _tmp11;
  const Scalar _tmp23 = _tmp5 * _tmp7;
  const Scalar _tmp24 = _tmp22 - _tmp23;
  const Scalar _tmp25 = -Scalar(0.010999999999999999) * _tmp24;
  const Scalar _tmp26 = -_tmp21 + _tmp25;
  const Scalar _tmp27 = _tmp19 + _tmp26;
  const Scalar _tmp28 = _tmp27 + position_vector(1, 0);
  const Scalar _tmp29 = -_tmp28 + p_b(1, 0);
  const Scalar _tmp30 =
      std::sqrt(Scalar(std::pow(_tmp18, Scalar(2)) + std::pow(_tmp29, Scalar(2))));
  const Scalar _tmp31 = Scalar(1.0) / (fh1);
  const Scalar _tmp32 =
      Scalar(1.0) *
      std::cosh(Scalar(0.71007031138673404) * _tmp31 *
                (-_tmp30 - Scalar(1.4083112389913199) * fh1 * std::asinh(_tmp31 * fv1))) /
      _tmp30;
  const Scalar _tmp33 = _tmp17 - p_b(0, 0);
  const Scalar _tmp34 = std::pow(_tmp33, Scalar(2));
  const Scalar _tmp35 = _tmp28 - p_b(1, 0);
  const Scalar _tmp36 = std::pow(_tmp35, Scalar(2));
  const Scalar _tmp37 = _tmp34 + _tmp36;
  const Scalar _tmp38 = std::pow(_tmp37, Scalar(Scalar(-3) / Scalar(2)));
  const Scalar _tmp39 = _tmp33 * _tmp35;
  const Scalar _tmp40 = _tmp38 * _tmp39;
  const Scalar _tmp41 = _tmp40 * fh1;
  const Scalar _tmp42 = -_tmp4;
  const Scalar _tmp43 = _tmp10 + _tmp14;
  const Scalar _tmp44 = _tmp42 + _tmp43;
  const Scalar _tmp45 = _tmp44 + position_vector(0, 0);
  const Scalar _tmp46 = _tmp45 - p_d(0, 0);
  const Scalar _tmp47 = -_tmp19;
  const Scalar _tmp48 = _tmp21 + _tmp25;
  const Scalar _tmp49 = _tmp47 + _tmp48;
  const Scalar _tmp50 = _tmp49 + position_vector(1, 0);
  const Scalar _tmp51 = _tmp50 - p_d(1, 0);
  const Scalar _tmp52 = std::pow(Scalar(std::pow(_tmp46, Scalar(2)) + std::pow(_tmp51, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp53 = _tmp46 * _tmp52;
  const Scalar _tmp54 = _tmp51 * _tmp52;
  const Scalar _tmp55 = _tmp4 + _tmp43;
  const Scalar _tmp56 = _tmp55 + position_vector(0, 0);
  const Scalar _tmp57 = _tmp56 - p_c(0, 0);
  const Scalar _tmp58 = Scalar(1.0) / (_tmp57);
  const Scalar _tmp59 = _tmp19 + _tmp48;
  const Scalar _tmp60 = _tmp59 + position_vector(1, 0);
  const Scalar _tmp61 = _tmp60 - p_c(1, 0);
  const Scalar _tmp62 = _tmp58 * _tmp61;
  const Scalar _tmp63 = Scalar(1.0) / (_tmp53 * _tmp62 - _tmp54);
  const Scalar _tmp64 = _tmp26 + _tmp47;
  const Scalar _tmp65 = _tmp64 + position_vector(1, 0);
  const Scalar _tmp66 = _tmp65 - p_a(1, 0);
  const Scalar _tmp67 = _tmp15 + _tmp42;
  const Scalar _tmp68 = _tmp67 + position_vector(0, 0);
  const Scalar _tmp69 = _tmp68 - p_a(0, 0);
  const Scalar _tmp70 = std::pow(Scalar(std::pow(_tmp66, Scalar(2)) + std::pow(_tmp69, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp71 = _tmp66 * _tmp70;
  const Scalar _tmp72 = _tmp69 * _tmp70;
  const Scalar _tmp73 = _tmp62 * _tmp72 - _tmp71;
  const Scalar _tmp74 = Scalar(0.20999999999999999) * _tmp6 - Scalar(0.20999999999999999) * _tmp8;
  const Scalar _tmp75 = -_tmp74;
  const Scalar _tmp76 =
      -Scalar(0.010999999999999999) * _tmp20 - Scalar(0.010999999999999999) * _tmp3;
  const Scalar _tmp77 = Scalar(0.20999999999999999) * _tmp22 + Scalar(0.20999999999999999) * _tmp23;
  const Scalar _tmp78 = _tmp76 + _tmp77;
  const Scalar _tmp79 = _tmp75 + _tmp78;
  const Scalar _tmp80 = _tmp74 + _tmp78;
  const Scalar _tmp81 = _tmp53 * _tmp80;
  const Scalar _tmp82 = _tmp54 * _tmp79 - _tmp62 * _tmp81;
  const Scalar _tmp83 = _tmp63 * _tmp73;
  const Scalar _tmp84 = _tmp72 * _tmp80;
  const Scalar _tmp85 = _tmp76 - _tmp77;
  const Scalar _tmp86 = _tmp75 + _tmp85;
  const Scalar _tmp87 = -_tmp62 * _tmp84 + _tmp71 * _tmp86 - _tmp82 * _tmp83;
  const Scalar _tmp88 = Scalar(1.0) * _tmp59;
  const Scalar _tmp89 = -_tmp88;
  const Scalar _tmp90 = Scalar(1.0) / (_tmp49 + _tmp89);
  const Scalar _tmp91 = Scalar(1.0) * _tmp55;
  const Scalar _tmp92 = _tmp90 * (-_tmp44 + _tmp91);
  const Scalar _tmp93 = -_tmp53 * _tmp79 + _tmp81;
  const Scalar _tmp94 = -_tmp72 * _tmp86 - _tmp83 * _tmp93 + _tmp84 - _tmp87 * _tmp92;
  const Scalar _tmp95 = Scalar(1.0) / (_tmp94);
  const Scalar _tmp96 = Scalar(1.0) * _tmp63;
  const Scalar _tmp97 = _tmp82 * _tmp96;
  const Scalar _tmp98 = _tmp92 * _tmp97 - _tmp93 * _tmp96;
  const Scalar _tmp99 =
      std::sqrt(Scalar(std::pow(_tmp57, Scalar(2)) + std::pow(_tmp61, Scalar(2))));
  const Scalar _tmp100 = Scalar(1.0) / (_tmp99);
  const Scalar _tmp101 = _tmp58 * _tmp99;
  const Scalar _tmp102 = _tmp101 * (_tmp100 * _tmp55 * _tmp61 - _tmp100 * _tmp57 * _tmp59);
  const Scalar _tmp103 = _tmp102 * _tmp53 - _tmp44 * _tmp54 + _tmp49 * _tmp53;
  const Scalar _tmp104 = _tmp102 * _tmp72 - _tmp103 * _tmp83 + _tmp64 * _tmp72 - _tmp67 * _tmp71;
  const Scalar _tmp105 = _tmp104 * _tmp95;
  const Scalar _tmp106 = Scalar(1.0) / (_tmp104);
  const Scalar _tmp107 = _tmp106 * _tmp94;
  const Scalar _tmp108 = _tmp107 * (-_tmp103 * _tmp96 - _tmp105 * _tmp98);
  const Scalar _tmp109 = _tmp95 * (_tmp108 + _tmp98);
  const Scalar _tmp110 = _tmp63 * (-_tmp109 * _tmp73 + Scalar(1.0));
  const Scalar _tmp111 = _tmp109 * _tmp72 + _tmp110 * _tmp53;
  const Scalar _tmp112 = _tmp101 * _tmp111;
  const Scalar _tmp113 = _tmp27 * _tmp38;
  const Scalar _tmp114 = std::pow(_tmp37, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp115 = _tmp114 * _tmp27;
  const Scalar _tmp116 = -_tmp113 * _tmp34 + _tmp115 + _tmp16 * _tmp40;
  const Scalar _tmp117 = _tmp116 * fh1;
  const Scalar _tmp118 = Scalar(1.0) * _tmp106;
  const Scalar _tmp119 = _tmp106 * _tmp73 * _tmp96;
  const Scalar _tmp120 = _tmp101 * (_tmp118 * _tmp72 - _tmp119 * _tmp53);
  const Scalar _tmp121 = _tmp34 * _tmp38;
  const Scalar _tmp122 = _tmp121 * fh1;
  const Scalar _tmp123 = _tmp62 * _tmp63;
  const Scalar _tmp124 = _tmp123 * _tmp82 + _tmp62 * _tmp80;
  const Scalar _tmp125 = _tmp123 * _tmp93 - _tmp124 * _tmp92 - _tmp80;
  const Scalar _tmp126 = _tmp107 * (-_tmp102 + _tmp103 * _tmp123 - _tmp105 * _tmp125);
  const Scalar _tmp127 = _tmp95 * (_tmp125 + _tmp126);
  const Scalar _tmp128 = _tmp63 * (-_tmp127 * _tmp73 - _tmp62);
  const Scalar _tmp129 = _tmp127 * _tmp72 + _tmp128 * _tmp53 + Scalar(1.0);
  const Scalar _tmp130 = _tmp101 * _tmp129;
  const Scalar _tmp131 = _tmp114 * fh1;
  const Scalar _tmp132 = _tmp101 * _tmp131;
  const Scalar _tmp133 = _tmp129 * _tmp132;
  const Scalar _tmp134 = -_tmp112 * _tmp41 - _tmp117 * _tmp120 - _tmp122 * _tmp130 + _tmp133;
  const Scalar _tmp135 = Scalar(333.54000000000002) - fv1;
  const Scalar _tmp136 = _tmp88 * _tmp92 + _tmp91;
  const Scalar _tmp137 = 0;
  const Scalar _tmp138 = _tmp64 + _tmp89;
  const Scalar _tmp139 = _tmp138 * _tmp92;
  const Scalar _tmp140 = Scalar(1.0) / (-_tmp139 - _tmp67 + _tmp91);
  const Scalar _tmp141 = _tmp136 * _tmp140;
  const Scalar _tmp142 = _tmp90 * (-_tmp137 * _tmp87 - _tmp138 * _tmp141 + _tmp89);
  const Scalar _tmp143 = Scalar(1.0) * _tmp140;
  const Scalar _tmp144 = fh1 * (_tmp74 + _tmp85);
  const Scalar _tmp145 = _tmp114 * _tmp144;
  const Scalar _tmp146 = _tmp145 * _tmp33 + _tmp16 * fv1 + Scalar(40.024799999999999) * _tmp9;
  const Scalar _tmp147 = _tmp138 * _tmp90;
  const Scalar _tmp148 = _tmp143 * _tmp147;
  const Scalar _tmp149 = -Scalar(1.0) * _tmp143 + Scalar(1.0) * _tmp148;
  const Scalar _tmp150 = _tmp138 * _tmp140;
  const Scalar _tmp151 = _tmp124 + _tmp126 * _tmp150 - _tmp127 * _tmp87;
  const Scalar _tmp152 = Scalar(1.0) * _tmp90;
  const Scalar _tmp153 = _tmp126 * _tmp143 - _tmp151 * _tmp152;
  const Scalar _tmp154 = Scalar(1.0) * fh1;
  const Scalar _tmp155 = _tmp114 * _tmp154;
  const Scalar _tmp156 = _tmp153 * _tmp155;
  const Scalar _tmp157 = _tmp114 * _tmp16;
  const Scalar _tmp158 = -_tmp115 * _tmp33 + _tmp157 * _tmp35;
  const Scalar _tmp159 = _tmp107 * _tmp143;
  const Scalar _tmp160 = -_tmp118 * _tmp87 + _tmp138 * _tmp159;
  const Scalar _tmp161 = _tmp154 * (-_tmp152 * _tmp160 + _tmp159);
  const Scalar _tmp162 = _tmp108 * _tmp150 - _tmp109 * _tmp87 - _tmp97;
  const Scalar _tmp163 = _tmp108 * _tmp143 - _tmp152 * _tmp162;
  const Scalar _tmp164 = _tmp155 * _tmp163;
  const Scalar _tmp165 = -_tmp145 * _tmp35 - Scalar(40.024799999999999) * _tmp24 - _tmp27 * fv1;
  const Scalar _tmp166 = _tmp90 * (_tmp139 * _tmp143 + Scalar(1.0));
  const Scalar _tmp167 = _tmp143 * _tmp92;
  const Scalar _tmp168 = -Scalar(1.0) * _tmp166 + Scalar(1.0) * _tmp167;
  const Scalar _tmp169 =
      Scalar(1.0) * _tmp135 * (-_tmp136 * _tmp143 - Scalar(1.0) * _tmp142 + Scalar(1.0)) +
      _tmp146 * _tmp149 + _tmp156 * _tmp33 + _tmp158 * _tmp161 + _tmp164 * _tmp35 +
      _tmp165 * _tmp168;
  const Scalar _tmp170 = _tmp111 * _tmp132;
  const Scalar _tmp171 = _tmp120 * fh1;
  const Scalar _tmp172 = -_tmp101 * _tmp135 * (-_tmp137 * _tmp53 * _tmp83 + _tmp137 * _tmp72) -
                         _tmp133 * _tmp33 - _tmp158 * _tmp171 - _tmp170 * _tmp35;
  const Scalar _tmp173 = Scalar(1.0) / (_tmp172);
  const Scalar _tmp174 = std::asinh(_tmp169 * _tmp173);
  const Scalar _tmp175 = Scalar(1.0) * _tmp174;
  const Scalar _tmp176 = Scalar(1.4083112389913199) * _tmp174;
  const Scalar _tmp177 =
      -_tmp172 * _tmp176 - std::sqrt(Scalar(std::pow(Scalar(-_tmp56 + p_c(0, 0)), Scalar(2)) +
                                            std::pow(Scalar(-_tmp60 + p_c(1, 0)), Scalar(2))));
  const Scalar _tmp178 = Scalar(0.71007031138673404) * _tmp173;
  const Scalar _tmp179 = _tmp177 * _tmp178;
  const Scalar _tmp180 = -Scalar(1.4083112389913199) * std::sinh(_tmp175) -
                         Scalar(1.4083112389913199) * std::sinh(_tmp179);
  const Scalar _tmp181 = Scalar(1.4083112389913199) * _tmp172;
  const Scalar _tmp182 = std::pow(_tmp172, Scalar(-2));
  const Scalar _tmp183 =
      std::pow(Scalar(std::pow(_tmp169, Scalar(2)) * _tmp182 + 1), Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp184 = _tmp121 * _tmp144 - _tmp145;
  const Scalar _tmp185 = _tmp153 * _tmp154;
  const Scalar _tmp186 = _tmp154 * _tmp163;
  const Scalar _tmp187 = _tmp144 * _tmp40;
  const Scalar _tmp188 = _tmp169 * _tmp182;
  const Scalar _tmp189 =
      _tmp183 *
      (-_tmp134 * _tmp188 + _tmp173 * (_tmp116 * _tmp161 + _tmp121 * _tmp185 + _tmp149 * _tmp184 -
                                       _tmp156 - _tmp168 * _tmp187 + _tmp186 * _tmp40));
  const Scalar _tmp190 = Scalar(0.71007031138673404) * _tmp177 * _tmp182;
  const Scalar _tmp191 = std::cosh(_tmp179);
  const Scalar _tmp192 = Scalar(1.0) * std::cosh(_tmp175);
  const Scalar _tmp193 = _tmp90 * fh1;
  const Scalar _tmp194 = _tmp114 * _tmp193;
  const Scalar _tmp195 = _tmp151 * _tmp194;
  const Scalar _tmp196 = _tmp143 * _tmp146;
  const Scalar _tmp197 = _tmp162 * _tmp194;
  const Scalar _tmp198 = _tmp160 * _tmp193;
  const Scalar _tmp199 = _tmp135 * _tmp142 - _tmp147 * _tmp196 + _tmp158 * _tmp198 +
                         _tmp165 * _tmp166 + _tmp195 * _tmp33 + _tmp197 * _tmp35;
  const Scalar _tmp200 = _tmp135 * _tmp137;
  const Scalar _tmp201 = _tmp110 * _tmp131;
  const Scalar _tmp202 = _tmp158 * fh1;
  const Scalar _tmp203 = _tmp128 * _tmp131;
  const Scalar _tmp204 =
      -_tmp119 * _tmp202 - _tmp200 * _tmp83 + _tmp201 * _tmp35 + _tmp203 * _tmp33;
  const Scalar _tmp205 = Scalar(1.0) / (_tmp204);
  const Scalar _tmp206 = std::asinh(_tmp199 * _tmp205);
  const Scalar _tmp207 = Scalar(1.4083112389913199) * _tmp204;
  const Scalar _tmp208 =
      -_tmp206 * _tmp207 - std::sqrt(Scalar(std::pow(Scalar(-_tmp45 + p_d(0, 0)), Scalar(2)) +
                                            std::pow(Scalar(-_tmp50 + p_d(1, 0)), Scalar(2))));
  const Scalar _tmp209 = Scalar(0.71007031138673404) * _tmp205;
  const Scalar _tmp210 = _tmp208 * _tmp209;
  const Scalar _tmp211 = Scalar(1.0) * _tmp206;
  const Scalar _tmp212 = -std::sinh(_tmp210) - std::sinh(_tmp211);
  const Scalar _tmp213 = _tmp110 * _tmp41 - _tmp117 * _tmp119 + _tmp122 * _tmp128 - _tmp203;
  const Scalar _tmp214 = Scalar(1.4083112389913199) * _tmp213;
  const Scalar _tmp215 = _tmp143 * _tmp184;
  const Scalar _tmp216 = _tmp151 * _tmp193;
  const Scalar _tmp217 = _tmp162 * _tmp193;
  const Scalar _tmp218 = std::pow(_tmp204, Scalar(-2));
  const Scalar _tmp219 = _tmp199 * _tmp218;
  const Scalar _tmp220 =
      std::pow(Scalar(std::pow(_tmp199, Scalar(2)) * _tmp218 + 1), Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp221 =
      _tmp220 * (_tmp205 * (_tmp116 * _tmp198 + _tmp121 * _tmp216 - _tmp147 * _tmp215 -
                            _tmp166 * _tmp187 - _tmp195 + _tmp217 * _tmp40) -
                 _tmp213 * _tmp219);
  const Scalar _tmp222 = Scalar(1.0) * std::cosh(_tmp211);
  const Scalar _tmp223 = std::cosh(_tmp210);
  const Scalar _tmp224 = Scalar(0.71007031138673404) * _tmp208 * _tmp218;
  const Scalar _tmp225 = _tmp127 * _tmp131;
  const Scalar _tmp226 = _tmp118 * fh1;
  const Scalar _tmp227 = _tmp109 * _tmp131;
  const Scalar _tmp228 = _tmp158 * _tmp226 + _tmp200 + _tmp225 * _tmp33 + _tmp227 * _tmp35;
  const Scalar _tmp229 = Scalar(1.0) / (_tmp228);
  const Scalar _tmp230 = _tmp131 * _tmp140;
  const Scalar _tmp231 = _tmp126 * _tmp230;
  const Scalar _tmp232 = _tmp126 * _tmp140;
  const Scalar _tmp233 = _tmp108 * _tmp140;
  const Scalar _tmp234 = _tmp109 * _tmp41 + _tmp116 * _tmp226 + _tmp122 * _tmp127 - _tmp225;
  const Scalar _tmp235 = std::pow(_tmp228, Scalar(-2));
  const Scalar _tmp236 = _tmp108 * _tmp230;
  const Scalar _tmp237 = _tmp135 * _tmp141 - _tmp159 * _tmp202 - _tmp165 * _tmp167 + _tmp196 -
                         _tmp231 * _tmp33 - _tmp236 * _tmp35;
  const Scalar _tmp238 = _tmp235 * _tmp237;
  const Scalar _tmp239 =
      std::pow(Scalar(_tmp235 * std::pow(_tmp237, Scalar(2)) + 1), Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp240 =
      _tmp239 * (_tmp229 * (-_tmp117 * _tmp159 - _tmp122 * _tmp232 + _tmp167 * _tmp187 + _tmp215 +
                            _tmp231 - _tmp233 * _tmp41) -
                 _tmp234 * _tmp238);
  const Scalar _tmp241 = std::asinh(_tmp229 * _tmp237);
  const Scalar _tmp242 = Scalar(1.0) * _tmp241;
  const Scalar _tmp243 = Scalar(1.0) * std::cosh(_tmp242);
  const Scalar _tmp244 = Scalar(1.4083112389913199) * _tmp228;
  const Scalar _tmp245 = Scalar(1.4083112389913199) * _tmp234;
  const Scalar _tmp246 = Scalar(0.71007031138673404) * _tmp229;
  const Scalar _tmp247 =
      -_tmp241 * _tmp244 - std::sqrt(Scalar(std::pow(Scalar(-_tmp65 + p_a(1, 0)), Scalar(2)) +
                                            std::pow(Scalar(-_tmp68 + p_a(0, 0)), Scalar(2))));
  const Scalar _tmp248 = Scalar(0.71007031138673404) * _tmp235 * _tmp247;
  const Scalar _tmp249 = _tmp246 * _tmp247;
  const Scalar _tmp250 = std::cosh(_tmp249);
  const Scalar _tmp251 = -std::sinh(_tmp242) - std::sinh(_tmp249);
  const Scalar _tmp252 = _tmp36 * _tmp38;
  const Scalar _tmp253 = _tmp252 * fh1;
  const Scalar _tmp254 = -_tmp113 * _tmp39 - _tmp157 + _tmp16 * _tmp252;
  const Scalar _tmp255 = -_tmp112 * _tmp253 - _tmp130 * _tmp41 + _tmp170 - _tmp171 * _tmp254;
  const Scalar _tmp256 = -_tmp144 * _tmp252 + _tmp145;
  const Scalar _tmp257 =
      _tmp183 * (_tmp173 * (_tmp149 * _tmp187 + _tmp161 * _tmp254 - _tmp164 + _tmp168 * _tmp256 +
                            _tmp185 * _tmp40 + _tmp186 * _tmp252) -
                 _tmp188 * _tmp255);
  const Scalar _tmp258 = _tmp254 * fh1;
  const Scalar _tmp259 = _tmp110 * _tmp253 - _tmp119 * _tmp258 + _tmp128 * _tmp41 - _tmp201;
  const Scalar _tmp260 = Scalar(1.4083112389913199) * _tmp259;
  const Scalar _tmp261 =
      _tmp220 * (_tmp205 * (-_tmp148 * _tmp187 + _tmp166 * _tmp256 - _tmp197 + _tmp198 * _tmp254 +
                            _tmp216 * _tmp40 + _tmp217 * _tmp252) -
                 _tmp219 * _tmp259);
  const Scalar _tmp262 = _tmp109 * _tmp253 + _tmp127 * _tmp41 + _tmp226 * _tmp254 - _tmp227;
  const Scalar _tmp263 = Scalar(1.4083112389913199) * _tmp262;
  const Scalar _tmp264 =
      _tmp239 * (_tmp229 * (_tmp143 * _tmp187 - _tmp159 * _tmp258 - _tmp167 * _tmp256 -
                            _tmp232 * _tmp41 - _tmp233 * _tmp253 + _tmp236) -
                 _tmp238 * _tmp262);

  // Output terms (1)
  Eigen::Matrix<Scalar, 4, 3> _res;

  _res(0, 0) = _tmp18 * _tmp32;
  _res(1, 0) =
      _tmp134 * _tmp180 +
      _tmp181 *
          (-_tmp189 * _tmp192 -
           _tmp191 * (-_tmp134 * _tmp190 + _tmp178 * (-_tmp134 * _tmp176 - _tmp181 * _tmp189)));
  _res(2, 0) =
      _tmp207 *
          (-_tmp221 * _tmp222 -
           _tmp223 * (_tmp209 * (-_tmp206 * _tmp214 - _tmp207 * _tmp221) - _tmp213 * _tmp224)) +
      _tmp212 * _tmp214;
  _res(3, 0) =
      _tmp244 *
          (-_tmp240 * _tmp243 -
           _tmp250 * (-_tmp234 * _tmp248 + _tmp246 * (-_tmp240 * _tmp244 - _tmp241 * _tmp245))) +
      _tmp245 * _tmp251;
  _res(0, 1) = _tmp29 * _tmp32;
  _res(1, 1) =
      _tmp180 * _tmp255 +
      _tmp181 *
          (-_tmp191 * (_tmp178 * (-_tmp176 * _tmp255 - _tmp181 * _tmp257) - _tmp190 * _tmp255) -
           _tmp192 * _tmp257);
  _res(2, 1) =
      _tmp207 *
          (-_tmp222 * _tmp261 -
           _tmp223 * (_tmp209 * (-_tmp206 * _tmp260 - _tmp207 * _tmp261) - _tmp224 * _tmp259)) +
      _tmp212 * _tmp260;
  _res(3, 1) =
      _tmp244 *
          (-_tmp243 * _tmp264 -
           _tmp250 * (_tmp246 * (-_tmp241 * _tmp263 - _tmp244 * _tmp264) - _tmp248 * _tmp262)) +
      _tmp251 * _tmp263;
  _res(0, 2) = 0;
  _res(1, 2) = 0;
  _res(2, 2) = 0;
  _res(3, 2) = 0;

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
