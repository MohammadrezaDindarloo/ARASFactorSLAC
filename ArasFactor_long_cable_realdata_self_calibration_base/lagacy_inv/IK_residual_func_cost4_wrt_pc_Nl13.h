// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

#include <sym/rot3.h>

namespace sym {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: IK_residual_func_cost4_wrt_pc_Nl13
 *
 * Args:
 *     fh1: Scalar
 *     fv1: Scalar
 *     DeltaRot: Rot3
 *     position_vector: Matrix31
 *     encoder: Matrix41
 *     p_a: Matrix31
 *     p_b: Matrix31
 *     p_c: Matrix31
 *     p_d: Matrix31
 *     Rot_init: Rot3
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix43
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 4, 3> IkResidualFuncCost4WrtPcNl13(
    const Scalar fh1, const Scalar fv1, const sym::Rot3<Scalar>& DeltaRot,
    const Eigen::Matrix<Scalar, 3, 1>& position_vector, const Eigen::Matrix<Scalar, 4, 1>& encoder,
    const Eigen::Matrix<Scalar, 3, 1>& p_a, const Eigen::Matrix<Scalar, 3, 1>& p_b,
    const Eigen::Matrix<Scalar, 3, 1>& p_c, const Eigen::Matrix<Scalar, 3, 1>& p_d,
    const sym::Rot3<Scalar>& Rot_init, const Scalar epsilon) {
  // Total ops: 752

  // Unused inputs
  (void)encoder;
  (void)epsilon;

  // Input arrays
  const Eigen::Matrix<Scalar, 4, 1>& _DeltaRot = DeltaRot.Data();
  const Eigen::Matrix<Scalar, 4, 1>& _Rot_init = Rot_init.Data();

  // Intermediate terms (266)
  const Scalar _tmp0 = _DeltaRot[0] * _Rot_init[3] - _DeltaRot[1] * _Rot_init[2] +
                       _DeltaRot[2] * _Rot_init[1] + _DeltaRot[3] * _Rot_init[0];
  const Scalar _tmp1 = _DeltaRot[0] * _Rot_init[2] + _DeltaRot[1] * _Rot_init[3] -
                       _DeltaRot[2] * _Rot_init[0] + _DeltaRot[3] * _Rot_init[1];
  const Scalar _tmp2 = 2 * _tmp1;
  const Scalar _tmp3 = _tmp0 * _tmp2;
  const Scalar _tmp4 = -_DeltaRot[0] * _Rot_init[1] + _DeltaRot[1] * _Rot_init[0] +
                       _DeltaRot[2] * _Rot_init[3] + _DeltaRot[3] * _Rot_init[2];
  const Scalar _tmp5 = -_DeltaRot[0] * _Rot_init[0] - _DeltaRot[1] * _Rot_init[1] -
                       _DeltaRot[2] * _Rot_init[2] + _DeltaRot[3] * _Rot_init[3];
  const Scalar _tmp6 = 2 * _tmp5;
  const Scalar _tmp7 = _tmp4 * _tmp6;
  const Scalar _tmp8 = Scalar(0.20999999999999999) * _tmp3 - Scalar(0.20999999999999999) * _tmp7;
  const Scalar _tmp9 = 2 * _tmp0 * _tmp4;
  const Scalar _tmp10 = _tmp2 * _tmp5;
  const Scalar _tmp11 = _tmp10 + _tmp9;
  const Scalar _tmp12 = -Scalar(0.010999999999999999) * _tmp11;
  const Scalar _tmp13 = -2 * std::pow(_tmp4, Scalar(2));
  const Scalar _tmp14 = 1 - 2 * std::pow(_tmp1, Scalar(2));
  const Scalar _tmp15 = Scalar(0.20999999999999999) * _tmp13 + Scalar(0.20999999999999999) * _tmp14;
  const Scalar _tmp16 = _tmp12 + _tmp15;
  const Scalar _tmp17 = _tmp16 + _tmp8;
  const Scalar _tmp18 = _tmp17 + position_vector(0, 0);
  const Scalar _tmp19 = -_tmp18 + p_c(0, 0);
  const Scalar _tmp20 = Scalar(1.0) / (fh1);
  const Scalar _tmp21 = Scalar(0.20999999999999999) * _tmp3 + Scalar(0.20999999999999999) * _tmp7;
  const Scalar _tmp22 = _tmp2 * _tmp4;
  const Scalar _tmp23 = _tmp0 * _tmp6;
  const Scalar _tmp24 = _tmp22 - _tmp23;
  const Scalar _tmp25 = -Scalar(0.010999999999999999) * _tmp24;
  const Scalar _tmp26 = -2 * std::pow(_tmp0, Scalar(2));
  const Scalar _tmp27 = Scalar(0.20999999999999999) * _tmp13 +
                        Scalar(0.20999999999999999) * _tmp26 + Scalar(0.20999999999999999);
  const Scalar _tmp28 = _tmp25 + _tmp27;
  const Scalar _tmp29 = _tmp21 + _tmp28;
  const Scalar _tmp30 = _tmp29 + position_vector(1, 0);
  const Scalar _tmp31 = -_tmp30 + p_c(1, 0);
  const Scalar _tmp32 =
      std::sqrt(Scalar(std::pow(_tmp19, Scalar(2)) + std::pow(_tmp31, Scalar(2))));
  const Scalar _tmp33 =
      Scalar(1.0) *
      std::cosh(Scalar(0.71007031138673404) * _tmp20 *
                (-_tmp32 - Scalar(1.4083112389913199) * fh1 * std::asinh(_tmp20 * fv1))) /
      _tmp32;
  const Scalar _tmp34 = _tmp18 - p_c(0, 0);
  const Scalar _tmp35 = std::pow(_tmp34, Scalar(2));
  const Scalar _tmp36 = _tmp30 - p_c(1, 0);
  const Scalar _tmp37 = std::pow(_tmp36, Scalar(2));
  const Scalar _tmp38 = _tmp35 + _tmp37;
  const Scalar _tmp39 = std::pow(_tmp38, Scalar(Scalar(-3) / Scalar(2)));
  const Scalar _tmp40 = _tmp34 * _tmp36 * _tmp39;
  const Scalar _tmp41 = _tmp40 * fh1;
  const Scalar _tmp42 = _tmp12 - _tmp15;
  const Scalar _tmp43 = _tmp42 + _tmp8;
  const Scalar _tmp44 = -_tmp8;
  const Scalar _tmp45 = _tmp42 + _tmp44;
  const Scalar _tmp46 = Scalar(1.0) * _tmp45;
  const Scalar _tmp47 = -_tmp43 + _tmp46;
  const Scalar _tmp48 = _tmp43 + position_vector(0, 0);
  const Scalar _tmp49 = _tmp48 - p_d(0, 0);
  const Scalar _tmp50 = -_tmp21;
  const Scalar _tmp51 = _tmp28 + _tmp50;
  const Scalar _tmp52 = _tmp51 + position_vector(1, 0);
  const Scalar _tmp53 = _tmp52 - p_d(1, 0);
  const Scalar _tmp54 = std::pow(Scalar(std::pow(_tmp49, Scalar(2)) + std::pow(_tmp53, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp55 = _tmp53 * _tmp54;
  const Scalar _tmp56 = _tmp45 + position_vector(0, 0);
  const Scalar _tmp57 = _tmp56 - p_a(0, 0);
  const Scalar _tmp58 = Scalar(1.0) / (_tmp57);
  const Scalar _tmp59 = _tmp25 - _tmp27;
  const Scalar _tmp60 = _tmp50 + _tmp59;
  const Scalar _tmp61 = _tmp60 + position_vector(1, 0);
  const Scalar _tmp62 = _tmp61 - p_a(1, 0);
  const Scalar _tmp63 = _tmp58 * _tmp62;
  const Scalar _tmp64 = _tmp49 * _tmp54;
  const Scalar _tmp65 = Scalar(1.0) / (-_tmp55 + _tmp63 * _tmp64);
  const Scalar _tmp66 = -Scalar(0.20999999999999999) * _tmp10 + Scalar(0.20999999999999999) * _tmp9;
  const Scalar _tmp67 = -_tmp66;
  const Scalar _tmp68 =
      -Scalar(0.010999999999999999) * _tmp14 - Scalar(0.010999999999999999) * _tmp26;
  const Scalar _tmp69 = Scalar(0.20999999999999999) * _tmp22 + Scalar(0.20999999999999999) * _tmp23;
  const Scalar _tmp70 = _tmp68 + _tmp69;
  const Scalar _tmp71 = _tmp67 + _tmp70;
  const Scalar _tmp72 = _tmp68 - _tmp69;
  const Scalar _tmp73 = _tmp67 + _tmp72;
  const Scalar _tmp74 = _tmp64 * _tmp73;
  const Scalar _tmp75 = _tmp55 * _tmp71 - _tmp63 * _tmp74;
  const Scalar _tmp76 = Scalar(1.0) * _tmp60;
  const Scalar _tmp77 = -_tmp76;
  const Scalar _tmp78 = Scalar(1.0) / (_tmp51 + _tmp77);
  const Scalar _tmp79 = Scalar(1.0) * _tmp78;
  const Scalar _tmp80 = -_tmp64 * _tmp71 + _tmp74;
  const Scalar _tmp81 = Scalar(1.0) * _tmp65;
  const Scalar _tmp82 = _tmp47 * _tmp65 * _tmp75 * _tmp79 - _tmp80 * _tmp81;
  const Scalar _tmp83 = _tmp66 + _tmp72;
  const Scalar _tmp84 = _tmp16 + _tmp44;
  const Scalar _tmp85 = _tmp84 + position_vector(0, 0);
  const Scalar _tmp86 = _tmp85 - p_b(0, 0);
  const Scalar _tmp87 = _tmp21 + _tmp59;
  const Scalar _tmp88 = _tmp87 + position_vector(1, 0);
  const Scalar _tmp89 = _tmp88 - p_b(1, 0);
  const Scalar _tmp90 = std::pow(Scalar(std::pow(_tmp86, Scalar(2)) + std::pow(_tmp89, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp91 = _tmp89 * _tmp90;
  const Scalar _tmp92 = _tmp86 * _tmp90;
  const Scalar _tmp93 = _tmp63 * _tmp92 - _tmp91;
  const Scalar _tmp94 = _tmp65 * _tmp93;
  const Scalar _tmp95 = _tmp73 * _tmp92;
  const Scalar _tmp96 = -_tmp63 * _tmp95 - _tmp75 * _tmp94 + _tmp83 * _tmp91;
  const Scalar _tmp97 = _tmp47 * _tmp78;
  const Scalar _tmp98 = -_tmp80 * _tmp94 - _tmp83 * _tmp92 + _tmp95 - _tmp96 * _tmp97;
  const Scalar _tmp99 = Scalar(1.0) / (_tmp98);
  const Scalar _tmp100 =
      std::sqrt(Scalar(std::pow(_tmp57, Scalar(2)) + std::pow(_tmp62, Scalar(2))));
  const Scalar _tmp101 = Scalar(1.0) / (_tmp100);
  const Scalar _tmp102 = _tmp100 * _tmp58;
  const Scalar _tmp103 = _tmp102 * (_tmp101 * _tmp45 * _tmp62 - _tmp101 * _tmp57 * _tmp60);
  const Scalar _tmp104 = _tmp103 * _tmp64 - _tmp43 * _tmp55 + _tmp51 * _tmp64;
  const Scalar _tmp105 = _tmp103 * _tmp92 - _tmp104 * _tmp94 - _tmp84 * _tmp91 + _tmp87 * _tmp92;
  const Scalar _tmp106 = _tmp105 * _tmp99;
  const Scalar _tmp107 = Scalar(1.0) / (_tmp105);
  const Scalar _tmp108 = _tmp107 * _tmp98;
  const Scalar _tmp109 = _tmp108 * (-_tmp104 * _tmp81 - _tmp106 * _tmp82);
  const Scalar _tmp110 = _tmp109 + _tmp82;
  const Scalar _tmp111 = _tmp92 * _tmp99;
  const Scalar _tmp112 = _tmp93 * _tmp99;
  const Scalar _tmp113 = _tmp65 * (-_tmp110 * _tmp112 + Scalar(1.0));
  const Scalar _tmp114 = _tmp110 * _tmp111 + _tmp113 * _tmp64;
  const Scalar _tmp115 = _tmp102 * _tmp114;
  const Scalar _tmp116 = _tmp63 * _tmp65;
  const Scalar _tmp117 = _tmp116 * _tmp75 + _tmp63 * _tmp73;
  const Scalar _tmp118 = _tmp116 * _tmp80 - _tmp117 * _tmp97 - _tmp73;
  const Scalar _tmp119 = _tmp108 * (-_tmp103 + _tmp104 * _tmp116 - _tmp106 * _tmp118);
  const Scalar _tmp120 = _tmp118 + _tmp119;
  const Scalar _tmp121 = _tmp65 * (-_tmp112 * _tmp120 - _tmp63);
  const Scalar _tmp122 = _tmp111 * _tmp120 + _tmp121 * _tmp64 + Scalar(1.0);
  const Scalar _tmp123 = std::pow(_tmp38, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp124 = _tmp123 * fh1;
  const Scalar _tmp125 = _tmp102 * _tmp124;
  const Scalar _tmp126 = _tmp122 * _tmp125;
  const Scalar _tmp127 = _tmp35 * _tmp39;
  const Scalar _tmp128 = _tmp127 * fh1;
  const Scalar _tmp129 = _tmp102 * _tmp122;
  const Scalar _tmp130 = _tmp123 * _tmp29;
  const Scalar _tmp131 = fh1 * (-_tmp127 * _tmp29 + _tmp130 + _tmp17 * _tmp40);
  const Scalar _tmp132 = Scalar(1.0) * _tmp107;
  const Scalar _tmp133 = _tmp64 * _tmp94;
  const Scalar _tmp134 = _tmp102 * (-_tmp132 * _tmp133 + _tmp132 * _tmp92);
  const Scalar _tmp135 = -_tmp115 * _tmp41 + _tmp126 - _tmp128 * _tmp129 - _tmp131 * _tmp134;
  const Scalar _tmp136 = _tmp114 * _tmp125;
  const Scalar _tmp137 = Scalar(333.54000000000002) - fv1;
  const Scalar _tmp138 = _tmp46 + _tmp76 * _tmp97;
  const Scalar _tmp139 = 0;
  const Scalar _tmp140 = _tmp139 * _tmp99;
  const Scalar _tmp141 = _tmp123 * _tmp17;
  const Scalar _tmp142 = fh1 * (-_tmp130 * _tmp34 + _tmp141 * _tmp36);
  const Scalar _tmp143 = -_tmp102 * _tmp137 * (-_tmp133 * _tmp140 + _tmp140 * _tmp92) -
                         _tmp126 * _tmp34 - _tmp134 * _tmp142 - _tmp136 * _tmp36;
  const Scalar _tmp144 = Scalar(1.0) / (_tmp143);
  const Scalar _tmp145 = _tmp77 + _tmp87;
  const Scalar _tmp146 = _tmp145 * _tmp97;
  const Scalar _tmp147 = Scalar(1.0) / (-_tmp146 + _tmp46 - _tmp84);
  const Scalar _tmp148 = Scalar(1.0) * _tmp147;
  const Scalar _tmp149 = _tmp108 * _tmp148;
  const Scalar _tmp150 = -_tmp132 * _tmp96 + _tmp145 * _tmp149;
  const Scalar _tmp151 = Scalar(1.0) * _tmp149 - Scalar(1.0) * _tmp150 * _tmp79;
  const Scalar _tmp152 = _tmp145 * _tmp147;
  const Scalar _tmp153 = _tmp96 * _tmp99;
  const Scalar _tmp154 = _tmp109 * _tmp152 - _tmp110 * _tmp153 - _tmp75 * _tmp81;
  const Scalar _tmp155 = _tmp109 * _tmp148 - _tmp154 * _tmp79;
  const Scalar _tmp156 = Scalar(1.0) * _tmp124;
  const Scalar _tmp157 = _tmp155 * _tmp156;
  const Scalar _tmp158 = fh1 * (_tmp66 + _tmp70);
  const Scalar _tmp159 = _tmp123 * _tmp158;
  const Scalar _tmp160 = -_tmp159 * _tmp36 - Scalar(40.024799999999999) * _tmp24 - _tmp29 * fv1;
  const Scalar _tmp161 = _tmp148 * _tmp97;
  const Scalar _tmp162 = _tmp78 * (_tmp146 * _tmp148 + Scalar(1.0));
  const Scalar _tmp163 = Scalar(1.0) * _tmp161 - Scalar(1.0) * _tmp162;
  const Scalar _tmp164 = Scalar(40.024799999999999) * _tmp11 + _tmp159 * _tmp34 + _tmp17 * fv1;
  const Scalar _tmp165 = _tmp145 * _tmp78;
  const Scalar _tmp166 = _tmp148 * _tmp165;
  const Scalar _tmp167 = -Scalar(1.0) * _tmp148 + Scalar(1.0) * _tmp166;
  const Scalar _tmp168 = _tmp117 + _tmp119 * _tmp152 - _tmp120 * _tmp153;
  const Scalar _tmp169 = _tmp119 * _tmp148 - _tmp168 * _tmp79;
  const Scalar _tmp170 = _tmp156 * _tmp169;
  const Scalar _tmp171 = _tmp138 * _tmp147;
  const Scalar _tmp172 = -_tmp139 * _tmp153 - _tmp145 * _tmp171 + _tmp77;
  const Scalar _tmp173 =
      Scalar(1.0) * _tmp137 * (-_tmp138 * _tmp148 - _tmp172 * _tmp79 + Scalar(1.0)) +
      _tmp142 * _tmp151 + _tmp157 * _tmp36 + _tmp160 * _tmp163 + _tmp164 * _tmp167 +
      _tmp170 * _tmp34;
  const Scalar _tmp174 = std::asinh(_tmp144 * _tmp173);
  const Scalar _tmp175 = Scalar(1.4083112389913199) * _tmp174;
  const Scalar _tmp176 =
      -_tmp143 * _tmp175 - std::sqrt(Scalar(std::pow(Scalar(-_tmp56 + p_a(0, 0)), Scalar(2)) +
                                            std::pow(Scalar(-_tmp61 + p_a(1, 0)), Scalar(2))));
  const Scalar _tmp177 = Scalar(0.71007031138673404) * _tmp144;
  const Scalar _tmp178 = _tmp176 * _tmp177;
  const Scalar _tmp179 = Scalar(1.0) * _tmp174;
  const Scalar _tmp180 = -Scalar(1.4083112389913199) * std::sinh(_tmp178) -
                         Scalar(1.4083112389913199) * std::sinh(_tmp179);
  const Scalar _tmp181 = _tmp158 * _tmp40;
  const Scalar _tmp182 = _tmp127 * _tmp158 - _tmp159;
  const Scalar _tmp183 = Scalar(1.0) * _tmp155;
  const Scalar _tmp184 = Scalar(1.0) * _tmp169;
  const Scalar _tmp185 = std::pow(_tmp143, Scalar(-2));
  const Scalar _tmp186 = _tmp173 * _tmp185;
  const Scalar _tmp187 =
      std::pow(Scalar(std::pow(_tmp173, Scalar(2)) * _tmp185 + 1), Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp188 =
      _tmp187 *
      (-_tmp135 * _tmp186 + _tmp144 * (_tmp128 * _tmp184 + _tmp131 * _tmp151 - _tmp163 * _tmp181 +
                                       _tmp167 * _tmp182 - _tmp170 + _tmp183 * _tmp41));
  const Scalar _tmp189 = Scalar(1.0) * std::cosh(_tmp179);
  const Scalar _tmp190 = std::cosh(_tmp178);
  const Scalar _tmp191 = Scalar(0.71007031138673404) * _tmp176 * _tmp185;
  const Scalar _tmp192 = Scalar(1.4083112389913199) * _tmp143;
  const Scalar _tmp193 = _tmp121 * _tmp124;
  const Scalar _tmp194 = _tmp131 * _tmp132;
  const Scalar _tmp195 = _tmp113 * _tmp41 + _tmp121 * _tmp128 - _tmp193 - _tmp194 * _tmp94;
  const Scalar _tmp196 = _tmp132 * _tmp142;
  const Scalar _tmp197 = _tmp137 * _tmp140;
  const Scalar _tmp198 = _tmp113 * _tmp124;
  const Scalar _tmp199 = _tmp193 * _tmp34 - _tmp196 * _tmp94 - _tmp197 * _tmp94 + _tmp198 * _tmp36;
  const Scalar _tmp200 = Scalar(1.0) / (_tmp199);
  const Scalar _tmp201 = _tmp124 * _tmp78;
  const Scalar _tmp202 = _tmp154 * _tmp201;
  const Scalar _tmp203 = _tmp168 * _tmp201;
  const Scalar _tmp204 = _tmp148 * _tmp164;
  const Scalar _tmp205 = _tmp150 * _tmp78;
  const Scalar _tmp206 = _tmp137 * _tmp172 * _tmp78 + _tmp142 * _tmp205 + _tmp160 * _tmp162 -
                         _tmp165 * _tmp204 + _tmp202 * _tmp36 + _tmp203 * _tmp34;
  const Scalar _tmp207 = std::asinh(_tmp200 * _tmp206);
  const Scalar _tmp208 = Scalar(1.0) * _tmp207;
  const Scalar _tmp209 = Scalar(1.4083112389913199) * _tmp207;
  const Scalar _tmp210 =
      -_tmp199 * _tmp209 - std::sqrt(Scalar(std::pow(Scalar(-_tmp48 + p_d(0, 0)), Scalar(2)) +
                                            std::pow(Scalar(-_tmp52 + p_d(1, 0)), Scalar(2))));
  const Scalar _tmp211 = Scalar(0.71007031138673404) * _tmp200;
  const Scalar _tmp212 = _tmp210 * _tmp211;
  const Scalar _tmp213 = -Scalar(1.4083112389913199) * std::sinh(_tmp208) -
                         Scalar(1.4083112389913199) * std::sinh(_tmp212);
  const Scalar _tmp214 = std::pow(_tmp199, Scalar(-2));
  const Scalar _tmp215 = _tmp206 * _tmp214;
  const Scalar _tmp216 = _tmp168 * _tmp78;
  const Scalar _tmp217 = _tmp154 * _tmp78;
  const Scalar _tmp218 = _tmp148 * _tmp182;
  const Scalar _tmp219 =
      -_tmp195 * _tmp215 + _tmp200 * (_tmp128 * _tmp216 + _tmp131 * _tmp205 - _tmp162 * _tmp181 -
                                      _tmp165 * _tmp218 - _tmp203 + _tmp217 * _tmp41);
  const Scalar _tmp220 =
      std::pow(Scalar(std::pow(_tmp206, Scalar(2)) * _tmp214 + 1), Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp221 = Scalar(1.0) * _tmp220 * std::cosh(_tmp208);
  const Scalar _tmp222 = std::cosh(_tmp212);
  const Scalar _tmp223 = Scalar(1.4083112389913199) * _tmp199;
  const Scalar _tmp224 = _tmp220 * _tmp223;
  const Scalar _tmp225 = Scalar(0.71007031138673404) * _tmp210 * _tmp214;
  const Scalar _tmp226 = _tmp124 * _tmp99;
  const Scalar _tmp227 = _tmp120 * _tmp226;
  const Scalar _tmp228 = _tmp110 * _tmp99;
  const Scalar _tmp229 = _tmp120 * _tmp99;
  const Scalar _tmp230 = _tmp128 * _tmp229 + _tmp194 - _tmp227 + _tmp228 * _tmp41;
  const Scalar _tmp231 = _tmp124 * _tmp147;
  const Scalar _tmp232 = _tmp109 * _tmp231;
  const Scalar _tmp233 = _tmp119 * _tmp231;
  const Scalar _tmp234 = _tmp137 * _tmp171 - _tmp142 * _tmp149 - _tmp160 * _tmp161 + _tmp204 -
                         _tmp232 * _tmp36 - _tmp233 * _tmp34;
  const Scalar _tmp235 = _tmp110 * _tmp226;
  const Scalar _tmp236 = _tmp196 + _tmp197 + _tmp227 * _tmp34 + _tmp235 * _tmp36;
  const Scalar _tmp237 = Scalar(1.0) / (_tmp236);
  const Scalar _tmp238 = std::asinh(_tmp234 * _tmp237);
  const Scalar _tmp239 = Scalar(1.4083112389913199) * _tmp236;
  const Scalar _tmp240 =
      -_tmp238 * _tmp239 - std::sqrt(Scalar(std::pow(Scalar(-_tmp85 + p_b(0, 0)), Scalar(2)) +
                                            std::pow(Scalar(-_tmp88 + p_b(1, 0)), Scalar(2))));
  const Scalar _tmp241 = Scalar(0.71007031138673404) * _tmp237;
  const Scalar _tmp242 = _tmp240 * _tmp241;
  const Scalar _tmp243 = Scalar(1.0) * _tmp238;
  const Scalar _tmp244 = -Scalar(1.4083112389913199) * std::sinh(_tmp242) -
                         Scalar(1.4083112389913199) * std::sinh(_tmp243);
  const Scalar _tmp245 = std::cosh(_tmp242);
  const Scalar _tmp246 = Scalar(1.4083112389913199) * _tmp238;
  const Scalar _tmp247 = std::pow(_tmp236, Scalar(-2));
  const Scalar _tmp248 =
      std::pow(Scalar(std::pow(_tmp234, Scalar(2)) * _tmp247 + 1), Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp249 = _tmp234 * _tmp247;
  const Scalar _tmp250 = _tmp119 * _tmp147;
  const Scalar _tmp251 = _tmp109 * _tmp147;
  const Scalar _tmp252 =
      _tmp248 *
      (-_tmp230 * _tmp249 + _tmp237 * (-_tmp128 * _tmp250 - _tmp131 * _tmp149 + _tmp161 * _tmp181 +
                                       _tmp218 + _tmp233 - _tmp251 * _tmp41));
  const Scalar _tmp253 = Scalar(0.71007031138673404) * _tmp240 * _tmp247;
  const Scalar _tmp254 = Scalar(1.0) * std::cosh(_tmp243);
  const Scalar _tmp255 = _tmp37 * _tmp39;
  const Scalar _tmp256 = _tmp255 * fh1;
  const Scalar _tmp257 = fh1 * (-_tmp141 + _tmp17 * _tmp255 - _tmp29 * _tmp40);
  const Scalar _tmp258 = -_tmp115 * _tmp256 - _tmp129 * _tmp41 - _tmp134 * _tmp257 + _tmp136;
  const Scalar _tmp259 = -_tmp158 * _tmp255 + _tmp159;
  const Scalar _tmp260 =
      _tmp187 * (_tmp144 * (_tmp151 * _tmp257 - _tmp157 + _tmp163 * _tmp259 + _tmp167 * _tmp181 +
                            _tmp183 * _tmp256 + _tmp184 * _tmp41) -
                 _tmp186 * _tmp258);
  const Scalar _tmp261 = _tmp132 * _tmp257;
  const Scalar _tmp262 = _tmp113 * _tmp256 + _tmp121 * _tmp41 - _tmp198 - _tmp261 * _tmp94;
  const Scalar _tmp263 = _tmp200 * (_tmp162 * _tmp259 - _tmp166 * _tmp181 - _tmp202 +
                                    _tmp205 * _tmp257 + _tmp216 * _tmp41 + _tmp217 * _tmp256) -
                         _tmp215 * _tmp262;
  const Scalar _tmp264 = _tmp228 * _tmp256 + _tmp229 * _tmp41 - _tmp235 + _tmp261;
  const Scalar _tmp265 =
      _tmp248 * (_tmp237 * (_tmp148 * _tmp181 - _tmp149 * _tmp257 - _tmp161 * _tmp259 + _tmp232 -
                            _tmp250 * _tmp41 - _tmp251 * _tmp256) -
                 _tmp249 * _tmp264);

  // Output terms (1)
  Eigen::Matrix<Scalar, 4, 3> _res;

  _res(0, 0) = _tmp19 * _tmp33;
  _res(1, 0) =
      _tmp135 * _tmp180 +
      _tmp192 *
          (-_tmp188 * _tmp189 -
           _tmp190 * (-_tmp135 * _tmp191 + _tmp177 * (-_tmp135 * _tmp175 - _tmp188 * _tmp192)));
  _res(2, 0) =
      _tmp195 * _tmp213 +
      _tmp223 *
          (-_tmp219 * _tmp221 -
           _tmp222 * (-_tmp195 * _tmp225 + _tmp211 * (-_tmp195 * _tmp209 - _tmp219 * _tmp224)));
  _res(3, 0) =
      _tmp230 * _tmp244 +
      _tmp239 *
          (-_tmp245 * (-_tmp230 * _tmp253 + _tmp241 * (-_tmp230 * _tmp246 - _tmp239 * _tmp252)) -
           _tmp252 * _tmp254);
  _res(0, 1) = _tmp31 * _tmp33;
  _res(1, 1) =
      _tmp180 * _tmp258 + _tmp192 * (-_tmp189 * _tmp260 -
                                     _tmp190 * (_tmp177 * (-_tmp175 * _tmp258 - _tmp192 * _tmp260) -
                                                _tmp191 * _tmp258));
  _res(2, 1) =
      _tmp213 * _tmp262 + _tmp223 * (-_tmp221 * _tmp263 -
                                     _tmp222 * (_tmp211 * (-_tmp209 * _tmp262 - _tmp224 * _tmp263) -
                                                _tmp225 * _tmp262));
  _res(3, 1) =
      _tmp239 *
          (-_tmp245 * (_tmp241 * (-_tmp239 * _tmp265 - _tmp246 * _tmp264) - _tmp253 * _tmp264) -
           _tmp254 * _tmp265) +
      _tmp244 * _tmp264;
  _res(0, 2) = 0;
  _res(1, 2) = 0;
  _res(2, 2) = 0;
  _res(3, 2) = 0;

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
