// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

#include <sym/rot3.h>

namespace sym {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: IK_residual_func_cost4_wrt_pd_Nl18
 *
 * Args:
 *     fh1: Scalar
 *     fv1: Scalar
 *     DeltaRot: Rot3
 *     position_vector: Matrix31
 *     encoder: Matrix41
 *     p_a: Matrix31
 *     p_b: Matrix31
 *     p_c: Matrix31
 *     p_d: Matrix31
 *     Rot_init: Rot3
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix43
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 4, 3> IkResidualFuncCost4WrtPdNl18(
    const Scalar fh1, const Scalar fv1, const sym::Rot3<Scalar>& DeltaRot,
    const Eigen::Matrix<Scalar, 3, 1>& position_vector, const Eigen::Matrix<Scalar, 4, 1>& encoder,
    const Eigen::Matrix<Scalar, 3, 1>& p_a, const Eigen::Matrix<Scalar, 3, 1>& p_b,
    const Eigen::Matrix<Scalar, 3, 1>& p_c, const Eigen::Matrix<Scalar, 3, 1>& p_d,
    const sym::Rot3<Scalar>& Rot_init, const Scalar epsilon) {
  // Total ops: 752

  // Unused inputs
  (void)encoder;
  (void)epsilon;

  // Input arrays
  const Eigen::Matrix<Scalar, 4, 1>& _DeltaRot = DeltaRot.Data();
  const Eigen::Matrix<Scalar, 4, 1>& _Rot_init = Rot_init.Data();

  // Intermediate terms (270)
  const Scalar _tmp0 = -_DeltaRot[0] * _Rot_init[1] + _DeltaRot[1] * _Rot_init[0] +
                       _DeltaRot[2] * _Rot_init[3] + _DeltaRot[3] * _Rot_init[2];
  const Scalar _tmp1 = -2 * std::pow(_tmp0, Scalar(2));
  const Scalar _tmp2 = _DeltaRot[0] * _Rot_init[2] + _DeltaRot[1] * _Rot_init[3] -
                       _DeltaRot[2] * _Rot_init[0] + _DeltaRot[3] * _Rot_init[1];
  const Scalar _tmp3 = 1 - 2 * std::pow(_tmp2, Scalar(2));
  const Scalar _tmp4 = Scalar(0.20999999999999999) * _tmp1 + Scalar(0.20999999999999999) * _tmp3;
  const Scalar _tmp5 = -_tmp4;
  const Scalar _tmp6 = _DeltaRot[0] * _Rot_init[3] - _DeltaRot[1] * _Rot_init[2] +
                       _DeltaRot[2] * _Rot_init[1] + _DeltaRot[3] * _Rot_init[0];
  const Scalar _tmp7 = 2 * _tmp6;
  const Scalar _tmp8 = _tmp0 * _tmp7;
  const Scalar _tmp9 = -2 * _DeltaRot[0] * _Rot_init[0] - 2 * _DeltaRot[1] * _Rot_init[1] -
                       2 * _DeltaRot[2] * _Rot_init[2] + 2 * _DeltaRot[3] * _Rot_init[3];
  const Scalar _tmp10 = _tmp2 * _tmp9;
  const Scalar _tmp11 = _tmp10 + _tmp8;
  const Scalar _tmp12 = -Scalar(0.010999999999999999) * _tmp11;
  const Scalar _tmp13 = _tmp2 * _tmp7;
  const Scalar _tmp14 = _tmp0 * _tmp9;
  const Scalar _tmp15 = Scalar(0.20999999999999999) * _tmp13 - Scalar(0.20999999999999999) * _tmp14;
  const Scalar _tmp16 = _tmp12 + _tmp15;
  const Scalar _tmp17 = _tmp16 + _tmp5;
  const Scalar _tmp18 = _tmp17 + position_vector(0, 0);
  const Scalar _tmp19 = -_tmp18 + p_d(0, 0);
  const Scalar _tmp20 = -2 * std::pow(_tmp6, Scalar(2));
  const Scalar _tmp21 = Scalar(0.20999999999999999) * _tmp1 + Scalar(0.20999999999999999) * _tmp20 +
                        Scalar(0.20999999999999999);
  const Scalar _tmp22 = 2 * _tmp0 * _tmp2;
  const Scalar _tmp23 = _tmp6 * _tmp9;
  const Scalar _tmp24 = _tmp22 - _tmp23;
  const Scalar _tmp25 = -Scalar(0.010999999999999999) * _tmp24;
  const Scalar _tmp26 = Scalar(0.20999999999999999) * _tmp13 + Scalar(0.20999999999999999) * _tmp14;
  const Scalar _tmp27 = _tmp25 - _tmp26;
  const Scalar _tmp28 = _tmp21 + _tmp27;
  const Scalar _tmp29 = _tmp28 + position_vector(1, 0);
  const Scalar _tmp30 = -_tmp29 + p_d(1, 0);
  const Scalar _tmp31 =
      std::sqrt(Scalar(std::pow(_tmp19, Scalar(2)) + std::pow(_tmp30, Scalar(2))));
  const Scalar _tmp32 = Scalar(1.0) / (fh1);
  const Scalar _tmp33 =
      Scalar(1.0) *
      std::cosh(Scalar(0.71007031138673404) * _tmp32 *
                (-_tmp31 - Scalar(1.4083112389913199) * fh1 * std::asinh(_tmp32 * fv1))) /
      _tmp31;
  const Scalar _tmp34 = -Scalar(0.20999999999999999) * _tmp10 + Scalar(0.20999999999999999) * _tmp8;
  const Scalar _tmp35 = -_tmp34;
  const Scalar _tmp36 =
      -Scalar(0.010999999999999999) * _tmp20 - Scalar(0.010999999999999999) * _tmp3;
  const Scalar _tmp37 = Scalar(0.20999999999999999) * _tmp22 + Scalar(0.20999999999999999) * _tmp23;
  const Scalar _tmp38 = _tmp36 + _tmp37;
  const Scalar _tmp39 = _tmp35 + _tmp38;
  const Scalar _tmp40 = _tmp18 - p_d(0, 0);
  const Scalar _tmp41 = std::pow(_tmp40, Scalar(2));
  const Scalar _tmp42 = _tmp29 - p_d(1, 0);
  const Scalar _tmp43 = std::pow(_tmp42, Scalar(2));
  const Scalar _tmp44 = _tmp41 + _tmp43;
  const Scalar _tmp45 = std::pow(_tmp44, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp46 = _tmp45 * fh1;
  const Scalar _tmp47 = _tmp39 * _tmp46;
  const Scalar _tmp48 = _tmp39 * fh1;
  const Scalar _tmp49 = std::pow(_tmp44, Scalar(Scalar(-3) / Scalar(2)));
  const Scalar _tmp50 = _tmp41 * _tmp49;
  const Scalar _tmp51 = -_tmp47 + _tmp48 * _tmp50;
  const Scalar _tmp52 = -_tmp21;
  const Scalar _tmp53 = _tmp27 + _tmp52;
  const Scalar _tmp54 = Scalar(1.0) * _tmp53;
  const Scalar _tmp55 = -_tmp54;
  const Scalar _tmp56 = _tmp25 + _tmp26;
  const Scalar _tmp57 = _tmp21 + _tmp56;
  const Scalar _tmp58 = _tmp55 + _tmp57;
  const Scalar _tmp59 = _tmp52 + _tmp56;
  const Scalar _tmp60 = Scalar(1.0) / (_tmp55 + _tmp59);
  const Scalar _tmp61 = _tmp12 - _tmp15;
  const Scalar _tmp62 = _tmp4 + _tmp61;
  const Scalar _tmp63 = _tmp5 + _tmp61;
  const Scalar _tmp64 = Scalar(1.0) * _tmp63;
  const Scalar _tmp65 = -_tmp62 + _tmp64;
  const Scalar _tmp66 = _tmp60 * _tmp65;
  const Scalar _tmp67 = _tmp58 * _tmp66;
  const Scalar _tmp68 = _tmp16 + _tmp4;
  const Scalar _tmp69 = Scalar(1.0) / (_tmp64 - _tmp67 - _tmp68);
  const Scalar _tmp70 = Scalar(1.0) * _tmp69;
  const Scalar _tmp71 = _tmp58 * _tmp60;
  const Scalar _tmp72 = _tmp70 * _tmp71;
  const Scalar _tmp73 = -Scalar(1.0) * _tmp70 + Scalar(1.0) * _tmp72;
  const Scalar _tmp74 = _tmp50 * fh1;
  const Scalar _tmp75 = _tmp63 + position_vector(0, 0);
  const Scalar _tmp76 = _tmp75 - p_a(0, 0);
  const Scalar _tmp77 = _tmp53 + position_vector(1, 0);
  const Scalar _tmp78 = _tmp77 - p_a(1, 0);
  const Scalar _tmp79 =
      std::sqrt(Scalar(std::pow(_tmp76, Scalar(2)) + std::pow(_tmp78, Scalar(2))));
  const Scalar _tmp80 = Scalar(1.0) / (_tmp79);
  const Scalar _tmp81 = Scalar(1.0) / (_tmp76);
  const Scalar _tmp82 = _tmp79 * _tmp81;
  const Scalar _tmp83 = _tmp82 * (-_tmp53 * _tmp76 * _tmp80 + _tmp63 * _tmp78 * _tmp80);
  const Scalar _tmp84 = _tmp62 + position_vector(0, 0);
  const Scalar _tmp85 = _tmp84 - p_b(0, 0);
  const Scalar _tmp86 = _tmp59 + position_vector(1, 0);
  const Scalar _tmp87 = _tmp86 - p_b(1, 0);
  const Scalar _tmp88 = std::pow(Scalar(std::pow(_tmp85, Scalar(2)) + std::pow(_tmp87, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp89 = _tmp87 * _tmp88;
  const Scalar _tmp90 = _tmp85 * _tmp88;
  const Scalar _tmp91 = _tmp59 * _tmp90 - _tmp62 * _tmp89 + _tmp83 * _tmp90;
  const Scalar _tmp92 = _tmp78 * _tmp81;
  const Scalar _tmp93 = Scalar(1.0) / (-_tmp89 + _tmp90 * _tmp92);
  const Scalar _tmp94 = _tmp92 * _tmp93;
  const Scalar _tmp95 = _tmp36 - _tmp37;
  const Scalar _tmp96 = _tmp35 + _tmp95;
  const Scalar _tmp97 = _tmp92 * _tmp96;
  const Scalar _tmp98 = _tmp34 + _tmp95;
  const Scalar _tmp99 = _tmp90 * _tmp96;
  const Scalar _tmp100 = _tmp93 * (_tmp89 * _tmp98 - _tmp92 * _tmp99);
  const Scalar _tmp101 = _tmp100 * _tmp92 + _tmp97;
  const Scalar _tmp102 = -_tmp90 * _tmp98 + _tmp99;
  const Scalar _tmp103 = -_tmp101 * _tmp66 + _tmp102 * _tmp94 - _tmp96;
  const Scalar _tmp104 = _tmp57 + position_vector(1, 0);
  const Scalar _tmp105 = _tmp104 - p_c(1, 0);
  const Scalar _tmp106 = _tmp68 + position_vector(0, 0);
  const Scalar _tmp107 = _tmp106 - p_c(0, 0);
  const Scalar _tmp108 =
      std::pow(Scalar(std::pow(_tmp105, Scalar(2)) + std::pow(_tmp107, Scalar(2))),
               Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp109 = _tmp105 * _tmp108;
  const Scalar _tmp110 = _tmp107 * _tmp108;
  const Scalar _tmp111 = -_tmp109 + _tmp110 * _tmp92;
  const Scalar _tmp112 = _tmp111 * _tmp93;
  const Scalar _tmp113 = _tmp34 + _tmp38;
  const Scalar _tmp114 = -_tmp100 * _tmp111 + _tmp109 * _tmp113 - _tmp110 * _tmp97;
  const Scalar _tmp115 =
      -_tmp102 * _tmp112 - _tmp110 * _tmp113 + _tmp110 * _tmp96 - _tmp114 * _tmp66;
  const Scalar _tmp116 = Scalar(1.0) / (_tmp115);
  const Scalar _tmp117 = -_tmp109 * _tmp68 + _tmp110 * _tmp57 + _tmp110 * _tmp83 - _tmp112 * _tmp91;
  const Scalar _tmp118 = _tmp116 * _tmp117;
  const Scalar _tmp119 = Scalar(1.0) / (_tmp117);
  const Scalar _tmp120 = _tmp115 * _tmp119;
  const Scalar _tmp121 = _tmp120 * (-_tmp103 * _tmp118 - _tmp83 + _tmp91 * _tmp94);
  const Scalar _tmp122 = _tmp103 + _tmp121;
  const Scalar _tmp123 = _tmp114 * _tmp116;
  const Scalar _tmp124 = _tmp58 * _tmp69;
  const Scalar _tmp125 = _tmp101 + _tmp121 * _tmp124 - _tmp122 * _tmp123;
  const Scalar _tmp126 = Scalar(1.0) * _tmp60;
  const Scalar _tmp127 = _tmp121 * _tmp70 - _tmp125 * _tmp126;
  const Scalar _tmp128 = Scalar(1.0) * _tmp127;
  const Scalar _tmp129 = Scalar(1.0) * _tmp93;
  const Scalar _tmp130 = _tmp100 * _tmp126 * _tmp65 - _tmp102 * _tmp129;
  const Scalar _tmp131 = _tmp120 * (-_tmp118 * _tmp130 - _tmp129 * _tmp91);
  const Scalar _tmp132 = _tmp116 * (_tmp130 + _tmp131);
  const Scalar _tmp133 = -Scalar(1.0) * _tmp100 - _tmp114 * _tmp132 + _tmp124 * _tmp131;
  const Scalar _tmp134 = -_tmp126 * _tmp133 + _tmp131 * _tmp70;
  const Scalar _tmp135 = Scalar(1.0) * _tmp134;
  const Scalar _tmp136 = _tmp40 * _tmp42;
  const Scalar _tmp137 = _tmp136 * _tmp49;
  const Scalar _tmp138 = _tmp137 * fh1;
  const Scalar _tmp139 = _tmp60 * (_tmp67 * _tmp70 + Scalar(1.0));
  const Scalar _tmp140 = _tmp66 * _tmp70;
  const Scalar _tmp141 = -Scalar(1.0) * _tmp139 + Scalar(1.0) * _tmp140;
  const Scalar _tmp142 = _tmp137 * _tmp48;
  const Scalar _tmp143 = _tmp28 * _tmp49;
  const Scalar _tmp144 = _tmp28 * _tmp45;
  const Scalar _tmp145 = _tmp137 * _tmp17 - _tmp143 * _tmp41 + _tmp144;
  const Scalar _tmp146 = _tmp145 * fh1;
  const Scalar _tmp147 = _tmp120 * _tmp70;
  const Scalar _tmp148 = Scalar(1.0) * _tmp119;
  const Scalar _tmp149 = -_tmp114 * _tmp148 + _tmp147 * _tmp58;
  const Scalar _tmp150 = -Scalar(1.0) * _tmp126 * _tmp149 + Scalar(1.0) * _tmp147;
  const Scalar _tmp151 = Scalar(1.0) * _tmp46;
  const Scalar _tmp152 = _tmp127 * _tmp151;
  const Scalar _tmp153 = _tmp93 * (-_tmp111 * _tmp132 + Scalar(1.0));
  const Scalar _tmp154 = _tmp110 * _tmp132 + _tmp153 * _tmp90;
  const Scalar _tmp155 = _tmp46 * _tmp82;
  const Scalar _tmp156 = _tmp154 * _tmp155;
  const Scalar _tmp157 = _tmp17 * _tmp45;
  const Scalar _tmp158 = -_tmp144 * _tmp40 + _tmp157 * _tmp42;
  const Scalar _tmp159 = _tmp158 * fh1;
  const Scalar _tmp160 = _tmp112 * _tmp90;
  const Scalar _tmp161 = _tmp82 * (_tmp110 * _tmp148 - _tmp148 * _tmp160);
  const Scalar _tmp162 = _tmp116 * _tmp122;
  const Scalar _tmp163 = _tmp93 * (-_tmp111 * _tmp162 - _tmp92);
  const Scalar _tmp164 = _tmp110 * _tmp162 + _tmp163 * _tmp90 + Scalar(1.0);
  const Scalar _tmp165 = _tmp155 * _tmp164;
  const Scalar _tmp166 = Scalar(333.54000000000002) - fv1;
  const Scalar _tmp167 = _tmp54 * _tmp66 + _tmp64;
  const Scalar _tmp168 = 0;
  const Scalar _tmp169 = _tmp116 * _tmp168;
  const Scalar _tmp170 = -_tmp156 * _tmp42 - _tmp159 * _tmp161 - _tmp165 * _tmp40 -
                         _tmp166 * _tmp82 * (_tmp110 * _tmp169 - _tmp160 * _tmp169);
  const Scalar _tmp171 = Scalar(1.0) / (_tmp170);
  const Scalar _tmp172 = _tmp164 * _tmp82;
  const Scalar _tmp173 = _tmp154 * _tmp82;
  const Scalar _tmp174 = -_tmp138 * _tmp173 - _tmp146 * _tmp161 + _tmp165 - _tmp172 * _tmp74;
  const Scalar _tmp175 = Scalar(40.024799999999999) * _tmp11 + _tmp17 * fv1 + _tmp40 * _tmp47;
  const Scalar _tmp176 = _tmp167 * _tmp69;
  const Scalar _tmp177 = -_tmp123 * _tmp168 - _tmp176 * _tmp58 + _tmp55;
  const Scalar _tmp178 = -Scalar(40.024799999999999) * _tmp24 - _tmp28 * fv1 - _tmp42 * _tmp47;
  const Scalar _tmp179 = _tmp134 * _tmp151;
  const Scalar _tmp180 =
      _tmp141 * _tmp178 + _tmp150 * _tmp159 + _tmp152 * _tmp40 +
      Scalar(1.0) * _tmp166 * (-_tmp126 * _tmp177 - _tmp167 * _tmp70 + Scalar(1.0)) +
      _tmp175 * _tmp73 + _tmp179 * _tmp42;
  const Scalar _tmp181 = std::pow(_tmp170, Scalar(-2));
  const Scalar _tmp182 = _tmp180 * _tmp181;
  const Scalar _tmp183 =
      std::pow(Scalar(std::pow(_tmp180, Scalar(2)) * _tmp181 + 1), Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp184 =
      _tmp183 * (_tmp171 * (_tmp128 * _tmp74 + _tmp135 * _tmp138 - _tmp141 * _tmp142 +
                            _tmp146 * _tmp150 - _tmp152 + _tmp51 * _tmp73) -
                 _tmp174 * _tmp182);
  const Scalar _tmp185 = std::asinh(_tmp171 * _tmp180);
  const Scalar _tmp186 = Scalar(1.0) * _tmp185;
  const Scalar _tmp187 = Scalar(1.0) * std::cosh(_tmp186);
  const Scalar _tmp188 = Scalar(1.4083112389913199) * _tmp174;
  const Scalar _tmp189 = Scalar(1.4083112389913199) * _tmp170;
  const Scalar _tmp190 = Scalar(0.71007031138673404) * _tmp171;
  const Scalar _tmp191 =
      -_tmp185 * _tmp189 - std::sqrt(Scalar(std::pow(Scalar(-_tmp75 + p_a(0, 0)), Scalar(2)) +
                                            std::pow(Scalar(-_tmp77 + p_a(1, 0)), Scalar(2))));
  const Scalar _tmp192 = Scalar(0.71007031138673404) * _tmp181 * _tmp191;
  const Scalar _tmp193 = _tmp190 * _tmp191;
  const Scalar _tmp194 = std::cosh(_tmp193);
  const Scalar _tmp195 = -std::sinh(_tmp186) - std::sinh(_tmp193);
  const Scalar _tmp196 = _tmp163 * _tmp46;
  const Scalar _tmp197 = _tmp153 * _tmp46;
  const Scalar _tmp198 = _tmp148 * fh1;
  const Scalar _tmp199 = _tmp158 * _tmp198;
  const Scalar _tmp200 = _tmp166 * _tmp169;
  const Scalar _tmp201 =
      -_tmp112 * _tmp199 - _tmp112 * _tmp200 + _tmp196 * _tmp40 + _tmp197 * _tmp42;
  const Scalar _tmp202 = Scalar(1.0) / (_tmp201);
  const Scalar _tmp203 = _tmp46 * _tmp60;
  const Scalar _tmp204 = _tmp125 * _tmp203;
  const Scalar _tmp205 = _tmp149 * _tmp60;
  const Scalar _tmp206 = _tmp133 * _tmp203;
  const Scalar _tmp207 = _tmp175 * _tmp70;
  const Scalar _tmp208 = _tmp139 * _tmp178 + _tmp159 * _tmp205 + _tmp166 * _tmp177 * _tmp60 +
                         _tmp204 * _tmp40 + _tmp206 * _tmp42 - _tmp207 * _tmp71;
  const Scalar _tmp209 = std::asinh(_tmp202 * _tmp208);
  const Scalar _tmp210 = Scalar(1.4083112389913199) * _tmp201;
  const Scalar _tmp211 =
      -_tmp209 * _tmp210 - std::sqrt(Scalar(std::pow(Scalar(-_tmp84 + p_b(0, 0)), Scalar(2)) +
                                            std::pow(Scalar(-_tmp86 + p_b(1, 0)), Scalar(2))));
  const Scalar _tmp212 = Scalar(0.71007031138673404) * _tmp202;
  const Scalar _tmp213 = _tmp211 * _tmp212;
  const Scalar _tmp214 = Scalar(1.0) * _tmp209;
  const Scalar _tmp215 = -std::sinh(_tmp213) - std::sinh(_tmp214);
  const Scalar _tmp216 = _tmp145 * _tmp198;
  const Scalar _tmp217 = -_tmp112 * _tmp216 + _tmp138 * _tmp153 + _tmp163 * _tmp74 - _tmp196;
  const Scalar _tmp218 = Scalar(1.4083112389913199) * _tmp217;
  const Scalar _tmp219 = std::pow(_tmp201, Scalar(-2));
  const Scalar _tmp220 =
      std::pow(Scalar(std::pow(_tmp208, Scalar(2)) * _tmp219 + 1), Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp221 = _tmp51 * _tmp70;
  const Scalar _tmp222 = _tmp125 * _tmp60;
  const Scalar _tmp223 = _tmp133 * _tmp60;
  const Scalar _tmp224 = _tmp208 * _tmp219;
  const Scalar _tmp225 =
      _tmp220 * (_tmp202 * (_tmp138 * _tmp223 - _tmp139 * _tmp142 + _tmp146 * _tmp205 - _tmp204 -
                            _tmp221 * _tmp71 + _tmp222 * _tmp74) -
                 _tmp217 * _tmp224);
  const Scalar _tmp226 = Scalar(0.71007031138673404) * _tmp211 * _tmp219;
  const Scalar _tmp227 = std::cosh(_tmp213);
  const Scalar _tmp228 = Scalar(1.0) * std::cosh(_tmp214);
  const Scalar _tmp229 = _tmp162 * _tmp46;
  const Scalar _tmp230 = _tmp132 * _tmp138 + _tmp162 * _tmp74 + _tmp216 - _tmp229;
  const Scalar _tmp231 = _tmp46 * _tmp69;
  const Scalar _tmp232 = _tmp121 * _tmp231;
  const Scalar _tmp233 = _tmp131 * _tmp231;
  const Scalar _tmp234 = -_tmp140 * _tmp178 - _tmp147 * _tmp159 + _tmp166 * _tmp176 + _tmp207 -
                         _tmp232 * _tmp40 - _tmp233 * _tmp42;
  const Scalar _tmp235 = _tmp132 * _tmp46;
  const Scalar _tmp236 = _tmp199 + _tmp200 + _tmp229 * _tmp40 + _tmp235 * _tmp42;
  const Scalar _tmp237 = Scalar(1.0) / (_tmp236);
  const Scalar _tmp238 = std::asinh(_tmp234 * _tmp237);
  const Scalar _tmp239 = Scalar(1.4083112389913199) * _tmp238;
  const Scalar _tmp240 = _tmp121 * _tmp69;
  const Scalar _tmp241 = _tmp131 * _tmp69;
  const Scalar _tmp242 = std::pow(_tmp236, Scalar(-2));
  const Scalar _tmp243 = _tmp234 * _tmp242;
  const Scalar _tmp244 =
      -_tmp230 * _tmp243 + _tmp237 * (-_tmp138 * _tmp241 + _tmp140 * _tmp142 - _tmp146 * _tmp147 +
                                      _tmp221 + _tmp232 - _tmp240 * _tmp74);
  const Scalar _tmp245 =
      std::pow(Scalar(std::pow(_tmp234, Scalar(2)) * _tmp242 + 1), Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp246 = Scalar(1.4083112389913199) * _tmp236;
  const Scalar _tmp247 = _tmp245 * _tmp246;
  const Scalar _tmp248 = Scalar(0.71007031138673404) * _tmp237;
  const Scalar _tmp249 =
      -_tmp236 * _tmp239 - std::sqrt(Scalar(std::pow(Scalar(-_tmp104 + p_c(1, 0)), Scalar(2)) +
                                            std::pow(Scalar(-_tmp106 + p_c(0, 0)), Scalar(2))));
  const Scalar _tmp250 = Scalar(0.71007031138673404) * _tmp242 * _tmp249;
  const Scalar _tmp251 = _tmp248 * _tmp249;
  const Scalar _tmp252 = std::cosh(_tmp251);
  const Scalar _tmp253 = Scalar(1.0) * _tmp238;
  const Scalar _tmp254 = Scalar(1.0) * _tmp245 * std::cosh(_tmp253);
  const Scalar _tmp255 = -Scalar(1.4083112389913199) * std::sinh(_tmp251) -
                         Scalar(1.4083112389913199) * std::sinh(_tmp253);
  const Scalar _tmp256 = _tmp43 * _tmp49;
  const Scalar _tmp257 = -_tmp136 * _tmp143 - _tmp157 + _tmp17 * _tmp256;
  const Scalar _tmp258 = _tmp257 * fh1;
  const Scalar _tmp259 = _tmp256 * fh1;
  const Scalar _tmp260 = -_tmp138 * _tmp172 + _tmp156 - _tmp161 * _tmp258 - _tmp173 * _tmp259;
  const Scalar _tmp261 = Scalar(1.4083112389913199) * _tmp260;
  const Scalar _tmp262 = -_tmp256 * _tmp48 + _tmp47;
  const Scalar _tmp263 =
      _tmp183 * (_tmp171 * (_tmp128 * _tmp138 + _tmp135 * _tmp259 + _tmp141 * _tmp262 +
                            _tmp142 * _tmp73 + _tmp150 * _tmp258 - _tmp179) -
                 _tmp182 * _tmp260);
  const Scalar _tmp264 = _tmp198 * _tmp257;
  const Scalar _tmp265 = -_tmp112 * _tmp264 + _tmp138 * _tmp163 + _tmp153 * _tmp259 - _tmp197;
  const Scalar _tmp266 = Scalar(1.4083112389913199) * _tmp265;
  const Scalar _tmp267 =
      _tmp220 * (_tmp202 * (_tmp138 * _tmp222 + _tmp139 * _tmp262 - _tmp142 * _tmp72 +
                            _tmp205 * _tmp258 - _tmp206 + _tmp223 * _tmp259) -
                 _tmp224 * _tmp265);
  const Scalar _tmp268 = _tmp132 * _tmp259 + _tmp138 * _tmp162 - _tmp235 + _tmp264;
  const Scalar _tmp269 = _tmp237 * (-_tmp138 * _tmp240 - _tmp140 * _tmp262 + _tmp142 * _tmp70 -
                                    _tmp147 * _tmp258 + _tmp233 - _tmp241 * _tmp259) -
                         _tmp243 * _tmp268;

  // Output terms (1)
  Eigen::Matrix<Scalar, 4, 3> _res;

  _res(0, 0) = _tmp19 * _tmp33;
  _res(1, 0) =
      _tmp188 * _tmp195 +
      _tmp189 *
          (-_tmp184 * _tmp187 -
           _tmp194 * (-_tmp174 * _tmp192 + _tmp190 * (-_tmp184 * _tmp189 - _tmp185 * _tmp188)));
  _res(2, 0) =
      _tmp210 *
          (-_tmp225 * _tmp228 -
           _tmp227 * (_tmp212 * (-_tmp209 * _tmp218 - _tmp210 * _tmp225) - _tmp217 * _tmp226)) +
      _tmp215 * _tmp218;
  _res(3, 0) =
      _tmp230 * _tmp255 +
      _tmp246 *
          (-_tmp244 * _tmp254 -
           _tmp252 * (-_tmp230 * _tmp250 + _tmp248 * (-_tmp230 * _tmp239 - _tmp244 * _tmp247)));
  _res(0, 1) = _tmp30 * _tmp33;
  _res(1, 1) =
      _tmp189 *
          (-_tmp187 * _tmp263 -
           _tmp194 * (_tmp190 * (-_tmp185 * _tmp261 - _tmp189 * _tmp263) - _tmp192 * _tmp260)) +
      _tmp195 * _tmp261;
  _res(2, 1) =
      _tmp210 *
          (-_tmp227 * (_tmp212 * (-_tmp209 * _tmp266 - _tmp210 * _tmp267) - _tmp226 * _tmp265) -
           _tmp228 * _tmp267) +
      _tmp215 * _tmp266;
  _res(3, 1) =
      _tmp246 *
          (-_tmp252 * (_tmp248 * (-_tmp239 * _tmp268 - _tmp247 * _tmp269) - _tmp250 * _tmp268) -
           _tmp254 * _tmp269) +
      _tmp255 * _tmp268;
  _res(0, 2) = 0;
  _res(1, 2) = 0;
  _res(2, 2) = 0;
  _res(3, 2) = 0;

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
