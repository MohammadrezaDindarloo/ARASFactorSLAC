// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

#include <sym/pose3.h>
#include <sym/rot3.h>

namespace sym {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: FK_residual_func_cost3
 *
 * Args:
 *     fh1: Scalar
 *     fv1: Scalar
 *     DeltaRot: Rot3
 *     TransformationMatrix: Pose3
 *     encoder: Matrix41
 *     offset: Matrix41
 *     p_a: Matrix31
 *     p_b: Matrix31
 *     p_c: Matrix31
 *     p_d: Matrix31
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix41
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 4, 1> FkResidualFuncCost3(
    const Scalar fh1, const Scalar fv1, const sym::Rot3<Scalar>& DeltaRot,
    const sym::Pose3<Scalar>& TransformationMatrix, const Eigen::Matrix<Scalar, 4, 1>& encoder,
    const Eigen::Matrix<Scalar, 4, 1>& offset, const Eigen::Matrix<Scalar, 3, 1>& p_a,
    const Eigen::Matrix<Scalar, 3, 1>& p_b, const Eigen::Matrix<Scalar, 3, 1>& p_c,
    const Eigen::Matrix<Scalar, 3, 1>& p_d, const Scalar epsilon) {
  // Total ops: 475

  // Unused inputs
  (void)epsilon;

  // Input arrays
  const Eigen::Matrix<Scalar, 4, 1>& _DeltaRot = DeltaRot.Data();
  const Eigen::Matrix<Scalar, 7, 1>& _TransformationMatrix = TransformationMatrix.Data();

  // Intermediate terms (152)
  const Scalar _tmp0 = Scalar(1.0) / (fh1);
  const Scalar _tmp1 = std::asinh(_tmp0 * fv1);
  const Scalar _tmp2 =
      _DeltaRot[0] * _TransformationMatrix[3] - _DeltaRot[1] * _TransformationMatrix[2] +
      _DeltaRot[2] * _TransformationMatrix[1] + _DeltaRot[3] * _TransformationMatrix[0];
  const Scalar _tmp3 =
      _DeltaRot[0] * _TransformationMatrix[2] + _DeltaRot[1] * _TransformationMatrix[3] -
      _DeltaRot[2] * _TransformationMatrix[0] + _DeltaRot[3] * _TransformationMatrix[1];
  const Scalar _tmp4 = 2 * _tmp3;
  const Scalar _tmp5 = _tmp2 * _tmp4;
  const Scalar _tmp6 =
      -_DeltaRot[0] * _TransformationMatrix[1] + _DeltaRot[1] * _TransformationMatrix[0] +
      _DeltaRot[2] * _TransformationMatrix[3] + _DeltaRot[3] * _TransformationMatrix[2];
  const Scalar _tmp7 =
      -2 * _DeltaRot[0] * _TransformationMatrix[0] - 2 * _DeltaRot[1] * _TransformationMatrix[1] -
      2 * _DeltaRot[2] * _TransformationMatrix[2] + 2 * _DeltaRot[3] * _TransformationMatrix[3];
  const Scalar _tmp8 = _tmp6 * _tmp7;
  const Scalar _tmp9 = Scalar(0.20999999999999999) * _tmp5 + Scalar(0.20999999999999999) * _tmp8;
  const Scalar _tmp10 = -_tmp9;
  const Scalar _tmp11 = _tmp4 * _tmp6;
  const Scalar _tmp12 = _tmp2 * _tmp7;
  const Scalar _tmp13 = _tmp11 - _tmp12;
  const Scalar _tmp14 = -Scalar(0.010999999999999999) * _tmp13;
  const Scalar _tmp15 = -2 * std::pow(_tmp2, Scalar(2));
  const Scalar _tmp16 = 1 - 2 * std::pow(_tmp6, Scalar(2));
  const Scalar _tmp17 = Scalar(0.20999999999999999) * _tmp15 + Scalar(0.20999999999999999) * _tmp16;
  const Scalar _tmp18 = _tmp14 - _tmp17;
  const Scalar _tmp19 = _tmp10 + _tmp18;
  const Scalar _tmp20 = _TransformationMatrix[5] + _tmp19;
  const Scalar _tmp21 = -2 * std::pow(_tmp3, Scalar(2));
  const Scalar _tmp22 = Scalar(0.20999999999999999) * _tmp16 + Scalar(0.20999999999999999) * _tmp21;
  const Scalar _tmp23 = -_tmp22;
  const Scalar _tmp24 = 2 * _tmp2 * _tmp6;
  const Scalar _tmp25 = _tmp3 * _tmp7;
  const Scalar _tmp26 = _tmp24 + _tmp25;
  const Scalar _tmp27 = -Scalar(0.010999999999999999) * _tmp26;
  const Scalar _tmp28 = Scalar(0.20999999999999999) * _tmp5 - Scalar(0.20999999999999999) * _tmp8;
  const Scalar _tmp29 = _tmp27 - _tmp28;
  const Scalar _tmp30 = _tmp23 + _tmp29;
  const Scalar _tmp31 = _TransformationMatrix[4] + _tmp30;
  const Scalar _tmp32 = Scalar(1.4083112389913199) * fh1;
  const Scalar _tmp33 = Scalar(333.54000000000002) - fv1;
  const Scalar _tmp34 = Scalar(0.20999999999999999) * _tmp24 - Scalar(0.20999999999999999) * _tmp25;
  const Scalar _tmp35 = -_tmp34;
  const Scalar _tmp36 = -Scalar(0.010999999999999999) * _tmp15 -
                        Scalar(0.010999999999999999) * _tmp21 + Scalar(-0.010999999999999999);
  const Scalar _tmp37 = Scalar(0.20999999999999999) * _tmp11 + Scalar(0.20999999999999999) * _tmp12;
  const Scalar _tmp38 = _tmp36 + _tmp37;
  const Scalar _tmp39 = _tmp35 + _tmp38;
  const Scalar _tmp40 = _tmp14 + _tmp17;
  const Scalar _tmp41 = _tmp10 + _tmp40;
  const Scalar _tmp42 = _TransformationMatrix[5] + _tmp41;
  const Scalar _tmp43 = _tmp42 - p_d(1, 0);
  const Scalar _tmp44 = _tmp27 + _tmp28;
  const Scalar _tmp45 = _tmp23 + _tmp44;
  const Scalar _tmp46 = _TransformationMatrix[4] + _tmp45;
  const Scalar _tmp47 = _tmp46 - p_d(0, 0);
  const Scalar _tmp48 = std::pow(Scalar(std::pow(_tmp43, Scalar(2)) + std::pow(_tmp47, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp49 = _tmp47 * _tmp48;
  const Scalar _tmp50 = _tmp36 - _tmp37;
  const Scalar _tmp51 = _tmp34 + _tmp50;
  const Scalar _tmp52 = _tmp34 + _tmp38;
  const Scalar _tmp53 = _tmp22 + _tmp44;
  const Scalar _tmp54 = _TransformationMatrix[4] + _tmp53;
  const Scalar _tmp55 = _tmp54 - p_c(0, 0);
  const Scalar _tmp56 = _tmp40 + _tmp9;
  const Scalar _tmp57 = _TransformationMatrix[5] + _tmp56;
  const Scalar _tmp58 = _tmp57 - p_c(1, 0);
  const Scalar _tmp59 = std::pow(Scalar(std::pow(_tmp55, Scalar(2)) + std::pow(_tmp58, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp60 = _tmp55 * _tmp59;
  const Scalar _tmp61 = _tmp51 * _tmp60 - _tmp52 * _tmp60;
  const Scalar _tmp62 = _tmp43 * _tmp48;
  const Scalar _tmp63 = _tmp18 + _tmp9;
  const Scalar _tmp64 = _TransformationMatrix[5] + _tmp63;
  const Scalar _tmp65 = _tmp64 - p_b(1, 0);
  const Scalar _tmp66 = _tmp22 + _tmp29;
  const Scalar _tmp67 = _TransformationMatrix[4] + _tmp66;
  const Scalar _tmp68 = _tmp67 - p_b(0, 0);
  const Scalar _tmp69 = Scalar(1.0) / (_tmp68);
  const Scalar _tmp70 = _tmp65 * _tmp69;
  const Scalar _tmp71 = _tmp49 * _tmp70 - _tmp62;
  const Scalar _tmp72 = _tmp58 * _tmp59;
  const Scalar _tmp73 = Scalar(1.0) / (_tmp60 * _tmp70 - _tmp72);
  const Scalar _tmp74 = _tmp71 * _tmp73;
  const Scalar _tmp75 = _tmp51 * _tmp70;
  const Scalar _tmp76 = _tmp73 * (_tmp52 * _tmp72 - _tmp60 * _tmp75);
  const Scalar _tmp77 = _tmp39 * _tmp62 - _tmp49 * _tmp75 - _tmp71 * _tmp76;
  const Scalar _tmp78 = Scalar(1.0) * _tmp63;
  const Scalar _tmp79 = -_tmp78;
  const Scalar _tmp80 = Scalar(1.0) / (_tmp56 + _tmp79);
  const Scalar _tmp81 = Scalar(1.0) * _tmp66;
  const Scalar _tmp82 = _tmp80 * (-_tmp53 + _tmp81);
  const Scalar _tmp83 = -_tmp39 * _tmp49 + _tmp49 * _tmp51 - _tmp61 * _tmp74 - _tmp77 * _tmp82;
  const Scalar _tmp84 = Scalar(1.0) / (_tmp83);
  const Scalar _tmp85 = _tmp78 * _tmp82 + _tmp81;
  const Scalar _tmp86 = 0;
  const Scalar _tmp87 = _tmp60 * _tmp74;
  const Scalar _tmp88 =
      std::sqrt(Scalar(std::pow(_tmp65, Scalar(2)) + std::pow(_tmp68, Scalar(2))));
  const Scalar _tmp89 = _tmp69 * _tmp88;
  const Scalar _tmp90 = Scalar(1.0) * _tmp73;
  const Scalar _tmp91 = Scalar(1.0) * _tmp76;
  const Scalar _tmp92 = -_tmp61 * _tmp90 + _tmp82 * _tmp91;
  const Scalar _tmp93 = Scalar(1.0) / (_tmp88);
  const Scalar _tmp94 = _tmp89 * (-_tmp63 * _tmp68 * _tmp93 + _tmp65 * _tmp66 * _tmp93);
  const Scalar _tmp95 = -_tmp53 * _tmp72 + _tmp56 * _tmp60 + _tmp60 * _tmp94;
  const Scalar _tmp96 = _tmp41 * _tmp49 - _tmp45 * _tmp62 + _tmp49 * _tmp94 - _tmp74 * _tmp95;
  const Scalar _tmp97 = _tmp84 * _tmp96;
  const Scalar _tmp98 = Scalar(1.0) / (_tmp96);
  const Scalar _tmp99 = _tmp83 * _tmp98;
  const Scalar _tmp100 = _tmp99 * (-_tmp90 * _tmp95 - _tmp92 * _tmp97);
  const Scalar _tmp101 = _tmp84 * (_tmp100 + _tmp92);
  const Scalar _tmp102 = -_tmp101 * _tmp71 + Scalar(1.0);
  const Scalar _tmp103 = _tmp60 * _tmp73;
  const Scalar _tmp104 = _tmp31 - p_a(0, 0);
  const Scalar _tmp105 = _tmp20 - p_a(1, 0);
  const Scalar _tmp106 =
      std::pow(Scalar(std::pow(_tmp104, Scalar(2)) + std::pow(_tmp105, Scalar(2))),
               Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp107 = _tmp105 * _tmp106;
  const Scalar _tmp108 = _tmp107 * fh1;
  const Scalar _tmp109 = _tmp70 * _tmp73;
  const Scalar _tmp110 = _tmp70 * _tmp76 + _tmp75;
  const Scalar _tmp111 = _tmp109 * _tmp61 - _tmp110 * _tmp82 - _tmp51;
  const Scalar _tmp112 = _tmp99 * (_tmp109 * _tmp95 - _tmp111 * _tmp97 - _tmp94);
  const Scalar _tmp113 = _tmp84 * (_tmp111 + _tmp112);
  const Scalar _tmp114 = -_tmp113 * _tmp71 - _tmp70;
  const Scalar _tmp115 = _tmp104 * _tmp106;
  const Scalar _tmp116 = _tmp115 * fh1;
  const Scalar _tmp117 = Scalar(1.0) * _tmp98;
  const Scalar _tmp118 = fh1 * (_tmp107 * _tmp30 - _tmp115 * _tmp19);
  const Scalar _tmp119 = -_tmp108 * _tmp89 * (_tmp101 * _tmp49 + _tmp102 * _tmp103) -
                         _tmp116 * _tmp89 * (_tmp103 * _tmp114 + _tmp113 * _tmp49 + Scalar(1.0)) -
                         _tmp118 * _tmp89 * (_tmp117 * _tmp49 - _tmp117 * _tmp87) -
                         _tmp33 * _tmp89 * (_tmp49 * _tmp86 - _tmp86 * _tmp87);
  const Scalar _tmp120 = Scalar(1.0) / (_tmp119);
  const Scalar _tmp121 = fh1 * (_tmp35 + _tmp50);
  const Scalar _tmp122 = -_tmp107 * _tmp121 - Scalar(40.024799999999999) * _tmp13 - _tmp19 * fv1;
  const Scalar _tmp123 = _tmp41 + _tmp79;
  const Scalar _tmp124 = _tmp123 * _tmp82;
  const Scalar _tmp125 = Scalar(1.0) / (-_tmp124 - _tmp45 + _tmp81);
  const Scalar _tmp126 = Scalar(1.0) * _tmp125;
  const Scalar _tmp127 = _tmp126 * _tmp82;
  const Scalar _tmp128 = _tmp124 * _tmp126 + Scalar(1.0);
  const Scalar _tmp129 = Scalar(1.0) * _tmp80;
  const Scalar _tmp130 = _tmp126 * _tmp99;
  const Scalar _tmp131 = -_tmp117 * _tmp77 + _tmp123 * _tmp130;
  const Scalar _tmp132 = _tmp123 * _tmp125;
  const Scalar _tmp133 = _tmp110 + _tmp112 * _tmp132 - _tmp113 * _tmp77;
  const Scalar _tmp134 = _tmp100 * _tmp132 - _tmp101 * _tmp77 - _tmp91;
  const Scalar _tmp135 = _tmp123 * _tmp80;
  const Scalar _tmp136 = _tmp115 * _tmp121 + Scalar(40.024799999999999) * _tmp26 + _tmp30 * fv1;
  const Scalar _tmp137 = _tmp125 * _tmp85;
  const Scalar _tmp138 = -_tmp123 * _tmp137 - _tmp77 * _tmp86 + _tmp79;
  const Scalar _tmp139 = std::asinh(
      _tmp120 * (Scalar(1.0) * _tmp108 * (_tmp100 * _tmp126 - _tmp129 * _tmp134) +
                 Scalar(1.0) * _tmp116 * (_tmp112 * _tmp126 - _tmp129 * _tmp133) +
                 Scalar(1.0) * _tmp118 * (-_tmp129 * _tmp131 + _tmp130) +
                 Scalar(1.0) * _tmp122 * (_tmp127 - _tmp128 * _tmp129) +
                 Scalar(1.0) * _tmp136 * (_tmp126 * _tmp135 - _tmp126) +
                 Scalar(1.0) * _tmp33 * (-_tmp126 * _tmp85 - _tmp129 * _tmp138 + Scalar(1.0))));
  const Scalar _tmp140 = Scalar(1.4083112389913199) * _tmp119;
  const Scalar _tmp141 = _tmp126 * _tmp136;
  const Scalar _tmp142 = _tmp117 * _tmp118;
  const Scalar _tmp143 = _tmp33 * _tmp86;
  const Scalar _tmp144 =
      _tmp102 * _tmp108 * _tmp73 + _tmp114 * _tmp116 * _tmp73 - _tmp142 * _tmp74 - _tmp143 * _tmp74;
  const Scalar _tmp145 = Scalar(1.0) / (_tmp144);
  const Scalar _tmp146 =
      std::asinh(_tmp145 * (_tmp108 * _tmp134 * _tmp80 + _tmp116 * _tmp133 * _tmp80 +
                            _tmp118 * _tmp131 * _tmp80 + _tmp122 * _tmp128 * _tmp80 -
                            _tmp135 * _tmp141 + _tmp138 * _tmp33 * _tmp80));
  const Scalar _tmp147 = Scalar(1.4083112389913199) * _tmp144;
  const Scalar _tmp148 = _tmp101 * _tmp108 + _tmp113 * _tmp116 + _tmp142 + _tmp143;
  const Scalar _tmp149 = Scalar(1.0) / (_tmp148);
  const Scalar _tmp150 =
      std::asinh(_tmp149 * (-_tmp100 * _tmp108 * _tmp125 - _tmp112 * _tmp116 * _tmp125 -
                            _tmp118 * _tmp130 - _tmp122 * _tmp127 + _tmp137 * _tmp33 + _tmp141));
  const Scalar _tmp151 = Scalar(1.4083112389913199) * _tmp148;

  // Output terms (1)
  Eigen::Matrix<Scalar, 4, 1> _res;

  _res(0, 0) =
      _tmp32 * (-std::sinh(Scalar(1.0) * _tmp1) -
                std::sinh(Scalar(0.71007031138673404) * _tmp0 *
                          (-_tmp1 * _tmp32 -
                           std::sqrt(Scalar(std::pow(Scalar(-_tmp20 + p_a(1, 0)), Scalar(2)) +
                                            std::pow(Scalar(-_tmp31 + p_a(0, 0)), Scalar(2))))))) -
      encoder(0, 0) + offset(0, 0);
  _res(1, 0) =
      _tmp140 * (-std::sinh(Scalar(1.0) * _tmp139) -
                 std::sinh(Scalar(0.71007031138673404) * _tmp120 *
                           (-_tmp139 * _tmp140 -
                            std::sqrt(Scalar(std::pow(Scalar(-_tmp64 + p_b(1, 0)), Scalar(2)) +
                                             std::pow(Scalar(-_tmp67 + p_b(0, 0)), Scalar(2))))))) -
      encoder(1, 0) + offset(1, 0);
  _res(2, 0) =
      _tmp147 * (-std::sinh(Scalar(1.0) * _tmp146) -
                 std::sinh(Scalar(0.71007031138673404) * _tmp145 *
                           (-_tmp146 * _tmp147 -
                            std::sqrt(Scalar(std::pow(Scalar(-_tmp54 + p_c(0, 0)), Scalar(2)) +
                                             std::pow(Scalar(-_tmp57 + p_c(1, 0)), Scalar(2))))))) -
      encoder(2, 0) + offset(2, 0);
  _res(3, 0) =
      _tmp151 * (-std::sinh(Scalar(1.0) * _tmp150) -
                 std::sinh(Scalar(0.71007031138673404) * _tmp149 *
                           (-_tmp150 * _tmp151 -
                            std::sqrt(Scalar(std::pow(Scalar(-_tmp42 + p_d(1, 0)), Scalar(2)) +
                                             std::pow(Scalar(-_tmp46 + p_d(0, 0)), Scalar(2))))))) -
      encoder(3, 0) + offset(3, 0);

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
