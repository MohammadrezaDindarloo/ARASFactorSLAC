// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

#include <sym/pose3.h>
#include <sym/rot3.h>

namespace sym {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: FK_residual_func_cost5_wrt_transformation
 *
 * Args:
 *     fh1: Scalar
 *     fv1: Scalar
 *     DeltaRot: Rot3
 *     TransformationMatrix: Pose3
 *     encoder: Matrix41
 *     offset: Matrix41
 *     p_a: Matrix31
 *     p_b: Matrix31
 *     p_c: Matrix31
 *     p_d: Matrix31
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix46
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 4, 6> FkResidualFuncCost5WrtTransformation(
    const Scalar fh1, const Scalar fv1, const sym::Rot3<Scalar>& DeltaRot,
    const sym::Pose3<Scalar>& TransformationMatrix, const Eigen::Matrix<Scalar, 4, 1>& encoder,
    const Eigen::Matrix<Scalar, 4, 1>& offset, const Eigen::Matrix<Scalar, 3, 1>& p_a,
    const Eigen::Matrix<Scalar, 3, 1>& p_b, const Eigen::Matrix<Scalar, 3, 1>& p_c,
    const Eigen::Matrix<Scalar, 3, 1>& p_d, const Scalar epsilon) {
  // Total ops: 570

  // Unused inputs
  (void)fh1;
  (void)fv1;
  (void)encoder;
  (void)offset;
  (void)epsilon;

  // Input arrays
  const Eigen::Matrix<Scalar, 4, 1>& _DeltaRot = DeltaRot.Data();
  const Eigen::Matrix<Scalar, 7, 1>& _TransformationMatrix = TransformationMatrix.Data();

  // Intermediate terms (243)
  const Scalar _tmp0 = _DeltaRot[0] * _TransformationMatrix[0];
  const Scalar _tmp1 = (Scalar(1) / Scalar(2)) * _tmp0;
  const Scalar _tmp2 = _DeltaRot[2] * _TransformationMatrix[2];
  const Scalar _tmp3 = (Scalar(1) / Scalar(2)) * _tmp2;
  const Scalar _tmp4 = _DeltaRot[3] * _TransformationMatrix[3];
  const Scalar _tmp5 = (Scalar(1) / Scalar(2)) * _tmp4;
  const Scalar _tmp6 = _DeltaRot[1] * _TransformationMatrix[1];
  const Scalar _tmp7 = (Scalar(1) / Scalar(2)) * _tmp6;
  const Scalar _tmp8 = _tmp5 + _tmp7;
  const Scalar _tmp9 = -_tmp1 + _tmp3 + _tmp8;
  const Scalar _tmp10 = _DeltaRot[0] * _TransformationMatrix[3];
  const Scalar _tmp11 = _DeltaRot[2] * _TransformationMatrix[1];
  const Scalar _tmp12 = _DeltaRot[3] * _TransformationMatrix[0];
  const Scalar _tmp13 = _DeltaRot[1] * _TransformationMatrix[2];
  const Scalar _tmp14 = _tmp10 + _tmp11 + _tmp12 - _tmp13;
  const Scalar _tmp15 = Scalar(0.83999999999999997) * _tmp14;
  const Scalar _tmp16 = _tmp15 * _tmp9;
  const Scalar _tmp17 = -_tmp16;
  const Scalar _tmp18 = _DeltaRot[1] * _TransformationMatrix[3];
  const Scalar _tmp19 = (Scalar(1) / Scalar(2)) * _tmp18;
  const Scalar _tmp20 = _DeltaRot[3] * _TransformationMatrix[1];
  const Scalar _tmp21 = (Scalar(1) / Scalar(2)) * _tmp20;
  const Scalar _tmp22 = -_tmp21;
  const Scalar _tmp23 = _DeltaRot[2] * _TransformationMatrix[0];
  const Scalar _tmp24 = -Scalar(1) / Scalar(2) * _tmp23;
  const Scalar _tmp25 = _DeltaRot[0] * _TransformationMatrix[2];
  const Scalar _tmp26 = (Scalar(1) / Scalar(2)) * _tmp25;
  const Scalar _tmp27 = -_tmp26;
  const Scalar _tmp28 = _tmp19 + _tmp22 + _tmp24 + _tmp27;
  const Scalar _tmp29 = _DeltaRot[2] * _TransformationMatrix[3];
  const Scalar _tmp30 = _DeltaRot[0] * _TransformationMatrix[1];
  const Scalar _tmp31 = _DeltaRot[1] * _TransformationMatrix[0];
  const Scalar _tmp32 = _DeltaRot[3] * _TransformationMatrix[2];
  const Scalar _tmp33 = _tmp29 - _tmp30 + _tmp31 + _tmp32;
  const Scalar _tmp34 = Scalar(0.83999999999999997) * _tmp33;
  const Scalar _tmp35 = _tmp28 * _tmp34;
  const Scalar _tmp36 = -_tmp35;
  const Scalar _tmp37 = _tmp18 + _tmp20 - _tmp23 + _tmp25;
  const Scalar _tmp38 = Scalar(0.41999999999999998) * _tmp37;
  const Scalar _tmp39 = _tmp38 * _tmp9;
  const Scalar _tmp40 = (Scalar(1) / Scalar(2)) * _tmp29;
  const Scalar _tmp41 = -_tmp40;
  const Scalar _tmp42 = -Scalar(1) / Scalar(2) * _tmp30;
  const Scalar _tmp43 = (Scalar(1) / Scalar(2)) * _tmp31;
  const Scalar _tmp44 = -_tmp43;
  const Scalar _tmp45 = (Scalar(1) / Scalar(2)) * _tmp32;
  const Scalar _tmp46 = _tmp41 + _tmp42 + _tmp44 + _tmp45;
  const Scalar _tmp47 = Scalar(0.41999999999999998) * _tmp14;
  const Scalar _tmp48 = _tmp46 * _tmp47;
  const Scalar _tmp49 = _tmp39 + _tmp48;
  const Scalar _tmp50 = _tmp36 + _tmp49;
  const Scalar _tmp51 = (Scalar(1) / Scalar(2)) * _tmp10;
  const Scalar _tmp52 = -_tmp51;
  const Scalar _tmp53 = (Scalar(1) / Scalar(2)) * _tmp11;
  const Scalar _tmp54 = (Scalar(1) / Scalar(2)) * _tmp12;
  const Scalar _tmp55 = -_tmp54;
  const Scalar _tmp56 = -Scalar(1) / Scalar(2) * _tmp13;
  const Scalar _tmp57 = _tmp52 + _tmp53 + _tmp55 + _tmp56;
  const Scalar _tmp58 = Scalar(0.41999999999999998) * _tmp33;
  const Scalar _tmp59 = _tmp57 * _tmp58;
  const Scalar _tmp60 = -_tmp0 - _tmp2 + _tmp4 - _tmp6;
  const Scalar _tmp61 = Scalar(0.41999999999999998) * _tmp60;
  const Scalar _tmp62 = _tmp28 * _tmp61;
  const Scalar _tmp63 = _tmp59 + _tmp62;
  const Scalar _tmp64 = Scalar(0.021999999999999999) * _tmp14;
  const Scalar _tmp65 = Scalar(0.021999999999999999) * _tmp33;
  const Scalar _tmp66 = Scalar(0.021999999999999999) * _tmp28;
  const Scalar _tmp67 = Scalar(0.021999999999999999) * _tmp60;
  const Scalar _tmp68 = _tmp37 * _tmp66 + _tmp46 * _tmp65 - _tmp57 * _tmp64 - _tmp67 * _tmp9;
  const Scalar _tmp69 = _tmp63 + _tmp68;
  const Scalar _tmp70 = 2 * _tmp14 * _tmp37;
  const Scalar _tmp71 = 2 * _tmp60;
  const Scalar _tmp72 = _tmp33 * _tmp71;
  const Scalar _tmp73 = Scalar(0.20999999999999999) * _tmp70 + Scalar(0.20999999999999999) * _tmp72;
  const Scalar _tmp74 = -_tmp73;
  const Scalar _tmp75 = -2 * std::pow(_tmp14, Scalar(2));
  const Scalar _tmp76 = -2 * std::pow(_tmp33, Scalar(2));
  const Scalar _tmp77 = Scalar(0.20999999999999999) * _tmp75 +
                        Scalar(0.20999999999999999) * _tmp76 + Scalar(0.20999999999999999);
  const Scalar _tmp78 = 2 * _tmp33;
  const Scalar _tmp79 = _tmp37 * _tmp78;
  const Scalar _tmp80 = _tmp14 * _tmp71;
  const Scalar _tmp81 = _TransformationMatrix[5] - Scalar(0.010999999999999999) * _tmp79 +
                        Scalar(0.010999999999999999) * _tmp80;
  const Scalar _tmp82 = -_tmp77 + _tmp81;
  const Scalar _tmp83 = -_tmp74 - _tmp82 + p_a(1, 0);
  const Scalar _tmp84 = 2 * _tmp83;
  const Scalar _tmp85 = -_tmp59 - _tmp62;
  const Scalar _tmp86 = Scalar(0.83999999999999997) * _tmp37;
  const Scalar _tmp87 = _tmp46 * _tmp86;
  const Scalar _tmp88 = Scalar(0.021999999999999999) * _tmp37;
  const Scalar _tmp89 = _tmp14 * _tmp66 + _tmp46 * _tmp67 + _tmp57 * _tmp88 + _tmp65 * _tmp9;
  const Scalar _tmp90 = -_tmp87 + _tmp89;
  const Scalar _tmp91 = 1 - 2 * std::pow(_tmp37, Scalar(2));
  const Scalar _tmp92 = Scalar(0.20999999999999999) * _tmp76 + Scalar(0.20999999999999999) * _tmp91;
  const Scalar _tmp93 = -_tmp92;
  const Scalar _tmp94 = Scalar(0.20999999999999999) * _tmp70 - Scalar(0.20999999999999999) * _tmp72;
  const Scalar _tmp95 = _tmp14 * _tmp78;
  const Scalar _tmp96 = _tmp37 * _tmp71;
  const Scalar _tmp97 = _TransformationMatrix[4] - Scalar(0.010999999999999999) * _tmp95 -
                        Scalar(0.010999999999999999) * _tmp96;
  const Scalar _tmp98 = -_tmp94 + _tmp97;
  const Scalar _tmp99 = -_tmp93 - _tmp98 + p_a(0, 0);
  const Scalar _tmp100 = 2 * _tmp99;
  const Scalar _tmp101 = _tmp58 * _tmp9;
  const Scalar _tmp102 = _tmp38 * _tmp57;
  const Scalar _tmp103 = Scalar(0.41999999999999998) * _tmp28;
  const Scalar _tmp104 = _tmp103 * _tmp14;
  const Scalar _tmp105 = _tmp46 * _tmp61;
  const Scalar _tmp106 = Scalar(0.043999999999999997) * _tmp14;
  const Scalar _tmp107 = Scalar(0.043999999999999997) * _tmp37;
  const Scalar _tmp108 = -_tmp106 * _tmp9 - _tmp107 * _tmp46;
  const Scalar _tmp109 = _tmp101 - _tmp102 + _tmp104 - _tmp105 + _tmp108;
  const Scalar _tmp110 = _tmp47 * _tmp57;
  const Scalar _tmp111 = _tmp46 * _tmp58;
  const Scalar _tmp112 = _tmp103 * _tmp37;
  const Scalar _tmp113 = _tmp61 * _tmp9;
  const Scalar _tmp114 = _tmp110 + _tmp111 + _tmp112 + _tmp113;
  const Scalar _tmp115 =
      Scalar(0.20999999999999999) * _tmp95 - Scalar(0.20999999999999999) * _tmp96;
  const Scalar _tmp116 = -_tmp115;
  const Scalar _tmp117 =
      Scalar(0.20999999999999999) * _tmp79 + Scalar(0.20999999999999999) * _tmp80;
  const Scalar _tmp118 = _TransformationMatrix[6] - Scalar(0.010999999999999999) * _tmp75 -
                         Scalar(0.010999999999999999) * _tmp91;
  const Scalar _tmp119 = -_tmp117 + _tmp118;
  const Scalar _tmp120 = -_tmp116 - _tmp119 + p_a(2, 0);
  const Scalar _tmp121 = 2 * _tmp120;
  const Scalar _tmp122 = std::pow(Scalar(std::pow(_tmp120, Scalar(2)) +
                                         std::pow(_tmp83, Scalar(2)) + std::pow(_tmp99, Scalar(2))),
                                  Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp123 = (Scalar(1) / Scalar(2)) * _tmp122;
  const Scalar _tmp124 = _tmp35 + _tmp49;
  const Scalar _tmp125 = _tmp87 + _tmp89;
  const Scalar _tmp126 = -_tmp92 - _tmp98 + p_b(0, 0);
  const Scalar _tmp127 = 2 * _tmp126;
  const Scalar _tmp128 = -_tmp39 - _tmp48;
  const Scalar _tmp129 = _tmp128 + _tmp36;
  const Scalar _tmp130 = _tmp68 + _tmp85;
  const Scalar _tmp131 = -_tmp73 - _tmp82 + p_b(1, 0);
  const Scalar _tmp132 = 2 * _tmp131;
  const Scalar _tmp133 = -_tmp101 + _tmp102 - _tmp104 + _tmp105 + _tmp108;
  const Scalar _tmp134 = -_tmp115 - _tmp119 + p_b(2, 0);
  const Scalar _tmp135 = 2 * _tmp134;
  const Scalar _tmp136 =
      std::pow(Scalar(std::pow(_tmp126, Scalar(2)) + std::pow(_tmp131, Scalar(2)) +
                      std::pow(_tmp134, Scalar(2))),
               Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp137 = (Scalar(1) / Scalar(2)) * _tmp136;
  const Scalar _tmp138 = _tmp128 + _tmp35;
  const Scalar _tmp139 = _tmp77 + _tmp81;
  const Scalar _tmp140 = -_tmp139 - _tmp73 + p_c(1, 0);
  const Scalar _tmp141 = 2 * _tmp140;
  const Scalar _tmp142 = _tmp94 + _tmp97;
  const Scalar _tmp143 = -_tmp142 - _tmp92 + p_c(0, 0);
  const Scalar _tmp144 = 2 * _tmp143;
  const Scalar _tmp145 = -_tmp110 - _tmp111 - _tmp112 - _tmp113;
  const Scalar _tmp146 = _tmp117 + _tmp118;
  const Scalar _tmp147 = -_tmp115 - _tmp146 + p_c(2, 0);
  const Scalar _tmp148 = 2 * _tmp147;
  const Scalar _tmp149 =
      std::pow(Scalar(std::pow(_tmp140, Scalar(2)) + std::pow(_tmp143, Scalar(2)) +
                      std::pow(_tmp147, Scalar(2))),
               Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp150 = (Scalar(1) / Scalar(2)) * _tmp149;
  const Scalar _tmp151 = -_tmp142 - _tmp93 + p_d(0, 0);
  const Scalar _tmp152 = 2 * _tmp151;
  const Scalar _tmp153 = -_tmp139 - _tmp74 + p_d(1, 0);
  const Scalar _tmp154 = 2 * _tmp153;
  const Scalar _tmp155 = -_tmp116 - _tmp146 + p_d(2, 0);
  const Scalar _tmp156 = 2 * _tmp155;
  const Scalar _tmp157 =
      std::pow(Scalar(std::pow(_tmp151, Scalar(2)) + std::pow(_tmp153, Scalar(2)) +
                      std::pow(_tmp155, Scalar(2))),
               Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp158 = (Scalar(1) / Scalar(2)) * _tmp157;
  const Scalar _tmp159 = _tmp42 - _tmp45;
  const Scalar _tmp160 = _tmp159 + _tmp40 + _tmp44;
  const Scalar _tmp161 = _tmp15 * _tmp160;
  const Scalar _tmp162 = -_tmp161;
  const Scalar _tmp163 = -_tmp53 + _tmp56;
  const Scalar _tmp164 = _tmp163 + _tmp52 + _tmp54;
  const Scalar _tmp165 = _tmp164 * _tmp34;
  const Scalar _tmp166 = -_tmp165;
  const Scalar _tmp167 = _tmp1 + _tmp3 + _tmp5 - _tmp7;
  const Scalar _tmp168 = _tmp167 * _tmp47;
  const Scalar _tmp169 = _tmp160 * _tmp38;
  const Scalar _tmp170 = _tmp168 + _tmp169;
  const Scalar _tmp171 = _tmp166 + _tmp170;
  const Scalar _tmp172 = -_tmp19 + _tmp24;
  const Scalar _tmp173 = _tmp172 + _tmp22 + _tmp26;
  const Scalar _tmp174 = _tmp173 * _tmp58;
  const Scalar _tmp175 = _tmp164 * _tmp61;
  const Scalar _tmp176 = _tmp174 + _tmp175;
  const Scalar _tmp177 = Scalar(0.021999999999999999) * _tmp173;
  const Scalar _tmp178 = -_tmp14 * _tmp177 - _tmp160 * _tmp67 + _tmp164 * _tmp88 + _tmp167 * _tmp65;
  const Scalar _tmp179 = _tmp176 + _tmp178;
  const Scalar _tmp180 = -_tmp174 - _tmp175;
  const Scalar _tmp181 = _tmp167 * _tmp86;
  const Scalar _tmp182 = _tmp160 * _tmp65 + _tmp164 * _tmp64 + _tmp167 * _tmp67 + _tmp177 * _tmp37;
  const Scalar _tmp183 = -_tmp181 + _tmp182;
  const Scalar _tmp184 = _tmp167 * _tmp58;
  const Scalar _tmp185 = _tmp164 * _tmp38;
  const Scalar _tmp186 = _tmp173 * _tmp47;
  const Scalar _tmp187 = _tmp160 * _tmp61;
  const Scalar _tmp188 = -_tmp106 * _tmp160 - _tmp107 * _tmp167;
  const Scalar _tmp189 = _tmp184 + _tmp185 + _tmp186 + _tmp187 + _tmp188;
  const Scalar _tmp190 = _tmp164 * _tmp47;
  const Scalar _tmp191 = _tmp160 * _tmp58;
  const Scalar _tmp192 = _tmp173 * _tmp38;
  const Scalar _tmp193 = _tmp167 * _tmp61;
  const Scalar _tmp194 = _tmp190 + _tmp191 - _tmp192 - _tmp193;
  const Scalar _tmp195 = _tmp165 + _tmp170;
  const Scalar _tmp196 = _tmp181 + _tmp182;
  const Scalar _tmp197 = -_tmp168 - _tmp169;
  const Scalar _tmp198 = _tmp166 + _tmp197;
  const Scalar _tmp199 = _tmp178 + _tmp180;
  const Scalar _tmp200 = -_tmp190 - _tmp191 + _tmp192 + _tmp193;
  const Scalar _tmp201 = _tmp165 + _tmp197;
  const Scalar _tmp202 = -_tmp184 - _tmp185 - _tmp186 - _tmp187 + _tmp188;
  const Scalar _tmp203 = _tmp159 + _tmp41 + _tmp43;
  const Scalar _tmp204 = _tmp203 * _tmp58;
  const Scalar _tmp205 = _tmp1 - _tmp3 + _tmp8;
  const Scalar _tmp206 = _tmp205 * _tmp61;
  const Scalar _tmp207 = _tmp204 + _tmp206;
  const Scalar _tmp208 = _tmp205 * _tmp34;
  const Scalar _tmp209 = -_tmp208;
  const Scalar _tmp210 = _tmp163 + _tmp51 + _tmp55;
  const Scalar _tmp211 = _tmp210 * _tmp47;
  const Scalar _tmp212 = _tmp172 + _tmp21 + _tmp27;
  const Scalar _tmp213 = _tmp212 * _tmp38;
  const Scalar _tmp214 = _tmp211 + _tmp213;
  const Scalar _tmp215 = _tmp209 + _tmp214;
  const Scalar _tmp216 = _tmp15 * _tmp212;
  const Scalar _tmp217 = Scalar(0.021999999999999999) * _tmp205;
  const Scalar _tmp218 = -_tmp203 * _tmp64 + _tmp210 * _tmp65 - _tmp212 * _tmp67 + _tmp217 * _tmp37;
  const Scalar _tmp219 = -_tmp216 + _tmp218;
  const Scalar _tmp220 = _tmp205 * _tmp38;
  const Scalar _tmp221 = _tmp210 * _tmp58;
  const Scalar _tmp222 = _tmp203 * _tmp47;
  const Scalar _tmp223 = _tmp212 * _tmp61;
  const Scalar _tmp224 = _tmp220 + _tmp221 + _tmp222 + _tmp223;
  const Scalar _tmp225 = _tmp205 * _tmp47;
  const Scalar _tmp226 = _tmp203 * _tmp38;
  const Scalar _tmp227 = _tmp212 * _tmp58;
  const Scalar _tmp228 = _tmp210 * _tmp61;
  const Scalar _tmp229 = -_tmp106 * _tmp212 - _tmp107 * _tmp210;
  const Scalar _tmp230 = _tmp225 - _tmp226 + _tmp227 - _tmp228 + _tmp229;
  const Scalar _tmp231 = -_tmp204 - _tmp206;
  const Scalar _tmp232 = _tmp210 * _tmp86;
  const Scalar _tmp233 = _tmp14 * _tmp217 + _tmp203 * _tmp88 + _tmp210 * _tmp67 + _tmp212 * _tmp65;
  const Scalar _tmp234 = -_tmp232 + _tmp233;
  const Scalar _tmp235 = _tmp232 + _tmp233;
  const Scalar _tmp236 = _tmp208 + _tmp231;
  const Scalar _tmp237 = -_tmp225 + _tmp226 - _tmp227 + _tmp228 + _tmp229;
  const Scalar _tmp238 = -_tmp211 - _tmp213;
  const Scalar _tmp239 = _tmp209 + _tmp238;
  const Scalar _tmp240 = _tmp216 + _tmp218;
  const Scalar _tmp241 = -_tmp220 - _tmp221 - _tmp222 - _tmp223;
  const Scalar _tmp242 = _tmp207 + _tmp208;

  // Output terms (1)
  Eigen::Matrix<Scalar, 4, 6> _res;

  _res(0, 0) = _tmp123 * (_tmp100 * (_tmp50 + _tmp85 + _tmp90) + _tmp121 * (_tmp109 + _tmp114) +
                          _tmp84 * (_tmp17 + _tmp50 + _tmp69));
  _res(1, 0) = _tmp137 * (_tmp127 * (_tmp124 + _tmp125 + _tmp85) +
                          _tmp132 * (_tmp129 + _tmp130 + _tmp17) + _tmp135 * (_tmp114 + _tmp133));
  _res(2, 0) = _tmp150 * (_tmp141 * (_tmp130 + _tmp138 + _tmp16) +
                          _tmp144 * (_tmp125 + _tmp138 + _tmp63) + _tmp148 * (_tmp133 + _tmp145));
  _res(3, 0) = _tmp158 * (_tmp152 * (_tmp129 + _tmp63 + _tmp90) +
                          _tmp154 * (_tmp124 + _tmp16 + _tmp69) + _tmp156 * (_tmp109 + _tmp145));
  _res(0, 1) = _tmp123 * (_tmp100 * (_tmp171 + _tmp180 + _tmp183) + _tmp121 * (_tmp189 + _tmp194) +
                          _tmp84 * (_tmp162 + _tmp171 + _tmp179));
  _res(1, 1) = _tmp137 * (_tmp127 * (_tmp180 + _tmp195 + _tmp196) +
                          _tmp132 * (_tmp162 + _tmp198 + _tmp199) + _tmp135 * (_tmp189 + _tmp200));
  _res(2, 1) = _tmp150 * (_tmp141 * (_tmp161 + _tmp199 + _tmp201) +
                          _tmp144 * (_tmp176 + _tmp196 + _tmp201) + _tmp148 * (_tmp200 + _tmp202));
  _res(3, 1) = _tmp158 * (_tmp152 * (_tmp176 + _tmp183 + _tmp198) +
                          _tmp154 * (_tmp161 + _tmp179 + _tmp195) + _tmp156 * (_tmp194 + _tmp202));
  _res(0, 2) = _tmp123 * (_tmp100 * (_tmp215 + _tmp231 + _tmp234) + _tmp121 * (_tmp224 + _tmp230) +
                          _tmp84 * (_tmp207 + _tmp215 + _tmp219));
  _res(1, 2) = _tmp137 * (_tmp127 * (_tmp214 + _tmp235 + _tmp236) +
                          _tmp132 * (_tmp219 + _tmp231 + _tmp239) + _tmp135 * (_tmp224 + _tmp237));
  _res(2, 2) = _tmp150 * (_tmp141 * (_tmp236 + _tmp238 + _tmp240) +
                          _tmp144 * (_tmp235 + _tmp238 + _tmp242) + _tmp148 * (_tmp237 + _tmp241));
  _res(3, 2) = _tmp158 * (_tmp152 * (_tmp207 + _tmp234 + _tmp239) +
                          _tmp154 * (_tmp214 + _tmp240 + _tmp242) + _tmp156 * (_tmp230 + _tmp241));
  _res(0, 3) = -_tmp122 * _tmp99;
  _res(1, 3) = -_tmp126 * _tmp136;
  _res(2, 3) = -_tmp143 * _tmp149;
  _res(3, 3) = -_tmp151 * _tmp157;
  _res(0, 4) = -_tmp122 * _tmp83;
  _res(1, 4) = -_tmp131 * _tmp136;
  _res(2, 4) = -_tmp140 * _tmp149;
  _res(3, 4) = -_tmp153 * _tmp157;
  _res(0, 5) = -_tmp120 * _tmp122;
  _res(1, 5) = -_tmp134 * _tmp136;
  _res(2, 5) = -_tmp147 * _tmp149;
  _res(3, 5) = -_tmp155 * _tmp157;

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
