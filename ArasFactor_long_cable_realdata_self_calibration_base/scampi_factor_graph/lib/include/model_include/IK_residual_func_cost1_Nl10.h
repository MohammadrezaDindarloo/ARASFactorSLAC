// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

#include <sym/rot3.h>

namespace sym {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: IK_residual_func_cost1_Nl10
 *
 * Args:
 *     fh1: Scalar
 *     fv1: Scalar
 *     DeltaRot: Rot3
 *     position_vector: Matrix31
 *     p_a: Matrix31
 *     p_b: Matrix31
 *     p_c: Matrix31
 *     p_d: Matrix31
 *     Rot_init: Rot3
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix41
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 4, 1> IkResidualFuncCost1Nl10(
    const Scalar fh1, const Scalar fv1, const sym::Rot3<Scalar>& DeltaRot,
    const Eigen::Matrix<Scalar, 3, 1>& position_vector, const Eigen::Matrix<Scalar, 3, 1>& p_a,
    const Eigen::Matrix<Scalar, 3, 1>& p_b, const Eigen::Matrix<Scalar, 3, 1>& p_c,
    const Eigen::Matrix<Scalar, 3, 1>& p_d, const sym::Rot3<Scalar>& Rot_init,
    const Scalar epsilon) {
  // Total ops: 484

  // Unused inputs
  (void)epsilon;

  // Input arrays
  const Eigen::Matrix<Scalar, 4, 1>& _DeltaRot = DeltaRot.Data();
  const Eigen::Matrix<Scalar, 4, 1>& _Rot_init = Rot_init.Data();

  // Intermediate terms (161)
  const Scalar _tmp0 = Scalar(1.0) / (fh1);
  const Scalar _tmp1 = std::asinh(_tmp0 * fv1);
  const Scalar _tmp2 = Scalar(0.71007031138673404) * _tmp0;
  const Scalar _tmp3 = _DeltaRot[0] * _Rot_init[2] + _DeltaRot[1] * _Rot_init[3] -
                       _DeltaRot[2] * _Rot_init[0] + _DeltaRot[3] * _Rot_init[1];
  const Scalar _tmp4 = _DeltaRot[0] * _Rot_init[3] - _DeltaRot[1] * _Rot_init[2] +
                       _DeltaRot[2] * _Rot_init[1] + _DeltaRot[3] * _Rot_init[0];
  const Scalar _tmp5 = 2 * _tmp3 * _tmp4;
  const Scalar _tmp6 = -_DeltaRot[0] * _Rot_init[1] + _DeltaRot[1] * _Rot_init[0] +
                       _DeltaRot[2] * _Rot_init[3] + _DeltaRot[3] * _Rot_init[2];
  const Scalar _tmp7 = -2 * _DeltaRot[0] * _Rot_init[0] - 2 * _DeltaRot[1] * _Rot_init[1] -
                       2 * _DeltaRot[2] * _Rot_init[2] + 2 * _DeltaRot[3] * _Rot_init[3];
  const Scalar _tmp8 = _tmp6 * _tmp7;
  const Scalar _tmp9 = Scalar(0.20999999999999999) * _tmp5 + Scalar(0.20999999999999999) * _tmp8;
  const Scalar _tmp10 = -2 * std::pow(_tmp4, Scalar(2));
  const Scalar _tmp11 = -2 * std::pow(_tmp6, Scalar(2));
  const Scalar _tmp12 = Scalar(0.20999999999999999) * _tmp10 +
                        Scalar(0.20999999999999999) * _tmp11 + Scalar(0.20999999999999999);
  const Scalar _tmp13 = 2 * _tmp6;
  const Scalar _tmp14 = _tmp13 * _tmp3;
  const Scalar _tmp15 = _tmp4 * _tmp7;
  const Scalar _tmp16 = _tmp14 - _tmp15;
  const Scalar _tmp17 = -Scalar(0.010999999999999999) * _tmp16;
  const Scalar _tmp18 = -_tmp12 + _tmp17;
  const Scalar _tmp19 = _tmp18 + _tmp9;
  const Scalar _tmp20 = _tmp19 + position_vector(1, 0);
  const Scalar _tmp21 = Scalar(0.20999999999999999) * _tmp5 - Scalar(0.20999999999999999) * _tmp8;
  const Scalar _tmp22 = -_tmp21;
  const Scalar _tmp23 = _tmp13 * _tmp4;
  const Scalar _tmp24 = _tmp3 * _tmp7;
  const Scalar _tmp25 = _tmp23 + _tmp24;
  const Scalar _tmp26 = -Scalar(0.010999999999999999) * _tmp25;
  const Scalar _tmp27 = 1 - 2 * std::pow(_tmp3, Scalar(2));
  const Scalar _tmp28 = Scalar(0.20999999999999999) * _tmp11 + Scalar(0.20999999999999999) * _tmp27;
  const Scalar _tmp29 = _tmp26 + _tmp28;
  const Scalar _tmp30 = _tmp22 + _tmp29;
  const Scalar _tmp31 = _tmp30 + position_vector(0, 0);
  const Scalar _tmp32 = Scalar(1.4083112389913199) * fh1;
  const Scalar _tmp33 = Scalar(0.20999999999999999) * _tmp14 + Scalar(0.20999999999999999) * _tmp15;
  const Scalar _tmp34 = -_tmp33;
  const Scalar _tmp35 =
      -Scalar(0.010999999999999999) * _tmp10 - Scalar(0.010999999999999999) * _tmp27;
  const Scalar _tmp36 = Scalar(0.20999999999999999) * _tmp23 - Scalar(0.20999999999999999) * _tmp24;
  const Scalar _tmp37 = _tmp35 + _tmp36;
  const Scalar _tmp38 = _tmp34 + _tmp37;
  const Scalar _tmp39 = Scalar(333.54000000000002) - fv1;
  const Scalar _tmp40 = _tmp26 - _tmp28;
  const Scalar _tmp41 = _tmp22 + _tmp40;
  const Scalar _tmp42 = _tmp41 + position_vector(0, 0);
  const Scalar _tmp43 = _tmp42 - p_a(0, 0);
  const Scalar _tmp44 = -_tmp9;
  const Scalar _tmp45 = _tmp18 + _tmp44;
  const Scalar _tmp46 = _tmp45 + position_vector(1, 0);
  const Scalar _tmp47 = _tmp46 - p_a(1, 0);
  const Scalar _tmp48 = std::pow(Scalar(std::pow(_tmp43, Scalar(2)) + std::pow(_tmp47, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp49 = _tmp43 * _tmp48;
  const Scalar _tmp50 = _tmp21 + _tmp40;
  const Scalar _tmp51 = _tmp50 + position_vector(0, 0);
  const Scalar _tmp52 = _tmp51 - p_d(0, 0);
  const Scalar _tmp53 = Scalar(1.0) / (_tmp52);
  const Scalar _tmp54 = _tmp12 + _tmp17;
  const Scalar _tmp55 = _tmp44 + _tmp54;
  const Scalar _tmp56 = _tmp55 + position_vector(1, 0);
  const Scalar _tmp57 = _tmp56 - p_d(1, 0);
  const Scalar _tmp58 = _tmp53 * _tmp57;
  const Scalar _tmp59 = _tmp47 * _tmp48;
  const Scalar _tmp60 = Scalar(1.0) / (_tmp49 * _tmp58 - _tmp59);
  const Scalar _tmp61 = _tmp21 + _tmp29;
  const Scalar _tmp62 = _tmp61 + position_vector(0, 0);
  const Scalar _tmp63 = _tmp62 - p_c(0, 0);
  const Scalar _tmp64 = _tmp54 + _tmp9;
  const Scalar _tmp65 = _tmp64 + position_vector(1, 0);
  const Scalar _tmp66 = _tmp65 - p_c(1, 0);
  const Scalar _tmp67 = std::pow(Scalar(std::pow(_tmp63, Scalar(2)) + std::pow(_tmp66, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp68 = _tmp63 * _tmp67;
  const Scalar _tmp69 = _tmp66 * _tmp67;
  const Scalar _tmp70 = _tmp58 * _tmp68 - _tmp69;
  const Scalar _tmp71 = _tmp60 * _tmp70;
  const Scalar _tmp72 = _tmp33 + _tmp37;
  const Scalar _tmp73 = _tmp35 - _tmp36;
  const Scalar _tmp74 = _tmp34 + _tmp73;
  const Scalar _tmp75 = _tmp33 + _tmp73;
  const Scalar _tmp76 = _tmp49 * _tmp75;
  const Scalar _tmp77 = -_tmp49 * _tmp74 + _tmp76;
  const Scalar _tmp78 = _tmp68 * _tmp75;
  const Scalar _tmp79 = -_tmp58 * _tmp76 + _tmp59 * _tmp74;
  const Scalar _tmp80 = -_tmp58 * _tmp78 + _tmp69 * _tmp72 - _tmp71 * _tmp79;
  const Scalar _tmp81 = Scalar(1.0) * _tmp55;
  const Scalar _tmp82 = -_tmp81;
  const Scalar _tmp83 = Scalar(1.0) / (_tmp45 + _tmp82);
  const Scalar _tmp84 = Scalar(1.0) * _tmp50;
  const Scalar _tmp85 = _tmp83 * (-_tmp41 + _tmp84);
  const Scalar _tmp86 = -_tmp68 * _tmp72 - _tmp71 * _tmp77 + _tmp78 - _tmp80 * _tmp85;
  const Scalar _tmp87 = Scalar(1.0) / (_tmp86);
  const Scalar _tmp88 = _tmp81 * _tmp85 + _tmp84;
  const Scalar _tmp89 = 0;
  const Scalar _tmp90 = _tmp87 * _tmp89;
  const Scalar _tmp91 =
      std::sqrt(Scalar(std::pow(_tmp52, Scalar(2)) + std::pow(_tmp57, Scalar(2))));
  const Scalar _tmp92 = _tmp53 * _tmp91;
  const Scalar _tmp93 = Scalar(1.0) * _tmp60;
  const Scalar _tmp94 = _tmp79 * _tmp93;
  const Scalar _tmp95 = -_tmp77 * _tmp93 + _tmp85 * _tmp94;
  const Scalar _tmp96 = Scalar(1.0) / (_tmp91);
  const Scalar _tmp97 = _tmp92 * (_tmp50 * _tmp57 * _tmp96 - _tmp52 * _tmp55 * _tmp96);
  const Scalar _tmp98 = -_tmp41 * _tmp59 + _tmp45 * _tmp49 + _tmp49 * _tmp97;
  const Scalar _tmp99 = -_tmp61 * _tmp69 + _tmp64 * _tmp68 + _tmp68 * _tmp97 - _tmp71 * _tmp98;
  const Scalar _tmp100 = _tmp87 * _tmp99;
  const Scalar _tmp101 = Scalar(1.0) / (_tmp99);
  const Scalar _tmp102 = _tmp101 * _tmp86;
  const Scalar _tmp103 = _tmp102 * (-_tmp100 * _tmp95 - _tmp93 * _tmp98);
  const Scalar _tmp104 = _tmp103 + _tmp95;
  const Scalar _tmp105 = _tmp68 * _tmp87;
  const Scalar _tmp106 = _tmp70 * _tmp87;
  const Scalar _tmp107 = -_tmp104 * _tmp106 + Scalar(1.0);
  const Scalar _tmp108 = _tmp49 * _tmp60;
  const Scalar _tmp109 = _tmp31 - p_b(0, 0);
  const Scalar _tmp110 = _tmp20 - p_b(1, 0);
  const Scalar _tmp111 =
      std::pow(Scalar(std::pow(_tmp109, Scalar(2)) + std::pow(_tmp110, Scalar(2))),
               Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp112 = _tmp110 * _tmp111;
  const Scalar _tmp113 = _tmp112 * fh1;
  const Scalar _tmp114 = _tmp58 * _tmp60;
  const Scalar _tmp115 = _tmp114 * _tmp79 + _tmp58 * _tmp75;
  const Scalar _tmp116 = _tmp114 * _tmp77 - _tmp115 * _tmp85 - _tmp75;
  const Scalar _tmp117 = _tmp102 * (-_tmp100 * _tmp116 + _tmp114 * _tmp98 - _tmp97);
  const Scalar _tmp118 = _tmp116 + _tmp117;
  const Scalar _tmp119 = -_tmp106 * _tmp118 - _tmp58;
  const Scalar _tmp120 = _tmp109 * _tmp111;
  const Scalar _tmp121 = _tmp120 * fh1;
  const Scalar _tmp122 = _tmp101 * _tmp70 * _tmp93;
  const Scalar _tmp123 = Scalar(1.0) * _tmp101;
  const Scalar _tmp124 = fh1 * (_tmp112 * _tmp30 - _tmp120 * _tmp19);
  const Scalar _tmp125 = -_tmp113 * _tmp92 * (_tmp104 * _tmp105 + _tmp107 * _tmp108) -
                         _tmp121 * _tmp92 * (_tmp105 * _tmp118 + _tmp108 * _tmp119 + Scalar(1.0)) -
                         _tmp124 * _tmp92 * (-_tmp122 * _tmp49 + _tmp123 * _tmp68) -
                         _tmp39 * _tmp92 * (-_tmp49 * _tmp71 * _tmp90 + _tmp68 * _tmp90);
  const Scalar _tmp126 = Scalar(1.0) / (_tmp125);
  const Scalar _tmp127 = _tmp64 + _tmp82;
  const Scalar _tmp128 = _tmp127 * _tmp85;
  const Scalar _tmp129 = Scalar(1.0) / (-_tmp128 - _tmp61 + _tmp84);
  const Scalar _tmp130 = Scalar(1.0) * _tmp129;
  const Scalar _tmp131 = _tmp127 * _tmp83;
  const Scalar _tmp132 = _tmp38 * fh1;
  const Scalar _tmp133 = _tmp120 * _tmp132 + Scalar(40.024799999999999) * _tmp25 + _tmp30 * fv1;
  const Scalar _tmp134 = -_tmp112 * _tmp132 - Scalar(40.024799999999999) * _tmp16 - _tmp19 * fv1;
  const Scalar _tmp135 = _tmp130 * _tmp85;
  const Scalar _tmp136 = _tmp128 * _tmp130 + Scalar(1.0);
  const Scalar _tmp137 = Scalar(1.0) * _tmp83;
  const Scalar _tmp138 = _tmp102 * _tmp130;
  const Scalar _tmp139 = -_tmp123 * _tmp80 + _tmp127 * _tmp138;
  const Scalar _tmp140 = _tmp129 * _tmp88;
  const Scalar _tmp141 = _tmp80 * _tmp87;
  const Scalar _tmp142 = -_tmp127 * _tmp140 - _tmp141 * _tmp89 + _tmp82;
  const Scalar _tmp143 = _tmp127 * _tmp129;
  const Scalar _tmp144 = _tmp115 + _tmp117 * _tmp143 - _tmp118 * _tmp141;
  const Scalar _tmp145 = _tmp103 * _tmp143 - _tmp104 * _tmp141 - _tmp94;
  const Scalar _tmp146 = std::asinh(
      _tmp126 * (Scalar(1.0) * _tmp113 * (_tmp103 * _tmp130 - _tmp137 * _tmp145) +
                 Scalar(1.0) * _tmp121 * (_tmp117 * _tmp130 - _tmp137 * _tmp144) +
                 Scalar(1.0) * _tmp124 * (-_tmp137 * _tmp139 + _tmp138) +
                 Scalar(1.0) * _tmp133 * (_tmp130 * _tmp131 - _tmp130) +
                 Scalar(1.0) * _tmp134 * (_tmp135 - _tmp136 * _tmp137) +
                 Scalar(1.0) * _tmp39 * (-_tmp130 * _tmp88 - _tmp137 * _tmp142 + Scalar(1.0))));
  const Scalar _tmp147 = Scalar(0.71007031138673404) * _tmp126;
  const Scalar _tmp148 = Scalar(1.4083112389913199) * _tmp125;
  const Scalar _tmp149 = _tmp39 * _tmp90;
  const Scalar _tmp150 = _tmp107 * _tmp113 * _tmp60 + _tmp119 * _tmp121 * _tmp60 -
                         _tmp122 * _tmp124 - _tmp149 * _tmp71;
  const Scalar _tmp151 = Scalar(1.0) / (_tmp150);
  const Scalar _tmp152 = _tmp130 * _tmp133;
  const Scalar _tmp153 =
      std::asinh(_tmp151 * (_tmp113 * _tmp145 * _tmp83 + _tmp121 * _tmp144 * _tmp83 +
                            _tmp124 * _tmp139 * _tmp83 - _tmp131 * _tmp152 +
                            _tmp134 * _tmp136 * _tmp83 + _tmp142 * _tmp39 * _tmp83));
  const Scalar _tmp154 = Scalar(0.71007031138673404) * _tmp151;
  const Scalar _tmp155 = Scalar(1.4083112389913199) * _tmp150;
  const Scalar _tmp156 =
      _tmp104 * _tmp113 * _tmp87 + _tmp118 * _tmp121 * _tmp87 + _tmp123 * _tmp124 + _tmp149;
  const Scalar _tmp157 = Scalar(1.0) / (_tmp156);
  const Scalar _tmp158 =
      std::asinh(_tmp157 * (-_tmp103 * _tmp113 * _tmp129 - _tmp117 * _tmp121 * _tmp129 -
                            _tmp124 * _tmp138 - _tmp134 * _tmp135 + _tmp140 * _tmp39 + _tmp152));
  const Scalar _tmp159 = Scalar(0.71007031138673404) * _tmp157;
  const Scalar _tmp160 = Scalar(1.4083112389913199) * _tmp156;

  // Output terms (1)
  Eigen::Matrix<Scalar, 4, 1> _res;

  _res(0, 0) =
      -_tmp32 * (_tmp2 * p_b(2, 0) + std::cosh(Scalar(1.0) * _tmp1) -
                 std::cosh(_tmp2 *
                           (-_tmp1 * _tmp32 -
                            std::sqrt(Scalar(std::pow(Scalar(-_tmp20 + p_b(1, 0)), Scalar(2)) +
                                             std::pow(Scalar(-_tmp31 + p_b(0, 0)), Scalar(2))))))) +
      _tmp38 + position_vector(2, 0);
  _res(1, 0) =
      -_tmp148 *
          (_tmp147 * p_d(2, 0) + std::cosh(Scalar(1.0) * _tmp146) -
           std::cosh(_tmp147 *
                     (-_tmp146 * _tmp148 -
                      std::sqrt(Scalar(std::pow(Scalar(-_tmp51 + p_d(0, 0)), Scalar(2)) +
                                       std::pow(Scalar(-_tmp56 + p_d(1, 0)), Scalar(2))))))) +
      _tmp75 + position_vector(2, 0);
  _res(2, 0) =
      -_tmp155 *
          (_tmp154 * p_a(2, 0) + std::cosh(Scalar(1.0) * _tmp153) -
           std::cosh(_tmp154 *
                     (-_tmp153 * _tmp155 -
                      std::sqrt(Scalar(std::pow(Scalar(-_tmp42 + p_a(0, 0)), Scalar(2)) +
                                       std::pow(Scalar(-_tmp46 + p_a(1, 0)), Scalar(2))))))) +
      _tmp74 + position_vector(2, 0);
  _res(3, 0) =
      -_tmp160 *
          (_tmp159 * p_c(2, 0) + std::cosh(Scalar(1.0) * _tmp158) -
           std::cosh(_tmp159 *
                     (-_tmp158 * _tmp160 -
                      std::sqrt(Scalar(std::pow(Scalar(-_tmp62 + p_c(0, 0)), Scalar(2)) +
                                       std::pow(Scalar(-_tmp65 + p_c(1, 0)), Scalar(2))))))) +
      _tmp72 + position_vector(2, 0);

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
