// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

#include <sym/rot3.h>

namespace sym {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: IK_residual_func_cost1_wrt_fv1_Nl13
 *
 * Args:
 *     fh1: Scalar
 *     fv1: Scalar
 *     DeltaRot: Rot3
 *     position_vector: Matrix31
 *     p_a: Matrix31
 *     p_b: Matrix31
 *     p_c: Matrix31
 *     p_d: Matrix31
 *     Rot_init: Rot3
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix41
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 4, 1> IkResidualFuncCost1WrtFv1Nl13(
    const Scalar fh1, const Scalar fv1, const sym::Rot3<Scalar>& DeltaRot,
    const Eigen::Matrix<Scalar, 3, 1>& position_vector, const Eigen::Matrix<Scalar, 3, 1>& p_a,
    const Eigen::Matrix<Scalar, 3, 1>& p_b, const Eigen::Matrix<Scalar, 3, 1>& p_c,
    const Eigen::Matrix<Scalar, 3, 1>& p_d, const sym::Rot3<Scalar>& Rot_init,
    const Scalar epsilon) {
  // Total ops: 591

  // Unused inputs
  (void)epsilon;

  // Input arrays
  const Eigen::Matrix<Scalar, 4, 1>& _DeltaRot = DeltaRot.Data();
  const Eigen::Matrix<Scalar, 4, 1>& _Rot_init = Rot_init.Data();

  // Intermediate terms (197)
  const Scalar _tmp0 = Scalar(1.0) / (fh1);
  const Scalar _tmp1 = std::asinh(_tmp0 * fv1);
  const Scalar _tmp2 = Scalar(1.0) * _tmp0 /
                       std::sqrt(Scalar(1 + std::pow(fv1, Scalar(2)) / std::pow(fh1, Scalar(2))));
  const Scalar _tmp3 = _DeltaRot[0] * _Rot_init[2] + _DeltaRot[1] * _Rot_init[3] -
                       _DeltaRot[2] * _Rot_init[0] + _DeltaRot[3] * _Rot_init[1];
  const Scalar _tmp4 = _DeltaRot[0] * _Rot_init[3] - _DeltaRot[1] * _Rot_init[2] +
                       _DeltaRot[2] * _Rot_init[1] + _DeltaRot[3] * _Rot_init[0];
  const Scalar _tmp5 = 2 * _tmp3 * _tmp4;
  const Scalar _tmp6 = -_DeltaRot[0] * _Rot_init[1] + _DeltaRot[1] * _Rot_init[0] +
                       _DeltaRot[2] * _Rot_init[3] + _DeltaRot[3] * _Rot_init[2];
  const Scalar _tmp7 = -2 * _DeltaRot[0] * _Rot_init[0] - 2 * _DeltaRot[1] * _Rot_init[1] -
                       2 * _DeltaRot[2] * _Rot_init[2] + 2 * _DeltaRot[3] * _Rot_init[3];
  const Scalar _tmp8 = _tmp6 * _tmp7;
  const Scalar _tmp9 = Scalar(0.20999999999999999) * _tmp5 + Scalar(0.20999999999999999) * _tmp8;
  const Scalar _tmp10 = -2 * std::pow(_tmp4, Scalar(2));
  const Scalar _tmp11 = -2 * std::pow(_tmp6, Scalar(2));
  const Scalar _tmp12 = Scalar(0.20999999999999999) * _tmp10 +
                        Scalar(0.20999999999999999) * _tmp11 + Scalar(0.20999999999999999);
  const Scalar _tmp13 = 2 * _tmp6;
  const Scalar _tmp14 = _tmp13 * _tmp3;
  const Scalar _tmp15 = _tmp4 * _tmp7;
  const Scalar _tmp16 = _tmp14 - _tmp15;
  const Scalar _tmp17 = Scalar(0.010999999999999999) * _tmp16;
  const Scalar _tmp18 = -_tmp17;
  const Scalar _tmp19 = _tmp12 + _tmp18;
  const Scalar _tmp20 = _tmp19 + _tmp9;
  const Scalar _tmp21 = _tmp20 + position_vector(1, 0);
  const Scalar _tmp22 = Scalar(0.20999999999999999) * _tmp5 - Scalar(0.20999999999999999) * _tmp8;
  const Scalar _tmp23 = 1 - 2 * std::pow(_tmp3, Scalar(2));
  const Scalar _tmp24 = Scalar(0.20999999999999999) * _tmp11 + Scalar(0.20999999999999999) * _tmp23;
  const Scalar _tmp25 = _tmp13 * _tmp4;
  const Scalar _tmp26 = _tmp3 * _tmp7;
  const Scalar _tmp27 = _tmp25 + _tmp26;
  const Scalar _tmp28 = -Scalar(0.010999999999999999) * _tmp27;
  const Scalar _tmp29 = _tmp24 + _tmp28;
  const Scalar _tmp30 = _tmp22 + _tmp29;
  const Scalar _tmp31 = _tmp30 + position_vector(0, 0);
  const Scalar _tmp32 = Scalar(1.4083112389913199) * fh1;
  const Scalar _tmp33 = -_tmp24 + _tmp28;
  const Scalar _tmp34 = _tmp22 + _tmp33;
  const Scalar _tmp35 = _tmp34 + position_vector(0, 0);
  const Scalar _tmp36 = _tmp35 - p_d(0, 0);
  const Scalar _tmp37 = -_tmp9;
  const Scalar _tmp38 = _tmp19 + _tmp37;
  const Scalar _tmp39 = _tmp38 + position_vector(1, 0);
  const Scalar _tmp40 = _tmp39 - p_d(1, 0);
  const Scalar _tmp41 = std::pow(Scalar(std::pow(_tmp36, Scalar(2)) + std::pow(_tmp40, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp42 = _tmp40 * _tmp41;
  const Scalar _tmp43 = -_tmp22;
  const Scalar _tmp44 = _tmp33 + _tmp43;
  const Scalar _tmp45 = _tmp44 + position_vector(0, 0);
  const Scalar _tmp46 = _tmp45 - p_a(0, 0);
  const Scalar _tmp47 = Scalar(1.0) / (_tmp46);
  const Scalar _tmp48 = -_tmp12;
  const Scalar _tmp49 = _tmp18 + _tmp48;
  const Scalar _tmp50 = _tmp37 + _tmp49;
  const Scalar _tmp51 = _tmp50 + position_vector(1, 0);
  const Scalar _tmp52 = _tmp51 - p_a(1, 0);
  const Scalar _tmp53 = _tmp47 * _tmp52;
  const Scalar _tmp54 = _tmp36 * _tmp41;
  const Scalar _tmp55 = Scalar(1.0) / (-_tmp42 + _tmp53 * _tmp54);
  const Scalar _tmp56 = Scalar(0.20999999999999999) * _tmp14 + Scalar(0.20999999999999999) * _tmp15;
  const Scalar _tmp57 =
      -Scalar(0.010999999999999999) * _tmp10 - Scalar(0.010999999999999999) * _tmp23;
  const Scalar _tmp58 = Scalar(0.20999999999999999) * _tmp25 - Scalar(0.20999999999999999) * _tmp26;
  const Scalar _tmp59 = _tmp57 - _tmp58;
  const Scalar _tmp60 = _tmp56 + _tmp59;
  const Scalar _tmp61 = -_tmp56;
  const Scalar _tmp62 = _tmp59 + _tmp61;
  const Scalar _tmp63 = _tmp54 * _tmp62;
  const Scalar _tmp64 = _tmp42 * _tmp60 - _tmp53 * _tmp63;
  const Scalar _tmp65 = Scalar(1.0) * _tmp44;
  const Scalar _tmp66 = -_tmp34 + _tmp65;
  const Scalar _tmp67 = Scalar(1.0) * _tmp50;
  const Scalar _tmp68 = -_tmp67;
  const Scalar _tmp69 = Scalar(1.0) / (_tmp38 + _tmp68);
  const Scalar _tmp70 = Scalar(1.0) * _tmp69;
  const Scalar _tmp71 = -_tmp54 * _tmp60 + _tmp63;
  const Scalar _tmp72 = Scalar(1.0) * _tmp55;
  const Scalar _tmp73 = _tmp55 * _tmp64 * _tmp66 * _tmp70 - _tmp71 * _tmp72;
  const Scalar _tmp74 = _tmp57 + _tmp58;
  const Scalar _tmp75 = _tmp61 + _tmp74;
  const Scalar _tmp76 = _tmp29 + _tmp43;
  const Scalar _tmp77 = _tmp76 + position_vector(0, 0);
  const Scalar _tmp78 = _tmp77 - p_b(0, 0);
  const Scalar _tmp79 = _tmp49 + _tmp9;
  const Scalar _tmp80 = _tmp79 + position_vector(1, 0);
  const Scalar _tmp81 = _tmp80 - p_b(1, 0);
  const Scalar _tmp82 = std::pow(Scalar(std::pow(_tmp78, Scalar(2)) + std::pow(_tmp81, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp83 = _tmp81 * _tmp82;
  const Scalar _tmp84 = _tmp78 * _tmp82;
  const Scalar _tmp85 = _tmp53 * _tmp84 - _tmp83;
  const Scalar _tmp86 = _tmp55 * _tmp85;
  const Scalar _tmp87 = _tmp62 * _tmp84;
  const Scalar _tmp88 = -_tmp53 * _tmp87 - _tmp64 * _tmp86 + _tmp75 * _tmp83;
  const Scalar _tmp89 = _tmp66 * _tmp69;
  const Scalar _tmp90 = -_tmp71 * _tmp86 - _tmp75 * _tmp84 + _tmp87 - _tmp88 * _tmp89;
  const Scalar _tmp91 = Scalar(1.0) / (_tmp90);
  const Scalar _tmp92 =
      std::sqrt(Scalar(std::pow(_tmp46, Scalar(2)) + std::pow(_tmp52, Scalar(2))));
  const Scalar _tmp93 = Scalar(1.0) / (_tmp92);
  const Scalar _tmp94 = _tmp47 * _tmp92;
  const Scalar _tmp95 = _tmp94 * (_tmp44 * _tmp52 * _tmp93 - _tmp46 * _tmp50 * _tmp93);
  const Scalar _tmp96 = -_tmp34 * _tmp42 + _tmp38 * _tmp54 + _tmp54 * _tmp95;
  const Scalar _tmp97 = -_tmp76 * _tmp83 + _tmp79 * _tmp84 + _tmp84 * _tmp95 - _tmp86 * _tmp96;
  const Scalar _tmp98 = _tmp91 * _tmp97;
  const Scalar _tmp99 = Scalar(1.0) / (_tmp97);
  const Scalar _tmp100 = _tmp90 * _tmp99;
  const Scalar _tmp101 = _tmp100 * (-_tmp72 * _tmp96 - _tmp73 * _tmp98);
  const Scalar _tmp102 = _tmp101 + _tmp73;
  const Scalar _tmp103 = _tmp84 * _tmp91;
  const Scalar _tmp104 = _tmp85 * _tmp91;
  const Scalar _tmp105 = -_tmp102 * _tmp104 + Scalar(1.0);
  const Scalar _tmp106 = _tmp54 * _tmp55;
  const Scalar _tmp107 = _tmp21 - p_c(1, 0);
  const Scalar _tmp108 = _tmp31 - p_c(0, 0);
  const Scalar _tmp109 =
      std::pow(Scalar(std::pow(_tmp107, Scalar(2)) + std::pow(_tmp108, Scalar(2))),
               Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp110 = _tmp107 * _tmp109;
  const Scalar _tmp111 = _tmp110 * fh1;
  const Scalar _tmp112 = _tmp53 * _tmp55;
  const Scalar _tmp113 = _tmp112 * _tmp64 + _tmp53 * _tmp62;
  const Scalar _tmp114 = _tmp112 * _tmp71 - _tmp113 * _tmp89 - _tmp62;
  const Scalar _tmp115 = _tmp100 * (_tmp112 * _tmp96 - _tmp114 * _tmp98 - _tmp95);
  const Scalar _tmp116 = _tmp114 + _tmp115;
  const Scalar _tmp117 = -_tmp104 * _tmp116 - _tmp53;
  const Scalar _tmp118 = _tmp108 * _tmp109;
  const Scalar _tmp119 = _tmp118 * fh1;
  const Scalar _tmp120 = Scalar(333.54000000000002) - fv1;
  const Scalar _tmp121 = _tmp65 + _tmp67 * _tmp89;
  const Scalar _tmp122 = 0;
  const Scalar _tmp123 = _tmp104 * _tmp122;
  const Scalar _tmp124 = _tmp122 * _tmp91;
  const Scalar _tmp125 = _tmp94 * (-_tmp106 * _tmp123 + _tmp124 * _tmp84);
  const Scalar _tmp126 = _tmp72 * _tmp85 * _tmp99;
  const Scalar _tmp127 = Scalar(1.0) * _tmp99;
  const Scalar _tmp128 = fh1 * (_tmp110 * _tmp30 - _tmp118 * _tmp20);
  const Scalar _tmp129 = -_tmp111 * _tmp94 * (_tmp102 * _tmp103 + _tmp105 * _tmp106) -
                         _tmp119 * _tmp94 * (_tmp103 * _tmp116 + _tmp106 * _tmp117 + Scalar(1.0)) -
                         _tmp120 * _tmp125 -
                         _tmp128 * _tmp94 * (-_tmp126 * _tmp54 + _tmp127 * _tmp84);
  const Scalar _tmp130 = std::pow(_tmp129, Scalar(-2));
  const Scalar _tmp131 = _tmp125 * _tmp130;
  const Scalar _tmp132 = Scalar(0.71007031138673404) * _tmp131;
  const Scalar _tmp133 = Scalar(1.0) / (_tmp129);
  const Scalar _tmp134 = _tmp68 + _tmp79;
  const Scalar _tmp135 = _tmp134 * _tmp89;
  const Scalar _tmp136 = Scalar(1.0) / (-_tmp135 + _tmp65 - _tmp76);
  const Scalar _tmp137 = Scalar(1.0) * _tmp136;
  const Scalar _tmp138 = _tmp100 * _tmp137;
  const Scalar _tmp139 = -_tmp127 * _tmp88 + _tmp134 * _tmp138;
  const Scalar _tmp140 = _tmp134 * _tmp136;
  const Scalar _tmp141 = _tmp88 * _tmp91;
  const Scalar _tmp142 = _tmp101 * _tmp140 - _tmp102 * _tmp141 - _tmp64 * _tmp72;
  const Scalar _tmp143 = fh1 * (_tmp56 + _tmp74);
  const Scalar _tmp144 = -_tmp110 * _tmp143 - Scalar(40.024799999999999) * _tmp16 - _tmp20 * fv1;
  const Scalar _tmp145 = _tmp137 * _tmp89;
  const Scalar _tmp146 = _tmp135 * _tmp137 + Scalar(1.0);
  const Scalar _tmp147 = Scalar(1.0) * _tmp145 - Scalar(1.0) * _tmp146 * _tmp70;
  const Scalar _tmp148 = _tmp118 * _tmp143 + Scalar(40.024799999999999) * _tmp27 + _tmp30 * fv1;
  const Scalar _tmp149 = _tmp134 * _tmp69;
  const Scalar _tmp150 = Scalar(1.0) * _tmp137 * _tmp149 - Scalar(1.0) * _tmp137;
  const Scalar _tmp151 = _tmp113 + _tmp115 * _tmp140 - _tmp116 * _tmp141;
  const Scalar _tmp152 = _tmp121 * _tmp136;
  const Scalar _tmp153 = _tmp69 * (-_tmp122 * _tmp141 - _tmp134 * _tmp152 + _tmp68);
  const Scalar _tmp154 = -Scalar(1.0) * _tmp152 - Scalar(1.0) * _tmp153 + Scalar(1.0);
  const Scalar _tmp155 = Scalar(1.0) * _tmp111 * (_tmp101 * _tmp137 - _tmp142 * _tmp70) +
                         Scalar(1.0) * _tmp119 * (_tmp115 * _tmp137 - _tmp151 * _tmp70) +
                         _tmp120 * _tmp154 + Scalar(1.0) * _tmp128 * (_tmp138 - _tmp139 * _tmp70) +
                         _tmp144 * _tmp147 + _tmp148 * _tmp150;
  const Scalar _tmp156 = std::asinh(_tmp133 * _tmp155);
  const Scalar _tmp157 = Scalar(1.4083112389913199) * _tmp129;
  const Scalar _tmp158 =
      -_tmp156 * _tmp157 - std::sqrt(Scalar(std::pow(Scalar(-_tmp45 + p_a(0, 0)), Scalar(2)) +
                                            std::pow(Scalar(-_tmp51 + p_a(1, 0)), Scalar(2))));
  const Scalar _tmp159 = Scalar(0.71007031138673404) * _tmp133;
  const Scalar _tmp160 = _tmp158 * _tmp159;
  const Scalar _tmp161 = _tmp17 + _tmp37 + _tmp48;
  const Scalar _tmp162 =
      (-_tmp131 * _tmp155 + _tmp133 * (_tmp147 * _tmp161 + _tmp150 * _tmp30 - _tmp154)) /
      std::sqrt(Scalar(_tmp130 * std::pow(_tmp155, Scalar(2)) + 1));
  const Scalar _tmp163 = Scalar(1.4083112389913199) * _tmp125;
  const Scalar _tmp164 = Scalar(1.0) * _tmp156;
  const Scalar _tmp165 = _tmp123 * _tmp55;
  const Scalar _tmp166 = _tmp105 * _tmp111 * _tmp55 + _tmp117 * _tmp119 * _tmp55 -
                         _tmp120 * _tmp165 - _tmp126 * _tmp128;
  const Scalar _tmp167 = std::pow(_tmp166, Scalar(-2));
  const Scalar _tmp168 = _tmp165 * _tmp167;
  const Scalar _tmp169 = Scalar(0.71007031138673404) * _tmp168;
  const Scalar _tmp170 = Scalar(1.0) / (_tmp166);
  const Scalar _tmp171 = _tmp137 * _tmp148;
  const Scalar _tmp172 = _tmp146 * _tmp69;
  const Scalar _tmp173 = _tmp111 * _tmp142 * _tmp69 + _tmp119 * _tmp151 * _tmp69 +
                         _tmp120 * _tmp153 + _tmp128 * _tmp139 * _tmp69 + _tmp144 * _tmp172 -
                         _tmp149 * _tmp171;
  const Scalar _tmp174 = std::asinh(_tmp170 * _tmp173);
  const Scalar _tmp175 = Scalar(1.0) * _tmp174;
  const Scalar _tmp176 = _tmp137 * _tmp30;
  const Scalar _tmp177 =
      (-_tmp168 * _tmp173 + _tmp170 * (-_tmp149 * _tmp176 - _tmp153 + _tmp161 * _tmp172)) /
      std::sqrt(Scalar(_tmp167 * std::pow(_tmp173, Scalar(2)) + 1));
  const Scalar _tmp178 = Scalar(1.4083112389913199) * _tmp165;
  const Scalar _tmp179 = Scalar(1.4083112389913199) * _tmp166;
  const Scalar _tmp180 = Scalar(0.71007031138673404) * _tmp170;
  const Scalar _tmp181 =
      -_tmp174 * _tmp179 - std::sqrt(Scalar(std::pow(Scalar(-_tmp35 + p_d(0, 0)), Scalar(2)) +
                                            std::pow(Scalar(-_tmp39 + p_d(1, 0)), Scalar(2))));
  const Scalar _tmp182 = _tmp180 * _tmp181;
  const Scalar _tmp183 = -_tmp101 * _tmp111 * _tmp136 - _tmp115 * _tmp119 * _tmp136 +
                         _tmp120 * _tmp152 - _tmp128 * _tmp138 - _tmp144 * _tmp145 + _tmp171;
  const Scalar _tmp184 = _tmp102 * _tmp111 * _tmp91 + _tmp116 * _tmp119 * _tmp91 +
                         _tmp120 * _tmp124 + _tmp127 * _tmp128;
  const Scalar _tmp185 = Scalar(1.0) / (_tmp184);
  const Scalar _tmp186 = std::asinh(_tmp183 * _tmp185);
  const Scalar _tmp187 = Scalar(1.0) * _tmp186;
  const Scalar _tmp188 = Scalar(1.4083112389913199) * _tmp184;
  const Scalar _tmp189 =
      -_tmp186 * _tmp188 - std::sqrt(Scalar(std::pow(Scalar(-_tmp77 + p_b(0, 0)), Scalar(2)) +
                                            std::pow(Scalar(-_tmp80 + p_b(1, 0)), Scalar(2))));
  const Scalar _tmp190 = Scalar(0.71007031138673404) * _tmp185;
  const Scalar _tmp191 = _tmp189 * _tmp190;
  const Scalar _tmp192 = Scalar(1.4083112389913199) * _tmp124;
  const Scalar _tmp193 = std::pow(_tmp184, Scalar(-2));
  const Scalar _tmp194 = _tmp124 * _tmp193;
  const Scalar _tmp195 = (_tmp183 * _tmp194 + _tmp185 * (-_tmp145 * _tmp161 - _tmp152 + _tmp176)) /
                         std::sqrt(Scalar(std::pow(_tmp183, Scalar(2)) * _tmp193 + 1));
  const Scalar _tmp196 = Scalar(0.71007031138673404) * _tmp194;

  // Output terms (1)
  Eigen::Matrix<Scalar, 4, 1> _res;

  _res(0, 0) =
      -_tmp32 *
      (_tmp2 * std::sinh(Scalar(1.0) * _tmp1) +
       _tmp2 * std::sinh(Scalar(0.71007031138673404) * _tmp0 *
                         (-_tmp1 * _tmp32 -
                          std::sqrt(Scalar(std::pow(Scalar(-_tmp21 + p_c(1, 0)), Scalar(2)) +
                                           std::pow(Scalar(-_tmp31 + p_c(0, 0)), Scalar(2)))))));
  _res(1, 0) =
      -_tmp157 * (-_tmp132 * p_a(2, 0) + Scalar(1.0) * _tmp162 * std::sinh(_tmp164) -
                  (-_tmp132 * _tmp158 + _tmp159 * (-_tmp156 * _tmp163 - _tmp157 * _tmp162)) *
                      std::sinh(_tmp160)) -
      _tmp163 * (_tmp159 * p_a(2, 0) - std::cosh(_tmp160) + std::cosh(_tmp164));
  _res(2, 0) =
      -_tmp178 * (_tmp180 * p_d(2, 0) + std::cosh(_tmp175) - std::cosh(_tmp182)) -
      _tmp179 * (-_tmp169 * p_d(2, 0) + Scalar(1.0) * _tmp177 * std::sinh(_tmp175) -
                 (-_tmp169 * _tmp181 + _tmp180 * (-_tmp174 * _tmp178 - _tmp177 * _tmp179)) *
                     std::sinh(_tmp182));
  _res(3, 0) = -_tmp188 * (Scalar(1.0) * _tmp195 * std::sinh(_tmp187) + _tmp196 * p_b(2, 0) -
                           (_tmp189 * _tmp196 + _tmp190 * (_tmp186 * _tmp192 - _tmp188 * _tmp195)) *
                               std::sinh(_tmp191)) +
               _tmp192 * (_tmp190 * p_b(2, 0) + std::cosh(_tmp187) - std::cosh(_tmp191));

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
