// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

#include <sym/rot3.h>

namespace sym {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: IK_residual_func_cost1_wrt_pb_Nl9
 *
 * Args:
 *     fh1: Scalar
 *     fv1: Scalar
 *     DeltaRot: Rot3
 *     position_vector: Matrix31
 *     encoder: Matrix41
 *     p_a: Matrix31
 *     p_b: Matrix31
 *     p_c: Matrix31
 *     p_d: Matrix31
 *     Rot_init: Rot3
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix43
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 4, 3> IkResidualFuncCost1WrtPbNl9(
    const Scalar fh1, const Scalar fv1, const sym::Rot3<Scalar>& DeltaRot,
    const Eigen::Matrix<Scalar, 3, 1>& position_vector, const Eigen::Matrix<Scalar, 4, 1>& encoder,
    const Eigen::Matrix<Scalar, 3, 1>& p_a, const Eigen::Matrix<Scalar, 3, 1>& p_b,
    const Eigen::Matrix<Scalar, 3, 1>& p_c, const Eigen::Matrix<Scalar, 3, 1>& p_d,
    const sym::Rot3<Scalar>& Rot_init, const Scalar epsilon) {
  // Total ops: 771

  // Unused inputs
  (void)encoder;
  (void)epsilon;

  // Input arrays
  const Eigen::Matrix<Scalar, 4, 1>& _DeltaRot = DeltaRot.Data();
  const Eigen::Matrix<Scalar, 4, 1>& _Rot_init = Rot_init.Data();

  // Intermediate terms (267)
  const Scalar _tmp0 = _DeltaRot[0] * _Rot_init[3] - _DeltaRot[1] * _Rot_init[2] +
                       _DeltaRot[2] * _Rot_init[1] + _DeltaRot[3] * _Rot_init[0];
  const Scalar _tmp1 = _DeltaRot[0] * _Rot_init[2] + _DeltaRot[1] * _Rot_init[3] -
                       _DeltaRot[2] * _Rot_init[0] + _DeltaRot[3] * _Rot_init[1];
  const Scalar _tmp2 = 2 * _tmp1;
  const Scalar _tmp3 = _tmp0 * _tmp2;
  const Scalar _tmp4 = -_DeltaRot[0] * _Rot_init[1] + _DeltaRot[1] * _Rot_init[0] +
                       _DeltaRot[2] * _Rot_init[3] + _DeltaRot[3] * _Rot_init[2];
  const Scalar _tmp5 = -2 * _DeltaRot[0] * _Rot_init[0] - 2 * _DeltaRot[1] * _Rot_init[1] -
                       2 * _DeltaRot[2] * _Rot_init[2] + 2 * _DeltaRot[3] * _Rot_init[3];
  const Scalar _tmp6 = _tmp4 * _tmp5;
  const Scalar _tmp7 = Scalar(0.20999999999999999) * _tmp3 - Scalar(0.20999999999999999) * _tmp6;
  const Scalar _tmp8 = -_tmp7;
  const Scalar _tmp9 = 2 * _tmp0 * _tmp4;
  const Scalar _tmp10 = _tmp1 * _tmp5;
  const Scalar _tmp11 = _tmp10 + _tmp9;
  const Scalar _tmp12 = -Scalar(0.010999999999999999) * _tmp11;
  const Scalar _tmp13 = -2 * std::pow(_tmp4, Scalar(2));
  const Scalar _tmp14 = 1 - 2 * std::pow(_tmp1, Scalar(2));
  const Scalar _tmp15 = Scalar(0.20999999999999999) * _tmp13 + Scalar(0.20999999999999999) * _tmp14;
  const Scalar _tmp16 = _tmp12 + _tmp15;
  const Scalar _tmp17 = _tmp16 + _tmp8;
  const Scalar _tmp18 = _tmp17 + position_vector(0, 0);
  const Scalar _tmp19 = -_tmp18 + p_b(0, 0);
  const Scalar _tmp20 = -2 * std::pow(_tmp0, Scalar(2));
  const Scalar _tmp21 = Scalar(0.20999999999999999) * _tmp13 +
                        Scalar(0.20999999999999999) * _tmp20 + Scalar(0.20999999999999999);
  const Scalar _tmp22 = -_tmp21;
  const Scalar _tmp23 = _tmp2 * _tmp4;
  const Scalar _tmp24 = _tmp0 * _tmp5;
  const Scalar _tmp25 = _tmp23 - _tmp24;
  const Scalar _tmp26 = -Scalar(0.010999999999999999) * _tmp25;
  const Scalar _tmp27 = Scalar(0.20999999999999999) * _tmp3 + Scalar(0.20999999999999999) * _tmp6;
  const Scalar _tmp28 = _tmp26 + _tmp27;
  const Scalar _tmp29 = _tmp22 + _tmp28;
  const Scalar _tmp30 = _tmp29 + position_vector(1, 0);
  const Scalar _tmp31 = -_tmp30 + p_b(1, 0);
  const Scalar _tmp32 =
      std::sqrt(Scalar(std::pow(_tmp19, Scalar(2)) + std::pow(_tmp31, Scalar(2))));
  const Scalar _tmp33 = Scalar(1.0) / (fh1);
  const Scalar _tmp34 =
      Scalar(1.0) *
      std::sinh(Scalar(0.71007031138673404) * _tmp33 *
                (-_tmp32 - Scalar(1.4083112389913199) * fh1 * std::asinh(_tmp33 * fv1))) /
      _tmp32;
  const Scalar _tmp35 = _tmp30 - p_b(1, 0);
  const Scalar _tmp36 = _tmp18 - p_b(0, 0);
  const Scalar _tmp37 = _tmp35 * _tmp36;
  const Scalar _tmp38 = std::pow(_tmp36, Scalar(2));
  const Scalar _tmp39 = std::pow(_tmp35, Scalar(2));
  const Scalar _tmp40 = _tmp38 + _tmp39;
  const Scalar _tmp41 = std::pow(_tmp40, Scalar(Scalar(-3) / Scalar(2)));
  const Scalar _tmp42 = _tmp41 * fh1;
  const Scalar _tmp43 = _tmp37 * _tmp42;
  const Scalar _tmp44 = _tmp12 - _tmp15;
  const Scalar _tmp45 = _tmp44 + _tmp7;
  const Scalar _tmp46 = _tmp45 + position_vector(0, 0);
  const Scalar _tmp47 = _tmp46 - p_d(0, 0);
  const Scalar _tmp48 = _tmp26 - _tmp27;
  const Scalar _tmp49 = _tmp21 + _tmp48;
  const Scalar _tmp50 = _tmp49 + position_vector(1, 0);
  const Scalar _tmp51 = _tmp50 - p_d(1, 0);
  const Scalar _tmp52 = std::pow(Scalar(std::pow(_tmp47, Scalar(2)) + std::pow(_tmp51, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp53 = _tmp47 * _tmp52;
  const Scalar _tmp54 = _tmp51 * _tmp52;
  const Scalar _tmp55 = _tmp16 + _tmp7;
  const Scalar _tmp56 = _tmp55 + position_vector(0, 0);
  const Scalar _tmp57 = _tmp56 - p_c(0, 0);
  const Scalar _tmp58 = Scalar(1.0) / (_tmp57);
  const Scalar _tmp59 = _tmp21 + _tmp28;
  const Scalar _tmp60 = _tmp59 + position_vector(1, 0);
  const Scalar _tmp61 = _tmp60 - p_c(1, 0);
  const Scalar _tmp62 = _tmp58 * _tmp61;
  const Scalar _tmp63 = Scalar(1.0) / (_tmp53 * _tmp62 - _tmp54);
  const Scalar _tmp64 = _tmp22 + _tmp48;
  const Scalar _tmp65 = _tmp64 + position_vector(1, 0);
  const Scalar _tmp66 = _tmp65 - p_a(1, 0);
  const Scalar _tmp67 = _tmp44 + _tmp8;
  const Scalar _tmp68 = _tmp67 + position_vector(0, 0);
  const Scalar _tmp69 = _tmp68 - p_a(0, 0);
  const Scalar _tmp70 = std::pow(Scalar(std::pow(_tmp66, Scalar(2)) + std::pow(_tmp69, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp71 = _tmp66 * _tmp70;
  const Scalar _tmp72 = _tmp69 * _tmp70;
  const Scalar _tmp73 = _tmp62 * _tmp72 - _tmp71;
  const Scalar _tmp74 = Scalar(1.0) * _tmp59;
  const Scalar _tmp75 = -_tmp74;
  const Scalar _tmp76 = Scalar(1.0) / (_tmp49 + _tmp75);
  const Scalar _tmp77 = Scalar(1.0) * _tmp55;
  const Scalar _tmp78 = _tmp76 * (-_tmp45 + _tmp77);
  const Scalar _tmp79 = -Scalar(0.20999999999999999) * _tmp10 + Scalar(0.20999999999999999) * _tmp9;
  const Scalar _tmp80 = -_tmp79;
  const Scalar _tmp81 =
      -Scalar(0.010999999999999999) * _tmp14 - Scalar(0.010999999999999999) * _tmp20;
  const Scalar _tmp82 = Scalar(0.20999999999999999) * _tmp23 + Scalar(0.20999999999999999) * _tmp24;
  const Scalar _tmp83 = _tmp81 + _tmp82;
  const Scalar _tmp84 = _tmp80 + _tmp83;
  const Scalar _tmp85 = _tmp79 + _tmp83;
  const Scalar _tmp86 = _tmp53 * _tmp85;
  const Scalar _tmp87 = _tmp54 * _tmp84 - _tmp62 * _tmp86;
  const Scalar _tmp88 = Scalar(1.0) * _tmp63;
  const Scalar _tmp89 = _tmp87 * _tmp88;
  const Scalar _tmp90 = -_tmp53 * _tmp84 + _tmp86;
  const Scalar _tmp91 = _tmp78 * _tmp89 - _tmp88 * _tmp90;
  const Scalar _tmp92 = _tmp63 * _tmp73;
  const Scalar _tmp93 = _tmp72 * _tmp85;
  const Scalar _tmp94 = _tmp81 - _tmp82;
  const Scalar _tmp95 = _tmp80 + _tmp94;
  const Scalar _tmp96 = -_tmp62 * _tmp93 + _tmp71 * _tmp95 - _tmp87 * _tmp92;
  const Scalar _tmp97 = -_tmp72 * _tmp95 - _tmp78 * _tmp96 - _tmp90 * _tmp92 + _tmp93;
  const Scalar _tmp98 = Scalar(1.0) / (_tmp97);
  const Scalar _tmp99 =
      std::sqrt(Scalar(std::pow(_tmp57, Scalar(2)) + std::pow(_tmp61, Scalar(2))));
  const Scalar _tmp100 = Scalar(1.0) / (_tmp99);
  const Scalar _tmp101 = _tmp58 * _tmp99;
  const Scalar _tmp102 = _tmp101 * (_tmp100 * _tmp55 * _tmp61 - _tmp100 * _tmp57 * _tmp59);
  const Scalar _tmp103 = _tmp102 * _tmp53 - _tmp45 * _tmp54 + _tmp49 * _tmp53;
  const Scalar _tmp104 = _tmp102 * _tmp72 - _tmp103 * _tmp92 + _tmp64 * _tmp72 - _tmp67 * _tmp71;
  const Scalar _tmp105 = _tmp104 * _tmp98;
  const Scalar _tmp106 = Scalar(1.0) / (_tmp104);
  const Scalar _tmp107 = _tmp106 * _tmp97;
  const Scalar _tmp108 = _tmp107 * (-_tmp103 * _tmp88 - _tmp105 * _tmp91);
  const Scalar _tmp109 = _tmp98 * (_tmp108 + _tmp91);
  const Scalar _tmp110 = _tmp63 * (-_tmp109 * _tmp73 + Scalar(1.0));
  const Scalar _tmp111 = _tmp109 * _tmp72 + _tmp110 * _tmp53;
  const Scalar _tmp112 = _tmp101 * _tmp111;
  const Scalar _tmp113 = _tmp29 * _tmp41;
  const Scalar _tmp114 = _tmp17 * _tmp41;
  const Scalar _tmp115 = std::pow(_tmp40, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp116 = _tmp115 * _tmp29;
  const Scalar _tmp117 = fh1 * (-_tmp113 * _tmp38 + _tmp114 * _tmp37 + _tmp116);
  const Scalar _tmp118 = Scalar(1.0) * _tmp106;
  const Scalar _tmp119 = _tmp53 * _tmp92;
  const Scalar _tmp120 = _tmp101 * (-_tmp118 * _tmp119 + _tmp118 * _tmp72);
  const Scalar _tmp121 = _tmp38 * _tmp42;
  const Scalar _tmp122 = _tmp62 * _tmp63;
  const Scalar _tmp123 = _tmp122 * _tmp87 + _tmp62 * _tmp85;
  const Scalar _tmp124 = _tmp122 * _tmp90 - _tmp123 * _tmp78 - _tmp85;
  const Scalar _tmp125 = _tmp107 * (-_tmp102 + _tmp103 * _tmp122 - _tmp105 * _tmp124);
  const Scalar _tmp126 = _tmp98 * (_tmp124 + _tmp125);
  const Scalar _tmp127 = _tmp63 * (-_tmp126 * _tmp73 - _tmp62);
  const Scalar _tmp128 = _tmp126 * _tmp72 + _tmp127 * _tmp53 + Scalar(1.0);
  const Scalar _tmp129 = _tmp101 * _tmp128;
  const Scalar _tmp130 = _tmp115 * fh1;
  const Scalar _tmp131 = _tmp101 * _tmp130;
  const Scalar _tmp132 = _tmp128 * _tmp131;
  const Scalar _tmp133 = -_tmp112 * _tmp43 - _tmp117 * _tmp120 - _tmp121 * _tmp129 + _tmp132;
  const Scalar _tmp134 = Scalar(333.54000000000002) - fv1;
  const Scalar _tmp135 = _tmp74 * _tmp78 + _tmp77;
  const Scalar _tmp136 = 0;
  const Scalar _tmp137 = _tmp64 + _tmp75;
  const Scalar _tmp138 = _tmp137 * _tmp78;
  const Scalar _tmp139 = Scalar(1.0) / (-_tmp138 - _tmp67 + _tmp77);
  const Scalar _tmp140 = _tmp135 * _tmp139;
  const Scalar _tmp141 = _tmp76 * (-_tmp136 * _tmp96 - _tmp137 * _tmp140 + _tmp75);
  const Scalar _tmp142 = Scalar(1.0) * _tmp139;
  const Scalar _tmp143 = fh1 * (_tmp79 + _tmp94);
  const Scalar _tmp144 = _tmp115 * _tmp143;
  const Scalar _tmp145 = Scalar(40.024799999999999) * _tmp11 + _tmp144 * _tmp36 + _tmp17 * fv1;
  const Scalar _tmp146 = _tmp137 * _tmp142;
  const Scalar _tmp147 = _tmp146 * _tmp76;
  const Scalar _tmp148 = -Scalar(1.0) * _tmp142 + Scalar(1.0) * _tmp147;
  const Scalar _tmp149 = _tmp137 * _tmp139;
  const Scalar _tmp150 = _tmp123 + _tmp125 * _tmp149 - _tmp126 * _tmp96;
  const Scalar _tmp151 = Scalar(1.0) * _tmp76;
  const Scalar _tmp152 = _tmp125 * _tmp142 - _tmp150 * _tmp151;
  const Scalar _tmp153 = Scalar(1.0) * _tmp130;
  const Scalar _tmp154 = _tmp152 * _tmp153;
  const Scalar _tmp155 = _tmp115 * _tmp17;
  const Scalar _tmp156 = fh1 * (-_tmp116 * _tmp36 + _tmp155 * _tmp35);
  const Scalar _tmp157 = _tmp107 * _tmp146 - _tmp118 * _tmp96;
  const Scalar _tmp158 = _tmp107 * _tmp142;
  const Scalar _tmp159 = -Scalar(1.0) * _tmp151 * _tmp157 + Scalar(1.0) * _tmp158;
  const Scalar _tmp160 = _tmp108 * _tmp149 - _tmp109 * _tmp96 - _tmp89;
  const Scalar _tmp161 = _tmp108 * _tmp142 - _tmp151 * _tmp160;
  const Scalar _tmp162 = _tmp153 * _tmp161;
  const Scalar _tmp163 = -_tmp144 * _tmp35 - Scalar(40.024799999999999) * _tmp25 - _tmp29 * fv1;
  const Scalar _tmp164 = _tmp76 * (_tmp138 * _tmp142 + Scalar(1.0));
  const Scalar _tmp165 = _tmp142 * _tmp78;
  const Scalar _tmp166 = -Scalar(1.0) * _tmp164 + Scalar(1.0) * _tmp165;
  const Scalar _tmp167 =
      Scalar(1.0) * _tmp134 * (-_tmp135 * _tmp142 - Scalar(1.0) * _tmp141 + Scalar(1.0)) +
      _tmp145 * _tmp148 + _tmp154 * _tmp36 + _tmp156 * _tmp159 + _tmp162 * _tmp35 +
      _tmp163 * _tmp166;
  const Scalar _tmp168 = _tmp111 * _tmp131;
  const Scalar _tmp169 = -_tmp101 * _tmp134 * (-_tmp119 * _tmp136 + _tmp136 * _tmp72) -
                         _tmp120 * _tmp156 - _tmp132 * _tmp36 - _tmp168 * _tmp35;
  const Scalar _tmp170 = Scalar(1.0) / (_tmp169);
  const Scalar _tmp171 = std::asinh(_tmp167 * _tmp170);
  const Scalar _tmp172 = Scalar(1.4083112389913199) * _tmp171;
  const Scalar _tmp173 = Scalar(1.4083112389913199) * _tmp169;
  const Scalar _tmp174 = std::pow(_tmp169, Scalar(-2));
  const Scalar _tmp175 =
      std::pow(Scalar(std::pow(_tmp167, Scalar(2)) * _tmp174 + 1), Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp176 = _tmp143 * _tmp41;
  const Scalar _tmp177 = -_tmp144 + _tmp176 * _tmp38;
  const Scalar _tmp178 = Scalar(1.0) * _tmp152;
  const Scalar _tmp179 = Scalar(1.0) * _tmp161;
  const Scalar _tmp180 = _tmp176 * _tmp37;
  const Scalar _tmp181 = _tmp167 * _tmp174;
  const Scalar _tmp182 =
      _tmp175 *
      (-_tmp133 * _tmp181 + _tmp170 * (_tmp117 * _tmp159 + _tmp121 * _tmp178 + _tmp148 * _tmp177 -
                                       _tmp154 - _tmp166 * _tmp180 + _tmp179 * _tmp43));
  const Scalar _tmp183 = Scalar(0.71007031138673404) * _tmp170;
  const Scalar _tmp184 =
      -_tmp169 * _tmp172 - std::sqrt(Scalar(std::pow(Scalar(-_tmp56 + p_c(0, 0)), Scalar(2)) +
                                            std::pow(Scalar(-_tmp60 + p_c(1, 0)), Scalar(2))));
  const Scalar _tmp185 = Scalar(0.71007031138673404) * _tmp174;
  const Scalar _tmp186 = _tmp184 * _tmp185;
  const Scalar _tmp187 = _tmp183 * _tmp184;
  const Scalar _tmp188 = std::sinh(_tmp187);
  const Scalar _tmp189 = _tmp185 * p_c(2, 0);
  const Scalar _tmp190 = Scalar(1.0) * _tmp171;
  const Scalar _tmp191 = Scalar(1.0) * std::sinh(_tmp190);
  const Scalar _tmp192 = Scalar(1.4083112389913199) * _tmp183 * p_c(2, 0) -
                         Scalar(1.4083112389913199) * std::cosh(_tmp187) +
                         Scalar(1.4083112389913199) * std::cosh(_tmp190);
  const Scalar _tmp193 = _tmp130 * _tmp76;
  const Scalar _tmp194 = _tmp150 * _tmp193;
  const Scalar _tmp195 = _tmp142 * _tmp145;
  const Scalar _tmp196 = _tmp137 * _tmp76;
  const Scalar _tmp197 = _tmp160 * _tmp193;
  const Scalar _tmp198 = _tmp157 * _tmp76;
  const Scalar _tmp199 = _tmp134 * _tmp141 + _tmp156 * _tmp198 + _tmp163 * _tmp164 +
                         _tmp194 * _tmp36 - _tmp195 * _tmp196 + _tmp197 * _tmp35;
  const Scalar _tmp200 = _tmp134 * _tmp136;
  const Scalar _tmp201 = _tmp110 * _tmp130;
  const Scalar _tmp202 = _tmp118 * _tmp156;
  const Scalar _tmp203 = _tmp127 * _tmp130;
  const Scalar _tmp204 = -_tmp200 * _tmp92 + _tmp201 * _tmp35 - _tmp202 * _tmp92 + _tmp203 * _tmp36;
  const Scalar _tmp205 = Scalar(1.0) / (_tmp204);
  const Scalar _tmp206 = std::asinh(_tmp199 * _tmp205);
  const Scalar _tmp207 = Scalar(1.4083112389913199) * _tmp204;
  const Scalar _tmp208 =
      -_tmp206 * _tmp207 - std::sqrt(Scalar(std::pow(Scalar(-_tmp46 + p_d(0, 0)), Scalar(2)) +
                                            std::pow(Scalar(-_tmp50 + p_d(1, 0)), Scalar(2))));
  const Scalar _tmp209 = Scalar(0.71007031138673404) * _tmp205;
  const Scalar _tmp210 = _tmp208 * _tmp209;
  const Scalar _tmp211 = Scalar(1.0) * _tmp206;
  const Scalar _tmp212 = _tmp209 * p_d(2, 0) - std::cosh(_tmp210) + std::cosh(_tmp211);
  const Scalar _tmp213 = _tmp117 * _tmp118;
  const Scalar _tmp214 = _tmp110 * _tmp43 + _tmp121 * _tmp127 - _tmp203 - _tmp213 * _tmp92;
  const Scalar _tmp215 = Scalar(1.4083112389913199) * _tmp214;
  const Scalar _tmp216 = _tmp142 * _tmp177;
  const Scalar _tmp217 = _tmp150 * _tmp76;
  const Scalar _tmp218 = _tmp160 * _tmp76;
  const Scalar _tmp219 = std::pow(_tmp204, Scalar(-2));
  const Scalar _tmp220 = _tmp199 * _tmp219;
  const Scalar _tmp221 =
      std::pow(Scalar(std::pow(_tmp199, Scalar(2)) * _tmp219 + 1), Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp222 =
      _tmp221 * (_tmp205 * (_tmp117 * _tmp198 + _tmp121 * _tmp217 - _tmp164 * _tmp180 - _tmp194 -
                            _tmp196 * _tmp216 + _tmp218 * _tmp43) -
                 _tmp214 * _tmp220);
  const Scalar _tmp223 = Scalar(1.0) * std::sinh(_tmp211);
  const Scalar _tmp224 = std::sinh(_tmp210);
  const Scalar _tmp225 = Scalar(0.71007031138673404) * _tmp219;
  const Scalar _tmp226 = _tmp214 * _tmp225;
  const Scalar _tmp227 = _tmp126 * _tmp130;
  const Scalar _tmp228 = _tmp109 * _tmp43 + _tmp121 * _tmp126 + _tmp213 - _tmp227;
  const Scalar _tmp229 = _tmp130 * _tmp139;
  const Scalar _tmp230 = _tmp125 * _tmp229;
  const Scalar _tmp231 = _tmp108 * _tmp229;
  const Scalar _tmp232 = _tmp134 * _tmp140 - _tmp156 * _tmp158 - _tmp163 * _tmp165 + _tmp195 -
                         _tmp230 * _tmp36 - _tmp231 * _tmp35;
  const Scalar _tmp233 = _tmp109 * _tmp130;
  const Scalar _tmp234 = _tmp200 + _tmp202 + _tmp227 * _tmp36 + _tmp233 * _tmp35;
  const Scalar _tmp235 = Scalar(1.0) / (_tmp234);
  const Scalar _tmp236 = std::asinh(_tmp232 * _tmp235);
  const Scalar _tmp237 = Scalar(1.4083112389913199) * _tmp234;
  const Scalar _tmp238 =
      -_tmp236 * _tmp237 - std::sqrt(Scalar(std::pow(Scalar(-_tmp65 + p_a(1, 0)), Scalar(2)) +
                                            std::pow(Scalar(-_tmp68 + p_a(0, 0)), Scalar(2))));
  const Scalar _tmp239 = Scalar(0.71007031138673404) * _tmp235;
  const Scalar _tmp240 = _tmp238 * _tmp239;
  const Scalar _tmp241 = Scalar(1.0) * _tmp236;
  const Scalar _tmp242 = Scalar(1.4083112389913199) * _tmp239 * p_a(2, 0) -
                         Scalar(1.4083112389913199) * std::cosh(_tmp240) +
                         Scalar(1.4083112389913199) * std::cosh(_tmp241);
  const Scalar _tmp243 = _tmp125 * _tmp139;
  const Scalar _tmp244 = _tmp108 * _tmp139;
  const Scalar _tmp245 = std::pow(_tmp234, Scalar(-2));
  const Scalar _tmp246 = _tmp232 * _tmp245;
  const Scalar _tmp247 =
      std::pow(Scalar(std::pow(_tmp232, Scalar(2)) * _tmp245 + 1), Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp248 =
      _tmp247 *
      (-_tmp228 * _tmp246 + _tmp235 * (-_tmp117 * _tmp158 - _tmp121 * _tmp243 + _tmp165 * _tmp180 +
                                       _tmp216 + _tmp230 - _tmp244 * _tmp43));
  const Scalar _tmp249 = Scalar(1.0) * std::sinh(_tmp241);
  const Scalar _tmp250 = Scalar(1.4083112389913199) * _tmp236;
  const Scalar _tmp251 = Scalar(0.71007031138673404) * _tmp245;
  const Scalar _tmp252 = _tmp228 * _tmp251;
  const Scalar _tmp253 = std::sinh(_tmp240);
  const Scalar _tmp254 = _tmp39 * _tmp42;
  const Scalar _tmp255 = fh1 * (-_tmp113 * _tmp37 + _tmp114 * _tmp39 - _tmp155);
  const Scalar _tmp256 = -_tmp112 * _tmp254 - _tmp120 * _tmp255 - _tmp129 * _tmp43 + _tmp168;
  const Scalar _tmp257 = _tmp144 - _tmp176 * _tmp39;
  const Scalar _tmp258 =
      _tmp175 * (_tmp170 * (_tmp148 * _tmp180 + _tmp159 * _tmp255 - _tmp162 + _tmp166 * _tmp257 +
                            _tmp178 * _tmp43 + _tmp179 * _tmp254) -
                 _tmp181 * _tmp256);
  const Scalar _tmp259 = _tmp118 * _tmp255;
  const Scalar _tmp260 = _tmp110 * _tmp254 + _tmp127 * _tmp43 - _tmp201 - _tmp259 * _tmp92;
  const Scalar _tmp261 = _tmp225 * _tmp260;
  const Scalar _tmp262 = Scalar(1.4083112389913199) * _tmp260;
  const Scalar _tmp263 =
      _tmp221 * (_tmp205 * (-_tmp147 * _tmp180 + _tmp164 * _tmp257 - _tmp197 + _tmp198 * _tmp255 +
                            _tmp217 * _tmp43 + _tmp218 * _tmp254) -
                 _tmp220 * _tmp260);
  const Scalar _tmp264 = _tmp109 * _tmp254 + _tmp126 * _tmp43 - _tmp233 + _tmp259;
  const Scalar _tmp265 = _tmp251 * _tmp264;
  const Scalar _tmp266 =
      _tmp247 * (_tmp235 * (_tmp142 * _tmp180 - _tmp158 * _tmp255 - _tmp165 * _tmp257 + _tmp231 -
                            _tmp243 * _tmp43 - _tmp244 * _tmp254) -
                 _tmp246 * _tmp264);

  // Output terms (1)
  Eigen::Matrix<Scalar, 4, 3> _res;

  _res(0, 0) = -_tmp19 * _tmp34;
  _res(1, 0) =
      -_tmp133 * _tmp192 -
      _tmp173 *
          (-_tmp133 * _tmp189 + _tmp182 * _tmp191 -
           _tmp188 * (-_tmp133 * _tmp186 + _tmp183 * (-_tmp133 * _tmp172 - _tmp173 * _tmp182)));
  _res(2, 0) =
      -_tmp207 *
          (_tmp222 * _tmp223 -
           _tmp224 * (-_tmp208 * _tmp226 + _tmp209 * (-_tmp206 * _tmp215 - _tmp207 * _tmp222)) -
           _tmp226 * p_d(2, 0)) -
      _tmp212 * _tmp215;
  _res(3, 0) =
      -_tmp228 * _tmp242 -
      _tmp237 *
          (_tmp248 * _tmp249 - _tmp252 * p_a(2, 0) -
           _tmp253 * (-_tmp238 * _tmp252 + _tmp239 * (-_tmp228 * _tmp250 - _tmp237 * _tmp248)));
  _res(0, 1) = -_tmp31 * _tmp34;
  _res(1, 1) =
      -_tmp173 *
          (-_tmp188 * (_tmp183 * (-_tmp172 * _tmp256 - _tmp173 * _tmp258) - _tmp186 * _tmp256) -
           _tmp189 * _tmp256 + _tmp191 * _tmp258) -
      _tmp192 * _tmp256;
  _res(2, 1) =
      -_tmp207 *
          (_tmp223 * _tmp263 -
           _tmp224 * (-_tmp208 * _tmp261 + _tmp209 * (-_tmp206 * _tmp262 - _tmp207 * _tmp263)) -
           _tmp261 * p_d(2, 0)) -
      _tmp212 * _tmp262;
  _res(3, 1) =
      -_tmp237 *
          (_tmp249 * _tmp266 -
           _tmp253 * (-_tmp238 * _tmp265 + _tmp239 * (-_tmp237 * _tmp266 - _tmp250 * _tmp264)) -
           _tmp265 * p_a(2, 0)) -
      _tmp242 * _tmp264;
  _res(0, 2) = Scalar(-1.0);
  _res(1, 2) = 0;
  _res(2, 2) = 0;
  _res(3, 2) = 0;

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
