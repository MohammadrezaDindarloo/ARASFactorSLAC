// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

#include <sym/rot3.h>

namespace sym {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: IK_residual_func_cost2_Nl12
 *
 * Args:
 *     fh1: Scalar
 *     fv1: Scalar
 *     DeltaRot: Rot3
 *     position_vector: Matrix31
 *     p_a: Matrix31
 *     p_b: Matrix31
 *     p_c: Matrix31
 *     p_d: Matrix31
 *     Rot_init: Rot3
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix41
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 4, 1> IkResidualFuncCost2Nl12(
    const Scalar fh1, const Scalar fv1, const sym::Rot3<Scalar>& DeltaRot,
    const Eigen::Matrix<Scalar, 3, 1>& position_vector, const Eigen::Matrix<Scalar, 3, 1>& p_a,
    const Eigen::Matrix<Scalar, 3, 1>& p_b, const Eigen::Matrix<Scalar, 3, 1>& p_c,
    const Eigen::Matrix<Scalar, 3, 1>& p_d, const sym::Rot3<Scalar>& Rot_init,
    const Scalar epsilon) {
  // Total ops: 497

  // Unused inputs
  (void)epsilon;

  // Input arrays
  const Eigen::Matrix<Scalar, 4, 1>& _DeltaRot = DeltaRot.Data();
  const Eigen::Matrix<Scalar, 4, 1>& _Rot_init = Rot_init.Data();

  // Intermediate terms (162)
  const Scalar _tmp0 = _DeltaRot[0] * _Rot_init[2] + _DeltaRot[1] * _Rot_init[3] -
                       _DeltaRot[2] * _Rot_init[0] + _DeltaRot[3] * _Rot_init[1];
  const Scalar _tmp1 = -_DeltaRot[0] * _Rot_init[1] + _DeltaRot[1] * _Rot_init[0] +
                       _DeltaRot[2] * _Rot_init[3] + _DeltaRot[3] * _Rot_init[2];
  const Scalar _tmp2 = 2 * _tmp1;
  const Scalar _tmp3 = _tmp0 * _tmp2;
  const Scalar _tmp4 = _DeltaRot[0] * _Rot_init[3] - _DeltaRot[1] * _Rot_init[2] +
                       _DeltaRot[2] * _Rot_init[1] + _DeltaRot[3] * _Rot_init[0];
  const Scalar _tmp5 = -2 * _DeltaRot[0] * _Rot_init[0] - 2 * _DeltaRot[1] * _Rot_init[1] -
                       2 * _DeltaRot[2] * _Rot_init[2] + 2 * _DeltaRot[3] * _Rot_init[3];
  const Scalar _tmp6 = _tmp4 * _tmp5;
  const Scalar _tmp7 = Scalar(0.20999999999999999) * _tmp3 + Scalar(0.20999999999999999) * _tmp6;
  const Scalar _tmp8 = -2 * std::pow(_tmp0, Scalar(2));
  const Scalar _tmp9 = -2 * std::pow(_tmp4, Scalar(2));
  const Scalar _tmp10 = -Scalar(0.010999999999999999) * _tmp8 -
                        Scalar(0.010999999999999999) * _tmp9 + Scalar(-0.010999999999999999);
  const Scalar _tmp11 = _tmp2 * _tmp4;
  const Scalar _tmp12 = _tmp0 * _tmp5;
  const Scalar _tmp13 = Scalar(0.20999999999999999) * _tmp11 - Scalar(0.20999999999999999) * _tmp12;
  const Scalar _tmp14 = _tmp10 + _tmp13;
  const Scalar _tmp15 = _tmp14 + _tmp7;
  const Scalar _tmp16 = 2 * _tmp0 * _tmp4;
  const Scalar _tmp17 = _tmp1 * _tmp5;
  const Scalar _tmp18 = Scalar(0.20999999999999999) * _tmp16 + Scalar(0.20999999999999999) * _tmp17;
  const Scalar _tmp19 = 1 - 2 * std::pow(_tmp1, Scalar(2));
  const Scalar _tmp20 = Scalar(0.20999999999999999) * _tmp19 + Scalar(0.20999999999999999) * _tmp9;
  const Scalar _tmp21 = _tmp3 - _tmp6;
  const Scalar _tmp22 = -Scalar(0.010999999999999999) * _tmp21;
  const Scalar _tmp23 = _tmp20 + _tmp22;
  const Scalar _tmp24 = _tmp18 + _tmp23;
  const Scalar _tmp25 = _tmp24 + position_vector(1, 0);
  const Scalar _tmp26 = Scalar(0.20999999999999999) * _tmp16 - Scalar(0.20999999999999999) * _tmp17;
  const Scalar _tmp27 = Scalar(0.20999999999999999) * _tmp19 + Scalar(0.20999999999999999) * _tmp8;
  const Scalar _tmp28 = _tmp11 + _tmp12;
  const Scalar _tmp29 = -Scalar(0.010999999999999999) * _tmp28;
  const Scalar _tmp30 = _tmp27 + _tmp29;
  const Scalar _tmp31 = _tmp26 + _tmp30;
  const Scalar _tmp32 = _tmp31 + position_vector(0, 0);
  const Scalar _tmp33 = std::pow(Scalar(-_tmp25 + p_c(1, 0)), Scalar(2)) +
                        std::pow(Scalar(-_tmp32 + p_c(0, 0)), Scalar(2));
  const Scalar _tmp34 = Scalar(1.0) / (fh1);
  const Scalar _tmp35 = std::asinh(_tmp34 * fv1);
  const Scalar _tmp36 = Scalar(1.4083112389913199) * fh1;
  const Scalar _tmp37 = -_tmp7;
  const Scalar _tmp38 = _tmp10 - _tmp13;
  const Scalar _tmp39 = _tmp37 + _tmp38;
  const Scalar _tmp40 = -_tmp18;
  const Scalar _tmp41 = -_tmp20 + _tmp22;
  const Scalar _tmp42 = _tmp40 + _tmp41;
  const Scalar _tmp43 = _tmp42 + position_vector(1, 0);
  const Scalar _tmp44 = -_tmp26;
  const Scalar _tmp45 = -_tmp27 + _tmp29;
  const Scalar _tmp46 = _tmp44 + _tmp45;
  const Scalar _tmp47 = _tmp46 + position_vector(0, 0);
  const Scalar _tmp48 = std::pow(Scalar(-_tmp43 + p_a(1, 0)), Scalar(2)) +
                        std::pow(Scalar(-_tmp47 + p_a(0, 0)), Scalar(2));
  const Scalar _tmp49 = _tmp32 - p_c(0, 0);
  const Scalar _tmp50 = _tmp25 - p_c(1, 0);
  const Scalar _tmp51 = std::pow(Scalar(std::pow(_tmp49, Scalar(2)) + std::pow(_tmp50, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp52 = _tmp49 * _tmp51;
  const Scalar _tmp53 = _tmp15 * fh1;
  const Scalar _tmp54 = Scalar(40.024799999999999) * _tmp28 + _tmp31 * fv1 + _tmp52 * _tmp53;
  const Scalar _tmp55 = _tmp26 + _tmp45;
  const Scalar _tmp56 = Scalar(1.0) * _tmp42;
  const Scalar _tmp57 = -_tmp56;
  const Scalar _tmp58 = _tmp23 + _tmp40;
  const Scalar _tmp59 = _tmp57 + _tmp58;
  const Scalar _tmp60 = _tmp18 + _tmp41;
  const Scalar _tmp61 = Scalar(1.0) / (_tmp57 + _tmp60);
  const Scalar _tmp62 = _tmp30 + _tmp44;
  const Scalar _tmp63 = Scalar(1.0) * _tmp46;
  const Scalar _tmp64 = _tmp61 * (-_tmp62 + _tmp63);
  const Scalar _tmp65 = _tmp59 * _tmp64;
  const Scalar _tmp66 = Scalar(1.0) / (-_tmp55 + _tmp63 - _tmp65);
  const Scalar _tmp67 = Scalar(1.0) * _tmp66;
  const Scalar _tmp68 = _tmp59 * _tmp61;
  const Scalar _tmp69 = _tmp62 + position_vector(0, 0);
  const Scalar _tmp70 = _tmp69 - p_b(0, 0);
  const Scalar _tmp71 = _tmp60 + position_vector(1, 0);
  const Scalar _tmp72 = _tmp71 - p_b(1, 0);
  const Scalar _tmp73 = std::pow(Scalar(std::pow(_tmp70, Scalar(2)) + std::pow(_tmp72, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp74 = _tmp72 * _tmp73;
  const Scalar _tmp75 = _tmp70 * _tmp73;
  const Scalar _tmp76 = _tmp47 - p_a(0, 0);
  const Scalar _tmp77 = _tmp43 - p_a(1, 0);
  const Scalar _tmp78 =
      std::sqrt(Scalar(std::pow(_tmp76, Scalar(2)) + std::pow(_tmp77, Scalar(2))));
  const Scalar _tmp79 = Scalar(1.0) / (_tmp78);
  const Scalar _tmp80 = Scalar(1.0) / (_tmp76);
  const Scalar _tmp81 = _tmp78 * _tmp80;
  const Scalar _tmp82 = _tmp81 * (-_tmp42 * _tmp76 * _tmp79 + _tmp46 * _tmp77 * _tmp79);
  const Scalar _tmp83 = _tmp60 * _tmp75 - _tmp62 * _tmp74 + _tmp75 * _tmp82;
  const Scalar _tmp84 = _tmp77 * _tmp80;
  const Scalar _tmp85 = Scalar(1.0) / (-_tmp74 + _tmp75 * _tmp84);
  const Scalar _tmp86 = Scalar(1.0) * _tmp85;
  const Scalar _tmp87 = _tmp14 + _tmp37;
  const Scalar _tmp88 = _tmp39 * _tmp75;
  const Scalar _tmp89 = _tmp74 * _tmp87 - _tmp84 * _tmp88;
  const Scalar _tmp90 = _tmp86 * _tmp89;
  const Scalar _tmp91 = -_tmp75 * _tmp87 + _tmp88;
  const Scalar _tmp92 = _tmp64 * _tmp90 - _tmp86 * _tmp91;
  const Scalar _tmp93 = _tmp55 + position_vector(0, 0);
  const Scalar _tmp94 = _tmp93 - p_d(0, 0);
  const Scalar _tmp95 = _tmp58 + position_vector(1, 0);
  const Scalar _tmp96 = _tmp95 - p_d(1, 0);
  const Scalar _tmp97 = std::pow(Scalar(std::pow(_tmp94, Scalar(2)) + std::pow(_tmp96, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp98 = _tmp96 * _tmp97;
  const Scalar _tmp99 = _tmp94 * _tmp97;
  const Scalar _tmp100 = _tmp84 * _tmp99 - _tmp98;
  const Scalar _tmp101 = _tmp100 * _tmp85;
  const Scalar _tmp102 = -_tmp101 * _tmp83 - _tmp55 * _tmp98 + _tmp58 * _tmp99 + _tmp82 * _tmp99;
  const Scalar _tmp103 = _tmp38 + _tmp7;
  const Scalar _tmp104 = _tmp39 * _tmp84;
  const Scalar _tmp105 = -_tmp101 * _tmp89 + _tmp103 * _tmp98 - _tmp104 * _tmp99;
  const Scalar _tmp106 = -_tmp101 * _tmp91 - _tmp103 * _tmp99 - _tmp105 * _tmp64 + _tmp39 * _tmp99;
  const Scalar _tmp107 = Scalar(1.0) / (_tmp106);
  const Scalar _tmp108 = _tmp102 * _tmp107;
  const Scalar _tmp109 = Scalar(1.0) / (_tmp102);
  const Scalar _tmp110 = _tmp106 * _tmp109;
  const Scalar _tmp111 = _tmp110 * (-_tmp108 * _tmp92 - _tmp83 * _tmp86);
  const Scalar _tmp112 = _tmp59 * _tmp66;
  const Scalar _tmp113 = _tmp111 + _tmp92;
  const Scalar _tmp114 = _tmp105 * _tmp107;
  const Scalar _tmp115 = _tmp111 * _tmp112 - _tmp113 * _tmp114 - _tmp90;
  const Scalar _tmp116 = Scalar(1.0) * _tmp61;
  const Scalar _tmp117 = _tmp50 * _tmp51;
  const Scalar _tmp118 = _tmp117 * fh1;
  const Scalar _tmp119 = -_tmp117 * _tmp53 - Scalar(40.024799999999999) * _tmp21 - _tmp24 * fv1;
  const Scalar _tmp120 = _tmp64 * _tmp67;
  const Scalar _tmp121 = _tmp65 * _tmp67 + Scalar(1.0);
  const Scalar _tmp122 = _tmp110 * _tmp67;
  const Scalar _tmp123 = Scalar(1.0) * _tmp109;
  const Scalar _tmp124 = -_tmp105 * _tmp123 + _tmp122 * _tmp59;
  const Scalar _tmp125 = fh1 * (_tmp117 * _tmp31 - _tmp24 * _tmp52);
  const Scalar _tmp126 = _tmp84 * _tmp85;
  const Scalar _tmp127 = _tmp104 + _tmp126 * _tmp89;
  const Scalar _tmp128 = _tmp126 * _tmp91 - _tmp127 * _tmp64 - _tmp39;
  const Scalar _tmp129 = _tmp110 * (-_tmp108 * _tmp128 + _tmp126 * _tmp83 - _tmp82);
  const Scalar _tmp130 = _tmp128 + _tmp129;
  const Scalar _tmp131 = _tmp112 * _tmp129 - _tmp114 * _tmp130 + _tmp127;
  const Scalar _tmp132 = _tmp52 * fh1;
  const Scalar _tmp133 = Scalar(333.54000000000002) - fv1;
  const Scalar _tmp134 = _tmp56 * _tmp64 + _tmp63;
  const Scalar _tmp135 = 0;
  const Scalar _tmp136 = _tmp134 * _tmp66;
  const Scalar _tmp137 = -_tmp114 * _tmp135 - _tmp136 * _tmp59 + _tmp57;
  const Scalar _tmp138 = _tmp107 * _tmp135;
  const Scalar _tmp139 = _tmp100 * _tmp107;
  const Scalar _tmp140 = -_tmp130 * _tmp139 - _tmp84;
  const Scalar _tmp141 = _tmp75 * _tmp85;
  const Scalar _tmp142 = _tmp107 * _tmp99;
  const Scalar _tmp143 = _tmp100 * _tmp109 * _tmp86;
  const Scalar _tmp144 = -_tmp113 * _tmp139 + Scalar(1.0);
  const Scalar _tmp145 = -_tmp118 * _tmp81 * (_tmp113 * _tmp142 + _tmp141 * _tmp144) -
                         _tmp125 * _tmp81 * (_tmp123 * _tmp99 - _tmp143 * _tmp75) -
                         _tmp132 * _tmp81 * (_tmp130 * _tmp142 + _tmp140 * _tmp141 + Scalar(1.0)) -
                         _tmp133 * _tmp81 * (-_tmp101 * _tmp138 * _tmp75 + _tmp138 * _tmp99);
  const Scalar _tmp146 = Scalar(1.0) / (_tmp145);
  const Scalar _tmp147 = std::asinh(
      _tmp146 * (Scalar(1.0) * _tmp118 * (_tmp111 * _tmp67 - _tmp115 * _tmp116) +
                 Scalar(1.0) * _tmp119 * (-_tmp116 * _tmp121 + _tmp120) +
                 Scalar(1.0) * _tmp125 * (-_tmp116 * _tmp124 + _tmp122) +
                 Scalar(1.0) * _tmp132 * (-_tmp116 * _tmp131 + _tmp129 * _tmp67) +
                 Scalar(1.0) * _tmp133 * (-_tmp116 * _tmp137 - _tmp134 * _tmp67 + Scalar(1.0)) +
                 Scalar(1.0) * _tmp54 * (_tmp67 * _tmp68 - _tmp67)));
  const Scalar _tmp148 = Scalar(1.4083112389913199) * _tmp145;
  const Scalar _tmp149 = std::pow(Scalar(-_tmp69 + p_b(0, 0)), Scalar(2)) +
                         std::pow(Scalar(-_tmp71 + p_b(1, 0)), Scalar(2));
  const Scalar _tmp150 = _tmp54 * _tmp67;
  const Scalar _tmp151 = _tmp85 * fh1;
  const Scalar _tmp152 = _tmp133 * _tmp138;
  const Scalar _tmp153 = -_tmp101 * _tmp152 + _tmp117 * _tmp144 * _tmp151 - _tmp125 * _tmp143 +
                         _tmp140 * _tmp151 * _tmp52;
  const Scalar _tmp154 = Scalar(1.0) / (_tmp153);
  const Scalar _tmp155 =
      std::asinh(_tmp154 * (_tmp115 * _tmp118 * _tmp61 + _tmp119 * _tmp121 * _tmp61 +
                            _tmp124 * _tmp125 * _tmp61 + _tmp131 * _tmp132 * _tmp61 +
                            _tmp133 * _tmp137 * _tmp61 - _tmp150 * _tmp68));
  const Scalar _tmp156 = Scalar(1.4083112389913199) * _tmp153;
  const Scalar _tmp157 =
      _tmp107 * _tmp113 * _tmp118 + _tmp107 * _tmp130 * _tmp132 + _tmp123 * _tmp125 + _tmp152;
  const Scalar _tmp158 = Scalar(1.0) / (_tmp157);
  const Scalar _tmp159 =
      std::asinh(_tmp158 * (-_tmp111 * _tmp118 * _tmp66 - _tmp119 * _tmp120 - _tmp122 * _tmp125 -
                            _tmp129 * _tmp132 * _tmp66 + _tmp133 * _tmp136 + _tmp150));
  const Scalar _tmp160 = std::pow(Scalar(-_tmp93 + p_d(0, 0)), Scalar(2)) +
                         std::pow(Scalar(-_tmp95 + p_d(1, 0)), Scalar(2));
  const Scalar _tmp161 = Scalar(1.4083112389913199) * _tmp157;

  // Output terms (1)
  Eigen::Matrix<Scalar, 4, 1> _res;

  _res(0, 0) =
      _tmp36 *
          (-std::sinh(Scalar(1.0) * _tmp35) - std::sinh(Scalar(0.71007031138673404) * _tmp34 *
                                                        (-std::sqrt(_tmp33) - _tmp35 * _tmp36))) -
      std::sqrt(Scalar(_tmp33 +
                       std::pow(Scalar(-_tmp15 + p_c(2, 0) - position_vector(2, 0)), Scalar(2))));
  _res(1, 0) =
      _tmp148 * (-std::sinh(Scalar(1.0) * _tmp147) -
                 std::sinh(Scalar(0.71007031138673404) * _tmp146 *
                           (-_tmp147 * _tmp148 - std::sqrt(_tmp48)))) -
      std::sqrt(Scalar(_tmp48 +
                       std::pow(Scalar(-_tmp39 + p_a(2, 0) - position_vector(2, 0)), Scalar(2))));
  _res(2, 0) =
      _tmp156 * (-std::sinh(Scalar(1.0) * _tmp155) -
                 std::sinh(Scalar(0.71007031138673404) * _tmp154 *
                           (-std::sqrt(_tmp149) - _tmp155 * _tmp156))) -
      std::sqrt(Scalar(_tmp149 +
                       std::pow(Scalar(-_tmp87 + p_b(2, 0) - position_vector(2, 0)), Scalar(2))));
  _res(3, 0) =
      _tmp161 * (-std::sinh(Scalar(1.0) * _tmp159) -
                 std::sinh(Scalar(0.71007031138673404) * _tmp158 *
                           (-_tmp159 * _tmp161 - std::sqrt(_tmp160)))) -
      std::sqrt(Scalar(_tmp160 +
                       std::pow(Scalar(-_tmp103 + p_d(2, 0) - position_vector(2, 0)), Scalar(2))));

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
