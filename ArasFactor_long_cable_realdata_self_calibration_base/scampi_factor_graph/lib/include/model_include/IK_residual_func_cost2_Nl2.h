// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

#include <sym/rot3.h>

namespace sym {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: IK_residual_func_cost2_Nl2
 *
 * Args:
 *     fh1: Scalar
 *     fv1: Scalar
 *     DeltaRot: Rot3
 *     position_vector: Matrix31
 *     encoder: Matrix41
 *     p_a: Matrix31
 *     p_b: Matrix31
 *     p_c: Matrix31
 *     p_d: Matrix31
 *     Rot_init: Rot3
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix41
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 4, 1> IkResidualFuncCost2Nl2(
    const Scalar fh1, const Scalar fv1, const sym::Rot3<Scalar>& DeltaRot,
    const Eigen::Matrix<Scalar, 3, 1>& position_vector, const Eigen::Matrix<Scalar, 4, 1>& encoder,
    const Eigen::Matrix<Scalar, 3, 1>& p_a, const Eigen::Matrix<Scalar, 3, 1>& p_b,
    const Eigen::Matrix<Scalar, 3, 1>& p_c, const Eigen::Matrix<Scalar, 3, 1>& p_d,
    const sym::Rot3<Scalar>& Rot_init, const Scalar epsilon) {
  // Total ops: 497

  // Unused inputs
  (void)encoder;
  (void)epsilon;

  // Input arrays
  const Eigen::Matrix<Scalar, 4, 1>& _DeltaRot = DeltaRot.Data();
  const Eigen::Matrix<Scalar, 4, 1>& _Rot_init = Rot_init.Data();

  // Intermediate terms (161)
  const Scalar _tmp0 = Scalar(1.0) / (fh1);
  const Scalar _tmp1 = _DeltaRot[0] * _Rot_init[3] - _DeltaRot[1] * _Rot_init[2] +
                       _DeltaRot[2] * _Rot_init[1] + _DeltaRot[3] * _Rot_init[0];
  const Scalar _tmp2 = -2 * std::pow(_tmp1, Scalar(2));
  const Scalar _tmp3 = -_DeltaRot[0] * _Rot_init[1] + _DeltaRot[1] * _Rot_init[0] +
                       _DeltaRot[2] * _Rot_init[3] + _DeltaRot[3] * _Rot_init[2];
  const Scalar _tmp4 = -2 * std::pow(_tmp3, Scalar(2));
  const Scalar _tmp5 = Scalar(0.20999999999999999) * _tmp2 + Scalar(0.20999999999999999) * _tmp4 +
                       Scalar(0.20999999999999999);
  const Scalar _tmp6 = -_tmp5;
  const Scalar _tmp7 = _DeltaRot[0] * _Rot_init[2] + _DeltaRot[1] * _Rot_init[3] -
                       _DeltaRot[2] * _Rot_init[0] + _DeltaRot[3] * _Rot_init[1];
  const Scalar _tmp8 = 2 * _tmp1;
  const Scalar _tmp9 = _tmp7 * _tmp8;
  const Scalar _tmp10 = -2 * _DeltaRot[0] * _Rot_init[0] - 2 * _DeltaRot[1] * _Rot_init[1] -
                        2 * _DeltaRot[2] * _Rot_init[2] + 2 * _DeltaRot[3] * _Rot_init[3];
  const Scalar _tmp11 = _tmp10 * _tmp3;
  const Scalar _tmp12 = Scalar(0.20999999999999999) * _tmp11 + Scalar(0.20999999999999999) * _tmp9;
  const Scalar _tmp13 = 2 * _tmp3 * _tmp7;
  const Scalar _tmp14 = _tmp1 * _tmp10;
  const Scalar _tmp15 = _tmp13 - _tmp14;
  const Scalar _tmp16 = -Scalar(0.010999999999999999) * _tmp15;
  const Scalar _tmp17 = -_tmp12 + _tmp16;
  const Scalar _tmp18 = _tmp17 + _tmp6;
  const Scalar _tmp19 = _tmp18 + position_vector(1, 0);
  const Scalar _tmp20 = -Scalar(0.20999999999999999) * _tmp11 + Scalar(0.20999999999999999) * _tmp9;
  const Scalar _tmp21 = -_tmp20;
  const Scalar _tmp22 = _tmp3 * _tmp8;
  const Scalar _tmp23 = _tmp10 * _tmp7;
  const Scalar _tmp24 = _tmp22 + _tmp23;
  const Scalar _tmp25 = -Scalar(0.010999999999999999) * _tmp24;
  const Scalar _tmp26 = 1 - 2 * std::pow(_tmp7, Scalar(2));
  const Scalar _tmp27 = Scalar(0.20999999999999999) * _tmp26 + Scalar(0.20999999999999999) * _tmp4;
  const Scalar _tmp28 = _tmp25 - _tmp27;
  const Scalar _tmp29 = _tmp21 + _tmp28;
  const Scalar _tmp30 = _tmp29 + position_vector(0, 0);
  const Scalar _tmp31 = std::pow(Scalar(-_tmp19 + p_a(1, 0)), Scalar(2)) +
                        std::pow(Scalar(-_tmp30 + p_a(0, 0)), Scalar(2));
  const Scalar _tmp32 = std::asinh(_tmp0 * fv1);
  const Scalar _tmp33 = Scalar(1.4083112389913199) * fh1;
  const Scalar _tmp34 = Scalar(0.20999999999999999) * _tmp22 - Scalar(0.20999999999999999) * _tmp23;
  const Scalar _tmp35 = -_tmp34;
  const Scalar _tmp36 =
      -Scalar(0.010999999999999999) * _tmp2 - Scalar(0.010999999999999999) * _tmp26;
  const Scalar _tmp37 = Scalar(0.20999999999999999) * _tmp13 + Scalar(0.20999999999999999) * _tmp14;
  const Scalar _tmp38 = _tmp36 - _tmp37;
  const Scalar _tmp39 = _tmp35 + _tmp38;
  const Scalar _tmp40 = _tmp36 + _tmp37;
  const Scalar _tmp41 = _tmp34 + _tmp40;
  const Scalar _tmp42 = _tmp12 + _tmp16;
  const Scalar _tmp43 = _tmp42 + _tmp5;
  const Scalar _tmp44 = _tmp43 + position_vector(1, 0);
  const Scalar _tmp45 = _tmp25 + _tmp27;
  const Scalar _tmp46 = _tmp20 + _tmp45;
  const Scalar _tmp47 = _tmp46 + position_vector(0, 0);
  const Scalar _tmp48 = std::pow(Scalar(-_tmp44 + p_c(1, 0)), Scalar(2)) +
                        std::pow(Scalar(-_tmp47 + p_c(0, 0)), Scalar(2));
  const Scalar _tmp49 = _tmp20 + _tmp28;
  const Scalar _tmp50 = _tmp49 + position_vector(0, 0);
  const Scalar _tmp51 = _tmp50 - p_d(0, 0);
  const Scalar _tmp52 = _tmp17 + _tmp5;
  const Scalar _tmp53 = _tmp52 + position_vector(1, 0);
  const Scalar _tmp54 = _tmp53 - p_d(1, 0);
  const Scalar _tmp55 = std::pow(Scalar(std::pow(_tmp51, Scalar(2)) + std::pow(_tmp54, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp56 = _tmp51 * _tmp55;
  const Scalar _tmp57 = _tmp47 - p_c(0, 0);
  const Scalar _tmp58 = _tmp44 - p_c(1, 0);
  const Scalar _tmp59 =
      std::sqrt(Scalar(std::pow(_tmp57, Scalar(2)) + std::pow(_tmp58, Scalar(2))));
  const Scalar _tmp60 = Scalar(1.0) / (_tmp59);
  const Scalar _tmp61 = Scalar(1.0) / (_tmp57);
  const Scalar _tmp62 = _tmp59 * _tmp61;
  const Scalar _tmp63 = _tmp62 * (-_tmp43 * _tmp57 * _tmp60 + _tmp46 * _tmp58 * _tmp60);
  const Scalar _tmp64 = _tmp21 + _tmp45;
  const Scalar _tmp65 = _tmp64 + position_vector(0, 0);
  const Scalar _tmp66 = _tmp65 - p_b(0, 0);
  const Scalar _tmp67 = _tmp42 + _tmp6;
  const Scalar _tmp68 = _tmp67 + position_vector(1, 0);
  const Scalar _tmp69 = _tmp68 - p_b(1, 0);
  const Scalar _tmp70 = std::pow(Scalar(std::pow(_tmp66, Scalar(2)) + std::pow(_tmp69, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp71 = _tmp69 * _tmp70;
  const Scalar _tmp72 = _tmp66 * _tmp70;
  const Scalar _tmp73 = _tmp63 * _tmp72 - _tmp64 * _tmp71 + _tmp67 * _tmp72;
  const Scalar _tmp74 = _tmp54 * _tmp55;
  const Scalar _tmp75 = _tmp58 * _tmp61;
  const Scalar _tmp76 = _tmp56 * _tmp75 - _tmp74;
  const Scalar _tmp77 = Scalar(1.0) / (-_tmp71 + _tmp72 * _tmp75);
  const Scalar _tmp78 = _tmp76 * _tmp77;
  const Scalar _tmp79 = -_tmp49 * _tmp74 + _tmp52 * _tmp56 + _tmp56 * _tmp63 - _tmp73 * _tmp78;
  const Scalar _tmp80 = Scalar(1.0) / (_tmp79);
  const Scalar _tmp81 = Scalar(1.0) * _tmp80;
  const Scalar _tmp82 = Scalar(1.0) * _tmp77;
  const Scalar _tmp83 = _tmp76 * _tmp80 * _tmp82;
  const Scalar _tmp84 = _tmp30 - p_a(0, 0);
  const Scalar _tmp85 = _tmp19 - p_a(1, 0);
  const Scalar _tmp86 = std::pow(Scalar(std::pow(_tmp84, Scalar(2)) + std::pow(_tmp85, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp87 = _tmp84 * _tmp86;
  const Scalar _tmp88 = _tmp85 * _tmp86;
  const Scalar _tmp89 = fh1 * (-_tmp18 * _tmp87 + _tmp29 * _tmp88);
  const Scalar _tmp90 = Scalar(333.54000000000002) - fv1;
  const Scalar _tmp91 = _tmp35 + _tmp40;
  const Scalar _tmp92 = _tmp34 + _tmp38;
  const Scalar _tmp93 = _tmp41 * _tmp72;
  const Scalar _tmp94 = -_tmp72 * _tmp92 + _tmp93;
  const Scalar _tmp95 = _tmp41 * _tmp75;
  const Scalar _tmp96 = _tmp71 * _tmp92 - _tmp75 * _tmp93;
  const Scalar _tmp97 = -_tmp56 * _tmp95 + _tmp74 * _tmp91 - _tmp78 * _tmp96;
  const Scalar _tmp98 = Scalar(1.0) * _tmp43;
  const Scalar _tmp99 = -_tmp98;
  const Scalar _tmp100 = Scalar(1.0) / (_tmp67 + _tmp99);
  const Scalar _tmp101 = Scalar(1.0) * _tmp46;
  const Scalar _tmp102 = _tmp100 * (_tmp101 - _tmp64);
  const Scalar _tmp103 = -_tmp102 * _tmp97 + _tmp41 * _tmp56 - _tmp56 * _tmp91 - _tmp78 * _tmp94;
  const Scalar _tmp104 = Scalar(1.0) / (_tmp103);
  const Scalar _tmp105 = _tmp101 + _tmp102 * _tmp98;
  const Scalar _tmp106 = 0;
  const Scalar _tmp107 = _tmp104 * _tmp106;
  const Scalar _tmp108 = _tmp72 * _tmp77;
  const Scalar _tmp109 = _tmp104 * _tmp76;
  const Scalar _tmp110 = _tmp106 * _tmp109;
  const Scalar _tmp111 = _tmp75 * _tmp77;
  const Scalar _tmp112 = _tmp111 * _tmp96 + _tmp95;
  const Scalar _tmp113 = -_tmp102 * _tmp112 + _tmp111 * _tmp94 - _tmp41;
  const Scalar _tmp114 = _tmp104 * _tmp79;
  const Scalar _tmp115 = _tmp103 * _tmp80;
  const Scalar _tmp116 = _tmp115 * (_tmp111 * _tmp73 - _tmp113 * _tmp114 - _tmp63);
  const Scalar _tmp117 = _tmp113 + _tmp116;
  const Scalar _tmp118 = -_tmp109 * _tmp117 - _tmp75;
  const Scalar _tmp119 = _tmp104 * _tmp56;
  const Scalar _tmp120 = _tmp87 * fh1;
  const Scalar _tmp121 = _tmp82 * _tmp96;
  const Scalar _tmp122 = _tmp102 * _tmp121 - _tmp82 * _tmp94;
  const Scalar _tmp123 = _tmp115 * (-_tmp114 * _tmp122 - _tmp73 * _tmp82);
  const Scalar _tmp124 = _tmp122 + _tmp123;
  const Scalar _tmp125 = -_tmp109 * _tmp124 + Scalar(1.0);
  const Scalar _tmp126 = _tmp88 * fh1;
  const Scalar _tmp127 = -_tmp120 * _tmp62 * (_tmp108 * _tmp118 + _tmp117 * _tmp119 + Scalar(1.0)) -
                         _tmp126 * _tmp62 * (_tmp108 * _tmp125 + _tmp119 * _tmp124) -
                         _tmp62 * _tmp89 * (_tmp56 * _tmp81 - _tmp72 * _tmp83) -
                         _tmp62 * _tmp90 * (_tmp107 * _tmp56 - _tmp108 * _tmp110);
  const Scalar _tmp128 = Scalar(1.0) / (_tmp127);
  const Scalar _tmp129 = _tmp39 * fh1;
  const Scalar _tmp130 = _tmp129 * _tmp87 + Scalar(40.024799999999999) * _tmp24 + _tmp29 * fv1;
  const Scalar _tmp131 = _tmp52 + _tmp99;
  const Scalar _tmp132 = _tmp102 * _tmp131;
  const Scalar _tmp133 = Scalar(1.0) / (_tmp101 - _tmp132 - _tmp49);
  const Scalar _tmp134 = Scalar(1.0) * _tmp133;
  const Scalar _tmp135 = _tmp100 * _tmp131;
  const Scalar _tmp136 = _tmp104 * _tmp97;
  const Scalar _tmp137 = _tmp105 * _tmp133;
  const Scalar _tmp138 = -_tmp106 * _tmp136 - _tmp131 * _tmp137 + _tmp99;
  const Scalar _tmp139 = Scalar(1.0) * _tmp100;
  const Scalar _tmp140 = _tmp131 * _tmp133;
  const Scalar _tmp141 = -_tmp121 + _tmp123 * _tmp140 - _tmp124 * _tmp136;
  const Scalar _tmp142 = -_tmp129 * _tmp88 - Scalar(40.024799999999999) * _tmp15 - _tmp18 * fv1;
  const Scalar _tmp143 = _tmp102 * _tmp134;
  const Scalar _tmp144 = _tmp100 * (_tmp132 * _tmp134 + Scalar(1.0));
  const Scalar _tmp145 = _tmp112 + _tmp116 * _tmp140 - _tmp117 * _tmp136;
  const Scalar _tmp146 = _tmp115 * _tmp134;
  const Scalar _tmp147 = _tmp131 * _tmp146 - _tmp81 * _tmp97;
  const Scalar _tmp148 = std::asinh(
      _tmp128 * (Scalar(1.0) * _tmp120 * (_tmp116 * _tmp134 - _tmp139 * _tmp145) +
                 Scalar(1.0) * _tmp126 * (_tmp123 * _tmp134 - _tmp139 * _tmp141) +
                 Scalar(1.0) * _tmp130 * (_tmp134 * _tmp135 - _tmp134) +
                 Scalar(1.0) * _tmp142 * (_tmp143 - Scalar(1.0) * _tmp144) +
                 Scalar(1.0) * _tmp89 * (-_tmp139 * _tmp147 + _tmp146) +
                 Scalar(1.0) * _tmp90 * (-_tmp105 * _tmp134 - _tmp138 * _tmp139 + Scalar(1.0))));
  const Scalar _tmp149 = Scalar(1.4083112389913199) * _tmp127;
  const Scalar _tmp150 = -_tmp110 * _tmp77 * _tmp90 + _tmp118 * _tmp120 * _tmp77 +
                         _tmp125 * _tmp126 * _tmp77 - _tmp83 * _tmp89;
  const Scalar _tmp151 = Scalar(1.0) / (_tmp150);
  const Scalar _tmp152 = _tmp130 * _tmp134;
  const Scalar _tmp153 =
      std::asinh(_tmp151 * (_tmp100 * _tmp120 * _tmp145 + _tmp100 * _tmp126 * _tmp141 +
                            _tmp100 * _tmp138 * _tmp90 + _tmp100 * _tmp147 * _tmp89 -
                            _tmp135 * _tmp152 + _tmp142 * _tmp144));
  const Scalar _tmp154 = std::pow(Scalar(-_tmp65 + p_b(0, 0)), Scalar(2)) +
                         std::pow(Scalar(-_tmp68 + p_b(1, 0)), Scalar(2));
  const Scalar _tmp155 = Scalar(1.4083112389913199) * _tmp150;
  const Scalar _tmp156 = std::pow(Scalar(-_tmp50 + p_d(0, 0)), Scalar(2)) +
                         std::pow(Scalar(-_tmp53 + p_d(1, 0)), Scalar(2));
  const Scalar _tmp157 = _tmp104 * _tmp117 * _tmp120 + _tmp104 * _tmp124 * _tmp126 +
                         _tmp107 * _tmp90 + _tmp81 * _tmp89;
  const Scalar _tmp158 = Scalar(1.0) / (_tmp157);
  const Scalar _tmp159 =
      std::asinh(_tmp158 * (-_tmp116 * _tmp120 * _tmp133 - _tmp123 * _tmp126 * _tmp133 +
                            _tmp137 * _tmp90 - _tmp142 * _tmp143 - _tmp146 * _tmp89 + _tmp152));
  const Scalar _tmp160 = Scalar(1.4083112389913199) * _tmp157;

  // Output terms (1)
  Eigen::Matrix<Scalar, 4, 1> _res;

  _res(0, 0) =
      _tmp33 *
          (-std::sinh(Scalar(1.0) * _tmp32) - std::sinh(Scalar(0.71007031138673404) * _tmp0 *
                                                        (-std::sqrt(_tmp31) - _tmp32 * _tmp33))) -
      std::sqrt(Scalar(_tmp31 +
                       std::pow(Scalar(-_tmp39 + p_a(2, 0) - position_vector(2, 0)), Scalar(2))));
  _res(1, 0) =
      _tmp149 * (-std::sinh(Scalar(1.0) * _tmp148) -
                 std::sinh(Scalar(0.71007031138673404) * _tmp128 *
                           (-_tmp148 * _tmp149 - std::sqrt(_tmp48)))) -
      std::sqrt(Scalar(_tmp48 +
                       std::pow(Scalar(-_tmp41 + p_c(2, 0) - position_vector(2, 0)), Scalar(2))));
  _res(2, 0) =
      _tmp155 * (-std::sinh(Scalar(1.0) * _tmp153) -
                 std::sinh(Scalar(0.71007031138673404) * _tmp151 *
                           (-_tmp153 * _tmp155 - std::sqrt(_tmp154)))) -
      std::sqrt(Scalar(_tmp154 +
                       std::pow(Scalar(-_tmp92 + p_b(2, 0) - position_vector(2, 0)), Scalar(2))));
  _res(3, 0) =
      _tmp160 * (-std::sinh(Scalar(1.0) * _tmp159) -
                 std::sinh(Scalar(0.71007031138673404) * _tmp158 *
                           (-std::sqrt(_tmp156) - _tmp159 * _tmp160))) -
      std::sqrt(Scalar(_tmp156 +
                       std::pow(Scalar(-_tmp91 + p_d(2, 0) - position_vector(2, 0)), Scalar(2))));

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
