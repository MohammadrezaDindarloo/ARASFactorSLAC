// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

#include <sym/rot3.h>

namespace sym {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: IK_residual_func_cost3_wrt_pa_Nl20
 *
 * Args:
 *     fh1: Scalar
 *     fv1: Scalar
 *     DeltaRot: Rot3
 *     position_vector: Matrix31
 *     encoder: Matrix41
 *     p_a: Matrix31
 *     p_b: Matrix31
 *     p_c: Matrix31
 *     p_d: Matrix31
 *     Rot_init: Rot3
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix43
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 4, 3> IkResidualFuncCost3WrtPaNl20(
    const Scalar fh1, const Scalar fv1, const sym::Rot3<Scalar>& DeltaRot,
    const Eigen::Matrix<Scalar, 3, 1>& position_vector, const Eigen::Matrix<Scalar, 4, 1>& encoder,
    const Eigen::Matrix<Scalar, 3, 1>& p_a, const Eigen::Matrix<Scalar, 3, 1>& p_b,
    const Eigen::Matrix<Scalar, 3, 1>& p_c, const Eigen::Matrix<Scalar, 3, 1>& p_d,
    const sym::Rot3<Scalar>& Rot_init, const Scalar epsilon) {
  // Total ops: 667

  // Unused inputs
  (void)encoder;
  (void)epsilon;

  // Input arrays
  const Eigen::Matrix<Scalar, 4, 1>& _DeltaRot = DeltaRot.Data();
  const Eigen::Matrix<Scalar, 4, 1>& _Rot_init = Rot_init.Data();

  // Intermediate terms (220)
  const Scalar _tmp0 = _DeltaRot[0] * _Rot_init[2] + _DeltaRot[1] * _Rot_init[3] -
                       _DeltaRot[2] * _Rot_init[0] + _DeltaRot[3] * _Rot_init[1];
  const Scalar _tmp1 = _DeltaRot[0] * _Rot_init[3] - _DeltaRot[1] * _Rot_init[2] +
                       _DeltaRot[2] * _Rot_init[1] + _DeltaRot[3] * _Rot_init[0];
  const Scalar _tmp2 = 2 * _tmp0 * _tmp1;
  const Scalar _tmp3 = -_DeltaRot[0] * _Rot_init[1] + _DeltaRot[1] * _Rot_init[0] +
                       _DeltaRot[2] * _Rot_init[3] + _DeltaRot[3] * _Rot_init[2];
  const Scalar _tmp4 = -2 * _DeltaRot[0] * _Rot_init[0] - 2 * _DeltaRot[1] * _Rot_init[1] -
                       2 * _DeltaRot[2] * _Rot_init[2] + 2 * _DeltaRot[3] * _Rot_init[3];
  const Scalar _tmp5 = _tmp3 * _tmp4;
  const Scalar _tmp6 = Scalar(0.20999999999999999) * _tmp2 - Scalar(0.20999999999999999) * _tmp5;
  const Scalar _tmp7 = -_tmp6;
  const Scalar _tmp8 = 2 * _tmp3;
  const Scalar _tmp9 = _tmp1 * _tmp8;
  const Scalar _tmp10 = _tmp0 * _tmp4;
  const Scalar _tmp11 =
      -Scalar(0.010999999999999999) * _tmp10 - Scalar(0.010999999999999999) * _tmp9;
  const Scalar _tmp12 = -2 * std::pow(_tmp0, Scalar(2));
  const Scalar _tmp13 = 1 - 2 * std::pow(_tmp3, Scalar(2));
  const Scalar _tmp14 = Scalar(0.20999999999999999) * _tmp12 + Scalar(0.20999999999999999) * _tmp13;
  const Scalar _tmp15 = _tmp11 - _tmp14;
  const Scalar _tmp16 = _tmp15 + _tmp7;
  const Scalar _tmp17 = _tmp16 - p_a(0, 0) + position_vector(0, 0);
  const Scalar _tmp18 = std::pow(_tmp17, Scalar(2));
  const Scalar _tmp19 = Scalar(0.20999999999999999) * _tmp2 + Scalar(0.20999999999999999) * _tmp5;
  const Scalar _tmp20 = -_tmp19;
  const Scalar _tmp21 = _tmp0 * _tmp8;
  const Scalar _tmp22 = _tmp1 * _tmp4;
  const Scalar _tmp23 =
      -Scalar(0.010999999999999999) * _tmp21 + Scalar(0.010999999999999999) * _tmp22;
  const Scalar _tmp24 = -2 * std::pow(_tmp1, Scalar(2));
  const Scalar _tmp25 = Scalar(0.20999999999999999) * _tmp13 + Scalar(0.20999999999999999) * _tmp24;
  const Scalar _tmp26 = _tmp23 - _tmp25;
  const Scalar _tmp27 = _tmp20 + _tmp26;
  const Scalar _tmp28 = _tmp27 - p_a(1, 0) + position_vector(1, 0);
  const Scalar _tmp29 = std::pow(_tmp28, Scalar(2));
  const Scalar _tmp30 = _tmp18 + _tmp29;
  const Scalar _tmp31 = std::pow(_tmp30, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp32 = -Scalar(0.010999999999999999) * _tmp12 -
                        Scalar(0.010999999999999999) * _tmp24 + Scalar(-0.010999999999999999);
  const Scalar _tmp33 = -Scalar(0.20999999999999999) * _tmp10 + Scalar(0.20999999999999999) * _tmp9;
  const Scalar _tmp34 = Scalar(0.20999999999999999) * _tmp21 + Scalar(0.20999999999999999) * _tmp22;
  const Scalar _tmp35 = -_tmp34;
  const Scalar _tmp36 = _tmp32 - _tmp33 + _tmp35;
  const Scalar _tmp37 = _tmp31 * _tmp36;
  const Scalar _tmp38 = _tmp32 + _tmp33;
  const Scalar _tmp39 = _tmp35 + _tmp38;
  const Scalar _tmp40 = _tmp31 * _tmp39;
  const Scalar _tmp41 = _tmp17 * _tmp40;
  const Scalar _tmp42 = -_tmp17 * _tmp37 + _tmp41;
  const Scalar _tmp43 = _tmp11 + _tmp14;
  const Scalar _tmp44 = _tmp43 + _tmp7;
  const Scalar _tmp45 = _tmp44 - p_b(0, 0) + position_vector(0, 0);
  const Scalar _tmp46 = Scalar(1.0) / (_tmp45);
  const Scalar _tmp47 = _tmp19 + _tmp26;
  const Scalar _tmp48 = _tmp47 - p_b(1, 0) + position_vector(1, 0);
  const Scalar _tmp49 = _tmp46 * _tmp48;
  const Scalar _tmp50 = _tmp31 * _tmp49;
  const Scalar _tmp51 = _tmp28 * _tmp31;
  const Scalar _tmp52 = _tmp17 * _tmp50 - _tmp51;
  const Scalar _tmp53 = Scalar(1.0) / (_tmp52);
  const Scalar _tmp54 = Scalar(1.0) * _tmp53;
  const Scalar _tmp55 = _tmp28 * _tmp37 - _tmp41 * _tmp49;
  const Scalar _tmp56 = Scalar(1.0) * _tmp47;
  const Scalar _tmp57 = Scalar(1.0) * _tmp44;
  const Scalar _tmp58 = (-_tmp16 + _tmp57) / (_tmp27 - _tmp56);
  const Scalar _tmp59 = _tmp54 * _tmp58;
  const Scalar _tmp60 = -_tmp42 * _tmp54 + _tmp55 * _tmp59;
  const Scalar _tmp61 = _tmp43 + _tmp6;
  const Scalar _tmp62 = _tmp61 - p_c(0, 0) + position_vector(0, 0);
  const Scalar _tmp63 = _tmp23 + _tmp25;
  const Scalar _tmp64 = _tmp19 + _tmp63;
  const Scalar _tmp65 = _tmp64 - p_c(1, 0) + position_vector(1, 0);
  const Scalar _tmp66 = std::pow(Scalar(std::pow(_tmp62, Scalar(2)) + std::pow(_tmp65, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp67 = _tmp62 * _tmp66;
  const Scalar _tmp68 = _tmp65 * _tmp66;
  const Scalar _tmp69 = _tmp49 * _tmp67 - _tmp68;
  const Scalar _tmp70 = _tmp53 * _tmp69;
  const Scalar _tmp71 = _tmp39 * _tmp67;
  const Scalar _tmp72 = _tmp34 + _tmp38;
  const Scalar _tmp73 = -_tmp42 * _tmp70 -
                        _tmp58 * (-_tmp49 * _tmp71 - _tmp55 * _tmp70 + _tmp68 * _tmp72) -
                        _tmp67 * _tmp72 + _tmp71;
  const Scalar _tmp74 = Scalar(1.0) / (_tmp73);
  const Scalar _tmp75 =
      std::sqrt(Scalar(std::pow(_tmp45, Scalar(2)) + std::pow(_tmp48, Scalar(2))));
  const Scalar _tmp76 = Scalar(1.0) / (_tmp75);
  const Scalar _tmp77 = _tmp46 * _tmp75;
  const Scalar _tmp78 = _tmp77 * (_tmp44 * _tmp48 * _tmp76 - _tmp45 * _tmp47 * _tmp76);
  const Scalar _tmp79 = _tmp27 * _tmp31;
  const Scalar _tmp80 = _tmp31 * _tmp78;
  const Scalar _tmp81 = -_tmp16 * _tmp51 + _tmp17 * _tmp79 + _tmp17 * _tmp80;
  const Scalar _tmp82 = -_tmp61 * _tmp68 + _tmp64 * _tmp67 + _tmp67 * _tmp78 - _tmp70 * _tmp81;
  const Scalar _tmp83 = _tmp74 * _tmp82;
  const Scalar _tmp84 = -_tmp54 * _tmp81 - _tmp60 * _tmp83;
  const Scalar _tmp85 = Scalar(1.0) / (_tmp82);
  const Scalar _tmp86 = _tmp73 * _tmp85;
  const Scalar _tmp87 = _tmp60 + _tmp84 * _tmp86;
  const Scalar _tmp88 = _tmp67 * _tmp74;
  const Scalar _tmp89 = _tmp69 * _tmp74;
  const Scalar _tmp90 = -_tmp87 * _tmp89 + Scalar(1.0);
  const Scalar _tmp91 = _tmp31 * _tmp53;
  const Scalar _tmp92 = _tmp90 * _tmp91;
  const Scalar _tmp93 = _tmp15 + _tmp6;
  const Scalar _tmp94 = _tmp93 - p_d(0, 0) + position_vector(0, 0);
  const Scalar _tmp95 = _tmp20 + _tmp63;
  const Scalar _tmp96 = _tmp95 - p_d(1, 0) + position_vector(1, 0);
  const Scalar _tmp97 = std::pow(Scalar(std::pow(_tmp94, Scalar(2)) + std::pow(_tmp96, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp98 = _tmp96 * _tmp97;
  const Scalar _tmp99 = _tmp77 * fh1;
  const Scalar _tmp100 = _tmp98 * _tmp99;
  const Scalar _tmp101 = _tmp49 * _tmp53;
  const Scalar _tmp102 = _tmp39 * _tmp49;
  const Scalar _tmp103 = _tmp101 * _tmp42 - _tmp39 - _tmp58 * (_tmp101 * _tmp55 + _tmp102);
  const Scalar _tmp104 = _tmp101 * _tmp81 - _tmp103 * _tmp83 - _tmp78;
  const Scalar _tmp105 = _tmp103 + _tmp104 * _tmp86;
  const Scalar _tmp106 = -_tmp105 * _tmp89 - _tmp49;
  const Scalar _tmp107 = _tmp106 * _tmp91;
  const Scalar _tmp108 = _tmp94 * _tmp97;
  const Scalar _tmp109 = _tmp108 * _tmp99;
  const Scalar _tmp110 = Scalar(1.0) * _tmp85;
  const Scalar _tmp111 = _tmp17 * _tmp31;
  const Scalar _tmp112 = _tmp111 * _tmp70;
  const Scalar _tmp113 = fh1 * (-_tmp108 * _tmp95 + _tmp93 * _tmp98);
  const Scalar _tmp114 = _tmp113 * _tmp77;
  const Scalar _tmp115 = _tmp56 * _tmp58 + _tmp57;
  const Scalar _tmp116 = 0;
  const Scalar _tmp117 = _tmp116 * _tmp74;
  const Scalar _tmp118 = Scalar(333.54000000000002) - fv1;
  const Scalar _tmp119 = _tmp118 * _tmp77;
  const Scalar _tmp120 = std::exp(_tmp100 * (_tmp17 * _tmp92 + _tmp87 * _tmp88) +
                                  _tmp109 * (_tmp105 * _tmp88 + _tmp107 * _tmp17 + Scalar(1.0)) +
                                  _tmp114 * (-_tmp110 * _tmp112 + _tmp110 * _tmp67) +
                                  _tmp119 * (-_tmp112 * _tmp117 + _tmp116 * _tmp88));
  const Scalar _tmp121 = std::pow(_tmp30, Scalar(Scalar(-3) / Scalar(2)));
  const Scalar _tmp122 = _tmp121 * _tmp18;
  const Scalar _tmp123 = _tmp122 * _tmp39;
  const Scalar _tmp124 = _tmp121 * _tmp17 * _tmp28;
  const Scalar _tmp125 = _tmp124 * _tmp36;
  const Scalar _tmp126 = -_tmp123 * _tmp49 + _tmp125 + _tmp40 * _tmp49;
  const Scalar _tmp127 = _tmp122 * _tmp49 - _tmp124 - _tmp50;
  const Scalar _tmp128 = _tmp127 * _tmp69;
  const Scalar _tmp129 = std::pow(_tmp52, Scalar(-2));
  const Scalar _tmp130 = _tmp129 * _tmp55;
  const Scalar _tmp131 = -_tmp122 * _tmp36 + _tmp123 + _tmp37 - _tmp40;
  const Scalar _tmp132 = _tmp129 * _tmp42;
  const Scalar _tmp133 = _tmp132 * _tmp69;
  const Scalar _tmp134 =
      _tmp127 * _tmp133 - _tmp131 * _tmp70 - _tmp58 * (-_tmp126 * _tmp70 + _tmp128 * _tmp130);
  const Scalar _tmp135 = std::pow(_tmp73, Scalar(-2));
  const Scalar _tmp136 = _tmp134 * _tmp135;
  const Scalar _tmp137 = _tmp116 * _tmp67;
  const Scalar _tmp138 = _tmp31 * _tmp70;
  const Scalar _tmp139 = _tmp112 * _tmp116;
  const Scalar _tmp140 = _tmp122 * _tmp70;
  const Scalar _tmp141 = _tmp127 * _tmp129;
  const Scalar _tmp142 = _tmp111 * _tmp116 * _tmp89;
  const Scalar _tmp143 = _tmp122 * _tmp27 + _tmp122 * _tmp78 - _tmp124 * _tmp16 - _tmp79 - _tmp80;
  const Scalar _tmp144 = _tmp129 * _tmp81;
  const Scalar _tmp145 = _tmp128 * _tmp144 - _tmp143 * _tmp70;
  const Scalar _tmp146 = std::pow(_tmp82, Scalar(-2));
  const Scalar _tmp147 = Scalar(1.0) * _tmp146;
  const Scalar _tmp148 = _tmp112 * _tmp147;
  const Scalar _tmp149 = _tmp147 * _tmp67;
  const Scalar _tmp150 = Scalar(1.0) * _tmp127;
  const Scalar _tmp151 = _tmp129 * _tmp150 * _tmp69 * _tmp85;
  const Scalar _tmp152 = _tmp106 * _tmp111;
  const Scalar _tmp153 = _tmp136 * _tmp69;
  const Scalar _tmp154 = _tmp134 * _tmp85;
  const Scalar _tmp155 = _tmp136 * _tmp82;
  const Scalar _tmp156 = _tmp127 * _tmp49;
  const Scalar _tmp157 = _tmp145 * _tmp74;
  const Scalar _tmp158 =
      _tmp101 * _tmp131 - _tmp132 * _tmp156 - _tmp58 * (_tmp101 * _tmp126 - _tmp130 * _tmp156);
  const Scalar _tmp159 = _tmp146 * _tmp73;
  const Scalar _tmp160 = _tmp145 * _tmp159;
  const Scalar _tmp161 = _tmp104 * _tmp154 - _tmp104 * _tmp160 + _tmp158 +
                         _tmp86 * (_tmp101 * _tmp143 + _tmp103 * _tmp155 - _tmp103 * _tmp157 -
                                   _tmp144 * _tmp156 - _tmp158 * _tmp83);
  const Scalar _tmp162 = _tmp105 * _tmp153 - _tmp161 * _tmp89;
  const Scalar _tmp163 = _tmp17 * _tmp91;
  const Scalar _tmp164 = _tmp136 * _tmp67;
  const Scalar _tmp165 = _tmp122 * _tmp53;
  const Scalar _tmp166 =
      _tmp126 * _tmp59 - _tmp130 * _tmp150 * _tmp58 - _tmp131 * _tmp54 + _tmp132 * _tmp150;
  const Scalar _tmp167 = _tmp154 * _tmp84 - _tmp160 * _tmp84 + _tmp166 +
                         _tmp86 * (-_tmp143 * _tmp54 + _tmp144 * _tmp150 + _tmp155 * _tmp60 -
                                   _tmp157 * _tmp60 - _tmp166 * _tmp83);
  const Scalar _tmp168 = _tmp153 * _tmp87 - _tmp167 * _tmp89;
  const Scalar _tmp169 = _tmp111 * _tmp90;
  const Scalar _tmp170 = _tmp110 * _tmp113;
  const Scalar _tmp171 = _tmp116 * _tmp118;
  const Scalar _tmp172 = _tmp171 * _tmp74;
  const Scalar _tmp173 = _tmp53 * fh1;
  const Scalar _tmp174 = _tmp108 * _tmp173;
  const Scalar _tmp175 = _tmp173 * _tmp98;
  const Scalar _tmp176 =
      std::exp(-_tmp106 * _tmp174 + _tmp170 * _tmp70 + _tmp172 * _tmp70 - _tmp175 * _tmp90);
  const Scalar _tmp177 = _tmp98 * fh1;
  const Scalar _tmp178 = _tmp177 * _tmp90;
  const Scalar _tmp179 = _tmp113 * _tmp147;
  const Scalar _tmp180 = _tmp145 * _tmp179;
  const Scalar _tmp181 = _tmp171 * _tmp89;
  const Scalar _tmp182 = _tmp136 * _tmp171;
  const Scalar _tmp183 = _tmp108 * fh1;
  const Scalar _tmp184 = _tmp106 * _tmp183;
  const Scalar _tmp185 = _tmp74 * fh1;
  const Scalar _tmp186 = _tmp185 * _tmp98;
  const Scalar _tmp187 = _tmp108 * _tmp185;
  const Scalar _tmp188 = std::exp(-_tmp105 * _tmp187 - _tmp170 - _tmp172 - _tmp186 * _tmp87);
  const Scalar _tmp189 = _tmp177 * _tmp87;
  const Scalar _tmp190 = _tmp105 * _tmp183;
  const Scalar _tmp191 = _tmp121 * _tmp29;
  const Scalar _tmp192 = _tmp124 * _tmp49 - _tmp191 + _tmp31;
  const Scalar _tmp193 = -_tmp102 * _tmp124 + _tmp191 * _tmp36 - _tmp37;
  const Scalar _tmp194 = _tmp129 * _tmp192;
  const Scalar _tmp195 = _tmp194 * _tmp69;
  const Scalar _tmp196 = _tmp124 * _tmp39 - _tmp125;
  const Scalar _tmp197 =
      _tmp133 * _tmp192 - _tmp196 * _tmp70 - _tmp58 * (-_tmp193 * _tmp70 + _tmp195 * _tmp55);
  const Scalar _tmp198 = _tmp135 * _tmp197;
  const Scalar _tmp199 = _tmp124 * _tmp70;
  const Scalar _tmp200 = _tmp198 * _tmp67;
  const Scalar _tmp201 = _tmp124 * _tmp53;
  const Scalar _tmp202 = _tmp198 * _tmp69;
  const Scalar _tmp203 = _tmp197 * _tmp85;
  const Scalar _tmp204 = _tmp124 * _tmp27 + _tmp124 * _tmp78 - _tmp16 * _tmp191 + _tmp16 * _tmp31;
  const Scalar _tmp205 = _tmp195 * _tmp81 - _tmp204 * _tmp70;
  const Scalar _tmp206 = _tmp159 * _tmp205;
  const Scalar _tmp207 = _tmp205 * _tmp74;
  const Scalar _tmp208 = _tmp132 * _tmp192;
  const Scalar _tmp209 = _tmp194 * _tmp55;
  const Scalar _tmp210 =
      _tmp193 * _tmp59 - _tmp196 * _tmp54 + Scalar(1.0) * _tmp208 - Scalar(1.0) * _tmp209 * _tmp58;
  const Scalar _tmp211 = _tmp194 * _tmp81;
  const Scalar _tmp212 = _tmp198 * _tmp82;
  const Scalar _tmp213 = _tmp203 * _tmp84 - _tmp206 * _tmp84 + _tmp210 +
                         _tmp86 * (-_tmp204 * _tmp54 - _tmp207 * _tmp60 - _tmp210 * _tmp83 +
                                   Scalar(1.0) * _tmp211 + _tmp212 * _tmp60);
  const Scalar _tmp214 = _tmp202 * _tmp87 - _tmp213 * _tmp89;
  const Scalar _tmp215 =
      _tmp101 * _tmp196 - _tmp208 * _tmp49 - _tmp58 * (_tmp101 * _tmp193 - _tmp209 * _tmp49);
  const Scalar _tmp216 = _tmp104 * _tmp203 - _tmp104 * _tmp206 + _tmp215 +
                         _tmp86 * (_tmp101 * _tmp204 - _tmp103 * _tmp207 + _tmp103 * _tmp212 -
                                   _tmp211 * _tmp49 - _tmp215 * _tmp83);
  const Scalar _tmp217 = _tmp105 * _tmp202 - _tmp216 * _tmp89;
  const Scalar _tmp218 = _tmp179 * _tmp205;
  const Scalar _tmp219 = _tmp171 * _tmp198;

  // Output terms (1)
  Eigen::Matrix<Scalar, 4, 3> _res;

  _res(0, 0) = 0;
  _res(1, 0) = -_tmp120 * (-_tmp100 * (-_tmp141 * _tmp169 + _tmp163 * _tmp168 - _tmp164 * _tmp87 +
                                       _tmp165 * _tmp90 + _tmp167 * _tmp88 - _tmp92) -
                           _tmp109 * (-_tmp105 * _tmp164 + _tmp106 * _tmp165 - _tmp107 -
                                      _tmp141 * _tmp152 + _tmp161 * _tmp88 + _tmp162 * _tmp163) -
                           _tmp114 * (_tmp110 * _tmp138 - _tmp110 * _tmp140 + _tmp111 * _tmp151 +
                                      _tmp145 * _tmp148 - _tmp145 * _tmp149) -
                           _tmp119 * (_tmp117 * _tmp138 - _tmp117 * _tmp140 - _tmp136 * _tmp137 +
                                      _tmp136 * _tmp139 + _tmp141 * _tmp142));
  _res(2, 0) =
      -_tmp176 * (_tmp113 * _tmp151 - _tmp141 * _tmp178 + _tmp141 * _tmp181 - _tmp141 * _tmp184 +
                  _tmp162 * _tmp174 + _tmp168 * _tmp175 + _tmp180 * _tmp70 + _tmp182 * _tmp70);
  _res(3, 0) = -_tmp188 * (-_tmp136 * _tmp189 - _tmp136 * _tmp190 + _tmp161 * _tmp187 +
                           _tmp167 * _tmp186 - _tmp180 - _tmp182);
  _res(0, 1) = 0;
  _res(1, 1) =
      -_tmp120 *
      (-_tmp100 * (_tmp163 * _tmp214 - _tmp169 * _tmp194 - _tmp200 * _tmp87 + _tmp201 * _tmp90 +
                   _tmp213 * _tmp88) -
       _tmp109 * (-_tmp105 * _tmp200 + _tmp106 * _tmp201 - _tmp152 * _tmp194 + _tmp163 * _tmp217 +
                  _tmp216 * _tmp88) -
       _tmp114 * (_tmp110 * _tmp111 * _tmp195 - _tmp110 * _tmp199 + _tmp148 * _tmp205 -
                  _tmp149 * _tmp205) -
       _tmp119 * (-_tmp117 * _tmp199 - _tmp137 * _tmp198 + _tmp139 * _tmp198 + _tmp142 * _tmp194));
  _res(2, 1) =
      -_tmp176 * (_tmp170 * _tmp195 + _tmp174 * _tmp217 + _tmp175 * _tmp214 - _tmp178 * _tmp194 +
                  _tmp181 * _tmp194 - _tmp184 * _tmp194 + _tmp218 * _tmp70 + _tmp219 * _tmp70);
  _res(3, 1) = -_tmp188 * (_tmp186 * _tmp213 + _tmp187 * _tmp216 - _tmp189 * _tmp198 -
                           _tmp190 * _tmp198 - _tmp218 - _tmp219);
  _res(0, 2) = 0;
  _res(1, 2) = 0;
  _res(2, 2) = 0;
  _res(3, 2) = 0;

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
