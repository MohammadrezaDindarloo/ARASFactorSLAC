// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

#include <sym/rot3.h>

namespace sym {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: IK_residual_func_cost3_wrt_pb_Nl1
 *
 * Args:
 *     fh1: Scalar
 *     fv1: Scalar
 *     DeltaRot: Rot3
 *     position_vector: Matrix31
 *     p_a: Matrix31
 *     p_b: Matrix31
 *     p_c: Matrix31
 *     p_d: Matrix31
 *     Rot_init: Rot3
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix43
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 4, 3> IkResidualFuncCost3WrtPbNl1(
    const Scalar fh1, const Scalar fv1, const sym::Rot3<Scalar>& DeltaRot,
    const Eigen::Matrix<Scalar, 3, 1>& position_vector, const Eigen::Matrix<Scalar, 3, 1>& p_a,
    const Eigen::Matrix<Scalar, 3, 1>& p_b, const Eigen::Matrix<Scalar, 3, 1>& p_c,
    const Eigen::Matrix<Scalar, 3, 1>& p_d, const sym::Rot3<Scalar>& Rot_init,
    const Scalar epsilon) {
  // Total ops: 723

  // Unused inputs
  (void)epsilon;

  // Input arrays
  const Eigen::Matrix<Scalar, 4, 1>& _DeltaRot = DeltaRot.Data();
  const Eigen::Matrix<Scalar, 4, 1>& _Rot_init = Rot_init.Data();

  // Intermediate terms (243)
  const Scalar _tmp0 = _DeltaRot[0] * _Rot_init[3] - _DeltaRot[1] * _Rot_init[2] +
                       _DeltaRot[2] * _Rot_init[1] + _DeltaRot[3] * _Rot_init[0];
  const Scalar _tmp1 = _DeltaRot[0] * _Rot_init[2] + _DeltaRot[1] * _Rot_init[3] -
                       _DeltaRot[2] * _Rot_init[0] + _DeltaRot[3] * _Rot_init[1];
  const Scalar _tmp2 = 2 * _tmp1;
  const Scalar _tmp3 = _tmp0 * _tmp2;
  const Scalar _tmp4 = -_DeltaRot[0] * _Rot_init[1] + _DeltaRot[1] * _Rot_init[0] +
                       _DeltaRot[2] * _Rot_init[3] + _DeltaRot[3] * _Rot_init[2];
  const Scalar _tmp5 = -2 * _DeltaRot[0] * _Rot_init[0] - 2 * _DeltaRot[1] * _Rot_init[1] -
                       2 * _DeltaRot[2] * _Rot_init[2] + 2 * _DeltaRot[3] * _Rot_init[3];
  const Scalar _tmp6 = _tmp4 * _tmp5;
  const Scalar _tmp7 = Scalar(0.20999999999999999) * _tmp3 - Scalar(0.20999999999999999) * _tmp6;
  const Scalar _tmp8 = -_tmp7;
  const Scalar _tmp9 = 2 * _tmp0 * _tmp4;
  const Scalar _tmp10 = _tmp1 * _tmp5;
  const Scalar _tmp11 =
      -Scalar(0.010999999999999999) * _tmp10 - Scalar(0.010999999999999999) * _tmp9;
  const Scalar _tmp12 = -2 * std::pow(_tmp4, Scalar(2));
  const Scalar _tmp13 = 1 - 2 * std::pow(_tmp1, Scalar(2));
  const Scalar _tmp14 = Scalar(0.20999999999999999) * _tmp12 + Scalar(0.20999999999999999) * _tmp13;
  const Scalar _tmp15 = _tmp11 + _tmp14;
  const Scalar _tmp16 = _tmp15 + _tmp8;
  const Scalar _tmp17 = _tmp16 - p_b(0, 0) + position_vector(0, 0);
  const Scalar _tmp18 = Scalar(1.0) / (_tmp17);
  const Scalar _tmp19 = std::pow(_tmp17, Scalar(2));
  const Scalar _tmp20 = Scalar(0.20999999999999999) * _tmp3 + Scalar(0.20999999999999999) * _tmp6;
  const Scalar _tmp21 = -2 * std::pow(_tmp0, Scalar(2));
  const Scalar _tmp22 = Scalar(0.20999999999999999) * _tmp12 +
                        Scalar(0.20999999999999999) * _tmp21 + Scalar(0.20999999999999999);
  const Scalar _tmp23 = _tmp2 * _tmp4;
  const Scalar _tmp24 = _tmp0 * _tmp5;
  const Scalar _tmp25 =
      -Scalar(0.010999999999999999) * _tmp23 + Scalar(0.010999999999999999) * _tmp24;
  const Scalar _tmp26 = -_tmp22 + _tmp25;
  const Scalar _tmp27 = _tmp20 + _tmp26;
  const Scalar _tmp28 = _tmp27 - p_b(1, 0) + position_vector(1, 0);
  const Scalar _tmp29 = std::pow(_tmp28, Scalar(2));
  const Scalar _tmp30 = _tmp19 + _tmp29;
  const Scalar _tmp31 = std::sqrt(_tmp30);
  const Scalar _tmp32 = _tmp18 * _tmp31;
  const Scalar _tmp33 = Scalar(1.0) / (_tmp31);
  const Scalar _tmp34 = _tmp16 * _tmp33;
  const Scalar _tmp35 = _tmp27 * _tmp33;
  const Scalar _tmp36 = -_tmp17 * _tmp35 + _tmp28 * _tmp34;
  const Scalar _tmp37 = _tmp32 * _tmp36;
  const Scalar _tmp38 =
      -Scalar(0.010999999999999999) * _tmp13 - Scalar(0.010999999999999999) * _tmp21;
  const Scalar _tmp39 = -Scalar(0.20999999999999999) * _tmp10 + Scalar(0.20999999999999999) * _tmp9;
  const Scalar _tmp40 = Scalar(0.20999999999999999) * _tmp23 + Scalar(0.20999999999999999) * _tmp24;
  const Scalar _tmp41 = _tmp38 + _tmp39 - _tmp40;
  const Scalar _tmp42 = _tmp18 * _tmp28;
  const Scalar _tmp43 = _tmp41 * _tmp42;
  const Scalar _tmp44 = _tmp38 + _tmp40;
  const Scalar _tmp45 = -_tmp39 + _tmp44;
  const Scalar _tmp46 = _tmp11 - _tmp14;
  const Scalar _tmp47 = _tmp46 + _tmp7;
  const Scalar _tmp48 = _tmp47 - p_d(0, 0) + position_vector(0, 0);
  const Scalar _tmp49 = std::pow(_tmp48, Scalar(2));
  const Scalar _tmp50 = -_tmp20;
  const Scalar _tmp51 = _tmp22 + _tmp25;
  const Scalar _tmp52 = _tmp50 + _tmp51;
  const Scalar _tmp53 = _tmp52 - p_d(1, 0) + position_vector(1, 0);
  const Scalar _tmp54 = _tmp49 + std::pow(_tmp53, Scalar(2));
  const Scalar _tmp55 = std::pow(_tmp54, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp56 = _tmp53 * _tmp55;
  const Scalar _tmp57 = _tmp48 * _tmp55;
  const Scalar _tmp58 = _tmp41 * _tmp57;
  const Scalar _tmp59 = -_tmp42 * _tmp58 + _tmp45 * _tmp56;
  const Scalar _tmp60 = _tmp42 * _tmp57 - _tmp56;
  const Scalar _tmp61 = Scalar(1.0) / (_tmp60);
  const Scalar _tmp62 = _tmp42 * _tmp61;
  const Scalar _tmp63 = Scalar(1.0) * _tmp16;
  const Scalar _tmp64 = Scalar(1.0) * _tmp27;
  const Scalar _tmp65 = (-_tmp47 + _tmp63) / (_tmp52 - _tmp64);
  const Scalar _tmp66 = -_tmp45 * _tmp57 + _tmp58;
  const Scalar _tmp67 = -_tmp41 + _tmp62 * _tmp66 - _tmp65 * (_tmp43 + _tmp59 * _tmp62);
  const Scalar _tmp68 = _tmp39 + _tmp44;
  const Scalar _tmp69 = _tmp15 + _tmp7;
  const Scalar _tmp70 = _tmp69 - p_c(0, 0) + position_vector(0, 0);
  const Scalar _tmp71 = _tmp20 + _tmp51;
  const Scalar _tmp72 = _tmp71 - p_c(1, 0) + position_vector(1, 0);
  const Scalar _tmp73 = std::pow(Scalar(std::pow(_tmp70, Scalar(2)) + std::pow(_tmp72, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp74 = _tmp70 * _tmp73;
  const Scalar _tmp75 = _tmp72 * _tmp73;
  const Scalar _tmp76 = _tmp42 * _tmp74 - _tmp75;
  const Scalar _tmp77 = _tmp61 * _tmp76;
  const Scalar _tmp78 = _tmp41 * _tmp74 -
                        _tmp65 * (-_tmp43 * _tmp74 - _tmp59 * _tmp77 + _tmp68 * _tmp75) -
                        _tmp66 * _tmp77 - _tmp68 * _tmp74;
  const Scalar _tmp79 = Scalar(1.0) / (_tmp78);
  const Scalar _tmp80 = _tmp37 * _tmp57 - _tmp47 * _tmp56 + _tmp52 * _tmp57;
  const Scalar _tmp81 = _tmp61 * _tmp80;
  const Scalar _tmp82 = _tmp37 * _tmp74 - _tmp69 * _tmp75 + _tmp71 * _tmp74 - _tmp76 * _tmp81;
  const Scalar _tmp83 = _tmp79 * _tmp82;
  const Scalar _tmp84 = -_tmp37 + _tmp42 * _tmp81 - _tmp67 * _tmp83;
  const Scalar _tmp85 = Scalar(1.0) / (_tmp82);
  const Scalar _tmp86 = _tmp78 * _tmp85;
  const Scalar _tmp87 = _tmp67 + _tmp84 * _tmp86;
  const Scalar _tmp88 = _tmp74 * _tmp79;
  const Scalar _tmp89 = _tmp87 * _tmp88;
  const Scalar _tmp90 = _tmp76 * _tmp79;
  const Scalar _tmp91 = -_tmp42 - _tmp87 * _tmp90;
  const Scalar _tmp92 = _tmp57 * _tmp61;
  const Scalar _tmp93 = _tmp46 + _tmp8;
  const Scalar _tmp94 = _tmp93 - p_a(0, 0) + position_vector(0, 0);
  const Scalar _tmp95 = _tmp26 + _tmp50;
  const Scalar _tmp96 = _tmp95 - p_a(1, 0) + position_vector(1, 0);
  const Scalar _tmp97 = std::pow(Scalar(std::pow(_tmp94, Scalar(2)) + std::pow(_tmp96, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp98 = _tmp94 * _tmp97;
  const Scalar _tmp99 = _tmp98 * (_tmp89 + _tmp91 * _tmp92 + Scalar(1.0));
  const Scalar _tmp100 = _tmp99 * fh1;
  const Scalar _tmp101 = Scalar(1.0) * _tmp85;
  const Scalar _tmp102 = _tmp101 * _tmp74;
  const Scalar _tmp103 = _tmp57 * _tmp77;
  const Scalar _tmp104 = _tmp96 * _tmp97;
  const Scalar _tmp105 = fh1 * (_tmp104 * _tmp93 - _tmp95 * _tmp98);
  const Scalar _tmp106 = _tmp105 * (-_tmp101 * _tmp103 + _tmp102);
  const Scalar _tmp107 = Scalar(1.0) * _tmp61;
  const Scalar _tmp108 = _tmp59 * _tmp65;
  const Scalar _tmp109 = _tmp107 * _tmp108 - _tmp107 * _tmp66;
  const Scalar _tmp110 = -_tmp109 * _tmp83 - Scalar(1.0) * _tmp81;
  const Scalar _tmp111 = _tmp109 + _tmp110 * _tmp86;
  const Scalar _tmp112 = -_tmp111 * _tmp90 + Scalar(1.0);
  const Scalar _tmp113 = _tmp111 * _tmp88;
  const Scalar _tmp114 = _tmp104 * (_tmp112 * _tmp92 + _tmp113);
  const Scalar _tmp115 = _tmp114 * fh1;
  const Scalar _tmp116 = Scalar(333.54000000000002) - fv1;
  const Scalar _tmp117 = _tmp63 + _tmp64 * _tmp65;
  const Scalar _tmp118 = 0;
  const Scalar _tmp119 = _tmp118 * _tmp90;
  const Scalar _tmp120 = _tmp118 * _tmp79;
  const Scalar _tmp121 = _tmp120 * _tmp74;
  const Scalar _tmp122 = _tmp116 * (-_tmp119 * _tmp92 + _tmp121);
  const Scalar _tmp123 =
      std::exp(_tmp100 * _tmp32 + _tmp106 * _tmp32 + _tmp115 * _tmp32 + _tmp122 * _tmp32);
  const Scalar _tmp124 = std::pow(_tmp60, Scalar(-2));
  const Scalar _tmp125 = Scalar(1.0) / (_tmp19);
  const Scalar _tmp126 = _tmp125 * _tmp28;
  const Scalar _tmp127 = _tmp124 * _tmp126;
  const Scalar _tmp128 = _tmp57 * _tmp66;
  const Scalar _tmp129 = _tmp127 * _tmp128;
  const Scalar _tmp130 = _tmp126 * _tmp61;
  const Scalar _tmp131 = _tmp130 * _tmp66;
  const Scalar _tmp132 = _tmp126 * _tmp58;
  const Scalar _tmp133 = _tmp57 * _tmp59;
  const Scalar _tmp134 = _tmp127 * _tmp133;
  const Scalar _tmp135 = _tmp126 * _tmp41;
  const Scalar _tmp136 = _tmp130 * _tmp59;
  const Scalar _tmp137 =
      _tmp129 * _tmp76 - _tmp131 * _tmp74 -
      _tmp65 * (_tmp132 * _tmp77 + _tmp134 * _tmp76 - _tmp135 * _tmp74 - _tmp136 * _tmp74);
  const Scalar _tmp138 = std::pow(_tmp78, Scalar(-2));
  const Scalar _tmp139 = _tmp137 * _tmp138;
  const Scalar _tmp140 = _tmp139 * _tmp74;
  const Scalar _tmp141 = _tmp49 / _tmp54;
  const Scalar _tmp142 = _tmp127 * _tmp141;
  const Scalar _tmp143 = _tmp103 * _tmp118;
  const Scalar _tmp144 = _tmp116 * _tmp32;
  const Scalar _tmp145 = _tmp33 * fh1;
  const Scalar _tmp146 = _tmp114 * _tmp145;
  const Scalar _tmp147 = _tmp107 * _tmp57;
  const Scalar _tmp148 = _tmp126 * _tmp74 * _tmp85;
  const Scalar _tmp149 = _tmp33 * _tmp36;
  const Scalar _tmp150 = _tmp149 * _tmp57;
  const Scalar _tmp151 = std::pow(_tmp30, Scalar(Scalar(-3) / Scalar(2)));
  const Scalar _tmp152 = _tmp151 * _tmp27;
  const Scalar _tmp153 = _tmp151 * _tmp16;
  const Scalar _tmp154 = _tmp17 * _tmp28;
  const Scalar _tmp155 = _tmp32 * (-_tmp152 * _tmp19 + _tmp153 * _tmp154 + _tmp35);
  const Scalar _tmp156 = _tmp125 * _tmp31;
  const Scalar _tmp157 = _tmp156 * _tmp36;
  const Scalar _tmp158 = -_tmp150 + _tmp155 * _tmp57 + _tmp157 * _tmp57;
  const Scalar _tmp159 = _tmp126 * _tmp81;
  const Scalar _tmp160 = _tmp57 * _tmp80;
  const Scalar _tmp161 = _tmp127 * _tmp160;
  const Scalar _tmp162 = _tmp149 * _tmp74;
  const Scalar _tmp163 = _tmp155 * _tmp74 + _tmp157 * _tmp74 - _tmp158 * _tmp77 - _tmp159 * _tmp74 +
                         _tmp161 * _tmp76 - _tmp162;
  const Scalar _tmp164 = std::pow(_tmp82, Scalar(-2));
  const Scalar _tmp165 = Scalar(1.0) * _tmp164;
  const Scalar _tmp166 = _tmp103 * _tmp165;
  const Scalar _tmp167 = _tmp165 * _tmp74;
  const Scalar _tmp168 = _tmp105 * _tmp32;
  const Scalar _tmp169 = _tmp106 * _tmp33;
  const Scalar _tmp170 = _tmp111 * _tmp76;
  const Scalar _tmp171 = _tmp110 * _tmp85;
  const Scalar _tmp172 = _tmp109 * _tmp82;
  const Scalar _tmp173 = _tmp163 * _tmp79;
  const Scalar _tmp174 = _tmp108 * _tmp57;
  const Scalar _tmp175 =
      -_tmp107 * _tmp132 * _tmp65 - Scalar(1.0) * _tmp127 * _tmp174 + Scalar(1.0) * _tmp129;
  const Scalar _tmp176 = _tmp164 * _tmp78;
  const Scalar _tmp177 = _tmp110 * _tmp176;
  const Scalar _tmp178 = _tmp137 * _tmp171 - _tmp163 * _tmp177 + _tmp175 +
                         _tmp86 * (-_tmp107 * _tmp158 - _tmp109 * _tmp173 + _tmp139 * _tmp172 +
                                   Scalar(1.0) * _tmp161 - _tmp175 * _tmp83);
  const Scalar _tmp179 = -_tmp113 * _tmp126 + _tmp139 * _tmp170 - _tmp178 * _tmp90;
  const Scalar _tmp180 = _tmp104 * fh1;
  const Scalar _tmp181 = _tmp180 * _tmp32;
  const Scalar _tmp182 = _tmp84 * _tmp85;
  const Scalar _tmp183 = _tmp176 * _tmp84;
  const Scalar _tmp184 = _tmp29 / [&]() {
    const Scalar base = _tmp17;
    return base * base * base;
  }();
  const Scalar _tmp185 = _tmp124 * _tmp184;
  const Scalar _tmp186 =
      -_tmp128 * _tmp185 + _tmp131 -
      _tmp65 * (-_tmp133 * _tmp185 + _tmp135 + _tmp136 - _tmp184 * _tmp58 * _tmp61);
  const Scalar _tmp187 = _tmp67 * _tmp82;
  const Scalar _tmp188 =
      _tmp137 * _tmp182 - _tmp163 * _tmp183 + _tmp186 +
      _tmp86 * (_tmp139 * _tmp187 + _tmp149 - _tmp155 - _tmp157 + _tmp158 * _tmp62 + _tmp159 -
                _tmp160 * _tmp185 - _tmp173 * _tmp67 - _tmp186 * _tmp83);
  const Scalar _tmp189 = _tmp76 * _tmp87;
  const Scalar _tmp190 = -_tmp126 * _tmp89 - _tmp126 + _tmp139 * _tmp189 - _tmp188 * _tmp90;
  const Scalar _tmp191 = _tmp141 * _tmp91;
  const Scalar _tmp192 = _tmp98 * fh1;
  const Scalar _tmp193 = _tmp192 * _tmp32;
  const Scalar _tmp194 = _tmp145 * _tmp99;
  const Scalar _tmp195 = _tmp122 * _tmp33;
  const Scalar _tmp196 = _tmp116 * _tmp118;
  const Scalar _tmp197 = _tmp196 * _tmp90;
  const Scalar _tmp198 = _tmp61 * fh1;
  const Scalar _tmp199 = _tmp104 * _tmp198;
  const Scalar _tmp200 = _tmp198 * _tmp98;
  const Scalar _tmp201 = _tmp101 * _tmp105;
  const Scalar _tmp202 =
      std::exp(-_tmp112 * _tmp199 + _tmp197 * _tmp61 - _tmp200 * _tmp91 + _tmp201 * _tmp77);
  const Scalar _tmp203 = _tmp127 * _tmp57;
  const Scalar _tmp204 = _tmp192 * _tmp91;
  const Scalar _tmp205 = _tmp116 * _tmp120;
  const Scalar _tmp206 = _tmp205 * _tmp74;
  const Scalar _tmp207 = _tmp105 * _tmp165;
  const Scalar _tmp208 = _tmp163 * _tmp207;
  const Scalar _tmp209 = _tmp139 * _tmp196;
  const Scalar _tmp210 = _tmp180 * _tmp57;
  const Scalar _tmp211 = _tmp79 * fh1;
  const Scalar _tmp212 = _tmp104 * _tmp211;
  const Scalar _tmp213 = _tmp211 * _tmp98;
  const Scalar _tmp214 = std::exp(-_tmp111 * _tmp212 - _tmp201 - _tmp205 - _tmp213 * _tmp87);
  const Scalar _tmp215 = _tmp111 * _tmp180;
  const Scalar _tmp216 = _tmp192 * _tmp87;
  const Scalar _tmp217 = _tmp18 * _tmp61;
  const Scalar _tmp218 = _tmp217 * _tmp66;
  const Scalar _tmp219 = _tmp18 * _tmp41;
  const Scalar _tmp220 = _tmp124 * _tmp18;
  const Scalar _tmp221 = _tmp220 * _tmp76;
  const Scalar _tmp222 = _tmp217 * _tmp59;
  const Scalar _tmp223 =
      -_tmp128 * _tmp221 + _tmp218 * _tmp74 -
      _tmp65 * (-_tmp103 * _tmp219 - _tmp133 * _tmp221 + _tmp219 * _tmp74 + _tmp222 * _tmp74);
  const Scalar _tmp224 = _tmp138 * _tmp223;
  const Scalar _tmp225 = _tmp18 * _tmp81;
  const Scalar _tmp226 = _tmp32 * (-_tmp152 * _tmp154 + _tmp153 * _tmp29 - _tmp34);
  const Scalar _tmp227 = -_tmp150 * _tmp42 + _tmp226 * _tmp57;
  const Scalar _tmp228 = -_tmp160 * _tmp221 - _tmp162 * _tmp42 + _tmp225 * _tmp74 +
                         _tmp226 * _tmp74 - _tmp227 * _tmp77;
  const Scalar _tmp229 = Scalar(1.0) * _tmp220;
  const Scalar _tmp230 = -_tmp128 * _tmp229 + _tmp147 * _tmp219 * _tmp65 + _tmp174 * _tmp229;
  const Scalar _tmp231 = _tmp228 * _tmp79;
  const Scalar _tmp232 = _tmp171 * _tmp223 - _tmp177 * _tmp228 + _tmp230 +
                         _tmp86 * (-_tmp107 * _tmp227 - _tmp109 * _tmp231 - _tmp160 * _tmp229 +
                                   _tmp172 * _tmp224 - _tmp230 * _tmp83);
  const Scalar _tmp233 = _tmp113 * _tmp18 + _tmp170 * _tmp224 - _tmp232 * _tmp90;
  const Scalar _tmp234 = _tmp112 * _tmp220;
  const Scalar _tmp235 = _tmp224 * _tmp74;
  const Scalar _tmp236 = _tmp217 * _tmp57;
  const Scalar _tmp237 =
      _tmp129 - _tmp218 - _tmp65 * (_tmp130 * _tmp58 + _tmp134 - _tmp219 - _tmp222);
  const Scalar _tmp238 =
      _tmp182 * _tmp223 - _tmp183 * _tmp228 + _tmp237 +
      _tmp86 * (_tmp149 * _tmp42 + _tmp161 + _tmp187 * _tmp224 - _tmp225 - _tmp226 +
                _tmp227 * _tmp62 - _tmp231 * _tmp67 - _tmp237 * _tmp83);
  const Scalar _tmp239 = _tmp18 * _tmp89 + _tmp18 + _tmp189 * _tmp224 - _tmp238 * _tmp90;
  const Scalar _tmp240 = _tmp196 * _tmp224;
  const Scalar _tmp241 = _tmp207 * _tmp228;
  const Scalar _tmp242 = _tmp220 * _tmp57;

  // Output terms (1)
  Eigen::Matrix<Scalar, 4, 3> _res;

  _res(0, 0) = 0;
  _res(1, 0) =
      -_tmp123 *
      (-_tmp100 * _tmp156 - _tmp106 * _tmp156 - _tmp115 * _tmp156 - _tmp122 * _tmp156 -
       _tmp144 * (-_tmp118 * _tmp140 + _tmp119 * _tmp142 - _tmp121 * _tmp126 * _tmp92 +
                  _tmp139 * _tmp143) +
       _tmp146 -
       _tmp168 * (_tmp101 * _tmp142 * _tmp76 - _tmp147 * _tmp148 + _tmp163 * _tmp166 -
                  _tmp163 * _tmp167) +
       _tmp169 -
       _tmp181 * (-_tmp111 * _tmp140 - _tmp112 * _tmp142 + _tmp178 * _tmp88 + _tmp179 * _tmp92) -
       _tmp193 * (-_tmp127 * _tmp191 - _tmp140 * _tmp87 + _tmp188 * _tmp88 + _tmp190 * _tmp92) +
       _tmp194 + _tmp195);
  _res(2, 0) = -_tmp202 * (-_tmp105 * _tmp107 * _tmp148 - _tmp112 * _tmp127 * _tmp210 -
                           _tmp130 * _tmp206 + _tmp179 * _tmp199 + _tmp190 * _tmp200 +
                           _tmp197 * _tmp203 + _tmp201 * _tmp203 * _tmp76 - _tmp203 * _tmp204 +
                           _tmp208 * _tmp77 + _tmp209 * _tmp77);
  _res(3, 0) = -_tmp214 * (-_tmp139 * _tmp215 - _tmp139 * _tmp216 + _tmp178 * _tmp212 +
                           _tmp188 * _tmp213 - _tmp208 - _tmp209);
  _res(0, 1) = 0;
  _res(1, 1) =
      -_tmp123 *
      (-_tmp144 * (-_tmp118 * _tmp235 - _tmp119 * _tmp141 * _tmp220 + _tmp121 * _tmp236 +
                   _tmp143 * _tmp224) +
       _tmp146 * _tmp42 -
       _tmp168 * (-_tmp101 * _tmp141 * _tmp221 + _tmp102 * _tmp236 + _tmp166 * _tmp228 -
                  _tmp167 * _tmp228) +
       _tmp169 * _tmp42 -
       _tmp181 * (-_tmp111 * _tmp235 + _tmp141 * _tmp234 + _tmp232 * _tmp88 + _tmp233 * _tmp92) -
       _tmp193 * (_tmp191 * _tmp220 - _tmp235 * _tmp87 + _tmp238 * _tmp88 + _tmp239 * _tmp92) +
       _tmp194 * _tmp42 + _tmp195 * _tmp42);
  _res(2, 1) =
      -_tmp202 * (_tmp102 * _tmp105 * _tmp217 - _tmp197 * _tmp242 + _tmp199 * _tmp233 +
                  _tmp200 * _tmp239 - _tmp201 * _tmp221 * _tmp57 + _tmp204 * _tmp242 +
                  _tmp206 * _tmp217 + _tmp210 * _tmp234 + _tmp240 * _tmp77 + _tmp241 * _tmp77);
  _res(3, 1) = -_tmp214 * (_tmp212 * _tmp232 + _tmp213 * _tmp238 - _tmp215 * _tmp224 -
                           _tmp216 * _tmp224 - _tmp240 - _tmp241);
  _res(0, 2) = 0;
  _res(1, 2) = 0;
  _res(2, 2) = 0;
  _res(3, 2) = 0;

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
