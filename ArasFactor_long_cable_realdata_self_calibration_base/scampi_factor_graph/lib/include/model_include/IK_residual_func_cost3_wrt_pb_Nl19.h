// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

#include <sym/rot3.h>

namespace sym {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: IK_residual_func_cost3_wrt_pb_Nl19
 *
 * Args:
 *     fh1: Scalar
 *     fv1: Scalar
 *     DeltaRot: Rot3
 *     position_vector: Matrix31
 *     encoder: Matrix41
 *     p_a: Matrix31
 *     p_b: Matrix31
 *     p_c: Matrix31
 *     p_d: Matrix31
 *     Rot_init: Rot3
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix43
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 4, 3> IkResidualFuncCost3WrtPbNl19(
    const Scalar fh1, const Scalar fv1, const sym::Rot3<Scalar>& DeltaRot,
    const Eigen::Matrix<Scalar, 3, 1>& position_vector, const Eigen::Matrix<Scalar, 4, 1>& encoder,
    const Eigen::Matrix<Scalar, 3, 1>& p_a, const Eigen::Matrix<Scalar, 3, 1>& p_b,
    const Eigen::Matrix<Scalar, 3, 1>& p_c, const Eigen::Matrix<Scalar, 3, 1>& p_d,
    const sym::Rot3<Scalar>& Rot_init, const Scalar epsilon) {
  // Total ops: 567

  // Unused inputs
  (void)encoder;
  (void)epsilon;

  // Input arrays
  const Eigen::Matrix<Scalar, 4, 1>& _DeltaRot = DeltaRot.Data();
  const Eigen::Matrix<Scalar, 4, 1>& _Rot_init = Rot_init.Data();

  // Intermediate terms (183)
  const Scalar _tmp0 = _DeltaRot[0] * _Rot_init[3] - _DeltaRot[1] * _Rot_init[2] +
                       _DeltaRot[2] * _Rot_init[1] + _DeltaRot[3] * _Rot_init[0];
  const Scalar _tmp1 = _DeltaRot[0] * _Rot_init[2] + _DeltaRot[1] * _Rot_init[3] -
                       _DeltaRot[2] * _Rot_init[0] + _DeltaRot[3] * _Rot_init[1];
  const Scalar _tmp2 = 2 * _tmp1;
  const Scalar _tmp3 = _tmp0 * _tmp2;
  const Scalar _tmp4 = -_DeltaRot[0] * _Rot_init[1] + _DeltaRot[1] * _Rot_init[0] +
                       _DeltaRot[2] * _Rot_init[3] + _DeltaRot[3] * _Rot_init[2];
  const Scalar _tmp5 = -_DeltaRot[0] * _Rot_init[0] - _DeltaRot[1] * _Rot_init[1] -
                       _DeltaRot[2] * _Rot_init[2] + _DeltaRot[3] * _Rot_init[3];
  const Scalar _tmp6 = 2 * _tmp4 * _tmp5;
  const Scalar _tmp7 = Scalar(0.20999999999999999) * _tmp3 - Scalar(0.20999999999999999) * _tmp6;
  const Scalar _tmp8 = -_tmp7;
  const Scalar _tmp9 = 2 * _tmp0;
  const Scalar _tmp10 = _tmp4 * _tmp9;
  const Scalar _tmp11 = _tmp2 * _tmp5;
  const Scalar _tmp12 =
      -Scalar(0.010999999999999999) * _tmp10 - Scalar(0.010999999999999999) * _tmp11;
  const Scalar _tmp13 = -2 * std::pow(_tmp1, Scalar(2));
  const Scalar _tmp14 = 1 - 2 * std::pow(_tmp4, Scalar(2));
  const Scalar _tmp15 = Scalar(0.20999999999999999) * _tmp13 + Scalar(0.20999999999999999) * _tmp14;
  const Scalar _tmp16 = _tmp12 + _tmp15;
  const Scalar _tmp17 = _tmp16 + _tmp8;
  const Scalar _tmp18 = _tmp17 - p_b(0, 0) + position_vector(0, 0);
  const Scalar _tmp19 = _tmp12 - _tmp15;
  const Scalar _tmp20 = _tmp19 + _tmp8;
  const Scalar _tmp21 = _tmp20 - p_a(0, 0) + position_vector(0, 0);
  const Scalar _tmp22 = -2 * std::pow(_tmp0, Scalar(2));
  const Scalar _tmp23 = Scalar(0.20999999999999999) * _tmp14 + Scalar(0.20999999999999999) * _tmp22;
  const Scalar _tmp24 = -_tmp23;
  const Scalar _tmp25 = _tmp2 * _tmp4;
  const Scalar _tmp26 = _tmp5 * _tmp9;
  const Scalar _tmp27 =
      -Scalar(0.010999999999999999) * _tmp25 + Scalar(0.010999999999999999) * _tmp26;
  const Scalar _tmp28 = Scalar(0.20999999999999999) * _tmp3 + Scalar(0.20999999999999999) * _tmp6;
  const Scalar _tmp29 = _tmp27 - _tmp28;
  const Scalar _tmp30 = _tmp24 + _tmp29;
  const Scalar _tmp31 = _tmp30 - p_a(1, 0) + position_vector(1, 0);
  const Scalar _tmp32 =
      std::sqrt(Scalar(std::pow(_tmp21, Scalar(2)) + std::pow(_tmp31, Scalar(2))));
  const Scalar _tmp33 = Scalar(1.0) / (_tmp32);
  const Scalar _tmp34 = Scalar(1.0) / (_tmp21);
  const Scalar _tmp35 = _tmp32 * _tmp34;
  const Scalar _tmp36 = _tmp35 * (_tmp20 * _tmp31 * _tmp33 - _tmp21 * _tmp30 * _tmp33);
  const Scalar _tmp37 = _tmp31 * _tmp34;
  const Scalar _tmp38 = _tmp27 + _tmp28;
  const Scalar _tmp39 = _tmp23 + _tmp38;
  const Scalar _tmp40 = _tmp16 + _tmp7;
  const Scalar _tmp41 = _tmp40 - p_c(0, 0) + position_vector(0, 0);
  const Scalar _tmp42 = _tmp39 - p_c(1, 0) + position_vector(1, 0);
  const Scalar _tmp43 = std::pow(Scalar(std::pow(_tmp41, Scalar(2)) + std::pow(_tmp42, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp44 = _tmp41 * _tmp43;
  const Scalar _tmp45 = _tmp42 * _tmp43;
  const Scalar _tmp46 = Scalar(1.0) / (_tmp37 * _tmp44 - _tmp45);
  const Scalar _tmp47 = _tmp46 * (_tmp36 * _tmp44 + _tmp39 * _tmp44 - _tmp40 * _tmp45);
  const Scalar _tmp48 = _tmp24 + _tmp38;
  const Scalar _tmp49 = _tmp48 - p_b(1, 0) + position_vector(1, 0);
  const Scalar _tmp50 = std::pow(_tmp18, Scalar(2));
  const Scalar _tmp51 = std::pow(_tmp49, Scalar(2));
  const Scalar _tmp52 = _tmp50 + _tmp51;
  const Scalar _tmp53 = std::pow(_tmp52, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp54 = _tmp17 * _tmp53;
  const Scalar _tmp55 = _tmp48 * _tmp53;
  const Scalar _tmp56 = _tmp37 * _tmp53;
  const Scalar _tmp57 = _tmp18 * _tmp56 - _tmp49 * _tmp53;
  const Scalar _tmp58 = _tmp36 * _tmp53;
  const Scalar _tmp59 = _tmp18 * _tmp55 + _tmp18 * _tmp58 - _tmp47 * _tmp57 - _tmp49 * _tmp54;
  const Scalar _tmp60 = Scalar(0.20999999999999999) * _tmp25 + Scalar(0.20999999999999999) * _tmp26;
  const Scalar _tmp61 = -_tmp60;
  const Scalar _tmp62 = -Scalar(0.010999999999999999) * _tmp13 -
                        Scalar(0.010999999999999999) * _tmp22 + Scalar(-0.010999999999999999);
  const Scalar _tmp63 = Scalar(0.20999999999999999) * _tmp10 - Scalar(0.20999999999999999) * _tmp11;
  const Scalar _tmp64 = _tmp62 + _tmp63;
  const Scalar _tmp65 = _tmp61 + _tmp64;
  const Scalar _tmp66 = _tmp53 * _tmp65;
  const Scalar _tmp67 = _tmp60 + _tmp64;
  const Scalar _tmp68 = _tmp61 + _tmp62 - _tmp63;
  const Scalar _tmp69 = _tmp44 * _tmp68;
  const Scalar _tmp70 = _tmp46 * (-_tmp37 * _tmp69 + _tmp45 * _tmp67);
  const Scalar _tmp71 = _tmp53 * _tmp68;
  const Scalar _tmp72 = _tmp18 * _tmp71;
  const Scalar _tmp73 = Scalar(1.0) * _tmp20;
  const Scalar _tmp74 = Scalar(1.0) * _tmp30;
  const Scalar _tmp75 = (-_tmp40 + _tmp73) / (_tmp39 - _tmp74);
  const Scalar _tmp76 = _tmp46 * (-_tmp44 * _tmp67 + _tmp69);
  const Scalar _tmp77 = -_tmp18 * _tmp66 - _tmp57 * _tmp76 + _tmp72 -
                        _tmp75 * (-_tmp37 * _tmp72 + _tmp49 * _tmp66 - _tmp57 * _tmp70);
  const Scalar _tmp78 = Scalar(1.0) / (_tmp77);
  const Scalar _tmp79 = _tmp37 * _tmp68;
  const Scalar _tmp80 = _tmp37 * _tmp76 - _tmp68 - _tmp75 * (_tmp37 * _tmp70 + _tmp79);
  const Scalar _tmp81 = _tmp78 * _tmp80;
  const Scalar _tmp82 = -_tmp36 + _tmp37 * _tmp47 - _tmp59 * _tmp81;
  const Scalar _tmp83 = Scalar(1.0) / (_tmp59);
  const Scalar _tmp84 = _tmp77 * _tmp83;
  const Scalar _tmp85 = _tmp80 + _tmp82 * _tmp84;
  const Scalar _tmp86 = _tmp53 * _tmp78;
  const Scalar _tmp87 = _tmp85 * _tmp86;
  const Scalar _tmp88 = _tmp57 * _tmp78;
  const Scalar _tmp89 = -_tmp37 - _tmp85 * _tmp88;
  const Scalar _tmp90 = _tmp44 * _tmp46;
  const Scalar _tmp91 = _tmp19 + _tmp7;
  const Scalar _tmp92 = _tmp91 - p_d(0, 0) + position_vector(0, 0);
  const Scalar _tmp93 = _tmp23 + _tmp29;
  const Scalar _tmp94 = _tmp93 - p_d(1, 0) + position_vector(1, 0);
  const Scalar _tmp95 = std::pow(Scalar(std::pow(_tmp92, Scalar(2)) + std::pow(_tmp94, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp96 = _tmp92 * _tmp95;
  const Scalar _tmp97 = _tmp96 * fh1;
  const Scalar _tmp98 = _tmp35 * _tmp97;
  const Scalar _tmp99 = _tmp73 + _tmp74 * _tmp75;
  const Scalar _tmp100 = 0;
  const Scalar _tmp101 = _tmp100 * _tmp90;
  const Scalar _tmp102 = _tmp100 * _tmp78;
  const Scalar _tmp103 = _tmp102 * _tmp53;
  const Scalar _tmp104 = Scalar(333.54000000000002) - fv1;
  const Scalar _tmp105 = _tmp104 * _tmp35;
  const Scalar _tmp106 = Scalar(1.0) * _tmp83;
  const Scalar _tmp107 = _tmp106 * _tmp90;
  const Scalar _tmp108 = _tmp106 * _tmp53;
  const Scalar _tmp109 = _tmp94 * _tmp95;
  const Scalar _tmp110 = fh1 * (_tmp109 * _tmp91 - _tmp93 * _tmp96);
  const Scalar _tmp111 = _tmp110 * _tmp35;
  const Scalar _tmp112 = Scalar(1.0) * _tmp70 * _tmp75 - Scalar(1.0) * _tmp76;
  const Scalar _tmp113 = _tmp112 * _tmp78;
  const Scalar _tmp114 = -_tmp113 * _tmp59 - Scalar(1.0) * _tmp47;
  const Scalar _tmp115 = _tmp112 + _tmp114 * _tmp84;
  const Scalar _tmp116 = -_tmp115 * _tmp88 + Scalar(1.0);
  const Scalar _tmp117 = _tmp115 * _tmp86;
  const Scalar _tmp118 = _tmp109 * fh1;
  const Scalar _tmp119 = _tmp118 * _tmp35;
  const Scalar _tmp120 = std::exp(_tmp105 * (-_tmp101 * _tmp88 + _tmp103 * _tmp18) +
                                  _tmp111 * (-_tmp107 * _tmp57 + _tmp108 * _tmp18) +
                                  _tmp119 * (_tmp116 * _tmp90 + _tmp117 * _tmp18) +
                                  _tmp98 * (_tmp18 * _tmp87 + _tmp89 * _tmp90 + Scalar(1.0)));
  const Scalar _tmp121 = std::pow(_tmp52, Scalar(Scalar(-3) / Scalar(2)));
  const Scalar _tmp122 = _tmp121 * _tmp50;
  const Scalar _tmp123 = _tmp121 * _tmp18 * _tmp49;
  const Scalar _tmp124 = _tmp122 * _tmp37 - _tmp123 - _tmp56;
  const Scalar _tmp125 = _tmp122 * _tmp68;
  const Scalar _tmp126 = _tmp123 * _tmp65;
  const Scalar _tmp127 =
      -_tmp122 * _tmp65 - _tmp124 * _tmp76 + _tmp125 + _tmp66 - _tmp71 -
      _tmp75 * (-_tmp124 * _tmp70 - _tmp125 * _tmp37 + _tmp126 + _tmp37 * _tmp71);
  const Scalar _tmp128 = std::pow(_tmp77, Scalar(-2));
  const Scalar _tmp129 = _tmp127 * _tmp128;
  const Scalar _tmp130 = _tmp129 * _tmp57;
  const Scalar _tmp131 = _tmp82 * _tmp83;
  const Scalar _tmp132 = _tmp129 * _tmp59;
  const Scalar _tmp133 =
      _tmp122 * _tmp36 + _tmp122 * _tmp48 - _tmp123 * _tmp17 - _tmp124 * _tmp47 - _tmp55 - _tmp58;
  const Scalar _tmp134 = std::pow(_tmp59, Scalar(-2));
  const Scalar _tmp135 = _tmp134 * _tmp77;
  const Scalar _tmp136 = _tmp133 * _tmp135;
  const Scalar _tmp137 =
      _tmp127 * _tmp131 - _tmp136 * _tmp82 + _tmp84 * (_tmp132 * _tmp80 - _tmp133 * _tmp81);
  const Scalar _tmp138 = _tmp124 * _tmp78;
  const Scalar _tmp139 = _tmp130 * _tmp85 - _tmp137 * _tmp88 - _tmp138 * _tmp85;
  const Scalar _tmp140 = _tmp18 * _tmp86;
  const Scalar _tmp141 = _tmp122 * _tmp78;
  const Scalar _tmp142 = _tmp18 * _tmp53;
  const Scalar _tmp143 = _tmp129 * _tmp85;
  const Scalar _tmp144 = _tmp114 * _tmp83;
  const Scalar _tmp145 =
      -_tmp114 * _tmp136 + _tmp127 * _tmp144 + _tmp84 * (_tmp112 * _tmp132 - _tmp113 * _tmp133);
  const Scalar _tmp146 = _tmp115 * _tmp130 - _tmp115 * _tmp138 - _tmp145 * _tmp88;
  const Scalar _tmp147 = _tmp115 * _tmp142;
  const Scalar _tmp148 = Scalar(1.0) * _tmp134;
  const Scalar _tmp149 = _tmp133 * _tmp148;
  const Scalar _tmp150 = _tmp57 * _tmp90;
  const Scalar _tmp151 = _tmp46 * fh1;
  const Scalar _tmp152 = _tmp109 * _tmp151;
  const Scalar _tmp153 = _tmp106 * _tmp110;
  const Scalar _tmp154 = _tmp153 * _tmp46;
  const Scalar _tmp155 = _tmp151 * _tmp96;
  const Scalar _tmp156 = _tmp100 * _tmp104;
  const Scalar _tmp157 = _tmp156 * _tmp46;
  const Scalar _tmp158 =
      std::exp(-_tmp116 * _tmp152 + _tmp154 * _tmp57 - _tmp155 * _tmp89 + _tmp157 * _tmp88);
  const Scalar _tmp159 = _tmp110 * _tmp149;
  const Scalar _tmp160 = _tmp46 * _tmp57;
  const Scalar _tmp161 = _tmp78 * fh1;
  const Scalar _tmp162 = _tmp109 * _tmp161;
  const Scalar _tmp163 = _tmp78 * _tmp85;
  const Scalar _tmp164 =
      std::exp(-_tmp102 * _tmp104 - _tmp115 * _tmp162 - _tmp153 - _tmp163 * _tmp97);
  const Scalar _tmp165 = _tmp161 * _tmp96;
  const Scalar _tmp166 = _tmp115 * _tmp118;
  const Scalar _tmp167 = _tmp121 * _tmp51;
  const Scalar _tmp168 = _tmp123 * _tmp37 - _tmp167 + _tmp53;
  const Scalar _tmp169 =
      _tmp123 * _tmp68 - _tmp126 - _tmp168 * _tmp76 -
      _tmp75 * (-_tmp123 * _tmp79 + _tmp167 * _tmp65 - _tmp168 * _tmp70 - _tmp66);
  const Scalar _tmp170 = _tmp128 * _tmp169;
  const Scalar _tmp171 = _tmp170 * _tmp57;
  const Scalar _tmp172 = _tmp168 * _tmp78;
  const Scalar _tmp173 = _tmp142 * _tmp170;
  const Scalar _tmp174 =
      _tmp123 * _tmp36 + _tmp123 * _tmp48 - _tmp167 * _tmp17 - _tmp168 * _tmp47 + _tmp54;
  const Scalar _tmp175 = _tmp135 * _tmp174;
  const Scalar _tmp176 = _tmp170 * _tmp59;
  const Scalar _tmp177 =
      _tmp131 * _tmp169 - _tmp175 * _tmp82 + _tmp84 * (-_tmp174 * _tmp81 + _tmp176 * _tmp80);
  const Scalar _tmp178 = _tmp171 * _tmp85 - _tmp172 * _tmp85 - _tmp177 * _tmp88;
  const Scalar _tmp179 =
      -_tmp114 * _tmp175 + _tmp144 * _tmp169 + _tmp84 * (_tmp112 * _tmp176 - _tmp113 * _tmp174);
  const Scalar _tmp180 = _tmp115 * _tmp171 - _tmp115 * _tmp172 - _tmp179 * _tmp88;
  const Scalar _tmp181 = _tmp148 * _tmp174;
  const Scalar _tmp182 = _tmp110 * _tmp181;

  // Output terms (1)
  Eigen::Matrix<Scalar, 4, 3> _res;

  _res(0, 0) = 0;
  _res(1, 0) = -_tmp120 * (-_tmp105 * (-_tmp100 * _tmp129 * _tmp142 + _tmp101 * _tmp130 -
                                       _tmp101 * _tmp138 + _tmp102 * _tmp122 - _tmp103) -
                           _tmp111 * (_tmp106 * _tmp122 - _tmp107 * _tmp124 - _tmp108 -
                                      _tmp142 * _tmp149 + _tmp149 * _tmp150) -
                           _tmp119 * (_tmp115 * _tmp141 - _tmp117 - _tmp129 * _tmp147 +
                                      _tmp140 * _tmp145 + _tmp146 * _tmp90) -
                           _tmp98 * (_tmp137 * _tmp140 + _tmp139 * _tmp90 + _tmp141 * _tmp85 -
                                     _tmp142 * _tmp143 - _tmp87));
  _res(2, 0) = -_tmp158 * (-_tmp124 * _tmp154 + _tmp130 * _tmp157 - _tmp138 * _tmp157 +
                           _tmp139 * _tmp155 + _tmp146 * _tmp152 + _tmp159 * _tmp160);
  _res(3, 0) = -_tmp164 * (-_tmp129 * _tmp156 - _tmp129 * _tmp166 + _tmp137 * _tmp165 -
                           _tmp143 * _tmp97 + _tmp145 * _tmp162 - _tmp159);
  _res(0, 1) = 0;
  _res(1, 1) =
      -_tmp120 *
      (-_tmp105 * (-_tmp100 * _tmp173 + _tmp101 * _tmp171 - _tmp101 * _tmp172 + _tmp102 * _tmp123) -
       _tmp111 * (_tmp106 * _tmp123 - _tmp107 * _tmp168 - _tmp142 * _tmp181 + _tmp150 * _tmp181) -
       _tmp119 *
           (_tmp115 * _tmp123 * _tmp78 + _tmp140 * _tmp179 - _tmp147 * _tmp170 + _tmp180 * _tmp90) -
       _tmp98 * (_tmp123 * _tmp163 + _tmp140 * _tmp177 - _tmp173 * _tmp85 + _tmp178 * _tmp90));
  _res(2, 1) = -_tmp158 * (_tmp152 * _tmp180 - _tmp154 * _tmp168 + _tmp155 * _tmp178 +
                           _tmp157 * _tmp171 - _tmp157 * _tmp172 + _tmp160 * _tmp182);
  _res(3, 1) = -_tmp164 * (-_tmp156 * _tmp170 + _tmp162 * _tmp179 + _tmp165 * _tmp177 -
                           _tmp166 * _tmp170 - _tmp170 * _tmp85 * _tmp97 - _tmp182);
  _res(0, 2) = 0;
  _res(1, 2) = 0;
  _res(2, 2) = 0;
  _res(3, 2) = 0;

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
