// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

#include <sym/rot3.h>

namespace sym {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: IK_residual_func_cost3_wrt_pc_Nl22
 *
 * Args:
 *     fh1: Scalar
 *     fv1: Scalar
 *     DeltaRot: Rot3
 *     position_vector: Matrix31
 *     p_a: Matrix31
 *     p_b: Matrix31
 *     p_c: Matrix31
 *     p_d: Matrix31
 *     Rot_init: Rot3
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix43
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 4, 3> IkResidualFuncCost3WrtPcNl22(
    const Scalar fh1, const Scalar fv1, const sym::Rot3<Scalar>& DeltaRot,
    const Eigen::Matrix<Scalar, 3, 1>& position_vector, const Eigen::Matrix<Scalar, 3, 1>& p_a,
    const Eigen::Matrix<Scalar, 3, 1>& p_b, const Eigen::Matrix<Scalar, 3, 1>& p_c,
    const Eigen::Matrix<Scalar, 3, 1>& p_d, const sym::Rot3<Scalar>& Rot_init,
    const Scalar epsilon) {
  // Total ops: 714

  // Unused inputs
  (void)epsilon;

  // Input arrays
  const Eigen::Matrix<Scalar, 4, 1>& _DeltaRot = DeltaRot.Data();
  const Eigen::Matrix<Scalar, 4, 1>& _Rot_init = Rot_init.Data();

  // Intermediate terms (238)
  const Scalar _tmp0 = _DeltaRot[0] * _Rot_init[2] + _DeltaRot[1] * _Rot_init[3] -
                       _DeltaRot[2] * _Rot_init[0] + _DeltaRot[3] * _Rot_init[1];
  const Scalar _tmp1 = _DeltaRot[0] * _Rot_init[3] - _DeltaRot[1] * _Rot_init[2] +
                       _DeltaRot[2] * _Rot_init[1] + _DeltaRot[3] * _Rot_init[0];
  const Scalar _tmp2 = 2 * _tmp0 * _tmp1;
  const Scalar _tmp3 = -_DeltaRot[0] * _Rot_init[1] + _DeltaRot[1] * _Rot_init[0] +
                       _DeltaRot[2] * _Rot_init[3] + _DeltaRot[3] * _Rot_init[2];
  const Scalar _tmp4 = -2 * _DeltaRot[0] * _Rot_init[0] - 2 * _DeltaRot[1] * _Rot_init[1] -
                       2 * _DeltaRot[2] * _Rot_init[2] + 2 * _DeltaRot[3] * _Rot_init[3];
  const Scalar _tmp5 = _tmp3 * _tmp4;
  const Scalar _tmp6 = Scalar(0.20999999999999999) * _tmp2 - Scalar(0.20999999999999999) * _tmp5;
  const Scalar _tmp7 = -2 * std::pow(_tmp0, Scalar(2));
  const Scalar _tmp8 = 1 - 2 * std::pow(_tmp3, Scalar(2));
  const Scalar _tmp9 = Scalar(0.20999999999999999) * _tmp7 + Scalar(0.20999999999999999) * _tmp8;
  const Scalar _tmp10 = 2 * _tmp3;
  const Scalar _tmp11 = _tmp1 * _tmp10;
  const Scalar _tmp12 = _tmp0 * _tmp4;
  const Scalar _tmp13 =
      -Scalar(0.010999999999999999) * _tmp11 - Scalar(0.010999999999999999) * _tmp12;
  const Scalar _tmp14 = _tmp13 + _tmp9;
  const Scalar _tmp15 = _tmp14 + _tmp6;
  const Scalar _tmp16 = _tmp15 - p_c(0, 0) + position_vector(0, 0);
  const Scalar _tmp17 = Scalar(1.0) / (_tmp16);
  const Scalar _tmp18 = std::pow(_tmp16, Scalar(2));
  const Scalar _tmp19 = -2 * std::pow(_tmp1, Scalar(2));
  const Scalar _tmp20 = Scalar(0.20999999999999999) * _tmp19 + Scalar(0.20999999999999999) * _tmp8;
  const Scalar _tmp21 = _tmp0 * _tmp10;
  const Scalar _tmp22 = _tmp1 * _tmp4;
  const Scalar _tmp23 =
      -Scalar(0.010999999999999999) * _tmp21 + Scalar(0.010999999999999999) * _tmp22;
  const Scalar _tmp24 = Scalar(0.20999999999999999) * _tmp2 + Scalar(0.20999999999999999) * _tmp5;
  const Scalar _tmp25 = _tmp23 + _tmp24;
  const Scalar _tmp26 = _tmp20 + _tmp25;
  const Scalar _tmp27 = _tmp26 - p_c(1, 0) + position_vector(1, 0);
  const Scalar _tmp28 = std::pow(_tmp27, Scalar(2));
  const Scalar _tmp29 = _tmp18 + _tmp28;
  const Scalar _tmp30 = std::sqrt(_tmp29);
  const Scalar _tmp31 = _tmp17 * _tmp30;
  const Scalar _tmp32 = Scalar(333.54000000000002) - fv1;
  const Scalar _tmp33 = Scalar(0.20999999999999999) * _tmp11 - Scalar(0.20999999999999999) * _tmp12;
  const Scalar _tmp34 = -Scalar(0.010999999999999999) * _tmp19 -
                        Scalar(0.010999999999999999) * _tmp7 + Scalar(-0.010999999999999999);
  const Scalar _tmp35 = Scalar(0.20999999999999999) * _tmp21 + Scalar(0.20999999999999999) * _tmp22;
  const Scalar _tmp36 = _tmp34 - _tmp35;
  const Scalar _tmp37 = _tmp33 + _tmp36;
  const Scalar _tmp38 = -_tmp6;
  const Scalar _tmp39 = _tmp14 + _tmp38;
  const Scalar _tmp40 = _tmp39 - p_b(0, 0) + position_vector(0, 0);
  const Scalar _tmp41 = -_tmp20;
  const Scalar _tmp42 = _tmp25 + _tmp41;
  const Scalar _tmp43 = _tmp42 - p_b(1, 0) + position_vector(1, 0);
  const Scalar _tmp44 = std::pow(Scalar(std::pow(_tmp40, Scalar(2)) + std::pow(_tmp43, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp45 = _tmp40 * _tmp44;
  const Scalar _tmp46 = _tmp43 * _tmp44;
  const Scalar _tmp47 = _tmp17 * _tmp27;
  const Scalar _tmp48 = _tmp45 * _tmp47 - _tmp46;
  const Scalar _tmp49 = -_tmp33 + _tmp36;
  const Scalar _tmp50 = _tmp13 - _tmp9;
  const Scalar _tmp51 = _tmp38 + _tmp50;
  const Scalar _tmp52 = _tmp51 - p_a(0, 0) + position_vector(0, 0);
  const Scalar _tmp53 = std::pow(_tmp52, Scalar(2));
  const Scalar _tmp54 = _tmp23 - _tmp24;
  const Scalar _tmp55 = _tmp41 + _tmp54;
  const Scalar _tmp56 = _tmp55 - p_a(1, 0) + position_vector(1, 0);
  const Scalar _tmp57 = _tmp53 + std::pow(_tmp56, Scalar(2));
  const Scalar _tmp58 = std::pow(_tmp57, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp59 = _tmp52 * _tmp58;
  const Scalar _tmp60 = _tmp33 + _tmp34 + _tmp35;
  const Scalar _tmp61 = _tmp59 * _tmp60;
  const Scalar _tmp62 = -_tmp49 * _tmp59 + _tmp61;
  const Scalar _tmp63 = _tmp56 * _tmp58;
  const Scalar _tmp64 = _tmp47 * _tmp59;
  const Scalar _tmp65 = -_tmp63 + _tmp64;
  const Scalar _tmp66 = Scalar(1.0) / (_tmp65);
  const Scalar _tmp67 = _tmp62 * _tmp66;
  const Scalar _tmp68 = _tmp17 * _tmp60;
  const Scalar _tmp69 = _tmp27 * _tmp68;
  const Scalar _tmp70 = _tmp49 * _tmp63 - _tmp59 * _tmp69;
  const Scalar _tmp71 = _tmp48 * _tmp66;
  const Scalar _tmp72 = Scalar(1.0) * _tmp15;
  const Scalar _tmp73 = Scalar(1.0) * _tmp26;
  const Scalar _tmp74 = (-_tmp51 + _tmp72) / (_tmp55 - _tmp73);
  const Scalar _tmp75 = -_tmp37 * _tmp45 + _tmp45 * _tmp60 - _tmp48 * _tmp67 -
                        _tmp74 * (_tmp37 * _tmp46 - _tmp45 * _tmp69 - _tmp70 * _tmp71);
  const Scalar _tmp76 = Scalar(1.0) / (_tmp75);
  const Scalar _tmp77 = _tmp72 + _tmp73 * _tmp74;
  const Scalar _tmp78 = 0;
  const Scalar _tmp79 = _tmp59 * _tmp71;
  const Scalar _tmp80 = _tmp78 * _tmp79;
  const Scalar _tmp81 = _tmp45 * _tmp76;
  const Scalar _tmp82 = _tmp78 * _tmp81;
  const Scalar _tmp83 = _tmp32 * (-_tmp76 * _tmp80 + _tmp82);
  const Scalar _tmp84 = Scalar(1.0) / (_tmp30);
  const Scalar _tmp85 = _tmp26 * _tmp84;
  const Scalar _tmp86 = _tmp15 * _tmp84;
  const Scalar _tmp87 = -_tmp16 * _tmp85 + _tmp27 * _tmp86;
  const Scalar _tmp88 = _tmp31 * _tmp87;
  const Scalar _tmp89 = -_tmp51 * _tmp63 + _tmp55 * _tmp59 + _tmp59 * _tmp88;
  const Scalar _tmp90 = Scalar(1.0) * _tmp66;
  const Scalar _tmp91 = _tmp70 * _tmp74;
  const Scalar _tmp92 = -Scalar(1.0) * _tmp67 + _tmp90 * _tmp91;
  const Scalar _tmp93 = -_tmp39 * _tmp46 + _tmp42 * _tmp45 + _tmp45 * _tmp88 - _tmp71 * _tmp89;
  const Scalar _tmp94 = _tmp76 * _tmp93;
  const Scalar _tmp95 = -_tmp89 * _tmp90 - _tmp92 * _tmp94;
  const Scalar _tmp96 = Scalar(1.0) / (_tmp93);
  const Scalar _tmp97 = _tmp95 * _tmp96;
  const Scalar _tmp98 = _tmp75 * _tmp97 + _tmp92;
  const Scalar _tmp99 = _tmp81 * _tmp98;
  const Scalar _tmp100 = _tmp48 * _tmp76;
  const Scalar _tmp101 = -_tmp100 * _tmp98 + Scalar(1.0);
  const Scalar _tmp102 = _tmp59 * _tmp66;
  const Scalar _tmp103 = _tmp50 + _tmp6;
  const Scalar _tmp104 = _tmp103 - p_d(0, 0) + position_vector(0, 0);
  const Scalar _tmp105 = _tmp20 + _tmp54;
  const Scalar _tmp106 = _tmp105 - p_d(1, 0) + position_vector(1, 0);
  const Scalar _tmp107 =
      std::pow(Scalar(std::pow(_tmp104, Scalar(2)) + std::pow(_tmp106, Scalar(2))),
               Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp108 = _tmp106 * _tmp107;
  const Scalar _tmp109 = _tmp108 * fh1;
  const Scalar _tmp110 = _tmp109 * (_tmp101 * _tmp102 + _tmp99);
  const Scalar _tmp111 = Scalar(1.0) * _tmp96;
  const Scalar _tmp112 = _tmp104 * _tmp107;
  const Scalar _tmp113 = fh1 * (_tmp103 * _tmp108 - _tmp105 * _tmp112);
  const Scalar _tmp114 = _tmp113 * (_tmp111 * _tmp45 - _tmp111 * _tmp79);
  const Scalar _tmp115 = _tmp47 * _tmp66;
  const Scalar _tmp116 = _tmp47 * _tmp67 - _tmp60 - _tmp74 * (_tmp115 * _tmp70 + _tmp69);
  const Scalar _tmp117 = _tmp66 * _tmp89;
  const Scalar _tmp118 = -_tmp116 * _tmp94 + _tmp117 * _tmp47 - _tmp88;
  const Scalar _tmp119 = _tmp75 * _tmp96;
  const Scalar _tmp120 = _tmp116 + _tmp118 * _tmp119;
  const Scalar _tmp121 = _tmp120 * _tmp81;
  const Scalar _tmp122 = -_tmp100 * _tmp120 - _tmp47;
  const Scalar _tmp123 = _tmp112 * fh1;
  const Scalar _tmp124 = _tmp123 * (_tmp102 * _tmp122 + _tmp121 + Scalar(1.0));
  const Scalar _tmp125 =
      std::exp(_tmp110 * _tmp31 + _tmp114 * _tmp31 + _tmp124 * _tmp31 + _tmp31 * _tmp83);
  const Scalar _tmp126 = Scalar(1.0) / (_tmp18);
  const Scalar _tmp127 = _tmp126 * _tmp30;
  const Scalar _tmp128 = _tmp110 * _tmp84;
  const Scalar _tmp129 = _tmp53 / _tmp57;
  const Scalar _tmp130 = std::pow(_tmp65, Scalar(-2));
  const Scalar _tmp131 = _tmp126 * _tmp27;
  const Scalar _tmp132 = _tmp130 * _tmp131;
  const Scalar _tmp133 = _tmp129 * _tmp132;
  const Scalar _tmp134 = _tmp100 * _tmp78;
  const Scalar _tmp135 = _tmp130 * _tmp59;
  const Scalar _tmp136 = _tmp135 * _tmp62;
  const Scalar _tmp137 = _tmp131 * _tmp136;
  const Scalar _tmp138 = _tmp131 * _tmp70;
  const Scalar _tmp139 = _tmp135 * _tmp138;
  const Scalar _tmp140 = _tmp131 * _tmp60;
  const Scalar _tmp141 = _tmp138 * _tmp66;
  const Scalar _tmp142 = _tmp131 * _tmp67;
  const Scalar _tmp143 =
      _tmp137 * _tmp48 - _tmp142 * _tmp45 -
      _tmp74 * (_tmp139 * _tmp48 - _tmp140 * _tmp45 + _tmp140 * _tmp79 - _tmp141 * _tmp45);
  const Scalar _tmp144 = std::pow(_tmp75, Scalar(-2));
  const Scalar _tmp145 = _tmp143 * _tmp144;
  const Scalar _tmp146 = _tmp145 * _tmp45;
  const Scalar _tmp147 = _tmp31 * _tmp32;
  const Scalar _tmp148 = _tmp59 * _tmp90;
  const Scalar _tmp149 = _tmp45 * _tmp96;
  const Scalar _tmp150 = _tmp131 * _tmp149;
  const Scalar _tmp151 = _tmp117 * _tmp131;
  const Scalar _tmp152 = std::pow(_tmp29, Scalar(Scalar(-3) / Scalar(2)));
  const Scalar _tmp153 = _tmp152 * _tmp26;
  const Scalar _tmp154 = _tmp15 * _tmp152;
  const Scalar _tmp155 = _tmp16 * _tmp27;
  const Scalar _tmp156 = _tmp31 * (-_tmp153 * _tmp18 + _tmp154 * _tmp155 + _tmp85);
  const Scalar _tmp157 = _tmp127 * _tmp87;
  const Scalar _tmp158 = _tmp135 * _tmp89;
  const Scalar _tmp159 = _tmp131 * _tmp158;
  const Scalar _tmp160 = _tmp84 * _tmp87;
  const Scalar _tmp161 = _tmp156 * _tmp59 + _tmp157 * _tmp59 - _tmp160 * _tmp59;
  const Scalar _tmp162 = -_tmp151 * _tmp45 + _tmp156 * _tmp45 + _tmp157 * _tmp45 +
                         _tmp159 * _tmp48 - _tmp160 * _tmp45 - _tmp161 * _tmp71;
  const Scalar _tmp163 = std::pow(_tmp93, Scalar(-2));
  const Scalar _tmp164 = Scalar(1.0) * _tmp163;
  const Scalar _tmp165 = _tmp162 * _tmp164;
  const Scalar _tmp166 = _tmp111 * _tmp48;
  const Scalar _tmp167 = _tmp113 * _tmp31;
  const Scalar _tmp168 = _tmp124 * _tmp84;
  const Scalar _tmp169 = _tmp163 * _tmp75;
  const Scalar _tmp170 = _tmp169 * _tmp95;
  const Scalar _tmp171 = _tmp148 * _tmp74;
  const Scalar _tmp172 = Scalar(1.0) * _tmp137 - Scalar(1.0) * _tmp139 * _tmp74 - _tmp140 * _tmp171;
  const Scalar _tmp173 = _tmp76 * _tmp92;
  const Scalar _tmp174 = _tmp145 * _tmp93;
  const Scalar _tmp175 = _tmp119 * (Scalar(1.0) * _tmp159 - _tmp161 * _tmp90 - _tmp162 * _tmp173 -
                                    _tmp172 * _tmp94 + _tmp174 * _tmp92) +
                         _tmp143 * _tmp97 - _tmp162 * _tmp170 + _tmp172;
  const Scalar _tmp176 = _tmp48 * _tmp98;
  const Scalar _tmp177 = -_tmp100 * _tmp175 - _tmp131 * _tmp99 + _tmp145 * _tmp176;
  const Scalar _tmp178 = _tmp109 * _tmp31;
  const Scalar _tmp179 = _tmp118 * _tmp96;
  const Scalar _tmp180 = _tmp28 / [&]() {
    const Scalar base = _tmp16;
    return base * base * base;
  }();
  const Scalar _tmp181 =
      -_tmp136 * _tmp180 + _tmp142 -
      _tmp74 * (-_tmp135 * _tmp180 * _tmp70 + _tmp140 + _tmp141 - _tmp180 * _tmp61 * _tmp66);
  const Scalar _tmp182 = _tmp116 * _tmp76;
  const Scalar _tmp183 = _tmp118 * _tmp169;
  const Scalar _tmp184 =
      _tmp119 * (_tmp115 * _tmp161 + _tmp116 * _tmp174 + _tmp151 - _tmp156 - _tmp157 -
                 _tmp158 * _tmp180 + _tmp160 - _tmp162 * _tmp182 - _tmp181 * _tmp94) +
      _tmp143 * _tmp179 - _tmp162 * _tmp183 + _tmp181;
  const Scalar _tmp185 = _tmp122 * _tmp129;
  const Scalar _tmp186 = _tmp120 * _tmp48;
  const Scalar _tmp187 = -_tmp100 * _tmp184 - _tmp121 * _tmp131 - _tmp131 + _tmp145 * _tmp186;
  const Scalar _tmp188 = _tmp123 * _tmp31;
  const Scalar _tmp189 = _tmp114 * _tmp84;
  const Scalar _tmp190 = _tmp83 * _tmp84;
  const Scalar _tmp191 = _tmp123 * _tmp66;
  const Scalar _tmp192 = _tmp111 * _tmp113;
  const Scalar _tmp193 = _tmp109 * _tmp66;
  const Scalar _tmp194 = _tmp32 * _tmp78;
  const Scalar _tmp195 = _tmp194 * _tmp76;
  const Scalar _tmp196 =
      std::exp(-_tmp101 * _tmp193 - _tmp122 * _tmp191 + _tmp192 * _tmp71 + _tmp195 * _tmp71);
  const Scalar _tmp197 = _tmp131 * _tmp135;
  const Scalar _tmp198 = _tmp113 * _tmp165;
  const Scalar _tmp199 = _tmp122 * _tmp123;
  const Scalar _tmp200 = _tmp113 * _tmp90;
  const Scalar _tmp201 = _tmp195 * _tmp45;
  const Scalar _tmp202 = _tmp145 * _tmp194;
  const Scalar _tmp203 = _tmp100 * _tmp194;
  const Scalar _tmp204 = _tmp109 * _tmp76;
  const Scalar _tmp205 = _tmp123 * _tmp76;
  const Scalar _tmp206 = std::exp(-_tmp120 * _tmp205 - _tmp192 - _tmp195 - _tmp204 * _tmp98);
  const Scalar _tmp207 = _tmp109 * _tmp98;
  const Scalar _tmp208 = _tmp120 * _tmp123;
  const Scalar _tmp209 = _tmp130 * _tmp17;
  const Scalar _tmp210 = _tmp129 * _tmp209;
  const Scalar _tmp211 = _tmp17 * _tmp66;
  const Scalar _tmp212 = _tmp211 * _tmp70;
  const Scalar _tmp213 = _tmp209 * _tmp59;
  const Scalar _tmp214 = _tmp213 * _tmp48;
  const Scalar _tmp215 = _tmp17 * _tmp67;
  const Scalar _tmp216 =
      -_tmp214 * _tmp62 + _tmp215 * _tmp45 -
      _tmp74 * (_tmp212 * _tmp45 - _tmp214 * _tmp70 + _tmp45 * _tmp68 - _tmp68 * _tmp79);
  const Scalar _tmp217 = _tmp144 * _tmp216;
  const Scalar _tmp218 = _tmp217 * _tmp45;
  const Scalar _tmp219 = _tmp160 * _tmp47;
  const Scalar _tmp220 = _tmp31 * (-_tmp153 * _tmp155 + _tmp154 * _tmp28 - _tmp86);
  const Scalar _tmp221 = -_tmp160 * _tmp64 + _tmp220 * _tmp59;
  const Scalar _tmp222 = _tmp211 * _tmp89;
  const Scalar _tmp223 = _tmp213 * _tmp89;
  const Scalar _tmp224 =
      -_tmp219 * _tmp45 + _tmp220 * _tmp45 - _tmp221 * _tmp71 + _tmp222 * _tmp45 - _tmp223 * _tmp48;
  const Scalar _tmp225 = _tmp164 * _tmp224;
  const Scalar _tmp226 = _tmp149 * _tmp17;
  const Scalar _tmp227 =
      _tmp137 - _tmp215 - _tmp74 * (_tmp102 * _tmp140 + _tmp139 - _tmp212 - _tmp68);
  const Scalar _tmp228 = _tmp217 * _tmp93;
  const Scalar _tmp229 =
      _tmp119 * (_tmp115 * _tmp221 + _tmp116 * _tmp228 + _tmp159 - _tmp182 * _tmp224 + _tmp219 -
                 _tmp220 - _tmp222 - _tmp227 * _tmp94) +
      _tmp179 * _tmp216 - _tmp183 * _tmp224 + _tmp227;
  const Scalar _tmp230 = -_tmp100 * _tmp229 + _tmp121 * _tmp17 + _tmp17 + _tmp186 * _tmp217;
  const Scalar _tmp231 = Scalar(1.0) * _tmp213;
  const Scalar _tmp232 = _tmp171 * _tmp68 - _tmp231 * _tmp62 + _tmp231 * _tmp91;
  const Scalar _tmp233 = _tmp119 * (-_tmp173 * _tmp224 - _tmp221 * _tmp90 - Scalar(1.0) * _tmp223 +
                                    _tmp228 * _tmp92 - _tmp232 * _tmp94) -
                         _tmp170 * _tmp224 + _tmp216 * _tmp97 + _tmp232;
  const Scalar _tmp234 = _tmp101 * _tmp209;
  const Scalar _tmp235 = -_tmp100 * _tmp233 + _tmp17 * _tmp99 + _tmp176 * _tmp217;
  const Scalar _tmp236 = _tmp113 * _tmp225;
  const Scalar _tmp237 = _tmp194 * _tmp217;

  // Output terms (1)
  Eigen::Matrix<Scalar, 4, 3> _res;

  _res(0, 0) = 0;
  _res(1, 0) =
      -_tmp125 *
      (-_tmp110 * _tmp127 - _tmp114 * _tmp127 - _tmp124 * _tmp127 - _tmp127 * _tmp83 + _tmp128 -
       _tmp147 *
           (-_tmp102 * _tmp131 * _tmp82 + _tmp133 * _tmp134 + _tmp145 * _tmp80 - _tmp146 * _tmp78) -
       _tmp167 * (_tmp133 * _tmp166 - _tmp148 * _tmp150 - _tmp165 * _tmp45 + _tmp165 * _tmp79) +
       _tmp168 -
       _tmp178 * (-_tmp101 * _tmp133 + _tmp102 * _tmp177 - _tmp146 * _tmp98 + _tmp175 * _tmp81) -
       _tmp188 * (_tmp102 * _tmp187 - _tmp120 * _tmp146 - _tmp132 * _tmp185 + _tmp184 * _tmp81) +
       _tmp189 + _tmp190);
  _res(2, 0) =
      -_tmp196 * (-_tmp101 * _tmp109 * _tmp197 - _tmp131 * _tmp201 * _tmp66 - _tmp150 * _tmp200 +
                  _tmp177 * _tmp193 + _tmp187 * _tmp191 + _tmp192 * _tmp197 * _tmp48 -
                  _tmp197 * _tmp199 + _tmp197 * _tmp203 + _tmp198 * _tmp71 + _tmp202 * _tmp71);
  _res(3, 0) = -_tmp206 * (-_tmp145 * _tmp207 - _tmp145 * _tmp208 + _tmp175 * _tmp204 +
                           _tmp184 * _tmp205 - _tmp198 - _tmp202);
  _res(0, 1) = 0;
  _res(1, 1) =
      -_tmp125 *
      (_tmp128 * _tmp47 -
       _tmp147 *
           (-_tmp134 * _tmp210 + _tmp211 * _tmp59 * _tmp82 + _tmp217 * _tmp80 - _tmp218 * _tmp78) -
       _tmp167 * (_tmp148 * _tmp226 - _tmp166 * _tmp210 - _tmp225 * _tmp45 + _tmp225 * _tmp79) +
       _tmp168 * _tmp47 -
       _tmp178 * (_tmp102 * _tmp235 + _tmp129 * _tmp234 - _tmp218 * _tmp98 + _tmp233 * _tmp81) -
       _tmp188 * (_tmp102 * _tmp230 - _tmp120 * _tmp218 + _tmp185 * _tmp209 + _tmp229 * _tmp81) +
       _tmp189 * _tmp47 + _tmp190 * _tmp47);
  _res(2, 1) =
      -_tmp196 * (_tmp109 * _tmp234 * _tmp59 + _tmp191 * _tmp230 - _tmp192 * _tmp214 +
                  _tmp193 * _tmp235 + _tmp199 * _tmp213 + _tmp200 * _tmp226 + _tmp201 * _tmp211 -
                  _tmp203 * _tmp213 + _tmp236 * _tmp71 + _tmp237 * _tmp71);
  _res(3, 1) = -_tmp206 * (_tmp204 * _tmp233 + _tmp205 * _tmp229 - _tmp207 * _tmp217 -
                           _tmp208 * _tmp217 - _tmp236 - _tmp237);
  _res(0, 2) = 0;
  _res(1, 2) = 0;
  _res(2, 2) = 0;
  _res(3, 2) = 0;

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
