// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

#include <sym/rot3.h>

namespace sym {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: IK_residual_func_cost3_wrt_pc_Nl7
 *
 * Args:
 *     fh1: Scalar
 *     fv1: Scalar
 *     DeltaRot: Rot3
 *     position_vector: Matrix31
 *     encoder: Matrix41
 *     p_a: Matrix31
 *     p_b: Matrix31
 *     p_c: Matrix31
 *     p_d: Matrix31
 *     Rot_init: Rot3
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix43
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 4, 3> IkResidualFuncCost3WrtPcNl7(
    const Scalar fh1, const Scalar fv1, const sym::Rot3<Scalar>& DeltaRot,
    const Eigen::Matrix<Scalar, 3, 1>& position_vector, const Eigen::Matrix<Scalar, 4, 1>& encoder,
    const Eigen::Matrix<Scalar, 3, 1>& p_a, const Eigen::Matrix<Scalar, 3, 1>& p_b,
    const Eigen::Matrix<Scalar, 3, 1>& p_c, const Eigen::Matrix<Scalar, 3, 1>& p_d,
    const sym::Rot3<Scalar>& Rot_init, const Scalar epsilon) {
  // Total ops: 568

  // Unused inputs
  (void)encoder;
  (void)epsilon;

  // Input arrays
  const Eigen::Matrix<Scalar, 4, 1>& _DeltaRot = DeltaRot.Data();
  const Eigen::Matrix<Scalar, 4, 1>& _Rot_init = Rot_init.Data();

  // Intermediate terms (180)
  const Scalar _tmp0 = _DeltaRot[0] * _Rot_init[2] + _DeltaRot[1] * _Rot_init[3] -
                       _DeltaRot[2] * _Rot_init[0] + _DeltaRot[3] * _Rot_init[1];
  const Scalar _tmp1 = _DeltaRot[0] * _Rot_init[3] - _DeltaRot[1] * _Rot_init[2] +
                       _DeltaRot[2] * _Rot_init[1] + _DeltaRot[3] * _Rot_init[0];
  const Scalar _tmp2 = 2 * _tmp0 * _tmp1;
  const Scalar _tmp3 = -_DeltaRot[0] * _Rot_init[1] + _DeltaRot[1] * _Rot_init[0] +
                       _DeltaRot[2] * _Rot_init[3] + _DeltaRot[3] * _Rot_init[2];
  const Scalar _tmp4 = -2 * _DeltaRot[0] * _Rot_init[0] - 2 * _DeltaRot[1] * _Rot_init[1] -
                       2 * _DeltaRot[2] * _Rot_init[2] + 2 * _DeltaRot[3] * _Rot_init[3];
  const Scalar _tmp5 = _tmp3 * _tmp4;
  const Scalar _tmp6 = Scalar(0.20999999999999999) * _tmp2 + Scalar(0.20999999999999999) * _tmp5;
  const Scalar _tmp7 = -2 * std::pow(_tmp1, Scalar(2));
  const Scalar _tmp8 = -2 * std::pow(_tmp3, Scalar(2));
  const Scalar _tmp9 = Scalar(0.20999999999999999) * _tmp7 + Scalar(0.20999999999999999) * _tmp8 +
                       Scalar(0.20999999999999999);
  const Scalar _tmp10 = 2 * _tmp3;
  const Scalar _tmp11 = _tmp0 * _tmp10;
  const Scalar _tmp12 = _tmp1 * _tmp4;
  const Scalar _tmp13 =
      -Scalar(0.010999999999999999) * _tmp11 + Scalar(0.010999999999999999) * _tmp12;
  const Scalar _tmp14 = _tmp13 + _tmp9;
  const Scalar _tmp15 = _tmp14 + _tmp6;
  const Scalar _tmp16 = _tmp15 - p_c(1, 0) + position_vector(1, 0);
  const Scalar _tmp17 = Scalar(0.20999999999999999) * _tmp2 - Scalar(0.20999999999999999) * _tmp5;
  const Scalar _tmp18 = _tmp1 * _tmp10;
  const Scalar _tmp19 = _tmp0 * _tmp4;
  const Scalar _tmp20 =
      -Scalar(0.010999999999999999) * _tmp18 - Scalar(0.010999999999999999) * _tmp19;
  const Scalar _tmp21 = 1 - 2 * std::pow(_tmp0, Scalar(2));
  const Scalar _tmp22 = Scalar(0.20999999999999999) * _tmp21 + Scalar(0.20999999999999999) * _tmp8;
  const Scalar _tmp23 = _tmp20 + _tmp22;
  const Scalar _tmp24 = _tmp17 + _tmp23;
  const Scalar _tmp25 = _tmp24 - p_c(0, 0) + position_vector(0, 0);
  const Scalar _tmp26 = std::pow(_tmp25, Scalar(2));
  const Scalar _tmp27 = std::pow(_tmp16, Scalar(2));
  const Scalar _tmp28 = _tmp26 + _tmp27;
  const Scalar _tmp29 = std::pow(_tmp28, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp30 = -_tmp17;
  const Scalar _tmp31 = _tmp20 - _tmp22;
  const Scalar _tmp32 = _tmp30 + _tmp31;
  const Scalar _tmp33 = _tmp32 - p_a(0, 0) + position_vector(0, 0);
  const Scalar _tmp34 = Scalar(1.0) / (_tmp33);
  const Scalar _tmp35 = -_tmp6;
  const Scalar _tmp36 = _tmp13 - _tmp9;
  const Scalar _tmp37 = _tmp35 + _tmp36;
  const Scalar _tmp38 = _tmp37 - p_a(1, 0) + position_vector(1, 0);
  const Scalar _tmp39 = _tmp34 * _tmp38;
  const Scalar _tmp40 = _tmp29 * _tmp39;
  const Scalar _tmp41 = -_tmp16 * _tmp29 + _tmp25 * _tmp40;
  const Scalar _tmp42 = _tmp17 + _tmp31;
  const Scalar _tmp43 = _tmp42 - p_d(0, 0) + position_vector(0, 0);
  const Scalar _tmp44 = _tmp14 + _tmp35;
  const Scalar _tmp45 = _tmp44 - p_d(1, 0) + position_vector(1, 0);
  const Scalar _tmp46 = std::pow(Scalar(std::pow(_tmp43, Scalar(2)) + std::pow(_tmp45, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp47 = _tmp45 * _tmp46;
  const Scalar _tmp48 = _tmp43 * _tmp46;
  const Scalar _tmp49 = Scalar(1.0) / (_tmp39 * _tmp48 - _tmp47);
  const Scalar _tmp50 =
      std::sqrt(Scalar(std::pow(_tmp33, Scalar(2)) + std::pow(_tmp38, Scalar(2))));
  const Scalar _tmp51 = Scalar(1.0) / (_tmp50);
  const Scalar _tmp52 = _tmp34 * _tmp50;
  const Scalar _tmp53 = _tmp52 * (_tmp32 * _tmp38 * _tmp51 - _tmp33 * _tmp37 * _tmp51);
  const Scalar _tmp54 = _tmp49 * (-_tmp42 * _tmp47 + _tmp44 * _tmp48 + _tmp48 * _tmp53);
  const Scalar _tmp55 = _tmp15 * _tmp29;
  const Scalar _tmp56 = _tmp24 * _tmp29;
  const Scalar _tmp57 = _tmp25 * _tmp29;
  const Scalar _tmp58 = -_tmp16 * _tmp56 + _tmp25 * _tmp55 - _tmp41 * _tmp54 + _tmp53 * _tmp57;
  const Scalar _tmp59 =
      -Scalar(0.010999999999999999) * _tmp21 - Scalar(0.010999999999999999) * _tmp7;
  const Scalar _tmp60 = Scalar(0.20999999999999999) * _tmp18 - Scalar(0.20999999999999999) * _tmp19;
  const Scalar _tmp61 = -_tmp60;
  const Scalar _tmp62 = Scalar(0.20999999999999999) * _tmp11 + Scalar(0.20999999999999999) * _tmp12;
  const Scalar _tmp63 = _tmp59 + _tmp61 - _tmp62;
  const Scalar _tmp64 = _tmp29 * _tmp63;
  const Scalar _tmp65 = _tmp25 * _tmp64;
  const Scalar _tmp66 = _tmp59 + _tmp62;
  const Scalar _tmp67 = _tmp60 + _tmp66;
  const Scalar _tmp68 = _tmp29 * _tmp67;
  const Scalar _tmp69 = _tmp61 + _tmp66;
  const Scalar _tmp70 = _tmp39 * _tmp63;
  const Scalar _tmp71 = _tmp49 * (_tmp47 * _tmp69 - _tmp48 * _tmp70);
  const Scalar _tmp72 = Scalar(1.0) * _tmp37;
  const Scalar _tmp73 = Scalar(1.0) * _tmp32;
  const Scalar _tmp74 = (-_tmp42 + _tmp73) / (_tmp44 - _tmp72);
  const Scalar _tmp75 = _tmp49 * (_tmp48 * _tmp63 - _tmp48 * _tmp69);
  const Scalar _tmp76 = -_tmp25 * _tmp68 - _tmp41 * _tmp75 + _tmp65 -
                        _tmp74 * (_tmp16 * _tmp68 - _tmp39 * _tmp65 - _tmp41 * _tmp71);
  const Scalar _tmp77 = Scalar(1.0) / (_tmp76);
  const Scalar _tmp78 = Scalar(1.0) * _tmp71 * _tmp74 - Scalar(1.0) * _tmp75;
  const Scalar _tmp79 = _tmp77 * _tmp78;
  const Scalar _tmp80 = -Scalar(1.0) * _tmp54 - _tmp58 * _tmp79;
  const Scalar _tmp81 = Scalar(1.0) / (_tmp58);
  const Scalar _tmp82 = _tmp76 * _tmp81;
  const Scalar _tmp83 = _tmp78 + _tmp80 * _tmp82;
  const Scalar _tmp84 = _tmp41 * _tmp77;
  const Scalar _tmp85 = -_tmp83 * _tmp84 + Scalar(1.0);
  const Scalar _tmp86 = _tmp48 * _tmp49;
  const Scalar _tmp87 = _tmp77 * _tmp83;
  const Scalar _tmp88 = _tmp29 * _tmp87;
  const Scalar _tmp89 = _tmp23 + _tmp30;
  const Scalar _tmp90 = _tmp89 - p_b(0, 0) + position_vector(0, 0);
  const Scalar _tmp91 = _tmp36 + _tmp6;
  const Scalar _tmp92 = _tmp91 - p_b(1, 0) + position_vector(1, 0);
  const Scalar _tmp93 = std::pow(Scalar(std::pow(_tmp90, Scalar(2)) + std::pow(_tmp92, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp94 = _tmp92 * _tmp93;
  const Scalar _tmp95 = _tmp94 * fh1;
  const Scalar _tmp96 = _tmp52 * _tmp95;
  const Scalar _tmp97 = Scalar(1.0) * _tmp81;
  const Scalar _tmp98 = _tmp86 * _tmp97;
  const Scalar _tmp99 = _tmp29 * _tmp97;
  const Scalar _tmp100 = _tmp90 * _tmp93;
  const Scalar _tmp101 = fh1 * (-_tmp100 * _tmp91 + _tmp89 * _tmp94);
  const Scalar _tmp102 = _tmp101 * _tmp52;
  const Scalar _tmp103 = _tmp39 * _tmp75 - _tmp63 - _tmp74 * (_tmp39 * _tmp71 + _tmp70);
  const Scalar _tmp104 = _tmp103 * _tmp77;
  const Scalar _tmp105 = -_tmp104 * _tmp58 + _tmp39 * _tmp54 - _tmp53;
  const Scalar _tmp106 = _tmp103 + _tmp105 * _tmp82;
  const Scalar _tmp107 = -_tmp106 * _tmp84 - _tmp39;
  const Scalar _tmp108 = _tmp106 * _tmp77;
  const Scalar _tmp109 = _tmp108 * _tmp29;
  const Scalar _tmp110 = _tmp100 * fh1;
  const Scalar _tmp111 = _tmp110 * _tmp52;
  const Scalar _tmp112 = _tmp72 * _tmp74 + _tmp73;
  const Scalar _tmp113 = 0;
  const Scalar _tmp114 = _tmp113 * _tmp86;
  const Scalar _tmp115 = _tmp113 * _tmp77;
  const Scalar _tmp116 = _tmp115 * _tmp29;
  const Scalar _tmp117 = Scalar(333.54000000000002) - fv1;
  const Scalar _tmp118 = _tmp117 * _tmp52;
  const Scalar _tmp119 = std::exp(_tmp102 * (_tmp25 * _tmp99 - _tmp41 * _tmp98) +
                                  _tmp111 * (_tmp107 * _tmp86 + _tmp109 * _tmp25 + Scalar(1.0)) +
                                  _tmp118 * (-_tmp114 * _tmp84 + _tmp116 * _tmp25) +
                                  _tmp96 * (_tmp25 * _tmp88 + _tmp85 * _tmp86));
  const Scalar _tmp120 = std::pow(_tmp28, Scalar(Scalar(-3) / Scalar(2)));
  const Scalar _tmp121 = _tmp120 * _tmp26;
  const Scalar _tmp122 = _tmp121 * _tmp63;
  const Scalar _tmp123 = _tmp120 * _tmp16 * _tmp25;
  const Scalar _tmp124 = _tmp121 * _tmp39 - _tmp123 - _tmp40;
  const Scalar _tmp125 = _tmp123 * _tmp67;
  const Scalar _tmp126 =
      -_tmp121 * _tmp67 + _tmp122 - _tmp124 * _tmp75 - _tmp64 + _tmp68 -
      _tmp74 * (-_tmp122 * _tmp39 - _tmp124 * _tmp71 + _tmp125 + _tmp39 * _tmp64);
  const Scalar _tmp127 = std::pow(_tmp76, Scalar(-2));
  const Scalar _tmp128 = _tmp126 * _tmp127;
  const Scalar _tmp129 = _tmp128 * _tmp41;
  const Scalar _tmp130 = _tmp121 * _tmp15 + _tmp121 * _tmp53 - _tmp123 * _tmp24 - _tmp124 * _tmp54 -
                         _tmp29 * _tmp53 - _tmp55;
  const Scalar _tmp131 = _tmp130 * _tmp77;
  const Scalar _tmp132 = _tmp58 * _tmp78;
  const Scalar _tmp133 = _tmp80 * _tmp81;
  const Scalar _tmp134 = std::pow(_tmp58, Scalar(-2));
  const Scalar _tmp135 = _tmp134 * _tmp76;
  const Scalar _tmp136 = _tmp130 * _tmp135;
  const Scalar _tmp137 =
      _tmp126 * _tmp133 - _tmp136 * _tmp80 + _tmp82 * (_tmp128 * _tmp132 - _tmp131 * _tmp78);
  const Scalar _tmp138 = -_tmp124 * _tmp87 + _tmp129 * _tmp83 - _tmp137 * _tmp84;
  const Scalar _tmp139 = _tmp57 * _tmp83;
  const Scalar _tmp140 = _tmp57 * _tmp77;
  const Scalar _tmp141 = _tmp115 * _tmp86;
  const Scalar _tmp142 = _tmp128 * _tmp57;
  const Scalar _tmp143 = Scalar(1.0) * _tmp134;
  const Scalar _tmp144 = _tmp143 * _tmp57;
  const Scalar _tmp145 = _tmp143 * _tmp41 * _tmp86;
  const Scalar _tmp146 = _tmp105 * _tmp81;
  const Scalar _tmp147 = _tmp103 * _tmp58;
  const Scalar _tmp148 =
      -_tmp105 * _tmp136 + _tmp126 * _tmp146 + _tmp82 * (-_tmp103 * _tmp131 + _tmp128 * _tmp147);
  const Scalar _tmp149 = _tmp148 * _tmp77;
  const Scalar _tmp150 = _tmp106 * _tmp129 - _tmp108 * _tmp124 - _tmp148 * _tmp84;
  const Scalar _tmp151 = _tmp113 * _tmp117;
  const Scalar _tmp152 = _tmp151 * _tmp49;
  const Scalar _tmp153 = _tmp101 * _tmp97;
  const Scalar _tmp154 = _tmp153 * _tmp49;
  const Scalar _tmp155 = _tmp110 * _tmp49;
  const Scalar _tmp156 = _tmp49 * _tmp95;
  const Scalar _tmp157 =
      std::exp(-_tmp107 * _tmp155 + _tmp152 * _tmp84 + _tmp154 * _tmp41 - _tmp156 * _tmp85);
  const Scalar _tmp158 = _tmp115 * _tmp117;
  const Scalar _tmp159 = _tmp158 * _tmp49;
  const Scalar _tmp160 = _tmp101 * _tmp143;
  const Scalar _tmp161 = _tmp130 * _tmp160;
  const Scalar _tmp162 = _tmp41 * _tmp49;
  const Scalar _tmp163 = std::exp(-_tmp108 * _tmp110 - _tmp153 - _tmp158 - _tmp87 * _tmp95);
  const Scalar _tmp164 = _tmp106 * _tmp110;
  const Scalar _tmp165 = _tmp77 * _tmp95;
  const Scalar _tmp166 = _tmp83 * _tmp95;
  const Scalar _tmp167 = _tmp120 * _tmp27;
  const Scalar _tmp168 = _tmp123 * _tmp39 - _tmp167 + _tmp29;
  const Scalar _tmp169 =
      _tmp123 * _tmp63 - _tmp125 - _tmp168 * _tmp75 -
      _tmp74 * (-_tmp123 * _tmp70 + _tmp167 * _tmp67 - _tmp168 * _tmp71 - _tmp68);
  const Scalar _tmp170 = _tmp127 * _tmp169;
  const Scalar _tmp171 = _tmp170 * _tmp57;
  const Scalar _tmp172 = _tmp170 * _tmp41;
  const Scalar _tmp173 =
      _tmp123 * _tmp15 + _tmp123 * _tmp53 - _tmp167 * _tmp24 - _tmp168 * _tmp54 + _tmp56;
  const Scalar _tmp174 = _tmp135 * _tmp173;
  const Scalar _tmp175 =
      _tmp133 * _tmp169 - _tmp174 * _tmp80 + _tmp82 * (_tmp132 * _tmp170 - _tmp173 * _tmp79);
  const Scalar _tmp176 = -_tmp168 * _tmp87 + _tmp172 * _tmp83 - _tmp175 * _tmp84;
  const Scalar _tmp177 =
      -_tmp105 * _tmp174 + _tmp146 * _tmp169 + _tmp82 * (-_tmp104 * _tmp173 + _tmp147 * _tmp170);
  const Scalar _tmp178 = _tmp106 * _tmp172 - _tmp108 * _tmp168 - _tmp177 * _tmp84;
  const Scalar _tmp179 = _tmp160 * _tmp173;

  // Output terms (1)
  Eigen::Matrix<Scalar, 4, 3> _res;

  _res(0, 0) = 0;
  _res(1, 0) = -_tmp119 * (-_tmp102 * (_tmp121 * _tmp97 - _tmp124 * _tmp98 - _tmp130 * _tmp144 +
                                       _tmp130 * _tmp145 - _tmp99) -
                           _tmp111 * (-_tmp106 * _tmp142 + _tmp108 * _tmp121 - _tmp109 +
                                      _tmp149 * _tmp57 + _tmp150 * _tmp86) -
                           _tmp118 * (-_tmp113 * _tmp142 + _tmp114 * _tmp129 + _tmp115 * _tmp121 -
                                      _tmp116 - _tmp124 * _tmp141) -
                           _tmp96 * (_tmp121 * _tmp87 - _tmp128 * _tmp139 + _tmp137 * _tmp140 +
                                     _tmp138 * _tmp86 - _tmp88));
  _res(2, 0) = -_tmp157 * (-_tmp124 * _tmp154 - _tmp124 * _tmp159 + _tmp129 * _tmp152 +
                           _tmp138 * _tmp156 + _tmp150 * _tmp155 + _tmp161 * _tmp162);
  _res(3, 0) = -_tmp163 * (_tmp110 * _tmp149 - _tmp128 * _tmp151 - _tmp128 * _tmp164 -
                           _tmp128 * _tmp166 + _tmp137 * _tmp165 - _tmp161);
  _res(0, 1) = 0;
  _res(1, 1) =
      -_tmp119 *
      (-_tmp102 * (_tmp123 * _tmp97 - _tmp144 * _tmp173 + _tmp145 * _tmp173 - _tmp168 * _tmp98) -
       _tmp111 * (-_tmp106 * _tmp171 + _tmp108 * _tmp123 + _tmp140 * _tmp177 + _tmp178 * _tmp86) -
       _tmp118 * (-_tmp113 * _tmp171 + _tmp114 * _tmp172 + _tmp115 * _tmp123 - _tmp141 * _tmp168) -
       _tmp96 * (_tmp123 * _tmp87 - _tmp139 * _tmp170 + _tmp140 * _tmp175 + _tmp176 * _tmp86));
  _res(2, 1) = -_tmp157 * (_tmp152 * _tmp172 - _tmp154 * _tmp168 + _tmp155 * _tmp178 +
                           _tmp156 * _tmp176 - _tmp159 * _tmp168 + _tmp162 * _tmp179);
  _res(3, 1) = -_tmp163 * (_tmp110 * _tmp177 * _tmp77 - _tmp151 * _tmp170 - _tmp164 * _tmp170 +
                           _tmp165 * _tmp175 - _tmp166 * _tmp170 - _tmp179);
  _res(0, 2) = 0;
  _res(1, 2) = 0;
  _res(2, 2) = 0;
  _res(3, 2) = 0;

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
