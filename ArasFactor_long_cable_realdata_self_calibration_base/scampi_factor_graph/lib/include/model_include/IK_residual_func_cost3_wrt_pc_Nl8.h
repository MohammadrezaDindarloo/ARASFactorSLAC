// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

#include <sym/rot3.h>

namespace sym {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: IK_residual_func_cost3_wrt_pc_Nl8
 *
 * Args:
 *     fh1: Scalar
 *     fv1: Scalar
 *     DeltaRot: Rot3
 *     position_vector: Matrix31
 *     encoder: Matrix41
 *     p_a: Matrix31
 *     p_b: Matrix31
 *     p_c: Matrix31
 *     p_d: Matrix31
 *     Rot_init: Rot3
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix43
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 4, 3> IkResidualFuncCost3WrtPcNl8(
    const Scalar fh1, const Scalar fv1, const sym::Rot3<Scalar>& DeltaRot,
    const Eigen::Matrix<Scalar, 3, 1>& position_vector, const Eigen::Matrix<Scalar, 4, 1>& encoder,
    const Eigen::Matrix<Scalar, 3, 1>& p_a, const Eigen::Matrix<Scalar, 3, 1>& p_b,
    const Eigen::Matrix<Scalar, 3, 1>& p_c, const Eigen::Matrix<Scalar, 3, 1>& p_d,
    const sym::Rot3<Scalar>& Rot_init, const Scalar epsilon) {
  // Total ops: 715

  // Unused inputs
  (void)encoder;
  (void)epsilon;

  // Input arrays
  const Eigen::Matrix<Scalar, 4, 1>& _DeltaRot = DeltaRot.Data();
  const Eigen::Matrix<Scalar, 4, 1>& _Rot_init = Rot_init.Data();

  // Intermediate terms (236)
  const Scalar _tmp0 = _DeltaRot[0] * _Rot_init[2] + _DeltaRot[1] * _Rot_init[3] -
                       _DeltaRot[2] * _Rot_init[0] + _DeltaRot[3] * _Rot_init[1];
  const Scalar _tmp1 = _DeltaRot[0] * _Rot_init[3] - _DeltaRot[1] * _Rot_init[2] +
                       _DeltaRot[2] * _Rot_init[1] + _DeltaRot[3] * _Rot_init[0];
  const Scalar _tmp2 = 2 * _tmp0 * _tmp1;
  const Scalar _tmp3 = -_DeltaRot[0] * _Rot_init[1] + _DeltaRot[1] * _Rot_init[0] +
                       _DeltaRot[2] * _Rot_init[3] + _DeltaRot[3] * _Rot_init[2];
  const Scalar _tmp4 = -2 * _DeltaRot[0] * _Rot_init[0] - 2 * _DeltaRot[1] * _Rot_init[1] -
                       2 * _DeltaRot[2] * _Rot_init[2] + 2 * _DeltaRot[3] * _Rot_init[3];
  const Scalar _tmp5 = _tmp3 * _tmp4;
  const Scalar _tmp6 = Scalar(0.20999999999999999) * _tmp2 - Scalar(0.20999999999999999) * _tmp5;
  const Scalar _tmp7 = -2 * std::pow(_tmp0, Scalar(2));
  const Scalar _tmp8 = 1 - 2 * std::pow(_tmp3, Scalar(2));
  const Scalar _tmp9 = Scalar(0.20999999999999999) * _tmp7 + Scalar(0.20999999999999999) * _tmp8;
  const Scalar _tmp10 = 2 * _tmp3;
  const Scalar _tmp11 = _tmp1 * _tmp10;
  const Scalar _tmp12 = _tmp0 * _tmp4;
  const Scalar _tmp13 =
      -Scalar(0.010999999999999999) * _tmp11 - Scalar(0.010999999999999999) * _tmp12;
  const Scalar _tmp14 = _tmp13 + _tmp9;
  const Scalar _tmp15 = _tmp14 + _tmp6;
  const Scalar _tmp16 = _tmp15 - p_c(0, 0) + position_vector(0, 0);
  const Scalar _tmp17 = Scalar(1.0) / (_tmp16);
  const Scalar _tmp18 = std::pow(_tmp16, Scalar(2));
  const Scalar _tmp19 = -2 * std::pow(_tmp1, Scalar(2));
  const Scalar _tmp20 = Scalar(0.20999999999999999) * _tmp19 + Scalar(0.20999999999999999) * _tmp8;
  const Scalar _tmp21 = Scalar(0.20999999999999999) * _tmp2 + Scalar(0.20999999999999999) * _tmp5;
  const Scalar _tmp22 = _tmp0 * _tmp10;
  const Scalar _tmp23 = _tmp1 * _tmp4;
  const Scalar _tmp24 =
      -Scalar(0.010999999999999999) * _tmp22 + Scalar(0.010999999999999999) * _tmp23;
  const Scalar _tmp25 = _tmp21 + _tmp24;
  const Scalar _tmp26 = _tmp20 + _tmp25;
  const Scalar _tmp27 = _tmp26 - p_c(1, 0) + position_vector(1, 0);
  const Scalar _tmp28 = std::pow(_tmp27, Scalar(2));
  const Scalar _tmp29 = _tmp18 + _tmp28;
  const Scalar _tmp30 = std::sqrt(_tmp29);
  const Scalar _tmp31 = _tmp17 * _tmp30;
  const Scalar _tmp32 = _tmp13 - _tmp9;
  const Scalar _tmp33 = _tmp32 + _tmp6;
  const Scalar _tmp34 = _tmp33 - p_d(0, 0) + position_vector(0, 0);
  const Scalar _tmp35 = -_tmp21 + _tmp24;
  const Scalar _tmp36 = _tmp20 + _tmp35;
  const Scalar _tmp37 = _tmp36 - p_d(1, 0) + position_vector(1, 0);
  const Scalar _tmp38 = std::pow(Scalar(std::pow(_tmp34, Scalar(2)) + std::pow(_tmp37, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp39 = _tmp34 * _tmp38;
  const Scalar _tmp40 = Scalar(1.0) / (_tmp30);
  const Scalar _tmp41 = _tmp26 * _tmp40;
  const Scalar _tmp42 = _tmp15 * _tmp40;
  const Scalar _tmp43 = -_tmp16 * _tmp41 + _tmp27 * _tmp42;
  const Scalar _tmp44 = _tmp30 * _tmp43;
  const Scalar _tmp45 = _tmp17 * _tmp44;
  const Scalar _tmp46 = _tmp37 * _tmp38;
  const Scalar _tmp47 = -_tmp6;
  const Scalar _tmp48 = _tmp32 + _tmp47;
  const Scalar _tmp49 = _tmp48 - p_a(0, 0) + position_vector(0, 0);
  const Scalar _tmp50 = std::pow(_tmp49, Scalar(2));
  const Scalar _tmp51 = -_tmp20;
  const Scalar _tmp52 = _tmp35 + _tmp51;
  const Scalar _tmp53 = _tmp52 - p_a(1, 0) + position_vector(1, 0);
  const Scalar _tmp54 = _tmp50 + std::pow(_tmp53, Scalar(2));
  const Scalar _tmp55 = std::pow(_tmp54, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp56 = _tmp49 * _tmp55;
  const Scalar _tmp57 = _tmp53 * _tmp55;
  const Scalar _tmp58 = _tmp45 * _tmp56 - _tmp48 * _tmp57 + _tmp52 * _tmp56;
  const Scalar _tmp59 = _tmp17 * _tmp27;
  const Scalar _tmp60 = _tmp56 * _tmp59 - _tmp57;
  const Scalar _tmp61 = Scalar(1.0) / (_tmp60);
  const Scalar _tmp62 = _tmp39 * _tmp59 - _tmp46;
  const Scalar _tmp63 = _tmp61 * _tmp62;
  const Scalar _tmp64 = -_tmp33 * _tmp46 + _tmp36 * _tmp39 + _tmp39 * _tmp45 - _tmp58 * _tmp63;
  const Scalar _tmp65 = Scalar(1.0) / (_tmp64);
  const Scalar _tmp66 = Scalar(1.0) * _tmp65;
  const Scalar _tmp67 = _tmp39 * _tmp66;
  const Scalar _tmp68 = _tmp56 * _tmp63;
  const Scalar _tmp69 = _tmp14 + _tmp47;
  const Scalar _tmp70 = _tmp69 - p_b(0, 0) + position_vector(0, 0);
  const Scalar _tmp71 = _tmp25 + _tmp51;
  const Scalar _tmp72 = _tmp71 - p_b(1, 0) + position_vector(1, 0);
  const Scalar _tmp73 = std::pow(Scalar(std::pow(_tmp70, Scalar(2)) + std::pow(_tmp72, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp74 = _tmp72 * _tmp73;
  const Scalar _tmp75 = _tmp70 * _tmp73;
  const Scalar _tmp76 = fh1 * (_tmp69 * _tmp74 - _tmp71 * _tmp75);
  const Scalar _tmp77 = _tmp76 * (-_tmp66 * _tmp68 + _tmp67);
  const Scalar _tmp78 = Scalar(0.20999999999999999) * _tmp11 - Scalar(0.20999999999999999) * _tmp12;
  const Scalar _tmp79 = -Scalar(0.010999999999999999) * _tmp19 -
                        Scalar(0.010999999999999999) * _tmp7 + Scalar(-0.010999999999999999);
  const Scalar _tmp80 = Scalar(0.20999999999999999) * _tmp22 + Scalar(0.20999999999999999) * _tmp23;
  const Scalar _tmp81 = _tmp79 + _tmp80;
  const Scalar _tmp82 = _tmp78 + _tmp81;
  const Scalar _tmp83 = _tmp59 * _tmp82;
  const Scalar _tmp84 = -_tmp78;
  const Scalar _tmp85 = _tmp79 - _tmp80 + _tmp84;
  const Scalar _tmp86 = -_tmp56 * _tmp83 + _tmp57 * _tmp85;
  const Scalar _tmp87 = Scalar(1.0) * _tmp15;
  const Scalar _tmp88 = Scalar(1.0) * _tmp26;
  const Scalar _tmp89 = (-_tmp48 + _tmp87) / (_tmp52 - _tmp88);
  const Scalar _tmp90 = Scalar(1.0) * _tmp61;
  const Scalar _tmp91 = _tmp89 * _tmp90;
  const Scalar _tmp92 = _tmp56 * _tmp82;
  const Scalar _tmp93 = -_tmp56 * _tmp85 + _tmp92;
  const Scalar _tmp94 = _tmp86 * _tmp91 - _tmp90 * _tmp93;
  const Scalar _tmp95 = _tmp81 + _tmp84;
  const Scalar _tmp96 = _tmp39 * _tmp82 - _tmp39 * _tmp95 - _tmp63 * _tmp93 -
                        _tmp89 * (-_tmp39 * _tmp83 + _tmp46 * _tmp95 - _tmp63 * _tmp86);
  const Scalar _tmp97 = Scalar(1.0) / (_tmp96);
  const Scalar _tmp98 = _tmp64 * _tmp97;
  const Scalar _tmp99 = -_tmp58 * _tmp90 - _tmp94 * _tmp98;
  const Scalar _tmp100 = _tmp65 * _tmp96;
  const Scalar _tmp101 = _tmp100 * _tmp99 + _tmp94;
  const Scalar _tmp102 = _tmp62 * _tmp97;
  const Scalar _tmp103 = -_tmp101 * _tmp102 + Scalar(1.0);
  const Scalar _tmp104 = _tmp56 * _tmp61;
  const Scalar _tmp105 = _tmp39 * _tmp97;
  const Scalar _tmp106 = _tmp101 * _tmp105;
  const Scalar _tmp107 = _tmp74 * fh1;
  const Scalar _tmp108 = _tmp107 * (_tmp103 * _tmp104 + _tmp106);
  const Scalar _tmp109 = Scalar(333.54000000000002) - fv1;
  const Scalar _tmp110 = _tmp87 + _tmp88 * _tmp89;
  const Scalar _tmp111 = 0;
  const Scalar _tmp112 = _tmp102 * _tmp111;
  const Scalar _tmp113 = _tmp105 * _tmp111;
  const Scalar _tmp114 = _tmp109 * (-_tmp104 * _tmp112 + _tmp113);
  const Scalar _tmp115 = _tmp59 * _tmp61;
  const Scalar _tmp116 = _tmp115 * _tmp93 - _tmp82 - _tmp89 * (_tmp115 * _tmp86 + _tmp83);
  const Scalar _tmp117 = _tmp115 * _tmp58 - _tmp116 * _tmp98 - _tmp45;
  const Scalar _tmp118 = _tmp100 * _tmp117 + _tmp116;
  const Scalar _tmp119 = -_tmp102 * _tmp118 - _tmp59;
  const Scalar _tmp120 = _tmp105 * _tmp118;
  const Scalar _tmp121 = _tmp75 * fh1;
  const Scalar _tmp122 = _tmp121 * (_tmp104 * _tmp119 + _tmp120 + Scalar(1.0));
  const Scalar _tmp123 =
      std::exp(_tmp108 * _tmp31 + _tmp114 * _tmp31 + _tmp122 * _tmp31 + _tmp31 * _tmp77);
  const Scalar _tmp124 = Scalar(1.0) / (_tmp18);
  const Scalar _tmp125 = _tmp124 * _tmp30;
  const Scalar _tmp126 = _tmp114 * _tmp40;
  const Scalar _tmp127 = _tmp124 * _tmp27;
  const Scalar _tmp128 = _tmp127 * _tmp61;
  const Scalar _tmp129 = _tmp128 * _tmp93;
  const Scalar _tmp130 = _tmp128 * _tmp86;
  const Scalar _tmp131 = _tmp127 * _tmp82;
  const Scalar _tmp132 = std::pow(_tmp60, Scalar(-2));
  const Scalar _tmp133 = _tmp127 * _tmp132;
  const Scalar _tmp134 = _tmp56 * _tmp86;
  const Scalar _tmp135 = _tmp133 * _tmp134;
  const Scalar _tmp136 = _tmp56 * _tmp93;
  const Scalar _tmp137 = _tmp133 * _tmp136;
  const Scalar _tmp138 =
      -_tmp129 * _tmp39 + _tmp137 * _tmp62 -
      _tmp89 * (-_tmp130 * _tmp39 - _tmp131 * _tmp39 + _tmp131 * _tmp68 + _tmp135 * _tmp62);
  const Scalar _tmp139 = _tmp138 * _tmp65;
  const Scalar _tmp140 = _tmp56 * _tmp91;
  const Scalar _tmp141 =
      -_tmp131 * _tmp140 - Scalar(1.0) * _tmp135 * _tmp89 + Scalar(1.0) * _tmp137;
  const Scalar _tmp142 = std::pow(_tmp96, Scalar(-2));
  const Scalar _tmp143 = _tmp138 * _tmp142;
  const Scalar _tmp144 = _tmp64 * _tmp94;
  const Scalar _tmp145 = _tmp124 * _tmp44;
  const Scalar _tmp146 = _tmp128 * _tmp58;
  const Scalar _tmp147 = _tmp40 * _tmp43;
  const Scalar _tmp148 = _tmp56 * _tmp58;
  const Scalar _tmp149 = _tmp133 * _tmp148;
  const Scalar _tmp150 = std::pow(_tmp29, Scalar(Scalar(-3) / Scalar(2)));
  const Scalar _tmp151 = _tmp150 * _tmp26;
  const Scalar _tmp152 = _tmp15 * _tmp150;
  const Scalar _tmp153 = _tmp16 * _tmp27;
  const Scalar _tmp154 = _tmp31 * (-_tmp151 * _tmp18 + _tmp152 * _tmp153 + _tmp41);
  const Scalar _tmp155 = _tmp145 * _tmp56 - _tmp147 * _tmp56 + _tmp154 * _tmp56;
  const Scalar _tmp156 = _tmp145 * _tmp39 - _tmp146 * _tmp39 - _tmp147 * _tmp39 + _tmp149 * _tmp62 +
                         _tmp154 * _tmp39 - _tmp155 * _tmp63;
  const Scalar _tmp157 = _tmp156 * _tmp97;
  const Scalar _tmp158 = std::pow(_tmp64, Scalar(-2));
  const Scalar _tmp159 = _tmp158 * _tmp96;
  const Scalar _tmp160 = _tmp156 * _tmp159;
  const Scalar _tmp161 = _tmp100 * (-_tmp141 * _tmp98 + _tmp143 * _tmp144 + Scalar(1.0) * _tmp149 -
                                    _tmp155 * _tmp90 - _tmp157 * _tmp94) +
                         _tmp139 * _tmp99 + _tmp141 - _tmp160 * _tmp99;
  const Scalar _tmp162 = _tmp101 * _tmp62;
  const Scalar _tmp163 = -_tmp102 * _tmp161 - _tmp106 * _tmp127 + _tmp143 * _tmp162;
  const Scalar _tmp164 = _tmp143 * _tmp39;
  const Scalar _tmp165 = _tmp50 / _tmp54;
  const Scalar _tmp166 = _tmp103 * _tmp165;
  const Scalar _tmp167 = _tmp107 * _tmp31;
  const Scalar _tmp168 = _tmp133 * _tmp165;
  const Scalar _tmp169 = _tmp116 * _tmp64;
  const Scalar _tmp170 = _tmp28 / [&]() {
    const Scalar base = _tmp16;
    return base * base * base;
  }();
  const Scalar _tmp171 = _tmp132 * _tmp170;
  const Scalar _tmp172 =
      _tmp129 - _tmp136 * _tmp171 -
      _tmp89 * (_tmp130 + _tmp131 - _tmp134 * _tmp171 - _tmp170 * _tmp61 * _tmp92);
  const Scalar _tmp173 =
      _tmp100 * (_tmp115 * _tmp155 - _tmp116 * _tmp157 + _tmp143 * _tmp169 - _tmp145 + _tmp146 +
                 _tmp147 - _tmp148 * _tmp171 - _tmp154 - _tmp172 * _tmp98) +
      _tmp117 * _tmp139 - _tmp117 * _tmp160 + _tmp172;
  const Scalar _tmp174 = _tmp118 * _tmp62;
  const Scalar _tmp175 = -_tmp102 * _tmp173 - _tmp120 * _tmp127 - _tmp127 + _tmp143 * _tmp174;
  const Scalar _tmp176 = _tmp121 * _tmp31;
  const Scalar _tmp177 = _tmp127 * _tmp39 * _tmp65 * _tmp90;
  const Scalar _tmp178 = Scalar(1.0) * _tmp158;
  const Scalar _tmp179 = _tmp156 * _tmp178;
  const Scalar _tmp180 = _tmp31 * _tmp76;
  const Scalar _tmp181 = _tmp111 * _tmp68;
  const Scalar _tmp182 = _tmp111 * _tmp39;
  const Scalar _tmp183 = _tmp109 * _tmp31;
  const Scalar _tmp184 = _tmp40 * _tmp77;
  const Scalar _tmp185 = _tmp108 * _tmp40;
  const Scalar _tmp186 = _tmp122 * _tmp40;
  const Scalar _tmp187 = _tmp121 * _tmp61;
  const Scalar _tmp188 = _tmp107 * _tmp61;
  const Scalar _tmp189 = _tmp66 * _tmp76;
  const Scalar _tmp190 = _tmp109 * _tmp111;
  const Scalar _tmp191 = _tmp102 * _tmp190;
  const Scalar _tmp192 =
      std::exp(-_tmp103 * _tmp188 - _tmp119 * _tmp187 + _tmp189 * _tmp63 + _tmp191 * _tmp61);
  const Scalar _tmp193 = _tmp190 * _tmp97;
  const Scalar _tmp194 = _tmp193 * _tmp39;
  const Scalar _tmp195 = _tmp143 * _tmp190;
  const Scalar _tmp196 = _tmp133 * _tmp56;
  const Scalar _tmp197 = _tmp103 * _tmp107;
  const Scalar _tmp198 = _tmp121 * _tmp56;
  const Scalar _tmp199 = _tmp179 * _tmp76;
  const Scalar _tmp200 = _tmp189 * _tmp56;
  const Scalar _tmp201 = _tmp107 * _tmp97;
  const Scalar _tmp202 = _tmp121 * _tmp97;
  const Scalar _tmp203 = std::exp(-_tmp101 * _tmp201 - _tmp118 * _tmp202 - _tmp189 - _tmp193);
  const Scalar _tmp204 = _tmp101 * _tmp107;
  const Scalar _tmp205 = _tmp118 * _tmp121;
  const Scalar _tmp206 = _tmp17 * _tmp61;
  const Scalar _tmp207 = _tmp206 * _tmp86;
  const Scalar _tmp208 = _tmp17 * _tmp82;
  const Scalar _tmp209 = _tmp206 * _tmp93;
  const Scalar _tmp210 =
      _tmp137 - _tmp209 - _tmp89 * (_tmp104 * _tmp131 + _tmp135 - _tmp207 - _tmp208);
  const Scalar _tmp211 = _tmp31 * (-_tmp151 * _tmp153 + _tmp152 * _tmp28 - _tmp42);
  const Scalar _tmp212 = _tmp147 * _tmp59;
  const Scalar _tmp213 = _tmp211 * _tmp56 - _tmp212 * _tmp56;
  const Scalar _tmp214 = _tmp206 * _tmp58;
  const Scalar _tmp215 = _tmp132 * _tmp17;
  const Scalar _tmp216 = _tmp215 * _tmp62;
  const Scalar _tmp217 = -_tmp148 * _tmp216 + _tmp211 * _tmp39 - _tmp212 * _tmp39 -
                         _tmp213 * _tmp63 + _tmp214 * _tmp39;
  const Scalar _tmp218 = _tmp217 * _tmp97;
  const Scalar _tmp219 =
      -_tmp136 * _tmp216 + _tmp209 * _tmp39 -
      _tmp89 * (-_tmp134 * _tmp216 + _tmp207 * _tmp39 + _tmp208 * _tmp39 - _tmp208 * _tmp68);
  const Scalar _tmp220 = _tmp142 * _tmp219;
  const Scalar _tmp221 = _tmp159 * _tmp217;
  const Scalar _tmp222 = _tmp219 * _tmp65;
  const Scalar _tmp223 =
      _tmp100 * (_tmp115 * _tmp213 - _tmp116 * _tmp218 + _tmp149 + _tmp169 * _tmp220 -
                 _tmp210 * _tmp98 - _tmp211 + _tmp212 - _tmp214) -
      _tmp117 * _tmp221 + _tmp117 * _tmp222 + _tmp210;
  const Scalar _tmp224 = -_tmp102 * _tmp223 + _tmp120 * _tmp17 + _tmp17 + _tmp174 * _tmp220;
  const Scalar _tmp225 = _tmp220 * _tmp39;
  const Scalar _tmp226 = _tmp119 * _tmp215;
  const Scalar _tmp227 = _tmp206 * _tmp56;
  const Scalar _tmp228 = Scalar(1.0) * _tmp215;
  const Scalar _tmp229 = _tmp134 * _tmp228 * _tmp89 - _tmp136 * _tmp228 + _tmp140 * _tmp208;
  const Scalar _tmp230 = _tmp100 * (_tmp144 * _tmp220 - _tmp148 * _tmp228 - _tmp213 * _tmp90 -
                                    _tmp218 * _tmp94 - _tmp229 * _tmp98) -
                         _tmp221 * _tmp99 + _tmp222 * _tmp99 + _tmp229;
  const Scalar _tmp231 = -_tmp102 * _tmp230 + _tmp106 * _tmp17 + _tmp162 * _tmp220;
  const Scalar _tmp232 = _tmp178 * _tmp217;
  const Scalar _tmp233 = _tmp215 * _tmp56;
  const Scalar _tmp234 = _tmp232 * _tmp76;
  const Scalar _tmp235 = _tmp190 * _tmp220;

  // Output terms (1)
  Eigen::Matrix<Scalar, 4, 3> _res;

  _res(0, 0) = 0;
  _res(1, 0) =
      -_tmp123 *
      (-_tmp108 * _tmp125 - _tmp114 * _tmp125 - _tmp122 * _tmp125 - _tmp125 * _tmp77 + _tmp126 -
       _tmp167 * (-_tmp101 * _tmp164 + _tmp104 * _tmp163 + _tmp105 * _tmp161 - _tmp133 * _tmp166) -
       _tmp176 * (_tmp104 * _tmp175 + _tmp105 * _tmp173 - _tmp118 * _tmp164 - _tmp119 * _tmp168) -
       _tmp180 *
           (_tmp168 * _tmp62 * _tmp66 - _tmp177 * _tmp56 - _tmp179 * _tmp39 + _tmp179 * _tmp68) -
       _tmp183 * (_tmp112 * _tmp168 - _tmp113 * _tmp128 * _tmp56 + _tmp143 * _tmp181 -
                  _tmp143 * _tmp182) +
       _tmp184 + _tmp185 + _tmp186);
  _res(2, 0) =
      -_tmp192 * (-_tmp119 * _tmp133 * _tmp198 - _tmp128 * _tmp194 + _tmp133 * _tmp200 * _tmp62 +
                  _tmp163 * _tmp188 + _tmp175 * _tmp187 - _tmp177 * _tmp76 + _tmp191 * _tmp196 +
                  _tmp195 * _tmp63 - _tmp196 * _tmp197 + _tmp199 * _tmp63);
  _res(3, 0) = -_tmp203 * (-_tmp143 * _tmp204 - _tmp143 * _tmp205 + _tmp161 * _tmp201 +
                           _tmp173 * _tmp202 - _tmp195 - _tmp199);
  _res(0, 1) = 0;
  _res(1, 1) =
      -_tmp123 *
      (_tmp126 * _tmp59 -
       _tmp167 * (-_tmp101 * _tmp225 + _tmp104 * _tmp231 + _tmp105 * _tmp230 + _tmp166 * _tmp215) -
       _tmp176 * (_tmp104 * _tmp224 + _tmp105 * _tmp223 - _tmp118 * _tmp225 + _tmp165 * _tmp226) -
       _tmp180 *
           (-_tmp165 * _tmp216 * _tmp66 + _tmp227 * _tmp67 - _tmp232 * _tmp39 + _tmp232 * _tmp68) -
       _tmp183 * (-_tmp112 * _tmp165 * _tmp215 + _tmp113 * _tmp227 + _tmp181 * _tmp220 -
                  _tmp182 * _tmp220) +
       _tmp184 * _tmp59 + _tmp185 * _tmp59 + _tmp186 * _tmp59);
  _res(2, 1) =
      -_tmp192 * (_tmp187 * _tmp224 + _tmp188 * _tmp231 - _tmp191 * _tmp233 + _tmp194 * _tmp206 +
                  _tmp197 * _tmp233 + _tmp198 * _tmp226 - _tmp200 * _tmp216 +
                  _tmp206 * _tmp67 * _tmp76 + _tmp234 * _tmp63 + _tmp235 * _tmp63);
  _res(3, 1) = -_tmp203 * (_tmp201 * _tmp230 + _tmp202 * _tmp223 - _tmp204 * _tmp220 -
                           _tmp205 * _tmp220 - _tmp234 - _tmp235);
  _res(0, 2) = 0;
  _res(1, 2) = 0;
  _res(2, 2) = 0;
  _res(3, 2) = 0;

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
