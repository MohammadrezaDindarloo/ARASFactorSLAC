// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

#include <sym/rot3.h>

namespace sym {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: IK_residual_func_cost3_wrt_pd_Nl10
 *
 * Args:
 *     fh1: Scalar
 *     fv1: Scalar
 *     DeltaRot: Rot3
 *     position_vector: Matrix31
 *     encoder: Matrix41
 *     p_a: Matrix31
 *     p_b: Matrix31
 *     p_c: Matrix31
 *     p_d: Matrix31
 *     Rot_init: Rot3
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix43
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 4, 3> IkResidualFuncCost3WrtPdNl10(
    const Scalar fh1, const Scalar fv1, const sym::Rot3<Scalar>& DeltaRot,
    const Eigen::Matrix<Scalar, 3, 1>& position_vector, const Eigen::Matrix<Scalar, 4, 1>& encoder,
    const Eigen::Matrix<Scalar, 3, 1>& p_a, const Eigen::Matrix<Scalar, 3, 1>& p_b,
    const Eigen::Matrix<Scalar, 3, 1>& p_c, const Eigen::Matrix<Scalar, 3, 1>& p_d,
    const sym::Rot3<Scalar>& Rot_init, const Scalar epsilon) {
  // Total ops: 727

  // Unused inputs
  (void)encoder;
  (void)epsilon;

  // Input arrays
  const Eigen::Matrix<Scalar, 4, 1>& _DeltaRot = DeltaRot.Data();
  const Eigen::Matrix<Scalar, 4, 1>& _Rot_init = Rot_init.Data();

  // Intermediate terms (248)
  const Scalar _tmp0 = Scalar(333.54000000000002) - fv1;
  const Scalar _tmp1 = _DeltaRot[0] * _Rot_init[3] - _DeltaRot[1] * _Rot_init[2] +
                       _DeltaRot[2] * _Rot_init[1] + _DeltaRot[3] * _Rot_init[0];
  const Scalar _tmp2 = -_DeltaRot[0] * _Rot_init[1] + _DeltaRot[1] * _Rot_init[0] +
                       _DeltaRot[2] * _Rot_init[3] + _DeltaRot[3] * _Rot_init[2];
  const Scalar _tmp3 = 2 * _tmp2;
  const Scalar _tmp4 = _tmp1 * _tmp3;
  const Scalar _tmp5 = _DeltaRot[0] * _Rot_init[2] + _DeltaRot[1] * _Rot_init[3] -
                       _DeltaRot[2] * _Rot_init[0] + _DeltaRot[3] * _Rot_init[1];
  const Scalar _tmp6 = -2 * _DeltaRot[0] * _Rot_init[0] - 2 * _DeltaRot[1] * _Rot_init[1] -
                       2 * _DeltaRot[2] * _Rot_init[2] + 2 * _DeltaRot[3] * _Rot_init[3];
  const Scalar _tmp7 = _tmp5 * _tmp6;
  const Scalar _tmp8 = Scalar(0.20999999999999999) * _tmp4 - Scalar(0.20999999999999999) * _tmp7;
  const Scalar _tmp9 = -2 * std::pow(_tmp1, Scalar(2));
  const Scalar _tmp10 = 1 - 2 * std::pow(_tmp5, Scalar(2));
  const Scalar _tmp11 =
      -Scalar(0.010999999999999999) * _tmp10 - Scalar(0.010999999999999999) * _tmp9;
  const Scalar _tmp12 = _tmp3 * _tmp5;
  const Scalar _tmp13 = _tmp1 * _tmp6;
  const Scalar _tmp14 = Scalar(0.20999999999999999) * _tmp12 + Scalar(0.20999999999999999) * _tmp13;
  const Scalar _tmp15 = _tmp11 + _tmp14;
  const Scalar _tmp16 = _tmp15 + _tmp8;
  const Scalar _tmp17 = -2 * std::pow(_tmp2, Scalar(2));
  const Scalar _tmp18 = Scalar(0.20999999999999999) * _tmp10 + Scalar(0.20999999999999999) * _tmp17;
  const Scalar _tmp19 =
      -Scalar(0.010999999999999999) * _tmp4 - Scalar(0.010999999999999999) * _tmp7;
  const Scalar _tmp20 = 2 * _tmp1 * _tmp5;
  const Scalar _tmp21 = _tmp2 * _tmp6;
  const Scalar _tmp22 = Scalar(0.20999999999999999) * _tmp20 - Scalar(0.20999999999999999) * _tmp21;
  const Scalar _tmp23 = _tmp19 + _tmp22;
  const Scalar _tmp24 = _tmp18 + _tmp23;
  const Scalar _tmp25 = _tmp24 - p_c(0, 0) + position_vector(0, 0);
  const Scalar _tmp26 = Scalar(0.20999999999999999) * _tmp17 + Scalar(0.20999999999999999) * _tmp9 +
                        Scalar(0.20999999999999999);
  const Scalar _tmp27 = Scalar(0.20999999999999999) * _tmp20 + Scalar(0.20999999999999999) * _tmp21;
  const Scalar _tmp28 =
      -Scalar(0.010999999999999999) * _tmp12 + Scalar(0.010999999999999999) * _tmp13;
  const Scalar _tmp29 = _tmp27 + _tmp28;
  const Scalar _tmp30 = _tmp26 + _tmp29;
  const Scalar _tmp31 = _tmp30 - p_c(1, 0) + position_vector(1, 0);
  const Scalar _tmp32 = std::pow(Scalar(std::pow(_tmp25, Scalar(2)) + std::pow(_tmp31, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp33 = _tmp25 * _tmp32;
  const Scalar _tmp34 = -_tmp8;
  const Scalar _tmp35 = _tmp11 - _tmp14 + _tmp34;
  const Scalar _tmp36 = -_tmp18;
  const Scalar _tmp37 = _tmp19 - _tmp22;
  const Scalar _tmp38 = _tmp36 + _tmp37;
  const Scalar _tmp39 = _tmp38 - p_a(0, 0) + position_vector(0, 0);
  const Scalar _tmp40 = std::pow(_tmp39, Scalar(2));
  const Scalar _tmp41 = -_tmp26;
  const Scalar _tmp42 = -_tmp27 + _tmp28;
  const Scalar _tmp43 = _tmp41 + _tmp42;
  const Scalar _tmp44 = _tmp43 - p_a(1, 0) + position_vector(1, 0);
  const Scalar _tmp45 = _tmp40 + std::pow(_tmp44, Scalar(2));
  const Scalar _tmp46 = std::pow(_tmp45, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp47 = _tmp39 * _tmp46;
  const Scalar _tmp48 = _tmp15 + _tmp34;
  const Scalar _tmp49 = _tmp47 * _tmp48;
  const Scalar _tmp50 = -_tmp35 * _tmp47 + _tmp49;
  const Scalar _tmp51 = _tmp23 + _tmp36;
  const Scalar _tmp52 = _tmp51 - p_d(0, 0) + position_vector(0, 0);
  const Scalar _tmp53 = Scalar(1.0) / (_tmp52);
  const Scalar _tmp54 = _tmp26 + _tmp42;
  const Scalar _tmp55 = _tmp54 - p_d(1, 0) + position_vector(1, 0);
  const Scalar _tmp56 = _tmp53 * _tmp55;
  const Scalar _tmp57 = _tmp44 * _tmp46;
  const Scalar _tmp58 = _tmp47 * _tmp56 - _tmp57;
  const Scalar _tmp59 = Scalar(1.0) / (_tmp58);
  const Scalar _tmp60 = _tmp33 * _tmp56;
  const Scalar _tmp61 = _tmp31 * _tmp32;
  const Scalar _tmp62 = _tmp60 - _tmp61;
  const Scalar _tmp63 = _tmp59 * _tmp62;
  const Scalar _tmp64 = _tmp33 * _tmp48;
  const Scalar _tmp65 = _tmp35 * _tmp57 - _tmp49 * _tmp56;
  const Scalar _tmp66 = Scalar(1.0) * _tmp54;
  const Scalar _tmp67 = Scalar(1.0) * _tmp51;
  const Scalar _tmp68 = (-_tmp38 + _tmp67) / (_tmp43 - _tmp66);
  const Scalar _tmp69 = -_tmp16 * _tmp33 - _tmp50 * _tmp63 + _tmp64 -
                        _tmp68 * (_tmp16 * _tmp61 - _tmp56 * _tmp64 - _tmp63 * _tmp65);
  const Scalar _tmp70 = Scalar(1.0) / (_tmp69);
  const Scalar _tmp71 = _tmp66 * _tmp68 + _tmp67;
  const Scalar _tmp72 = 0;
  const Scalar _tmp73 = _tmp70 * _tmp72;
  const Scalar _tmp74 = _tmp47 * _tmp63;
  const Scalar _tmp75 = _tmp33 * _tmp73;
  const Scalar _tmp76 = _tmp0 * (-_tmp73 * _tmp74 + _tmp75);
  const Scalar _tmp77 = std::pow(_tmp52, Scalar(2));
  const Scalar _tmp78 = std::pow(_tmp55, Scalar(2));
  const Scalar _tmp79 = _tmp77 + _tmp78;
  const Scalar _tmp80 = std::sqrt(_tmp79);
  const Scalar _tmp81 = _tmp53 * _tmp80;
  const Scalar _tmp82 = Scalar(1.0) * _tmp59;
  const Scalar _tmp83 = _tmp65 * _tmp68;
  const Scalar _tmp84 = -_tmp50 * _tmp82 + _tmp82 * _tmp83;
  const Scalar _tmp85 = Scalar(1.0) / (_tmp80);
  const Scalar _tmp86 = _tmp51 * _tmp85;
  const Scalar _tmp87 = _tmp54 * _tmp85;
  const Scalar _tmp88 = -_tmp52 * _tmp87 + _tmp55 * _tmp86;
  const Scalar _tmp89 = _tmp80 * _tmp88;
  const Scalar _tmp90 = _tmp53 * _tmp89;
  const Scalar _tmp91 = -_tmp38 * _tmp57 + _tmp43 * _tmp47 + _tmp47 * _tmp90;
  const Scalar _tmp92 = -_tmp24 * _tmp61 + _tmp30 * _tmp33 + _tmp33 * _tmp90 - _tmp63 * _tmp91;
  const Scalar _tmp93 = _tmp70 * _tmp92;
  const Scalar _tmp94 = -_tmp82 * _tmp91 - _tmp84 * _tmp93;
  const Scalar _tmp95 = Scalar(1.0) / (_tmp92);
  const Scalar _tmp96 = _tmp69 * _tmp95;
  const Scalar _tmp97 = _tmp84 + _tmp94 * _tmp96;
  const Scalar _tmp98 = _tmp33 * _tmp70;
  const Scalar _tmp99 = _tmp97 * _tmp98;
  const Scalar _tmp100 = _tmp62 * _tmp70;
  const Scalar _tmp101 = -_tmp100 * _tmp97 + Scalar(1.0);
  const Scalar _tmp102 = _tmp47 * _tmp59;
  const Scalar _tmp103 = _tmp18 + _tmp37;
  const Scalar _tmp104 = _tmp103 - p_b(0, 0) + position_vector(0, 0);
  const Scalar _tmp105 = _tmp29 + _tmp41;
  const Scalar _tmp106 = _tmp105 - p_b(1, 0) + position_vector(1, 0);
  const Scalar _tmp107 =
      std::pow(Scalar(std::pow(_tmp104, Scalar(2)) + std::pow(_tmp106, Scalar(2))),
               Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp108 = _tmp106 * _tmp107;
  const Scalar _tmp109 = _tmp108 * (_tmp101 * _tmp102 + _tmp99);
  const Scalar _tmp110 = _tmp81 * fh1;
  const Scalar _tmp111 = _tmp56 * _tmp59;
  const Scalar _tmp112 = _tmp59 * _tmp65;
  const Scalar _tmp113 = _tmp111 * _tmp50 - _tmp48 - _tmp68 * (_tmp112 * _tmp56 + _tmp48 * _tmp56);
  const Scalar _tmp114 = _tmp111 * _tmp91 - _tmp113 * _tmp93 - _tmp90;
  const Scalar _tmp115 = _tmp113 + _tmp114 * _tmp96;
  const Scalar _tmp116 = _tmp115 * _tmp98;
  const Scalar _tmp117 = -_tmp100 * _tmp115 - _tmp56;
  const Scalar _tmp118 = _tmp104 * _tmp107;
  const Scalar _tmp119 = _tmp118 * (_tmp102 * _tmp117 + _tmp116 + Scalar(1.0));
  const Scalar _tmp120 = Scalar(1.0) * _tmp95;
  const Scalar _tmp121 = _tmp120 * _tmp33;
  const Scalar _tmp122 = fh1 * (_tmp103 * _tmp108 - _tmp105 * _tmp118);
  const Scalar _tmp123 = _tmp122 * (-_tmp120 * _tmp74 + _tmp121);
  const Scalar _tmp124 =
      std::exp(_tmp109 * _tmp110 + _tmp110 * _tmp119 + _tmp123 * _tmp81 + _tmp76 * _tmp81);
  const Scalar _tmp125 = _tmp76 * _tmp85;
  const Scalar _tmp126 = Scalar(1.0) / (_tmp77);
  const Scalar _tmp127 = _tmp126 * _tmp55;
  const Scalar _tmp128 = _tmp112 * _tmp127;
  const Scalar _tmp129 = std::pow(_tmp58, Scalar(-2));
  const Scalar _tmp130 = _tmp127 * _tmp129;
  const Scalar _tmp131 = _tmp47 * _tmp65;
  const Scalar _tmp132 = _tmp130 * _tmp131;
  const Scalar _tmp133 = _tmp127 * _tmp49;
  const Scalar _tmp134 = _tmp47 * _tmp50;
  const Scalar _tmp135 = _tmp130 * _tmp134;
  const Scalar _tmp136 = _tmp127 * _tmp59;
  const Scalar _tmp137 = _tmp136 * _tmp50;
  const Scalar _tmp138 =
      _tmp135 * _tmp62 - _tmp137 * _tmp33 -
      _tmp68 * (-_tmp127 * _tmp64 - _tmp128 * _tmp33 + _tmp132 * _tmp62 + _tmp133 * _tmp63);
  const Scalar _tmp139 = std::pow(_tmp69, Scalar(-2));
  const Scalar _tmp140 = _tmp138 * _tmp139;
  const Scalar _tmp141 = _tmp72 * _tmp74;
  const Scalar _tmp142 = _tmp33 * _tmp72;
  const Scalar _tmp143 = _tmp40 / _tmp45;
  const Scalar _tmp144 = _tmp130 * _tmp143;
  const Scalar _tmp145 = _tmp100 * _tmp72;
  const Scalar _tmp146 = _tmp0 * _tmp81;
  const Scalar _tmp147 = _tmp126 * _tmp80;
  const Scalar _tmp148 = _tmp85 * _tmp88;
  const Scalar _tmp149 = _tmp126 * _tmp89;
  const Scalar _tmp150 = std::pow(_tmp79, Scalar(Scalar(-3) / Scalar(2)));
  const Scalar _tmp151 = _tmp150 * _tmp54;
  const Scalar _tmp152 = _tmp150 * _tmp51;
  const Scalar _tmp153 = _tmp52 * _tmp55;
  const Scalar _tmp154 = _tmp81 * (-_tmp151 * _tmp77 + _tmp152 * _tmp153 + _tmp87);
  const Scalar _tmp155 = -_tmp148 * _tmp47 + _tmp149 * _tmp47 + _tmp154 * _tmp47;
  const Scalar _tmp156 = _tmp136 * _tmp91;
  const Scalar _tmp157 = _tmp47 * _tmp91;
  const Scalar _tmp158 = _tmp130 * _tmp157;
  const Scalar _tmp159 = -_tmp148 * _tmp33 + _tmp149 * _tmp33 + _tmp154 * _tmp33 -
                         _tmp155 * _tmp63 - _tmp156 * _tmp33 + _tmp158 * _tmp62;
  const Scalar _tmp160 = std::pow(_tmp92, Scalar(-2));
  const Scalar _tmp161 = _tmp160 * _tmp69;
  const Scalar _tmp162 = _tmp114 * _tmp161;
  const Scalar _tmp163 = _tmp114 * _tmp95;
  const Scalar _tmp164 = _tmp159 * _tmp70;
  const Scalar _tmp165 = _tmp140 * _tmp92;
  const Scalar _tmp166 = _tmp78 / [&]() {
    const Scalar base = _tmp52;
    return base * base * base;
  }();
  const Scalar _tmp167 = _tmp129 * _tmp166;
  const Scalar _tmp168 =
      -_tmp134 * _tmp167 + _tmp137 -
      _tmp68 * (_tmp127 * _tmp48 + _tmp128 - _tmp131 * _tmp167 - _tmp166 * _tmp49 * _tmp59);
  const Scalar _tmp169 =
      _tmp138 * _tmp163 - _tmp159 * _tmp162 + _tmp168 +
      _tmp96 * (_tmp111 * _tmp155 - _tmp113 * _tmp164 + _tmp113 * _tmp165 + _tmp148 - _tmp149 -
                _tmp154 + _tmp156 - _tmp157 * _tmp167 - _tmp168 * _tmp93);
  const Scalar _tmp170 = _tmp139 * _tmp62;
  const Scalar _tmp171 = _tmp138 * _tmp170;
  const Scalar _tmp172 = -_tmp100 * _tmp169 + _tmp115 * _tmp171 - _tmp116 * _tmp127 - _tmp127;
  const Scalar _tmp173 = _tmp115 * _tmp33;
  const Scalar _tmp174 = _tmp110 * _tmp118;
  const Scalar _tmp175 = _tmp123 * _tmp85;
  const Scalar _tmp176 = _tmp147 * fh1;
  const Scalar _tmp177 = Scalar(1.0) * _tmp160;
  const Scalar _tmp178 = _tmp177 * _tmp74;
  const Scalar _tmp179 = _tmp47 * _tmp82;
  const Scalar _tmp180 = _tmp127 * _tmp33 * _tmp95;
  const Scalar _tmp181 = _tmp177 * _tmp33;
  const Scalar _tmp182 = _tmp120 * _tmp62;
  const Scalar _tmp183 = _tmp122 * _tmp81;
  const Scalar _tmp184 = _tmp94 * _tmp95;
  const Scalar _tmp185 = _tmp161 * _tmp94;
  const Scalar _tmp186 = _tmp130 * _tmp47;
  const Scalar _tmp187 =
      -_tmp133 * _tmp68 * _tmp82 + Scalar(1.0) * _tmp135 - Scalar(1.0) * _tmp186 * _tmp83;
  const Scalar _tmp188 = _tmp138 * _tmp184 - _tmp159 * _tmp185 + _tmp187 +
                         _tmp96 * (-_tmp155 * _tmp82 + Scalar(1.0) * _tmp158 - _tmp164 * _tmp84 +
                                   _tmp165 * _tmp84 - _tmp187 * _tmp93);
  const Scalar _tmp189 = -_tmp100 * _tmp188 - _tmp127 * _tmp99 + _tmp171 * _tmp97;
  const Scalar _tmp190 = _tmp33 * _tmp97;
  const Scalar _tmp191 = _tmp101 * _tmp143;
  const Scalar _tmp192 = _tmp108 * _tmp110;
  const Scalar _tmp193 = _tmp85 * fh1;
  const Scalar _tmp194 = _tmp109 * _tmp193;
  const Scalar _tmp195 = _tmp119 * _tmp193;
  const Scalar _tmp196 = _tmp59 * fh1;
  const Scalar _tmp197 = _tmp118 * _tmp196;
  const Scalar _tmp198 = _tmp120 * _tmp122;
  const Scalar _tmp199 = _tmp0 * _tmp73;
  const Scalar _tmp200 = _tmp108 * _tmp196;
  const Scalar _tmp201 =
      std::exp(-_tmp101 * _tmp200 - _tmp117 * _tmp197 + _tmp198 * _tmp63 + _tmp199 * _tmp63);
  const Scalar _tmp202 = _tmp47 * fh1;
  const Scalar _tmp203 = _tmp101 * _tmp108;
  const Scalar _tmp204 = _tmp0 * _tmp72;
  const Scalar _tmp205 = _tmp100 * _tmp204;
  const Scalar _tmp206 = _tmp122 * _tmp177;
  const Scalar _tmp207 = _tmp159 * _tmp206;
  const Scalar _tmp208 = _tmp118 * _tmp202;
  const Scalar _tmp209 = _tmp140 * _tmp204;
  const Scalar _tmp210 = _tmp199 * _tmp33;
  const Scalar _tmp211 = _tmp70 * fh1;
  const Scalar _tmp212 = _tmp118 * _tmp211;
  const Scalar _tmp213 = _tmp108 * _tmp211;
  const Scalar _tmp214 = std::exp(-_tmp115 * _tmp212 - _tmp198 - _tmp199 - _tmp213 * _tmp97);
  const Scalar _tmp215 = _tmp115 * _tmp118;
  const Scalar _tmp216 = _tmp140 * fh1;
  const Scalar _tmp217 = _tmp108 * _tmp97;
  const Scalar _tmp218 = _tmp53 * _tmp59;
  const Scalar _tmp219 = _tmp218 * _tmp91;
  const Scalar _tmp220 = _tmp129 * _tmp53;
  const Scalar _tmp221 = _tmp220 * _tmp47;
  const Scalar _tmp222 = _tmp221 * _tmp62;
  const Scalar _tmp223 = _tmp81 * (-_tmp151 * _tmp153 + _tmp152 * _tmp78 - _tmp86);
  const Scalar _tmp224 = _tmp148 * _tmp56;
  const Scalar _tmp225 = _tmp223 * _tmp47 - _tmp224 * _tmp47;
  const Scalar _tmp226 =
      -_tmp148 * _tmp60 + _tmp219 * _tmp33 - _tmp222 * _tmp91 + _tmp223 * _tmp33 - _tmp225 * _tmp63;
  const Scalar _tmp227 = _tmp143 * _tmp220;
  const Scalar _tmp228 = _tmp121 * _tmp218;
  const Scalar _tmp229 = Scalar(1.0) * _tmp221;
  const Scalar _tmp230 = _tmp48 * _tmp53;
  const Scalar _tmp231 = _tmp179 * _tmp230 * _tmp68 - _tmp229 * _tmp50 + _tmp229 * _tmp83;
  const Scalar _tmp232 = _tmp218 * _tmp50;
  const Scalar _tmp233 = _tmp218 * _tmp65;
  const Scalar _tmp234 =
      -_tmp222 * _tmp50 + _tmp232 * _tmp33 -
      _tmp68 * (-_tmp222 * _tmp65 + _tmp230 * _tmp33 - _tmp230 * _tmp74 + _tmp233 * _tmp33);
  const Scalar _tmp235 = _tmp139 * _tmp234;
  const Scalar _tmp236 = _tmp235 * _tmp92;
  const Scalar _tmp237 = _tmp226 * _tmp70;
  const Scalar _tmp238 = _tmp184 * _tmp234 - _tmp185 * _tmp226 + _tmp231 +
                         _tmp96 * (-_tmp225 * _tmp82 - _tmp229 * _tmp91 - _tmp231 * _tmp93 +
                                   _tmp236 * _tmp84 - _tmp237 * _tmp84);
  const Scalar _tmp239 = _tmp170 * _tmp234;
  const Scalar _tmp240 = -_tmp100 * _tmp238 + _tmp239 * _tmp97 + _tmp53 * _tmp99;
  const Scalar _tmp241 =
      _tmp135 - _tmp232 - _tmp68 * (_tmp132 + _tmp136 * _tmp49 - _tmp230 - _tmp233);
  const Scalar _tmp242 = -_tmp162 * _tmp226 + _tmp163 * _tmp234 + _tmp241 +
                         _tmp96 * (_tmp111 * _tmp225 + _tmp113 * _tmp236 - _tmp113 * _tmp237 +
                                   _tmp158 - _tmp219 - _tmp223 + _tmp224 - _tmp241 * _tmp93);
  const Scalar _tmp243 = -_tmp100 * _tmp242 + _tmp115 * _tmp239 + _tmp116 * _tmp53 + _tmp53;
  const Scalar _tmp244 = _tmp117 * _tmp220;
  const Scalar _tmp245 = _tmp204 * _tmp235;
  const Scalar _tmp246 = _tmp206 * _tmp226;
  const Scalar _tmp247 = _tmp235 * fh1;

  // Output terms (1)
  Eigen::Matrix<Scalar, 4, 3> _res;

  _res(0, 0) = 0;
  _res(1, 0) =
      -_tmp124 *
      (-_tmp109 * _tmp176 - _tmp119 * _tmp176 - _tmp123 * _tmp147 + _tmp125 -
       _tmp146 * (-_tmp102 * _tmp127 * _tmp75 + _tmp140 * _tmp141 - _tmp140 * _tmp142 +
                  _tmp144 * _tmp145) -
       _tmp147 * _tmp76 -
       _tmp174 * (_tmp102 * _tmp172 - _tmp117 * _tmp144 - _tmp140 * _tmp173 + _tmp169 * _tmp98) +
       _tmp175 -
       _tmp183 * (_tmp144 * _tmp182 + _tmp159 * _tmp178 - _tmp159 * _tmp181 - _tmp179 * _tmp180) -
       _tmp192 * (_tmp102 * _tmp189 - _tmp130 * _tmp191 - _tmp140 * _tmp190 + _tmp188 * _tmp98) +
       _tmp194 + _tmp195);
  _res(2, 0) = -_tmp201 * (-_tmp117 * _tmp130 * _tmp208 - _tmp122 * _tmp180 * _tmp82 -
                           _tmp130 * _tmp202 * _tmp203 - _tmp136 * _tmp210 + _tmp172 * _tmp197 +
                           _tmp186 * _tmp198 * _tmp62 + _tmp186 * _tmp205 + _tmp189 * _tmp200 +
                           _tmp207 * _tmp63 + _tmp209 * _tmp63);
  _res(3, 0) = -_tmp214 * (_tmp169 * _tmp212 + _tmp188 * _tmp213 - _tmp207 - _tmp209 -
                           _tmp215 * _tmp216 - _tmp216 * _tmp217);
  _res(0, 1) = 0;
  _res(1, 1) =
      -_tmp124 *
      (_tmp125 * _tmp56 -
       _tmp146 *
           (_tmp141 * _tmp235 - _tmp142 * _tmp235 - _tmp145 * _tmp227 + _tmp218 * _tmp47 * _tmp75) -
       _tmp174 * (_tmp102 * _tmp243 + _tmp143 * _tmp244 - _tmp173 * _tmp235 + _tmp242 * _tmp98) +
       _tmp175 * _tmp56 -
       _tmp183 * (_tmp178 * _tmp226 - _tmp181 * _tmp226 - _tmp182 * _tmp227 + _tmp228 * _tmp47) -
       _tmp192 * (_tmp102 * _tmp240 - _tmp190 * _tmp235 + _tmp191 * _tmp220 + _tmp238 * _tmp98) +
       _tmp194 * _tmp56 + _tmp195 * _tmp56);
  _res(2, 1) =
      -_tmp201 * (_tmp122 * _tmp228 + _tmp197 * _tmp243 - _tmp198 * _tmp222 + _tmp200 * _tmp240 +
                  _tmp203 * _tmp221 * fh1 - _tmp205 * _tmp221 + _tmp208 * _tmp244 +
                  _tmp210 * _tmp218 + _tmp245 * _tmp63 + _tmp246 * _tmp63);
  _res(3, 1) = -_tmp214 * (_tmp212 * _tmp242 + _tmp213 * _tmp238 - _tmp215 * _tmp247 -
                           _tmp217 * _tmp247 - _tmp245 - _tmp246);
  _res(0, 2) = 0;
  _res(1, 2) = 0;
  _res(2, 2) = 0;
  _res(3, 2) = 0;

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
