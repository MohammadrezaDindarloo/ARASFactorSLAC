// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

#include <sym/rot3.h>

namespace sym {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: IK_residual_func_cost3_wrt_pd_Nl12
 *
 * Args:
 *     fh1: Scalar
 *     fv1: Scalar
 *     DeltaRot: Rot3
 *     position_vector: Matrix31
 *     encoder: Matrix41
 *     p_a: Matrix31
 *     p_b: Matrix31
 *     p_c: Matrix31
 *     p_d: Matrix31
 *     Rot_init: Rot3
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix43
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 4, 3> IkResidualFuncCost3WrtPdNl12(
    const Scalar fh1, const Scalar fv1, const sym::Rot3<Scalar>& DeltaRot,
    const Eigen::Matrix<Scalar, 3, 1>& position_vector, const Eigen::Matrix<Scalar, 4, 1>& encoder,
    const Eigen::Matrix<Scalar, 3, 1>& p_a, const Eigen::Matrix<Scalar, 3, 1>& p_b,
    const Eigen::Matrix<Scalar, 3, 1>& p_c, const Eigen::Matrix<Scalar, 3, 1>& p_d,
    const sym::Rot3<Scalar>& Rot_init, const Scalar epsilon) {
  // Total ops: 569

  // Unused inputs
  (void)encoder;
  (void)epsilon;

  // Input arrays
  const Eigen::Matrix<Scalar, 4, 1>& _DeltaRot = DeltaRot.Data();
  const Eigen::Matrix<Scalar, 4, 1>& _Rot_init = Rot_init.Data();

  // Intermediate terms (184)
  const Scalar _tmp0 = _DeltaRot[0] * _Rot_init[3] - _DeltaRot[1] * _Rot_init[2] +
                       _DeltaRot[2] * _Rot_init[1] + _DeltaRot[3] * _Rot_init[0];
  const Scalar _tmp1 = _DeltaRot[0] * _Rot_init[2] + _DeltaRot[1] * _Rot_init[3] -
                       _DeltaRot[2] * _Rot_init[0] + _DeltaRot[3] * _Rot_init[1];
  const Scalar _tmp2 = 2 * _tmp1;
  const Scalar _tmp3 = _tmp0 * _tmp2;
  const Scalar _tmp4 = -_DeltaRot[0] * _Rot_init[1] + _DeltaRot[1] * _Rot_init[0] +
                       _DeltaRot[2] * _Rot_init[3] + _DeltaRot[3] * _Rot_init[2];
  const Scalar _tmp5 = -2 * _DeltaRot[0] * _Rot_init[0] - 2 * _DeltaRot[1] * _Rot_init[1] -
                       2 * _DeltaRot[2] * _Rot_init[2] + 2 * _DeltaRot[3] * _Rot_init[3];
  const Scalar _tmp6 = _tmp4 * _tmp5;
  const Scalar _tmp7 = Scalar(0.20999999999999999) * _tmp3 - Scalar(0.20999999999999999) * _tmp6;
  const Scalar _tmp8 = -2 * std::pow(_tmp1, Scalar(2));
  const Scalar _tmp9 = 1 - 2 * std::pow(_tmp4, Scalar(2));
  const Scalar _tmp10 = Scalar(0.20999999999999999) * _tmp8 + Scalar(0.20999999999999999) * _tmp9;
  const Scalar _tmp11 = 2 * _tmp0 * _tmp4;
  const Scalar _tmp12 = _tmp1 * _tmp5;
  const Scalar _tmp13 =
      -Scalar(0.010999999999999999) * _tmp11 - Scalar(0.010999999999999999) * _tmp12;
  const Scalar _tmp14 = -_tmp10 + _tmp13;
  const Scalar _tmp15 = _tmp14 + _tmp7;
  const Scalar _tmp16 = _tmp15 - p_d(0, 0) + position_vector(0, 0);
  const Scalar _tmp17 = -2 * std::pow(_tmp0, Scalar(2));
  const Scalar _tmp18 = Scalar(0.20999999999999999) * _tmp17 + Scalar(0.20999999999999999) * _tmp9;
  const Scalar _tmp19 = -_tmp18;
  const Scalar _tmp20 = _tmp2 * _tmp4;
  const Scalar _tmp21 = _tmp0 * _tmp5;
  const Scalar _tmp22 =
      -Scalar(0.010999999999999999) * _tmp20 + Scalar(0.010999999999999999) * _tmp21;
  const Scalar _tmp23 = Scalar(0.20999999999999999) * _tmp3 + Scalar(0.20999999999999999) * _tmp6;
  const Scalar _tmp24 = _tmp22 - _tmp23;
  const Scalar _tmp25 = _tmp19 + _tmp24;
  const Scalar _tmp26 = Scalar(1.0) * _tmp25;
  const Scalar _tmp27 = _tmp22 + _tmp23;
  const Scalar _tmp28 = _tmp19 + _tmp27;
  const Scalar _tmp29 = -_tmp7;
  const Scalar _tmp30 = _tmp10 + _tmp13;
  const Scalar _tmp31 = _tmp29 + _tmp30;
  const Scalar _tmp32 = _tmp14 + _tmp29;
  const Scalar _tmp33 = Scalar(1.0) * _tmp32;
  const Scalar _tmp34 = (-_tmp31 + _tmp33) / (-_tmp26 + _tmp28);
  const Scalar _tmp35 = _tmp26 * _tmp34 + _tmp33;
  const Scalar _tmp36 = 0;
  const Scalar _tmp37 = std::pow(_tmp16, Scalar(2));
  const Scalar _tmp38 = _tmp18 + _tmp24;
  const Scalar _tmp39 = _tmp38 - p_d(1, 0) + position_vector(1, 0);
  const Scalar _tmp40 = std::pow(_tmp39, Scalar(2));
  const Scalar _tmp41 = _tmp37 + _tmp40;
  const Scalar _tmp42 = std::pow(_tmp41, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp43 = Scalar(0.20999999999999999) * _tmp20 + Scalar(0.20999999999999999) * _tmp21;
  const Scalar _tmp44 = -_tmp43;
  const Scalar _tmp45 = -Scalar(0.010999999999999999) * _tmp17 -
                        Scalar(0.010999999999999999) * _tmp8 + Scalar(-0.010999999999999999);
  const Scalar _tmp46 = Scalar(0.20999999999999999) * _tmp11 - Scalar(0.20999999999999999) * _tmp12;
  const Scalar _tmp47 = _tmp45 - _tmp46;
  const Scalar _tmp48 = _tmp44 + _tmp47;
  const Scalar _tmp49 = _tmp42 * _tmp48;
  const Scalar _tmp50 = _tmp16 * _tmp49;
  const Scalar _tmp51 = _tmp39 * _tmp42;
  const Scalar _tmp52 = _tmp32 - p_a(0, 0) + position_vector(0, 0);
  const Scalar _tmp53 = Scalar(1.0) / (_tmp52);
  const Scalar _tmp54 = _tmp25 - p_a(1, 0) + position_vector(1, 0);
  const Scalar _tmp55 = _tmp53 * _tmp54;
  const Scalar _tmp56 = _tmp42 * _tmp55;
  const Scalar _tmp57 = _tmp16 * _tmp56 - _tmp51;
  const Scalar _tmp58 = _tmp31 - p_b(0, 0) + position_vector(0, 0);
  const Scalar _tmp59 = _tmp28 - p_b(1, 0) + position_vector(1, 0);
  const Scalar _tmp60 = std::pow(Scalar(std::pow(_tmp58, Scalar(2)) + std::pow(_tmp59, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp61 = _tmp59 * _tmp60;
  const Scalar _tmp62 = _tmp58 * _tmp60;
  const Scalar _tmp63 = Scalar(1.0) / (_tmp55 * _tmp62 - _tmp61);
  const Scalar _tmp64 = _tmp44 + _tmp45 + _tmp46;
  const Scalar _tmp65 = _tmp48 * _tmp62;
  const Scalar _tmp66 = _tmp63 * (-_tmp62 * _tmp64 + _tmp65);
  const Scalar _tmp67 = _tmp43 + _tmp47;
  const Scalar _tmp68 = _tmp42 * _tmp67;
  const Scalar _tmp69 = _tmp63 * (-_tmp55 * _tmp65 + _tmp61 * _tmp64);
  const Scalar _tmp70 = -_tmp16 * _tmp68 -
                        _tmp34 * (-_tmp50 * _tmp55 + _tmp51 * _tmp67 - _tmp57 * _tmp69) + _tmp50 -
                        _tmp57 * _tmp66;
  const Scalar _tmp71 = Scalar(1.0) / (_tmp70);
  const Scalar _tmp72 = _tmp42 * _tmp71;
  const Scalar _tmp73 = _tmp36 * _tmp72;
  const Scalar _tmp74 = _tmp57 * _tmp71;
  const Scalar _tmp75 = _tmp62 * _tmp63;
  const Scalar _tmp76 = _tmp36 * _tmp75;
  const Scalar _tmp77 = Scalar(333.54000000000002) - fv1;
  const Scalar _tmp78 =
      std::sqrt(Scalar(std::pow(_tmp52, Scalar(2)) + std::pow(_tmp54, Scalar(2))));
  const Scalar _tmp79 = _tmp53 * _tmp78;
  const Scalar _tmp80 = _tmp77 * _tmp79;
  const Scalar _tmp81 = _tmp38 * _tmp42;
  const Scalar _tmp82 = Scalar(1.0) / (_tmp78);
  const Scalar _tmp83 = _tmp79 * (-_tmp25 * _tmp52 * _tmp82 + _tmp32 * _tmp54 * _tmp82);
  const Scalar _tmp84 = _tmp63 * (_tmp28 * _tmp62 - _tmp31 * _tmp61 + _tmp62 * _tmp83);
  const Scalar _tmp85 = _tmp42 * _tmp83;
  const Scalar _tmp86 = -_tmp15 * _tmp51 + _tmp16 * _tmp81 + _tmp16 * _tmp85 - _tmp57 * _tmp84;
  const Scalar _tmp87 = Scalar(1.0) / (_tmp86);
  const Scalar _tmp88 = _tmp48 * _tmp55;
  const Scalar _tmp89 = -_tmp34 * (_tmp55 * _tmp69 + _tmp88) - _tmp48 + _tmp55 * _tmp66;
  const Scalar _tmp90 = _tmp71 * _tmp86;
  const Scalar _tmp91 = _tmp55 * _tmp84 - _tmp83 - _tmp89 * _tmp90;
  const Scalar _tmp92 = _tmp87 * _tmp91;
  const Scalar _tmp93 = _tmp70 * _tmp92 + _tmp89;
  const Scalar _tmp94 = -_tmp55 - _tmp74 * _tmp93;
  const Scalar _tmp95 = _tmp72 * _tmp93;
  const Scalar _tmp96 = _tmp30 + _tmp7;
  const Scalar _tmp97 = _tmp96 - p_c(0, 0) + position_vector(0, 0);
  const Scalar _tmp98 = _tmp18 + _tmp27;
  const Scalar _tmp99 = _tmp98 - p_c(1, 0) + position_vector(1, 0);
  const Scalar _tmp100 = std::pow(Scalar(std::pow(_tmp97, Scalar(2)) + std::pow(_tmp99, Scalar(2))),
                                  Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp101 = _tmp100 * _tmp97;
  const Scalar _tmp102 = _tmp101 * fh1;
  const Scalar _tmp103 = _tmp102 * _tmp79;
  const Scalar _tmp104 = Scalar(1.0) * _tmp87;
  const Scalar _tmp105 = _tmp104 * _tmp42;
  const Scalar _tmp106 = _tmp104 * _tmp75;
  const Scalar _tmp107 = _tmp100 * _tmp99;
  const Scalar _tmp108 = fh1 * (-_tmp101 * _tmp98 + _tmp107 * _tmp96);
  const Scalar _tmp109 = _tmp108 * _tmp79;
  const Scalar _tmp110 = Scalar(1.0) * _tmp34 * _tmp69 - Scalar(1.0) * _tmp66;
  const Scalar _tmp111 = -_tmp110 * _tmp90 - Scalar(1.0) * _tmp84;
  const Scalar _tmp112 = _tmp111 * _tmp87;
  const Scalar _tmp113 = _tmp110 + _tmp112 * _tmp70;
  const Scalar _tmp114 = _tmp113 * _tmp71;
  const Scalar _tmp115 = -_tmp114 * _tmp57 + Scalar(1.0);
  const Scalar _tmp116 = _tmp114 * _tmp42;
  const Scalar _tmp117 = _tmp107 * fh1;
  const Scalar _tmp118 = _tmp117 * _tmp79;
  const Scalar _tmp119 = std::exp(_tmp103 * (_tmp16 * _tmp95 + _tmp75 * _tmp94 + Scalar(1.0)) +
                                  _tmp109 * (_tmp105 * _tmp16 - _tmp106 * _tmp57) +
                                  _tmp118 * (_tmp115 * _tmp75 + _tmp116 * _tmp16) +
                                  _tmp80 * (_tmp16 * _tmp73 - _tmp74 * _tmp76));
  const Scalar _tmp120 = std::pow(_tmp41, Scalar(Scalar(-3) / Scalar(2)));
  const Scalar _tmp121 = _tmp120 * _tmp37;
  const Scalar _tmp122 = _tmp121 * _tmp48;
  const Scalar _tmp123 = _tmp120 * _tmp16 * _tmp39;
  const Scalar _tmp124 = _tmp121 * _tmp55 - _tmp123 - _tmp56;
  const Scalar _tmp125 = _tmp123 * _tmp67;
  const Scalar _tmp126 =
      -_tmp121 * _tmp67 + _tmp122 - _tmp124 * _tmp66 -
      _tmp34 * (-_tmp122 * _tmp55 - _tmp124 * _tmp69 + _tmp125 + _tmp49 * _tmp55) - _tmp49 + _tmp68;
  const Scalar _tmp127 = std::pow(_tmp70, Scalar(-2));
  const Scalar _tmp128 = _tmp126 * _tmp127;
  const Scalar _tmp129 = _tmp16 * _tmp42;
  const Scalar _tmp130 = _tmp128 * _tmp129;
  const Scalar _tmp131 = _tmp36 * _tmp71;
  const Scalar _tmp132 = _tmp57 * _tmp76;
  const Scalar _tmp133 = _tmp131 * _tmp75;
  const Scalar _tmp134 =
      _tmp121 * _tmp38 + _tmp121 * _tmp83 - _tmp123 * _tmp15 - _tmp124 * _tmp84 - _tmp81 - _tmp85;
  const Scalar _tmp135 = std::pow(_tmp86, Scalar(-2));
  const Scalar _tmp136 = Scalar(1.0) * _tmp135;
  const Scalar _tmp137 = _tmp136 * _tmp57 * _tmp75;
  const Scalar _tmp138 = _tmp129 * _tmp136;
  const Scalar _tmp139 = _tmp110 * _tmp71;
  const Scalar _tmp140 = _tmp128 * _tmp86;
  const Scalar _tmp141 = _tmp70 * _tmp87;
  const Scalar _tmp142 = _tmp135 * _tmp70;
  const Scalar _tmp143 = _tmp134 * _tmp142;
  const Scalar _tmp144 =
      -_tmp111 * _tmp143 + _tmp112 * _tmp126 + _tmp141 * (_tmp110 * _tmp140 - _tmp134 * _tmp139);
  const Scalar _tmp145 = _tmp16 * _tmp72;
  const Scalar _tmp146 = _tmp113 * _tmp57;
  const Scalar _tmp147 = -_tmp114 * _tmp124 + _tmp128 * _tmp146 - _tmp144 * _tmp74;
  const Scalar _tmp148 = _tmp113 * _tmp128;
  const Scalar _tmp149 = _tmp71 * _tmp89;
  const Scalar _tmp150 =
      _tmp126 * _tmp92 + _tmp141 * (-_tmp134 * _tmp149 + _tmp140 * _tmp89) - _tmp143 * _tmp91;
  const Scalar _tmp151 = _tmp71 * _tmp93;
  const Scalar _tmp152 = _tmp57 * _tmp93;
  const Scalar _tmp153 = -_tmp124 * _tmp151 + _tmp128 * _tmp152 - _tmp150 * _tmp74;
  const Scalar _tmp154 = _tmp117 * _tmp63;
  const Scalar _tmp155 = _tmp36 * _tmp77;
  const Scalar _tmp156 = _tmp104 * _tmp108;
  const Scalar _tmp157 = _tmp57 * _tmp63;
  const Scalar _tmp158 = _tmp102 * _tmp63;
  const Scalar _tmp159 = std::exp(-_tmp115 * _tmp154 + _tmp155 * _tmp63 * _tmp74 +
                                  _tmp156 * _tmp157 - _tmp158 * _tmp94);
  const Scalar _tmp160 = _tmp108 * _tmp136;
  const Scalar _tmp161 = _tmp134 * _tmp160;
  const Scalar _tmp162 = _tmp128 * _tmp155;
  const Scalar _tmp163 = _tmp155 * _tmp71;
  const Scalar _tmp164 = _tmp163 * _tmp63;
  const Scalar _tmp165 = _tmp156 * _tmp63;
  const Scalar _tmp166 = std::exp(-_tmp102 * _tmp151 - _tmp114 * _tmp117 - _tmp156 - _tmp163);
  const Scalar _tmp167 = _tmp102 * _tmp93;
  const Scalar _tmp168 = _tmp117 * _tmp71;
  const Scalar _tmp169 = _tmp102 * _tmp71;
  const Scalar _tmp170 = _tmp120 * _tmp40;
  const Scalar _tmp171 = _tmp123 * _tmp55 - _tmp170 + _tmp42;
  const Scalar _tmp172 =
      _tmp123 * _tmp38 + _tmp123 * _tmp83 - _tmp15 * _tmp170 + _tmp15 * _tmp42 - _tmp171 * _tmp84;
  const Scalar _tmp173 =
      _tmp123 * _tmp48 - _tmp125 - _tmp171 * _tmp66 -
      _tmp34 * (-_tmp123 * _tmp88 + _tmp170 * _tmp67 - _tmp171 * _tmp69 - _tmp68);
  const Scalar _tmp174 = _tmp127 * _tmp173;
  const Scalar _tmp175 = _tmp129 * _tmp174;
  const Scalar _tmp176 = _tmp174 * _tmp86;
  const Scalar _tmp177 = _tmp142 * _tmp172;
  const Scalar _tmp178 =
      _tmp141 * (-_tmp149 * _tmp172 + _tmp176 * _tmp89) + _tmp173 * _tmp92 - _tmp177 * _tmp91;
  const Scalar _tmp179 = -_tmp151 * _tmp171 + _tmp152 * _tmp174 - _tmp178 * _tmp74;
  const Scalar _tmp180 =
      -_tmp111 * _tmp177 + _tmp112 * _tmp173 + _tmp141 * (_tmp110 * _tmp176 - _tmp139 * _tmp172);
  const Scalar _tmp181 = -_tmp114 * _tmp171 + _tmp146 * _tmp174 - _tmp180 * _tmp74;
  const Scalar _tmp182 = _tmp155 * _tmp174;
  const Scalar _tmp183 = _tmp160 * _tmp172;

  // Output terms (1)
  Eigen::Matrix<Scalar, 4, 3> _res;

  _res(0, 0) = 0;
  _res(1, 0) = -_tmp119 * (-_tmp103 * (_tmp121 * _tmp151 - _tmp130 * _tmp93 + _tmp145 * _tmp150 +
                                       _tmp153 * _tmp75 - _tmp95) -
                           _tmp109 * (_tmp104 * _tmp121 - _tmp105 - _tmp106 * _tmp124 +
                                      _tmp134 * _tmp137 - _tmp134 * _tmp138) -
                           _tmp118 * (_tmp114 * _tmp121 - _tmp116 - _tmp129 * _tmp148 +
                                      _tmp144 * _tmp145 + _tmp147 * _tmp75) -
                           _tmp80 * (_tmp121 * _tmp131 - _tmp124 * _tmp133 + _tmp128 * _tmp132 -
                                     _tmp130 * _tmp36 - _tmp73));
  _res(2, 0) = -_tmp159 * (-_tmp124 * _tmp164 - _tmp124 * _tmp165 + _tmp147 * _tmp154 +
                           _tmp153 * _tmp158 + _tmp157 * _tmp161 + _tmp157 * _tmp162);
  _res(3, 0) = -_tmp166 * (-_tmp117 * _tmp148 - _tmp128 * _tmp167 + _tmp144 * _tmp168 +
                           _tmp150 * _tmp169 - _tmp161 - _tmp162);
  _res(0, 1) = 0;
  _res(1, 1) =
      -_tmp119 *
      (-_tmp103 * (_tmp123 * _tmp151 + _tmp145 * _tmp178 - _tmp175 * _tmp93 + _tmp179 * _tmp75) -
       _tmp109 * (_tmp104 * _tmp123 - _tmp106 * _tmp171 + _tmp137 * _tmp172 - _tmp138 * _tmp172) -
       _tmp118 * (-_tmp113 * _tmp175 + _tmp114 * _tmp123 + _tmp145 * _tmp180 + _tmp181 * _tmp75) -
       _tmp80 * (_tmp123 * _tmp131 + _tmp132 * _tmp174 - _tmp133 * _tmp171 - _tmp175 * _tmp36));
  _res(2, 1) = -_tmp159 * (_tmp154 * _tmp181 + _tmp157 * _tmp182 + _tmp157 * _tmp183 +
                           _tmp158 * _tmp179 - _tmp164 * _tmp171 - _tmp165 * _tmp171);
  _res(3, 1) = -_tmp166 * (-_tmp113 * _tmp117 * _tmp174 - _tmp167 * _tmp174 + _tmp168 * _tmp180 +
                           _tmp169 * _tmp178 - _tmp182 - _tmp183);
  _res(0, 2) = 0;
  _res(1, 2) = 0;
  _res(2, 2) = 0;
  _res(3, 2) = 0;

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
