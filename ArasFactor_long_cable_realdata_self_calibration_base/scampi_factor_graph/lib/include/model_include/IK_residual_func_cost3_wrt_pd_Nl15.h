// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

#include <sym/rot3.h>

namespace sym {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: IK_residual_func_cost3_wrt_pd_Nl15
 *
 * Args:
 *     fh1: Scalar
 *     fv1: Scalar
 *     DeltaRot: Rot3
 *     position_vector: Matrix31
 *     p_a: Matrix31
 *     p_b: Matrix31
 *     p_c: Matrix31
 *     p_d: Matrix31
 *     Rot_init: Rot3
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix43
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 4, 3> IkResidualFuncCost3WrtPdNl15(
    const Scalar fh1, const Scalar fv1, const sym::Rot3<Scalar>& DeltaRot,
    const Eigen::Matrix<Scalar, 3, 1>& position_vector, const Eigen::Matrix<Scalar, 3, 1>& p_a,
    const Eigen::Matrix<Scalar, 3, 1>& p_b, const Eigen::Matrix<Scalar, 3, 1>& p_c,
    const Eigen::Matrix<Scalar, 3, 1>& p_d, const sym::Rot3<Scalar>& Rot_init,
    const Scalar epsilon) {
  // Total ops: 661

  // Unused inputs
  (void)epsilon;

  // Input arrays
  const Eigen::Matrix<Scalar, 4, 1>& _DeltaRot = DeltaRot.Data();
  const Eigen::Matrix<Scalar, 4, 1>& _Rot_init = Rot_init.Data();

  // Intermediate terms (212)
  const Scalar _tmp0 = _DeltaRot[0] * _Rot_init[2] + _DeltaRot[1] * _Rot_init[3] -
                       _DeltaRot[2] * _Rot_init[0] + _DeltaRot[3] * _Rot_init[1];
  const Scalar _tmp1 = _DeltaRot[0] * _Rot_init[3] - _DeltaRot[1] * _Rot_init[2] +
                       _DeltaRot[2] * _Rot_init[1] + _DeltaRot[3] * _Rot_init[0];
  const Scalar _tmp2 = 2 * _tmp0 * _tmp1;
  const Scalar _tmp3 = -_DeltaRot[0] * _Rot_init[1] + _DeltaRot[1] * _Rot_init[0] +
                       _DeltaRot[2] * _Rot_init[3] + _DeltaRot[3] * _Rot_init[2];
  const Scalar _tmp4 = -2 * _DeltaRot[0] * _Rot_init[0] - 2 * _DeltaRot[1] * _Rot_init[1] -
                       2 * _DeltaRot[2] * _Rot_init[2] + 2 * _DeltaRot[3] * _Rot_init[3];
  const Scalar _tmp5 = _tmp3 * _tmp4;
  const Scalar _tmp6 = Scalar(0.20999999999999999) * _tmp2 - Scalar(0.20999999999999999) * _tmp5;
  const Scalar _tmp7 = 2 * _tmp3;
  const Scalar _tmp8 = _tmp1 * _tmp7;
  const Scalar _tmp9 = _tmp0 * _tmp4;
  const Scalar _tmp10 =
      -Scalar(0.010999999999999999) * _tmp8 - Scalar(0.010999999999999999) * _tmp9;
  const Scalar _tmp11 = -2 * std::pow(_tmp3, Scalar(2));
  const Scalar _tmp12 = 1 - 2 * std::pow(_tmp0, Scalar(2));
  const Scalar _tmp13 = Scalar(0.20999999999999999) * _tmp11 + Scalar(0.20999999999999999) * _tmp12;
  const Scalar _tmp14 = _tmp10 - _tmp13;
  const Scalar _tmp15 = _tmp14 + _tmp6;
  const Scalar _tmp16 = _tmp15 - p_d(0, 0) + position_vector(0, 0);
  const Scalar _tmp17 = -2 * std::pow(_tmp1, Scalar(2));
  const Scalar _tmp18 =
      -Scalar(0.010999999999999999) * _tmp12 - Scalar(0.010999999999999999) * _tmp17;
  const Scalar _tmp19 = Scalar(0.20999999999999999) * _tmp8 - Scalar(0.20999999999999999) * _tmp9;
  const Scalar _tmp20 = -_tmp19;
  const Scalar _tmp21 = _tmp0 * _tmp7;
  const Scalar _tmp22 = _tmp1 * _tmp4;
  const Scalar _tmp23 = Scalar(0.20999999999999999) * _tmp21 + Scalar(0.20999999999999999) * _tmp22;
  const Scalar _tmp24 = _tmp18 + _tmp20 + _tmp23;
  const Scalar _tmp25 = std::pow(_tmp16, Scalar(2));
  const Scalar _tmp26 = Scalar(0.20999999999999999) * _tmp11 +
                        Scalar(0.20999999999999999) * _tmp17 + Scalar(0.20999999999999999);
  const Scalar _tmp27 = Scalar(0.20999999999999999) * _tmp2 + Scalar(0.20999999999999999) * _tmp5;
  const Scalar _tmp28 =
      -Scalar(0.010999999999999999) * _tmp21 + Scalar(0.010999999999999999) * _tmp22;
  const Scalar _tmp29 = -_tmp27 + _tmp28;
  const Scalar _tmp30 = _tmp26 + _tmp29;
  const Scalar _tmp31 = _tmp30 - p_d(1, 0) + position_vector(1, 0);
  const Scalar _tmp32 = std::pow(_tmp31, Scalar(2));
  const Scalar _tmp33 = _tmp25 + _tmp32;
  const Scalar _tmp34 = std::pow(_tmp33, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp35 = _tmp24 * _tmp34;
  const Scalar _tmp36 = _tmp18 - _tmp23;
  const Scalar _tmp37 = _tmp19 + _tmp36;
  const Scalar _tmp38 = _tmp34 * _tmp37;
  const Scalar _tmp39 = _tmp16 * _tmp38;
  const Scalar _tmp40 = -_tmp16 * _tmp35 + _tmp39;
  const Scalar _tmp41 = -_tmp6;
  const Scalar _tmp42 = _tmp10 + _tmp13;
  const Scalar _tmp43 = _tmp41 + _tmp42;
  const Scalar _tmp44 = _tmp43 - p_b(0, 0) + position_vector(0, 0);
  const Scalar _tmp45 = Scalar(1.0) / (_tmp44);
  const Scalar _tmp46 = -_tmp26;
  const Scalar _tmp47 = _tmp27 + _tmp28;
  const Scalar _tmp48 = _tmp46 + _tmp47;
  const Scalar _tmp49 = _tmp48 - p_b(1, 0) + position_vector(1, 0);
  const Scalar _tmp50 = _tmp45 * _tmp49;
  const Scalar _tmp51 = _tmp14 + _tmp41;
  const Scalar _tmp52 = _tmp51 - p_a(0, 0) + position_vector(0, 0);
  const Scalar _tmp53 = _tmp29 + _tmp46;
  const Scalar _tmp54 = _tmp53 - p_a(1, 0) + position_vector(1, 0);
  const Scalar _tmp55 = std::pow(Scalar(std::pow(_tmp52, Scalar(2)) + std::pow(_tmp54, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp56 = _tmp52 * _tmp55;
  const Scalar _tmp57 = _tmp54 * _tmp55;
  const Scalar _tmp58 = _tmp50 * _tmp56 - _tmp57;
  const Scalar _tmp59 = _tmp34 * _tmp50;
  const Scalar _tmp60 = _tmp31 * _tmp34;
  const Scalar _tmp61 = _tmp16 * _tmp59 - _tmp60;
  const Scalar _tmp62 = Scalar(1.0) / (_tmp61);
  const Scalar _tmp63 = _tmp58 * _tmp62;
  const Scalar _tmp64 = _tmp20 + _tmp36;
  const Scalar _tmp65 = _tmp37 * _tmp56;
  const Scalar _tmp66 = _tmp31 * _tmp35 - _tmp39 * _tmp50;
  const Scalar _tmp67 = Scalar(1.0) * _tmp43;
  const Scalar _tmp68 = Scalar(1.0) * _tmp48;
  const Scalar _tmp69 = (-_tmp15 + _tmp67) / (_tmp30 - _tmp68);
  const Scalar _tmp70 = -_tmp40 * _tmp63 - _tmp56 * _tmp64 + _tmp65 -
                        _tmp69 * (-_tmp50 * _tmp65 + _tmp57 * _tmp64 - _tmp63 * _tmp66);
  const Scalar _tmp71 = _tmp30 * _tmp34;
  const Scalar _tmp72 =
      std::sqrt(Scalar(std::pow(_tmp44, Scalar(2)) + std::pow(_tmp49, Scalar(2))));
  const Scalar _tmp73 = Scalar(1.0) / (_tmp72);
  const Scalar _tmp74 = _tmp45 * _tmp72;
  const Scalar _tmp75 = _tmp74 * (_tmp43 * _tmp49 * _tmp73 - _tmp44 * _tmp48 * _tmp73);
  const Scalar _tmp76 = _tmp34 * _tmp75;
  const Scalar _tmp77 = -_tmp15 * _tmp60 + _tmp16 * _tmp71 + _tmp16 * _tmp76;
  const Scalar _tmp78 = -_tmp51 * _tmp57 + _tmp53 * _tmp56 + _tmp56 * _tmp75 - _tmp63 * _tmp77;
  const Scalar _tmp79 = Scalar(1.0) / (_tmp78);
  const Scalar _tmp80 = Scalar(1.0) * _tmp62;
  const Scalar _tmp81 = _tmp69 * _tmp80;
  const Scalar _tmp82 = -_tmp40 * _tmp80 + _tmp66 * _tmp81;
  const Scalar _tmp83 = Scalar(1.0) / (_tmp70);
  const Scalar _tmp84 = _tmp78 * _tmp83;
  const Scalar _tmp85 = -_tmp77 * _tmp80 - _tmp82 * _tmp84;
  const Scalar _tmp86 = _tmp79 * _tmp85;
  const Scalar _tmp87 = _tmp70 * _tmp86 + _tmp82;
  const Scalar _tmp88 = _tmp58 * _tmp83;
  const Scalar _tmp89 = -_tmp87 * _tmp88 + Scalar(1.0);
  const Scalar _tmp90 = _tmp34 * _tmp62;
  const Scalar _tmp91 = _tmp89 * _tmp90;
  const Scalar _tmp92 = _tmp56 * _tmp83;
  const Scalar _tmp93 = _tmp26 + _tmp47;
  const Scalar _tmp94 = _tmp93 - p_c(1, 0) + position_vector(1, 0);
  const Scalar _tmp95 = _tmp42 + _tmp6;
  const Scalar _tmp96 = _tmp95 - p_c(0, 0) + position_vector(0, 0);
  const Scalar _tmp97 = std::pow(Scalar(std::pow(_tmp94, Scalar(2)) + std::pow(_tmp96, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp98 = _tmp94 * _tmp97;
  const Scalar _tmp99 = _tmp98 * fh1;
  const Scalar _tmp100 = _tmp74 * _tmp99;
  const Scalar _tmp101 = _tmp37 * _tmp50;
  const Scalar _tmp102 = _tmp50 * _tmp62;
  const Scalar _tmp103 = _tmp102 * _tmp40 - _tmp37 - _tmp69 * (_tmp101 + _tmp102 * _tmp66);
  const Scalar _tmp104 = _tmp102 * _tmp77 - _tmp103 * _tmp84 - _tmp75;
  const Scalar _tmp105 = _tmp104 * _tmp79;
  const Scalar _tmp106 = _tmp103 + _tmp105 * _tmp70;
  const Scalar _tmp107 = -_tmp106 * _tmp88 - _tmp50;
  const Scalar _tmp108 = _tmp107 * _tmp90;
  const Scalar _tmp109 = _tmp96 * _tmp97;
  const Scalar _tmp110 = _tmp109 * fh1;
  const Scalar _tmp111 = _tmp110 * _tmp74;
  const Scalar _tmp112 = Scalar(1.0) * _tmp79;
  const Scalar _tmp113 = _tmp16 * _tmp90;
  const Scalar _tmp114 = _tmp112 * _tmp58;
  const Scalar _tmp115 = fh1 * (-_tmp109 * _tmp93 + _tmp95 * _tmp98);
  const Scalar _tmp116 = _tmp115 * _tmp74;
  const Scalar _tmp117 = _tmp67 + _tmp68 * _tmp69;
  const Scalar _tmp118 = 0;
  const Scalar _tmp119 = _tmp118 * _tmp88;
  const Scalar _tmp120 = Scalar(333.54000000000002) - fv1;
  const Scalar _tmp121 = _tmp120 * _tmp74;
  const Scalar _tmp122 = std::exp(_tmp100 * (_tmp16 * _tmp91 + _tmp87 * _tmp92) +
                                  _tmp111 * (_tmp106 * _tmp92 + _tmp108 * _tmp16 + Scalar(1.0)) +
                                  _tmp116 * (_tmp112 * _tmp56 - _tmp113 * _tmp114) +
                                  _tmp121 * (-_tmp113 * _tmp119 + _tmp118 * _tmp92));
  const Scalar _tmp123 = std::pow(_tmp33, Scalar(Scalar(-3) / Scalar(2)));
  const Scalar _tmp124 = _tmp123 * _tmp25;
  const Scalar _tmp125 = _tmp124 * _tmp37;
  const Scalar _tmp126 = -_tmp124 * _tmp24 + _tmp125 + _tmp35 - _tmp38;
  const Scalar _tmp127 = _tmp123 * _tmp16 * _tmp31;
  const Scalar _tmp128 = _tmp124 * _tmp50 - _tmp127 - _tmp59;
  const Scalar _tmp129 = std::pow(_tmp61, Scalar(-2));
  const Scalar _tmp130 = _tmp129 * _tmp58;
  const Scalar _tmp131 = _tmp128 * _tmp130;
  const Scalar _tmp132 = _tmp127 * _tmp24;
  const Scalar _tmp133 = -_tmp125 * _tmp50 + _tmp132 + _tmp38 * _tmp50;
  const Scalar _tmp134 =
      -_tmp126 * _tmp63 + _tmp131 * _tmp40 - _tmp69 * (_tmp131 * _tmp66 - _tmp133 * _tmp63);
  const Scalar _tmp135 = std::pow(_tmp70, Scalar(-2));
  const Scalar _tmp136 = _tmp135 * _tmp58;
  const Scalar _tmp137 = _tmp113 * _tmp118 * _tmp136;
  const Scalar _tmp138 = _tmp134 * _tmp135;
  const Scalar _tmp139 = _tmp138 * _tmp56;
  const Scalar _tmp140 = _tmp124 * _tmp62;
  const Scalar _tmp141 = _tmp16 * _tmp34;
  const Scalar _tmp142 = _tmp128 * _tmp129;
  const Scalar _tmp143 = _tmp141 * _tmp142;
  const Scalar _tmp144 = _tmp124 * _tmp30 + _tmp124 * _tmp75 - _tmp127 * _tmp15 - _tmp71 - _tmp76;
  const Scalar _tmp145 = _tmp131 * _tmp77 - _tmp144 * _tmp63;
  const Scalar _tmp146 = std::pow(_tmp78, Scalar(-2));
  const Scalar _tmp147 = Scalar(1.0) * _tmp146;
  const Scalar _tmp148 = _tmp147 * _tmp56;
  const Scalar _tmp149 = _tmp113 * _tmp147 * _tmp58;
  const Scalar _tmp150 = _tmp112 * _tmp141;
  const Scalar _tmp151 = _tmp112 * _tmp63;
  const Scalar _tmp152 = _tmp146 * _tmp70;
  const Scalar _tmp153 = _tmp145 * _tmp152;
  const Scalar _tmp154 = Scalar(1.0) * _tmp129;
  const Scalar _tmp155 = _tmp128 * _tmp154;
  const Scalar _tmp156 =
      -_tmp126 * _tmp80 + _tmp133 * _tmp81 + _tmp155 * _tmp40 - _tmp155 * _tmp66 * _tmp69;
  const Scalar _tmp157 = _tmp82 * _tmp83;
  const Scalar _tmp158 = _tmp138 * _tmp78;
  const Scalar _tmp159 = _tmp70 * _tmp79;
  const Scalar _tmp160 = _tmp134 * _tmp86 - _tmp153 * _tmp85 + _tmp156 +
                         _tmp159 * (-_tmp144 * _tmp80 - _tmp145 * _tmp157 + _tmp155 * _tmp77 -
                                    _tmp156 * _tmp84 + _tmp158 * _tmp82);
  const Scalar _tmp161 = _tmp136 * _tmp87;
  const Scalar _tmp162 = _tmp134 * _tmp161 - _tmp160 * _tmp88;
  const Scalar _tmp163 = _tmp103 * _tmp83;
  const Scalar _tmp164 = _tmp129 * _tmp50;
  const Scalar _tmp165 = _tmp128 * _tmp164;
  const Scalar _tmp166 =
      _tmp102 * _tmp126 - _tmp165 * _tmp40 - _tmp69 * (_tmp102 * _tmp133 - _tmp165 * _tmp66);
  const Scalar _tmp167 = -_tmp104 * _tmp153 + _tmp105 * _tmp134 +
                         _tmp159 * (_tmp102 * _tmp144 + _tmp103 * _tmp158 - _tmp145 * _tmp163 -
                                    _tmp165 * _tmp77 - _tmp166 * _tmp84) +
                         _tmp166;
  const Scalar _tmp168 = _tmp106 * _tmp136;
  const Scalar _tmp169 = _tmp134 * _tmp168 - _tmp167 * _tmp88;
  const Scalar _tmp170 = _tmp112 * _tmp115;
  const Scalar _tmp171 = _tmp62 * _tmp89;
  const Scalar _tmp172 = _tmp118 * _tmp120;
  const Scalar _tmp173 = _tmp172 * _tmp88;
  const Scalar _tmp174 = _tmp110 * _tmp62;
  const Scalar _tmp175 =
      std::exp(-_tmp107 * _tmp174 + _tmp170 * _tmp63 - _tmp171 * _tmp99 + _tmp173 * _tmp62);
  const Scalar _tmp176 = _tmp62 * _tmp99;
  const Scalar _tmp177 = _tmp138 * _tmp172;
  const Scalar _tmp178 = _tmp115 * _tmp147;
  const Scalar _tmp179 = _tmp145 * _tmp178;
  const Scalar _tmp180 = _tmp83 * _tmp99;
  const Scalar _tmp181 = _tmp110 * _tmp83;
  const Scalar _tmp182 =
      std::exp(-_tmp106 * _tmp181 - _tmp170 - _tmp172 * _tmp83 - _tmp180 * _tmp87);
  const Scalar _tmp183 = _tmp106 * _tmp110;
  const Scalar _tmp184 = _tmp87 * _tmp99;
  const Scalar _tmp185 = _tmp123 * _tmp32;
  const Scalar _tmp186 = _tmp127 * _tmp50 - _tmp185 + _tmp34;
  const Scalar _tmp187 = _tmp186 * _tmp77;
  const Scalar _tmp188 = _tmp127 * _tmp30 + _tmp127 * _tmp75 - _tmp15 * _tmp185 + _tmp15 * _tmp34;
  const Scalar _tmp189 = _tmp130 * _tmp187 - _tmp188 * _tmp63;
  const Scalar _tmp190 = _tmp130 * _tmp186;
  const Scalar _tmp191 = _tmp129 * _tmp186;
  const Scalar _tmp192 = _tmp107 * _tmp191;
  const Scalar _tmp193 = _tmp152 * _tmp189;
  const Scalar _tmp194 = _tmp127 * _tmp37 - _tmp132;
  const Scalar _tmp195 = _tmp186 * _tmp66;
  const Scalar _tmp196 = -_tmp101 * _tmp127 + _tmp185 * _tmp24 - _tmp35;
  const Scalar _tmp197 = _tmp186 * _tmp40;
  const Scalar _tmp198 =
      _tmp102 * _tmp194 - _tmp164 * _tmp197 - _tmp69 * (_tmp102 * _tmp196 - _tmp164 * _tmp195);
  const Scalar _tmp199 =
      _tmp130 * _tmp197 - _tmp194 * _tmp63 - _tmp69 * (_tmp130 * _tmp195 - _tmp196 * _tmp63);
  const Scalar _tmp200 = _tmp135 * _tmp199;
  const Scalar _tmp201 = _tmp200 * _tmp78;
  const Scalar _tmp202 = -_tmp104 * _tmp193 + _tmp105 * _tmp199 +
                         _tmp159 * (_tmp102 * _tmp188 + _tmp103 * _tmp201 - _tmp163 * _tmp189 -
                                    _tmp164 * _tmp187 - _tmp198 * _tmp84) +
                         _tmp198;
  const Scalar _tmp203 = _tmp127 * _tmp62;
  const Scalar _tmp204 = _tmp168 * _tmp199 - _tmp202 * _tmp88;
  const Scalar _tmp205 = _tmp200 * _tmp56;
  const Scalar _tmp206 =
      -_tmp154 * _tmp195 * _tmp69 + _tmp154 * _tmp197 - _tmp194 * _tmp80 + _tmp196 * _tmp81;
  const Scalar _tmp207 = _tmp159 * (_tmp154 * _tmp187 - _tmp157 * _tmp189 - _tmp188 * _tmp80 +
                                    _tmp201 * _tmp82 - _tmp206 * _tmp84) -
                         _tmp193 * _tmp85 + _tmp199 * _tmp86 + _tmp206;
  const Scalar _tmp208 = _tmp161 * _tmp199 - _tmp207 * _tmp88;
  const Scalar _tmp209 = _tmp191 * _tmp89;
  const Scalar _tmp210 = _tmp172 * _tmp200;
  const Scalar _tmp211 = _tmp178 * _tmp189;

  // Output terms (1)
  Eigen::Matrix<Scalar, 4, 3> _res;

  _res(0, 0) = 0;
  _res(1, 0) = -_tmp122 * (-_tmp100 * (_tmp113 * _tmp162 - _tmp139 * _tmp87 + _tmp140 * _tmp89 -
                                       _tmp143 * _tmp89 + _tmp160 * _tmp92 - _tmp91) -
                           _tmp111 * (-_tmp106 * _tmp139 + _tmp107 * _tmp140 - _tmp107 * _tmp143 -
                                      _tmp108 + _tmp113 * _tmp169 + _tmp167 * _tmp92) -
                           _tmp116 * (_tmp114 * _tmp90 - _tmp124 * _tmp151 + _tmp131 * _tmp150 -
                                      _tmp145 * _tmp148 + _tmp145 * _tmp149) -
                           _tmp121 * (-_tmp118 * _tmp139 - _tmp119 * _tmp140 + _tmp119 * _tmp143 +
                                      _tmp119 * _tmp90 + _tmp134 * _tmp137));
  _res(2, 0) = -_tmp175 * (-_tmp107 * _tmp110 * _tmp142 + _tmp131 * _tmp170 + _tmp142 * _tmp173 -
                           _tmp142 * _tmp89 * _tmp99 + _tmp162 * _tmp176 + _tmp169 * _tmp174 +
                           _tmp177 * _tmp63 + _tmp179 * _tmp63);
  _res(3, 0) = -_tmp182 * (-_tmp138 * _tmp183 - _tmp138 * _tmp184 + _tmp160 * _tmp180 +
                           _tmp167 * _tmp181 - _tmp177 - _tmp179);
  _res(0, 1) = 0;
  _res(1, 1) =
      -_tmp122 *
      (-_tmp100 * (_tmp113 * _tmp208 + _tmp127 * _tmp171 - _tmp141 * _tmp209 - _tmp205 * _tmp87 +
                   _tmp207 * _tmp92) -
       _tmp111 * (-_tmp106 * _tmp205 + _tmp107 * _tmp203 + _tmp113 * _tmp204 - _tmp141 * _tmp192 +
                  _tmp202 * _tmp92) -
       _tmp116 * (-_tmp127 * _tmp151 - _tmp148 * _tmp189 + _tmp149 * _tmp189 + _tmp150 * _tmp190) -
       _tmp121 * (-_tmp118 * _tmp205 + _tmp119 * _tmp141 * _tmp191 - _tmp119 * _tmp203 +
                  _tmp137 * _tmp199));
  _res(2, 1) =
      -_tmp175 * (-_tmp110 * _tmp192 + _tmp170 * _tmp190 + _tmp173 * _tmp191 + _tmp174 * _tmp204 +
                  _tmp176 * _tmp208 - _tmp209 * _tmp99 + _tmp210 * _tmp63 + _tmp211 * _tmp63);
  _res(3, 1) = -_tmp182 * (_tmp180 * _tmp207 + _tmp181 * _tmp202 - _tmp183 * _tmp200 -
                           _tmp184 * _tmp200 - _tmp210 - _tmp211);
  _res(0, 2) = 0;
  _res(1, 2) = 0;
  _res(2, 2) = 0;
  _res(3, 2) = 0;

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
