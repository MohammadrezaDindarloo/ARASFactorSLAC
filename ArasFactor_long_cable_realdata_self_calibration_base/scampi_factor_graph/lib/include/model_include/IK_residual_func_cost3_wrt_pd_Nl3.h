// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

#include <sym/rot3.h>

namespace sym {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: IK_residual_func_cost3_wrt_pd_Nl3
 *
 * Args:
 *     fh1: Scalar
 *     fv1: Scalar
 *     DeltaRot: Rot3
 *     position_vector: Matrix31
 *     p_a: Matrix31
 *     p_b: Matrix31
 *     p_c: Matrix31
 *     p_d: Matrix31
 *     Rot_init: Rot3
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix43
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 4, 3> IkResidualFuncCost3WrtPdNl3(
    const Scalar fh1, const Scalar fv1, const sym::Rot3<Scalar>& DeltaRot,
    const Eigen::Matrix<Scalar, 3, 1>& position_vector, const Eigen::Matrix<Scalar, 3, 1>& p_a,
    const Eigen::Matrix<Scalar, 3, 1>& p_b, const Eigen::Matrix<Scalar, 3, 1>& p_c,
    const Eigen::Matrix<Scalar, 3, 1>& p_d, const sym::Rot3<Scalar>& Rot_init,
    const Scalar epsilon) {
  // Total ops: 664

  // Unused inputs
  (void)epsilon;

  // Input arrays
  const Eigen::Matrix<Scalar, 4, 1>& _DeltaRot = DeltaRot.Data();
  const Eigen::Matrix<Scalar, 4, 1>& _Rot_init = Rot_init.Data();

  // Intermediate terms (216)
  const Scalar _tmp0 = -_DeltaRot[0] * _Rot_init[1] + _DeltaRot[1] * _Rot_init[0] +
                       _DeltaRot[2] * _Rot_init[3] + _DeltaRot[3] * _Rot_init[2];
  const Scalar _tmp1 = -2 * std::pow(_tmp0, Scalar(2));
  const Scalar _tmp2 = _DeltaRot[0] * _Rot_init[2] + _DeltaRot[1] * _Rot_init[3] -
                       _DeltaRot[2] * _Rot_init[0] + _DeltaRot[3] * _Rot_init[1];
  const Scalar _tmp3 = 1 - 2 * std::pow(_tmp2, Scalar(2));
  const Scalar _tmp4 = Scalar(0.20999999999999999) * _tmp1 + Scalar(0.20999999999999999) * _tmp3;
  const Scalar _tmp5 = _DeltaRot[0] * _Rot_init[3] - _DeltaRot[1] * _Rot_init[2] +
                       _DeltaRot[2] * _Rot_init[1] + _DeltaRot[3] * _Rot_init[0];
  const Scalar _tmp6 = 2 * _tmp0;
  const Scalar _tmp7 = _tmp5 * _tmp6;
  const Scalar _tmp8 = -2 * _DeltaRot[0] * _Rot_init[0] - 2 * _DeltaRot[1] * _Rot_init[1] -
                       2 * _DeltaRot[2] * _Rot_init[2] + 2 * _DeltaRot[3] * _Rot_init[3];
  const Scalar _tmp9 = _tmp2 * _tmp8;
  const Scalar _tmp10 =
      -Scalar(0.010999999999999999) * _tmp7 - Scalar(0.010999999999999999) * _tmp9;
  const Scalar _tmp11 = 2 * _tmp2 * _tmp5;
  const Scalar _tmp12 = _tmp0 * _tmp8;
  const Scalar _tmp13 = Scalar(0.20999999999999999) * _tmp11 - Scalar(0.20999999999999999) * _tmp12;
  const Scalar _tmp14 = _tmp10 - _tmp13;
  const Scalar _tmp15 = _tmp14 + _tmp4;
  const Scalar _tmp16 = _tmp15 - p_b(0, 0) + position_vector(0, 0);
  const Scalar _tmp17 = Scalar(0.20999999999999999) * _tmp11 + Scalar(0.20999999999999999) * _tmp12;
  const Scalar _tmp18 = _tmp2 * _tmp6;
  const Scalar _tmp19 = _tmp5 * _tmp8;
  const Scalar _tmp20 =
      -Scalar(0.010999999999999999) * _tmp18 + Scalar(0.010999999999999999) * _tmp19;
  const Scalar _tmp21 = -2 * std::pow(_tmp5, Scalar(2));
  const Scalar _tmp22 = Scalar(0.20999999999999999) * _tmp1 + Scalar(0.20999999999999999) * _tmp21 +
                        Scalar(0.20999999999999999);
  const Scalar _tmp23 = _tmp20 - _tmp22;
  const Scalar _tmp24 = _tmp17 + _tmp23;
  const Scalar _tmp25 = _tmp24 - p_b(1, 0) + position_vector(1, 0);
  const Scalar _tmp26 = std::pow(Scalar(std::pow(_tmp16, Scalar(2)) + std::pow(_tmp25, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp27 = _tmp25 * _tmp26;
  const Scalar _tmp28 = _tmp16 * _tmp26;
  const Scalar _tmp29 = -_tmp4;
  const Scalar _tmp30 = _tmp10 + _tmp13;
  const Scalar _tmp31 = _tmp29 + _tmp30;
  const Scalar _tmp32 = _tmp31 - p_d(0, 0) + position_vector(0, 0);
  const Scalar _tmp33 = std::pow(_tmp32, Scalar(2));
  const Scalar _tmp34 = -_tmp17;
  const Scalar _tmp35 = _tmp20 + _tmp22;
  const Scalar _tmp36 = _tmp34 + _tmp35;
  const Scalar _tmp37 = _tmp36 - p_d(1, 0) + position_vector(1, 0);
  const Scalar _tmp38 = std::pow(_tmp37, Scalar(2));
  const Scalar _tmp39 = _tmp33 + _tmp38;
  const Scalar _tmp40 = std::pow(_tmp39, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp41 = _tmp30 + _tmp4;
  const Scalar _tmp42 = _tmp41 - p_c(0, 0) + position_vector(0, 0);
  const Scalar _tmp43 = _tmp17 + _tmp35;
  const Scalar _tmp44 = _tmp43 - p_c(1, 0) + position_vector(1, 0);
  const Scalar _tmp45 =
      std::sqrt(Scalar(std::pow(_tmp42, Scalar(2)) + std::pow(_tmp44, Scalar(2))));
  const Scalar _tmp46 = Scalar(1.0) / (_tmp45);
  const Scalar _tmp47 = Scalar(1.0) / (_tmp42);
  const Scalar _tmp48 = _tmp45 * _tmp47;
  const Scalar _tmp49 = _tmp48 * (_tmp41 * _tmp44 * _tmp46 - _tmp42 * _tmp43 * _tmp46);
  const Scalar _tmp50 = _tmp40 * _tmp49;
  const Scalar _tmp51 = _tmp37 * _tmp40;
  const Scalar _tmp52 = _tmp36 * _tmp40;
  const Scalar _tmp53 = -_tmp31 * _tmp51 + _tmp32 * _tmp50 + _tmp32 * _tmp52;
  const Scalar _tmp54 = _tmp44 * _tmp47;
  const Scalar _tmp55 = _tmp40 * _tmp54;
  const Scalar _tmp56 = _tmp32 * _tmp55 - _tmp51;
  const Scalar _tmp57 = Scalar(1.0) / (_tmp56);
  const Scalar _tmp58 = -_tmp27 + _tmp28 * _tmp54;
  const Scalar _tmp59 = _tmp57 * _tmp58;
  const Scalar _tmp60 = -_tmp15 * _tmp27 + _tmp24 * _tmp28 + _tmp28 * _tmp49 - _tmp53 * _tmp59;
  const Scalar _tmp61 =
      -Scalar(0.010999999999999999) * _tmp21 - Scalar(0.010999999999999999) * _tmp3;
  const Scalar _tmp62 = Scalar(0.20999999999999999) * _tmp7 - Scalar(0.20999999999999999) * _tmp9;
  const Scalar _tmp63 = Scalar(0.20999999999999999) * _tmp18 + Scalar(0.20999999999999999) * _tmp19;
  const Scalar _tmp64 = _tmp61 + _tmp62 - _tmp63;
  const Scalar _tmp65 = _tmp61 + _tmp63;
  const Scalar _tmp66 = _tmp62 + _tmp65;
  const Scalar _tmp67 = _tmp28 * _tmp66;
  const Scalar _tmp68 = _tmp40 * _tmp66;
  const Scalar _tmp69 = _tmp32 * _tmp68;
  const Scalar _tmp70 = -_tmp62 + _tmp65;
  const Scalar _tmp71 = _tmp40 * _tmp70;
  const Scalar _tmp72 = -_tmp32 * _tmp71 + _tmp69;
  const Scalar _tmp73 = _tmp37 * _tmp71 - _tmp54 * _tmp69;
  const Scalar _tmp74 = Scalar(1.0) * _tmp43;
  const Scalar _tmp75 = Scalar(1.0) * _tmp41;
  const Scalar _tmp76 = (-_tmp31 + _tmp75) / (_tmp36 - _tmp74);
  const Scalar _tmp77 = -_tmp28 * _tmp64 - _tmp59 * _tmp72 + _tmp67 -
                        _tmp76 * (_tmp27 * _tmp64 - _tmp54 * _tmp67 - _tmp59 * _tmp73);
  const Scalar _tmp78 = Scalar(1.0) / (_tmp77);
  const Scalar _tmp79 = Scalar(1.0) * _tmp57;
  const Scalar _tmp80 = _tmp76 * _tmp79;
  const Scalar _tmp81 = -_tmp72 * _tmp79 + _tmp73 * _tmp80;
  const Scalar _tmp82 = _tmp78 * _tmp81;
  const Scalar _tmp83 = -_tmp53 * _tmp79 - _tmp60 * _tmp82;
  const Scalar _tmp84 = Scalar(1.0) / (_tmp60);
  const Scalar _tmp85 = _tmp77 * _tmp84;
  const Scalar _tmp86 = _tmp81 + _tmp83 * _tmp85;
  const Scalar _tmp87 = _tmp28 * _tmp78;
  const Scalar _tmp88 = _tmp58 * _tmp78;
  const Scalar _tmp89 = -_tmp86 * _tmp88 + Scalar(1.0);
  const Scalar _tmp90 = _tmp40 * _tmp57;
  const Scalar _tmp91 = _tmp89 * _tmp90;
  const Scalar _tmp92 = _tmp23 + _tmp34;
  const Scalar _tmp93 = _tmp92 - p_a(1, 0) + position_vector(1, 0);
  const Scalar _tmp94 = _tmp14 + _tmp29;
  const Scalar _tmp95 = _tmp94 - p_a(0, 0) + position_vector(0, 0);
  const Scalar _tmp96 = std::pow(Scalar(std::pow(_tmp93, Scalar(2)) + std::pow(_tmp95, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp97 = _tmp93 * _tmp96;
  const Scalar _tmp98 = _tmp97 * fh1;
  const Scalar _tmp99 = _tmp48 * _tmp98;
  const Scalar _tmp100 = Scalar(1.0) * _tmp84;
  const Scalar _tmp101 = _tmp58 * _tmp79;
  const Scalar _tmp102 = _tmp101 * _tmp84;
  const Scalar _tmp103 = _tmp102 * _tmp40;
  const Scalar _tmp104 = _tmp95 * _tmp96;
  const Scalar _tmp105 = fh1 * (-_tmp104 * _tmp92 + _tmp94 * _tmp97);
  const Scalar _tmp106 = _tmp105 * _tmp48;
  const Scalar _tmp107 = _tmp32 * _tmp40;
  const Scalar _tmp108 = _tmp74 * _tmp76 + _tmp75;
  const Scalar _tmp109 = 0;
  const Scalar _tmp110 = _tmp109 * _tmp78;
  const Scalar _tmp111 = _tmp110 * _tmp59;
  const Scalar _tmp112 = Scalar(333.54000000000002) - fv1;
  const Scalar _tmp113 = _tmp112 * _tmp48;
  const Scalar _tmp114 = _tmp54 * _tmp57;
  const Scalar _tmp115 = _tmp54 * _tmp66;
  const Scalar _tmp116 = _tmp114 * _tmp72 - _tmp66 - _tmp76 * (_tmp114 * _tmp73 + _tmp115);
  const Scalar _tmp117 = _tmp60 * _tmp78;
  const Scalar _tmp118 = _tmp114 * _tmp53 - _tmp116 * _tmp117 - _tmp49;
  const Scalar _tmp119 = _tmp118 * _tmp84;
  const Scalar _tmp120 = _tmp116 + _tmp119 * _tmp77;
  const Scalar _tmp121 = -_tmp120 * _tmp88 - _tmp54;
  const Scalar _tmp122 = _tmp121 * _tmp90;
  const Scalar _tmp123 = _tmp104 * fh1;
  const Scalar _tmp124 = _tmp123 * _tmp48;
  const Scalar _tmp125 = std::exp(_tmp106 * (_tmp100 * _tmp28 - _tmp103 * _tmp32) +
                                  _tmp113 * (-_tmp107 * _tmp111 + _tmp110 * _tmp28) +
                                  _tmp124 * (_tmp120 * _tmp87 + _tmp122 * _tmp32 + Scalar(1.0)) +
                                  _tmp99 * (_tmp32 * _tmp91 + _tmp86 * _tmp87));
  const Scalar _tmp126 = std::pow(_tmp39, Scalar(Scalar(-3) / Scalar(2)));
  const Scalar _tmp127 = _tmp126 * _tmp32 * _tmp37;
  const Scalar _tmp128 = _tmp126 * _tmp33;
  const Scalar _tmp129 = -_tmp127 + _tmp128 * _tmp54 - _tmp55;
  const Scalar _tmp130 = std::pow(_tmp56, Scalar(-2));
  const Scalar _tmp131 = _tmp130 * _tmp58;
  const Scalar _tmp132 = _tmp129 * _tmp131;
  const Scalar _tmp133 = -_tmp127 * _tmp31 + _tmp128 * _tmp36 + _tmp128 * _tmp49 - _tmp50 - _tmp52;
  const Scalar _tmp134 = _tmp132 * _tmp53 - _tmp133 * _tmp59;
  const Scalar _tmp135 = std::pow(_tmp60, Scalar(-2));
  const Scalar _tmp136 = _tmp135 * _tmp77;
  const Scalar _tmp137 = _tmp134 * _tmp136;
  const Scalar _tmp138 = _tmp128 * _tmp66;
  const Scalar _tmp139 = -_tmp128 * _tmp70 + _tmp138 - _tmp68 + _tmp71;
  const Scalar _tmp140 = _tmp127 * _tmp70;
  const Scalar _tmp141 = -_tmp138 * _tmp54 + _tmp140 + _tmp54 * _tmp68;
  const Scalar _tmp142 =
      _tmp132 * _tmp72 - _tmp139 * _tmp59 - _tmp76 * (_tmp132 * _tmp73 - _tmp141 * _tmp59);
  const Scalar _tmp143 = _tmp116 * _tmp78;
  const Scalar _tmp144 = _tmp130 * _tmp54;
  const Scalar _tmp145 = _tmp129 * _tmp144;
  const Scalar _tmp146 = std::pow(_tmp77, Scalar(-2));
  const Scalar _tmp147 = _tmp142 * _tmp146;
  const Scalar _tmp148 = _tmp116 * _tmp60;
  const Scalar _tmp149 =
      _tmp114 * _tmp139 - _tmp145 * _tmp72 - _tmp76 * (_tmp114 * _tmp141 - _tmp145 * _tmp73);
  const Scalar _tmp150 = -_tmp118 * _tmp137 + _tmp119 * _tmp142 + _tmp149 +
                         _tmp85 * (_tmp114 * _tmp133 - _tmp117 * _tmp149 - _tmp134 * _tmp143 -
                                   _tmp145 * _tmp53 + _tmp147 * _tmp148);
  const Scalar _tmp151 = _tmp147 * _tmp28;
  const Scalar _tmp152 = _tmp121 * _tmp130;
  const Scalar _tmp153 = _tmp129 * _tmp152;
  const Scalar _tmp154 = _tmp128 * _tmp57;
  const Scalar _tmp155 = _tmp147 * _tmp58;
  const Scalar _tmp156 = _tmp120 * _tmp155 - _tmp150 * _tmp88;
  const Scalar _tmp157 = _tmp32 * _tmp90;
  const Scalar _tmp158 = Scalar(1.0) * _tmp130;
  const Scalar _tmp159 = _tmp158 * _tmp73 * _tmp76;
  const Scalar _tmp160 = _tmp158 * _tmp72;
  const Scalar _tmp161 =
      -_tmp129 * _tmp159 + _tmp129 * _tmp160 - _tmp139 * _tmp79 + _tmp141 * _tmp80;
  const Scalar _tmp162 = _tmp60 * _tmp81;
  const Scalar _tmp163 = _tmp158 * _tmp53;
  const Scalar _tmp164 = _tmp83 * _tmp84;
  const Scalar _tmp165 = -_tmp137 * _tmp83 + _tmp142 * _tmp164 + _tmp161 +
                         _tmp85 * (-_tmp117 * _tmp161 + _tmp129 * _tmp163 - _tmp133 * _tmp79 -
                                   _tmp134 * _tmp82 + _tmp147 * _tmp162);
  const Scalar _tmp166 = _tmp155 * _tmp86 - _tmp165 * _tmp88;
  const Scalar _tmp167 = _tmp130 * _tmp89;
  const Scalar _tmp168 = _tmp129 * _tmp167;
  const Scalar _tmp169 = _tmp130 * _tmp88;
  const Scalar _tmp170 = _tmp107 * _tmp109;
  const Scalar _tmp171 = _tmp170 * _tmp59;
  const Scalar _tmp172 = _tmp101 * _tmp135;
  const Scalar _tmp173 = _tmp107 * _tmp172;
  const Scalar _tmp174 = Scalar(1.0) * _tmp135;
  const Scalar _tmp175 = _tmp134 * _tmp174;
  const Scalar _tmp176 = _tmp100 * _tmp107;
  const Scalar _tmp177 = _tmp110 * _tmp112;
  const Scalar _tmp178 = _tmp121 * _tmp57;
  const Scalar _tmp179 = _tmp57 * fh1;
  const Scalar _tmp180 = _tmp179 * _tmp97;
  const Scalar _tmp181 =
      std::exp(_tmp102 * _tmp105 - _tmp123 * _tmp178 + _tmp177 * _tmp59 - _tmp180 * _tmp89);
  const Scalar _tmp182 = _tmp109 * _tmp112;
  const Scalar _tmp183 = _tmp169 * _tmp182;
  const Scalar _tmp184 = _tmp100 * _tmp105;
  const Scalar _tmp185 = _tmp147 * _tmp182;
  const Scalar _tmp186 = _tmp104 * _tmp179;
  const Scalar _tmp187 = _tmp105 * _tmp172;
  const Scalar _tmp188 = _tmp78 * fh1;
  const Scalar _tmp189 = _tmp104 * _tmp188;
  const Scalar _tmp190 = _tmp188 * _tmp97;
  const Scalar _tmp191 = std::exp(-_tmp120 * _tmp189 - _tmp177 - _tmp184 - _tmp190 * _tmp86);
  const Scalar _tmp192 = _tmp86 * _tmp98;
  const Scalar _tmp193 = _tmp120 * _tmp123;
  const Scalar _tmp194 = _tmp126 * _tmp38;
  const Scalar _tmp195 = _tmp127 * _tmp54 - _tmp194 + _tmp40;
  const Scalar _tmp196 = _tmp107 * _tmp195;
  const Scalar _tmp197 = _tmp131 * _tmp195;
  const Scalar _tmp198 = -_tmp115 * _tmp127 + _tmp194 * _tmp70 - _tmp71;
  const Scalar _tmp199 = _tmp127 * _tmp66 - _tmp140;
  const Scalar _tmp200 =
      _tmp197 * _tmp72 - _tmp199 * _tmp59 - _tmp76 * (_tmp197 * _tmp73 - _tmp198 * _tmp59);
  const Scalar _tmp201 = _tmp146 * _tmp200;
  const Scalar _tmp202 = _tmp201 * _tmp28;
  const Scalar _tmp203 = _tmp201 * _tmp58;
  const Scalar _tmp204 = _tmp127 * _tmp36 + _tmp127 * _tmp49 - _tmp194 * _tmp31 + _tmp31 * _tmp40;
  const Scalar _tmp205 =
      -_tmp159 * _tmp195 + _tmp160 * _tmp195 + _tmp198 * _tmp80 - _tmp199 * _tmp79;
  const Scalar _tmp206 = _tmp197 * _tmp53 - _tmp204 * _tmp59;
  const Scalar _tmp207 = _tmp136 * _tmp206;
  const Scalar _tmp208 = _tmp164 * _tmp200 + _tmp205 - _tmp207 * _tmp83 +
                         _tmp85 * (-_tmp117 * _tmp205 + _tmp162 * _tmp201 + _tmp163 * _tmp195 -
                                   _tmp204 * _tmp79 - _tmp206 * _tmp82);
  const Scalar _tmp209 = _tmp203 * _tmp86 - _tmp208 * _tmp88;
  const Scalar _tmp210 = _tmp144 * _tmp195;
  const Scalar _tmp211 =
      _tmp114 * _tmp199 - _tmp210 * _tmp72 - _tmp76 * (_tmp114 * _tmp198 - _tmp210 * _tmp73);
  const Scalar _tmp212 = -_tmp118 * _tmp207 + _tmp119 * _tmp200 + _tmp211 +
                         _tmp85 * (_tmp114 * _tmp204 - _tmp117 * _tmp211 - _tmp143 * _tmp206 +
                                   _tmp148 * _tmp201 - _tmp210 * _tmp53);
  const Scalar _tmp213 = _tmp120 * _tmp203 - _tmp212 * _tmp88;
  const Scalar _tmp214 = _tmp174 * _tmp206;
  const Scalar _tmp215 = _tmp182 * _tmp201;

  // Output terms (1)
  Eigen::Matrix<Scalar, 4, 3> _res;

  _res(0, 0) = 0;
  _res(1, 0) = -_tmp125 * (-_tmp106 * (-_tmp102 * _tmp128 + _tmp103 + _tmp132 * _tmp176 +
                                       _tmp134 * _tmp173 - _tmp175 * _tmp28) -
                           _tmp113 * (-_tmp109 * _tmp151 - _tmp111 * _tmp128 + _tmp111 * _tmp40 +
                                      _tmp129 * _tmp169 * _tmp170 + _tmp147 * _tmp171) -
                           _tmp124 * (-_tmp107 * _tmp153 - _tmp120 * _tmp151 + _tmp121 * _tmp154 -
                                      _tmp122 + _tmp150 * _tmp87 + _tmp156 * _tmp157) -
                           _tmp99 * (-_tmp107 * _tmp168 - _tmp151 * _tmp86 + _tmp154 * _tmp89 +
                                     _tmp157 * _tmp166 + _tmp165 * _tmp87 - _tmp91));
  _res(2, 0) =
      -_tmp181 * (-_tmp123 * _tmp153 + _tmp129 * _tmp183 + _tmp132 * _tmp184 + _tmp134 * _tmp187 +
                  _tmp156 * _tmp186 + _tmp166 * _tmp180 - _tmp168 * _tmp98 + _tmp185 * _tmp59);
  _res(3, 0) = -_tmp191 * (-_tmp105 * _tmp175 - _tmp147 * _tmp192 - _tmp147 * _tmp193 +
                           _tmp150 * _tmp189 + _tmp165 * _tmp190 - _tmp185);
  _res(0, 1) = 0;
  _res(1, 1) =
      -_tmp125 *
      (-_tmp106 * (-_tmp102 * _tmp127 + _tmp173 * _tmp206 + _tmp176 * _tmp197 - _tmp214 * _tmp28) -
       _tmp113 * (_tmp109 * _tmp169 * _tmp196 - _tmp109 * _tmp202 - _tmp111 * _tmp127 +
                  _tmp171 * _tmp201) -
       _tmp124 * (-_tmp120 * _tmp202 + _tmp127 * _tmp178 - _tmp152 * _tmp196 + _tmp157 * _tmp213 +
                  _tmp212 * _tmp87) -
       _tmp99 * (_tmp127 * _tmp57 * _tmp89 + _tmp157 * _tmp209 - _tmp167 * _tmp196 -
                 _tmp202 * _tmp86 + _tmp208 * _tmp87));
  _res(2, 1) = -_tmp181 * (-_tmp123 * _tmp152 * _tmp195 - _tmp167 * _tmp195 * _tmp98 +
                           _tmp180 * _tmp209 + _tmp183 * _tmp195 + _tmp184 * _tmp197 +
                           _tmp186 * _tmp213 + _tmp187 * _tmp206 + _tmp215 * _tmp59);
  _res(3, 1) = -_tmp191 * (-_tmp105 * _tmp214 + _tmp189 * _tmp212 + _tmp190 * _tmp208 -
                           _tmp192 * _tmp201 - _tmp193 * _tmp201 - _tmp215);
  _res(0, 2) = 0;
  _res(1, 2) = 0;
  _res(2, 2) = 0;
  _res(3, 2) = 0;

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
