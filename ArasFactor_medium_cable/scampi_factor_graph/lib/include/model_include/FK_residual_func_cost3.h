// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

#include <sym/pose3.h>
#include <sym/rot3.h>

namespace sym {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: FK_residual_func_cost3
 *
 * Args:
 *     fh1: Scalar
 *     fv1: Scalar
 *     DeltaRot: Rot3
 *     TransformationMatrix: Pose3
 *     encoder: Matrix41
 *     offset: Matrix41
 *     p_a: Matrix31
 *     p_b: Matrix31
 *     p_c: Matrix31
 *     p_d: Matrix31
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix41
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 4, 1> FkResidualFuncCost3(
    const Scalar fh1, const Scalar fv1, const sym::Rot3<Scalar>& DeltaRot,
    const sym::Pose3<Scalar>& TransformationMatrix, const Eigen::Matrix<Scalar, 4, 1>& encoder,
    const Eigen::Matrix<Scalar, 4, 1>& offset, const Eigen::Matrix<Scalar, 3, 1>& p_a,
    const Eigen::Matrix<Scalar, 3, 1>& p_b, const Eigen::Matrix<Scalar, 3, 1>& p_c,
    const Eigen::Matrix<Scalar, 3, 1>& p_d, const Scalar epsilon) {
  // Total ops: 475

  // Unused inputs
  (void)epsilon;

  // Input arrays
  const Eigen::Matrix<Scalar, 4, 1>& _DeltaRot = DeltaRot.Data();
  const Eigen::Matrix<Scalar, 7, 1>& _TransformationMatrix = TransformationMatrix.Data();

  // Intermediate terms (150)
  const Scalar _tmp0 = Scalar(1.0) / (fh1);
  const Scalar _tmp1 =
      _DeltaRot[0] * _TransformationMatrix[3] - _DeltaRot[1] * _TransformationMatrix[2] +
      _DeltaRot[2] * _TransformationMatrix[1] + _DeltaRot[3] * _TransformationMatrix[0];
  const Scalar _tmp2 =
      _DeltaRot[0] * _TransformationMatrix[2] + _DeltaRot[1] * _TransformationMatrix[3] -
      _DeltaRot[2] * _TransformationMatrix[0] + _DeltaRot[3] * _TransformationMatrix[1];
  const Scalar _tmp3 = 2 * _tmp1 * _tmp2;
  const Scalar _tmp4 =
      -_DeltaRot[0] * _TransformationMatrix[1] + _DeltaRot[1] * _TransformationMatrix[0] +
      _DeltaRot[2] * _TransformationMatrix[3] + _DeltaRot[3] * _TransformationMatrix[2];
  const Scalar _tmp5 =
      -2 * _DeltaRot[0] * _TransformationMatrix[0] - 2 * _DeltaRot[1] * _TransformationMatrix[1] -
      2 * _DeltaRot[2] * _TransformationMatrix[2] + 2 * _DeltaRot[3] * _TransformationMatrix[3];
  const Scalar _tmp6 = _tmp4 * _tmp5;
  const Scalar _tmp7 = Scalar(0.20999999999999999) * _tmp3 + Scalar(0.20999999999999999) * _tmp6;
  const Scalar _tmp8 = -_tmp7;
  const Scalar _tmp9 = -2 * std::pow(_tmp1, Scalar(2));
  const Scalar _tmp10 = -2 * std::pow(_tmp4, Scalar(2));
  const Scalar _tmp11 = Scalar(0.20999999999999999) * _tmp10 + Scalar(0.20999999999999999) * _tmp9 +
                        Scalar(0.20999999999999999);
  const Scalar _tmp12 = 2 * _tmp4;
  const Scalar _tmp13 = _tmp12 * _tmp2;
  const Scalar _tmp14 = _tmp1 * _tmp5;
  const Scalar _tmp15 = _tmp13 - _tmp14;
  const Scalar _tmp16 = -Scalar(0.010999999999999999) * _tmp15;
  const Scalar _tmp17 = -_tmp11 + _tmp16;
  const Scalar _tmp18 = _tmp17 + _tmp8;
  const Scalar _tmp19 = _TransformationMatrix[5] + _tmp18;
  const Scalar _tmp20 = Scalar(0.20999999999999999) * _tmp3 - Scalar(0.20999999999999999) * _tmp6;
  const Scalar _tmp21 = -_tmp20;
  const Scalar _tmp22 = 1 - 2 * std::pow(_tmp2, Scalar(2));
  const Scalar _tmp23 = Scalar(0.20999999999999999) * _tmp10 + Scalar(0.20999999999999999) * _tmp22;
  const Scalar _tmp24 = _tmp1 * _tmp12;
  const Scalar _tmp25 = _tmp2 * _tmp5;
  const Scalar _tmp26 = _tmp24 + _tmp25;
  const Scalar _tmp27 = -Scalar(0.010999999999999999) * _tmp26;
  const Scalar _tmp28 = -_tmp23 + _tmp27;
  const Scalar _tmp29 = _tmp21 + _tmp28;
  const Scalar _tmp30 = _TransformationMatrix[4] + _tmp29;
  const Scalar _tmp31 = std::asinh(_tmp0 * fv1);
  const Scalar _tmp32 = Scalar(9.6622558468725703) * fh1;
  const Scalar _tmp33 = _tmp23 + _tmp27;
  const Scalar _tmp34 = _tmp21 + _tmp33;
  const Scalar _tmp35 = _TransformationMatrix[4] + _tmp34;
  const Scalar _tmp36 = _tmp17 + _tmp7;
  const Scalar _tmp37 = _TransformationMatrix[5] + _tmp36;
  const Scalar _tmp38 = Scalar(43.164000000000001) - fv1;
  const Scalar _tmp39 = Scalar(0.20999999999999999) * _tmp13 + Scalar(0.20999999999999999) * _tmp14;
  const Scalar _tmp40 =
      -Scalar(0.010999999999999999) * _tmp22 - Scalar(0.010999999999999999) * _tmp9;
  const Scalar _tmp41 = Scalar(0.20999999999999999) * _tmp24 - Scalar(0.20999999999999999) * _tmp25;
  const Scalar _tmp42 = _tmp40 - _tmp41;
  const Scalar _tmp43 = _tmp39 + _tmp42;
  const Scalar _tmp44 = _tmp11 + _tmp16;
  const Scalar _tmp45 = _tmp44 + _tmp8;
  const Scalar _tmp46 = _TransformationMatrix[5] + _tmp45;
  const Scalar _tmp47 = _tmp46 - p_d(1, 0);
  const Scalar _tmp48 = _tmp20 + _tmp28;
  const Scalar _tmp49 = _TransformationMatrix[4] + _tmp48;
  const Scalar _tmp50 = _tmp49 - p_d(0, 0);
  const Scalar _tmp51 = std::pow(Scalar(std::pow(_tmp47, Scalar(2)) + std::pow(_tmp50, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp52 = _tmp50 * _tmp51;
  const Scalar _tmp53 = -_tmp39;
  const Scalar _tmp54 = _tmp40 + _tmp41;
  const Scalar _tmp55 = _tmp53 + _tmp54;
  const Scalar _tmp56 = _tmp47 * _tmp51;
  const Scalar _tmp57 = _tmp37 - p_b(1, 0);
  const Scalar _tmp58 = _tmp35 - p_b(0, 0);
  const Scalar _tmp59 = Scalar(1.0) / (_tmp58);
  const Scalar _tmp60 = _tmp57 * _tmp59;
  const Scalar _tmp61 = _tmp52 * _tmp60 - _tmp56;
  const Scalar _tmp62 = _tmp20 + _tmp33;
  const Scalar _tmp63 = _TransformationMatrix[4] + _tmp62;
  const Scalar _tmp64 = _tmp63 - p_c(0, 0);
  const Scalar _tmp65 = _tmp44 + _tmp7;
  const Scalar _tmp66 = _TransformationMatrix[5] + _tmp65;
  const Scalar _tmp67 = _tmp66 - p_c(1, 0);
  const Scalar _tmp68 = std::pow(Scalar(std::pow(_tmp64, Scalar(2)) + std::pow(_tmp67, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp69 = _tmp64 * _tmp68;
  const Scalar _tmp70 = _tmp67 * _tmp68;
  const Scalar _tmp71 = Scalar(1.0) / (_tmp60 * _tmp69 - _tmp70);
  const Scalar _tmp72 = _tmp39 + _tmp54;
  const Scalar _tmp73 = _tmp71 * (_tmp55 * _tmp69 - _tmp69 * _tmp72);
  const Scalar _tmp74 = _tmp55 * _tmp60;
  const Scalar _tmp75 = _tmp71 * (-_tmp69 * _tmp74 + _tmp70 * _tmp72);
  const Scalar _tmp76 = _tmp43 * _tmp56 - _tmp52 * _tmp74 - _tmp61 * _tmp75;
  const Scalar _tmp77 = Scalar(1.0) * _tmp36;
  const Scalar _tmp78 = -_tmp77;
  const Scalar _tmp79 = Scalar(1.0) / (_tmp65 + _tmp78);
  const Scalar _tmp80 = Scalar(1.0) * _tmp34;
  const Scalar _tmp81 = _tmp79 * (-_tmp62 + _tmp80);
  const Scalar _tmp82 = -_tmp43 * _tmp52 + _tmp52 * _tmp55 - _tmp61 * _tmp73 - _tmp76 * _tmp81;
  const Scalar _tmp83 = Scalar(1.0) / (_tmp82);
  const Scalar _tmp84 = _tmp77 * _tmp81 + _tmp80;
  const Scalar _tmp85 = 0;
  const Scalar _tmp86 = _tmp69 * _tmp71;
  const Scalar _tmp87 = _tmp61 * _tmp86;
  const Scalar _tmp88 =
      std::sqrt(Scalar(std::pow(_tmp57, Scalar(2)) + std::pow(_tmp58, Scalar(2))));
  const Scalar _tmp89 = _tmp59 * _tmp88;
  const Scalar _tmp90 = Scalar(1.0) * _tmp75;
  const Scalar _tmp91 = -Scalar(1.0) * _tmp73 + _tmp81 * _tmp90;
  const Scalar _tmp92 = Scalar(1.0) / (_tmp88);
  const Scalar _tmp93 = _tmp89 * (_tmp34 * _tmp57 * _tmp92 - _tmp36 * _tmp58 * _tmp92);
  const Scalar _tmp94 = _tmp71 * (-_tmp62 * _tmp70 + _tmp65 * _tmp69 + _tmp69 * _tmp93);
  const Scalar _tmp95 = _tmp45 * _tmp52 - _tmp48 * _tmp56 + _tmp52 * _tmp93 - _tmp61 * _tmp94;
  const Scalar _tmp96 = _tmp83 * _tmp95;
  const Scalar _tmp97 = Scalar(1.0) / (_tmp95);
  const Scalar _tmp98 = _tmp82 * _tmp97;
  const Scalar _tmp99 = _tmp98 * (-_tmp91 * _tmp96 - Scalar(1.0) * _tmp94);
  const Scalar _tmp100 = _tmp83 * (_tmp91 + _tmp99);
  const Scalar _tmp101 = -_tmp100 * _tmp61 + Scalar(1.0);
  const Scalar _tmp102 = _tmp30 - p_a(0, 0);
  const Scalar _tmp103 = _tmp19 - p_a(1, 0);
  const Scalar _tmp104 =
      std::pow(Scalar(std::pow(_tmp102, Scalar(2)) + std::pow(_tmp103, Scalar(2))),
               Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp105 = _tmp103 * _tmp104;
  const Scalar _tmp106 = _tmp105 * fh1;
  const Scalar _tmp107 = _tmp60 * _tmp75 + _tmp74;
  const Scalar _tmp108 = -_tmp107 * _tmp81 - _tmp55 + _tmp60 * _tmp73;
  const Scalar _tmp109 = _tmp98 * (-_tmp108 * _tmp96 + _tmp60 * _tmp94 - _tmp93);
  const Scalar _tmp110 = _tmp83 * (_tmp108 + _tmp109);
  const Scalar _tmp111 = -_tmp110 * _tmp61 - _tmp60;
  const Scalar _tmp112 = _tmp102 * _tmp104;
  const Scalar _tmp113 = _tmp112 * fh1;
  const Scalar _tmp114 = Scalar(1.0) * _tmp97;
  const Scalar _tmp115 = fh1 * (_tmp105 * _tmp29 - _tmp112 * _tmp18);
  const Scalar _tmp116 = -_tmp106 * _tmp89 * (_tmp100 * _tmp52 + _tmp101 * _tmp86) -
                         _tmp113 * _tmp89 * (_tmp110 * _tmp52 + _tmp111 * _tmp86 + Scalar(1.0)) -
                         _tmp115 * _tmp89 * (_tmp114 * _tmp52 - _tmp114 * _tmp87) -
                         _tmp38 * _tmp89 * (_tmp52 * _tmp85 - _tmp85 * _tmp87);
  const Scalar _tmp117 = Scalar(1.0) / (_tmp116);
  const Scalar _tmp118 = _tmp45 + _tmp78;
  const Scalar _tmp119 = _tmp118 * _tmp81;
  const Scalar _tmp120 = Scalar(1.0) / (-_tmp119 - _tmp48 + _tmp80);
  const Scalar _tmp121 = Scalar(1.0) * _tmp120;
  const Scalar _tmp122 = _tmp121 * _tmp98;
  const Scalar _tmp123 = -_tmp114 * _tmp76 + _tmp118 * _tmp122;
  const Scalar _tmp124 = Scalar(1.0) * _tmp79;
  const Scalar _tmp125 = _tmp118 * _tmp120;
  const Scalar _tmp126 = _tmp107 + _tmp109 * _tmp125 - _tmp110 * _tmp76;
  const Scalar _tmp127 = fh1 * (_tmp42 + _tmp53);
  const Scalar _tmp128 = -_tmp105 * _tmp127 - Scalar(5.1796800000000003) * _tmp15 - _tmp18 * fv1;
  const Scalar _tmp129 = _tmp121 * _tmp81;
  const Scalar _tmp130 = _tmp119 * _tmp121 + Scalar(1.0);
  const Scalar _tmp131 = -_tmp100 * _tmp76 + _tmp125 * _tmp99 - _tmp90;
  const Scalar _tmp132 = _tmp120 * _tmp84;
  const Scalar _tmp133 = -_tmp118 * _tmp132 - _tmp76 * _tmp85 + _tmp78;
  const Scalar _tmp134 = _tmp118 * _tmp79;
  const Scalar _tmp135 = _tmp112 * _tmp127 + Scalar(5.1796800000000003) * _tmp26 + _tmp29 * fv1;
  const Scalar _tmp136 = std::asinh(
      _tmp117 * (Scalar(1.0) * _tmp106 * (_tmp121 * _tmp99 - _tmp124 * _tmp131) +
                 Scalar(1.0) * _tmp113 * (_tmp109 * _tmp121 - _tmp124 * _tmp126) +
                 Scalar(1.0) * _tmp115 * (_tmp122 - _tmp123 * _tmp124) +
                 Scalar(1.0) * _tmp128 * (-_tmp124 * _tmp130 + _tmp129) +
                 Scalar(1.0) * _tmp135 * (_tmp121 * _tmp134 - _tmp121) +
                 Scalar(1.0) * _tmp38 * (-_tmp121 * _tmp84 - _tmp124 * _tmp133 + Scalar(1.0))));
  const Scalar _tmp137 = Scalar(9.6622558468725703) * _tmp116;
  const Scalar _tmp138 = _tmp38 * _tmp85;
  const Scalar _tmp139 = _tmp61 * _tmp71;
  const Scalar _tmp140 = _tmp114 * _tmp115;
  const Scalar _tmp141 = _tmp101 * _tmp106 * _tmp71 + _tmp111 * _tmp113 * _tmp71 -
                         _tmp138 * _tmp139 - _tmp139 * _tmp140;
  const Scalar _tmp142 = Scalar(1.0) / (_tmp141);
  const Scalar _tmp143 = _tmp121 * _tmp135;
  const Scalar _tmp144 =
      std::asinh(_tmp142 * (_tmp106 * _tmp131 * _tmp79 + _tmp113 * _tmp126 * _tmp79 +
                            _tmp115 * _tmp123 * _tmp79 + _tmp128 * _tmp130 * _tmp79 +
                            _tmp133 * _tmp38 * _tmp79 - _tmp134 * _tmp143));
  const Scalar _tmp145 = Scalar(9.6622558468725703) * _tmp141;
  const Scalar _tmp146 = _tmp100 * _tmp106 + _tmp110 * _tmp113 + _tmp138 + _tmp140;
  const Scalar _tmp147 = Scalar(1.0) / (_tmp146);
  const Scalar _tmp148 =
      std::asinh(_tmp147 * (-_tmp106 * _tmp120 * _tmp99 - _tmp109 * _tmp113 * _tmp120 -
                            _tmp115 * _tmp122 - _tmp128 * _tmp129 + _tmp132 * _tmp38 + _tmp143));
  const Scalar _tmp149 = Scalar(9.6622558468725703) * _tmp146;

  // Output terms (1)
  Eigen::Matrix<Scalar, 4, 1> _res;

  _res(0, 0) =
      _tmp32 * (-std::sinh(Scalar(1.0) * _tmp31) -
                std::sinh(Scalar(0.1034955) * _tmp0 *
                          (-_tmp31 * _tmp32 -
                           std::sqrt(Scalar(std::pow(Scalar(-_tmp19 + p_a(1, 0)), Scalar(2)) +
                                            std::pow(Scalar(-_tmp30 + p_a(0, 0)), Scalar(2))))))) -
      encoder(0, 0) + offset(0, 0);
  _res(1, 0) =
      _tmp137 * (-std::sinh(Scalar(1.0) * _tmp136) -
                 std::sinh(Scalar(0.1034955) * _tmp117 *
                           (-_tmp136 * _tmp137 -
                            std::sqrt(Scalar(std::pow(Scalar(-_tmp35 + p_b(0, 0)), Scalar(2)) +
                                             std::pow(Scalar(-_tmp37 + p_b(1, 0)), Scalar(2))))))) -
      encoder(1, 0) + offset(1, 0);
  _res(2, 0) =
      _tmp145 * (-std::sinh(Scalar(1.0) * _tmp144) -
                 std::sinh(Scalar(0.1034955) * _tmp142 *
                           (-_tmp144 * _tmp145 -
                            std::sqrt(Scalar(std::pow(Scalar(-_tmp63 + p_c(0, 0)), Scalar(2)) +
                                             std::pow(Scalar(-_tmp66 + p_c(1, 0)), Scalar(2))))))) -
      encoder(2, 0) + offset(2, 0);
  _res(3, 0) =
      _tmp149 * (-std::sinh(Scalar(1.0) * _tmp148) -
                 std::sinh(Scalar(0.1034955) * _tmp147 *
                           (-_tmp148 * _tmp149 -
                            std::sqrt(Scalar(std::pow(Scalar(-_tmp46 + p_d(1, 0)), Scalar(2)) +
                                             std::pow(Scalar(-_tmp49 + p_d(0, 0)), Scalar(2))))))) -
      encoder(3, 0) + offset(3, 0);

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
