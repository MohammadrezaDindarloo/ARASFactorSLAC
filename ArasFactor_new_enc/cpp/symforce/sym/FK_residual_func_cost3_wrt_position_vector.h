// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

#include <sym/rot3.h>

namespace sym {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: FK_residual_func_cost3_wrt_position_vector
 *
 * Args:
 *     fh1: Scalar
 *     fv1: Scalar
 *     DeltaRot: Rot3
 *     position_vector: Matrix31
 *     Rot_init: Rot3
 *     encoder: Matrix41
 *     pulley: Matrix43
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix43
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 4, 3> FkResidualFuncCost3WrtPositionVector(
    const Scalar fh1, const Scalar fv1, const sym::Rot3<Scalar>& DeltaRot,
    const Eigen::Matrix<Scalar, 3, 1>& position_vector, const sym::Rot3<Scalar>& Rot_init,
    const Eigen::Matrix<Scalar, 4, 1>& encoder, const Eigen::Matrix<Scalar, 4, 3>& pulley,
    const Scalar epsilon) {
  // Total ops: 947

  // Unused inputs
  (void)encoder;
  (void)epsilon;

  // Input arrays
  const Eigen::Matrix<Scalar, 4, 1>& _DeltaRot = DeltaRot.Data();
  const Eigen::Matrix<Scalar, 4, 1>& _Rot_init = Rot_init.Data();

  // Intermediate terms (286)
  const Scalar _tmp0 = _DeltaRot[0] * _Rot_init[2] + _DeltaRot[1] * _Rot_init[3] -
                       _DeltaRot[2] * _Rot_init[0] + _DeltaRot[3] * _Rot_init[1];
  const Scalar _tmp1 = _DeltaRot[0] * _Rot_init[3] - _DeltaRot[1] * _Rot_init[2] +
                       _DeltaRot[2] * _Rot_init[1] + _DeltaRot[3] * _Rot_init[0];
  const Scalar _tmp2 = 2 * _tmp1;
  const Scalar _tmp3 = _tmp0 * _tmp2;
  const Scalar _tmp4 = -_DeltaRot[0] * _Rot_init[1] + _DeltaRot[1] * _Rot_init[0] +
                       _DeltaRot[2] * _Rot_init[3] + _DeltaRot[3] * _Rot_init[2];
  const Scalar _tmp5 = -_DeltaRot[0] * _Rot_init[0] - _DeltaRot[1] * _Rot_init[1] -
                       _DeltaRot[2] * _Rot_init[2] + _DeltaRot[3] * _Rot_init[3];
  const Scalar _tmp6 = 2 * _tmp4 * _tmp5;
  const Scalar _tmp7 = Scalar(0.20999999999999999) * _tmp3 - Scalar(0.20999999999999999) * _tmp6;
  const Scalar _tmp8 = -_tmp7;
  const Scalar _tmp9 = _tmp2 * _tmp4;
  const Scalar _tmp10 = 2 * _tmp0;
  const Scalar _tmp11 = _tmp10 * _tmp5;
  const Scalar _tmp12 =
      -Scalar(0.010999999999999999) * _tmp11 - Scalar(0.010999999999999999) * _tmp9;
  const Scalar _tmp13 = -2 * std::pow(_tmp4, Scalar(2));
  const Scalar _tmp14 = 1 - 2 * std::pow(_tmp0, Scalar(2));
  const Scalar _tmp15 = Scalar(0.20999999999999999) * _tmp13 + Scalar(0.20999999999999999) * _tmp14;
  const Scalar _tmp16 = _tmp12 + _tmp15;
  const Scalar _tmp17 = _tmp16 + _tmp8;
  const Scalar _tmp18 = _tmp17 + position_vector(0, 0) - pulley(1, 0);
  const Scalar _tmp19 = Scalar(1.0) / (_tmp18);
  const Scalar _tmp20 = std::pow(_tmp18, Scalar(2));
  const Scalar _tmp21 = -2 * std::pow(_tmp1, Scalar(2));
  const Scalar _tmp22 = Scalar(0.20999999999999999) * _tmp13 +
                        Scalar(0.20999999999999999) * _tmp21 + Scalar(0.20999999999999999);
  const Scalar _tmp23 = -_tmp22;
  const Scalar _tmp24 = _tmp10 * _tmp4;
  const Scalar _tmp25 = _tmp2 * _tmp5;
  const Scalar _tmp26 =
      -Scalar(0.010999999999999999) * _tmp24 + Scalar(0.010999999999999999) * _tmp25;
  const Scalar _tmp27 = Scalar(0.20999999999999999) * _tmp3 + Scalar(0.20999999999999999) * _tmp6;
  const Scalar _tmp28 = _tmp26 + _tmp27;
  const Scalar _tmp29 = _tmp23 + _tmp28;
  const Scalar _tmp30 = _tmp29 + position_vector(1, 0) - pulley(1, 1);
  const Scalar _tmp31 = std::pow(_tmp30, Scalar(2));
  const Scalar _tmp32 = _tmp20 + _tmp31;
  const Scalar _tmp33 = std::sqrt(_tmp32);
  const Scalar _tmp34 = _tmp19 * _tmp33;
  const Scalar _tmp35 = _tmp26 - _tmp27;
  const Scalar _tmp36 = _tmp22 + _tmp35;
  const Scalar _tmp37 = _tmp36 + position_vector(1, 0) - pulley(3, 1);
  const Scalar _tmp38 = _tmp12 - _tmp15;
  const Scalar _tmp39 = _tmp38 + _tmp7;
  const Scalar _tmp40 = _tmp39 + position_vector(0, 0) - pulley(3, 0);
  const Scalar _tmp41 = std::pow(_tmp40, Scalar(2));
  const Scalar _tmp42 = std::pow(_tmp37, Scalar(2));
  const Scalar _tmp43 = _tmp41 + _tmp42;
  const Scalar _tmp44 = std::pow(_tmp43, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp45 = _tmp37 * _tmp44;
  const Scalar _tmp46 = _tmp19 * _tmp30;
  const Scalar _tmp47 = _tmp40 * _tmp44;
  const Scalar _tmp48 = -_tmp45 + _tmp46 * _tmp47;
  const Scalar _tmp49 = _tmp16 + _tmp7;
  const Scalar _tmp50 = _tmp49 + position_vector(0, 0) - pulley(2, 0);
  const Scalar _tmp51 =
      -Scalar(0.010999999999999999) * _tmp14 - Scalar(0.010999999999999999) * _tmp21;
  const Scalar _tmp52 = -Scalar(0.20999999999999999) * _tmp11 + Scalar(0.20999999999999999) * _tmp9;
  const Scalar _tmp53 = Scalar(0.20999999999999999) * _tmp24 + Scalar(0.20999999999999999) * _tmp25;
  const Scalar _tmp54 = _tmp51 + _tmp52 - _tmp53;
  const Scalar _tmp55 = std::pow(_tmp50, Scalar(2));
  const Scalar _tmp56 = _tmp22 + _tmp28;
  const Scalar _tmp57 = _tmp56 + position_vector(1, 0) - pulley(2, 1);
  const Scalar _tmp58 = std::pow(_tmp57, Scalar(2));
  const Scalar _tmp59 = _tmp55 + _tmp58;
  const Scalar _tmp60 = std::pow(_tmp59, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp61 = _tmp54 * _tmp60;
  const Scalar _tmp62 = _tmp50 * _tmp61;
  const Scalar _tmp63 = _tmp51 + _tmp53;
  const Scalar _tmp64 = _tmp52 + _tmp63;
  const Scalar _tmp65 = _tmp60 * _tmp64;
  const Scalar _tmp66 = -_tmp50 * _tmp65 + _tmp62;
  const Scalar _tmp67 = _tmp57 * _tmp60;
  const Scalar _tmp68 = _tmp50 * _tmp60;
  const Scalar _tmp69 = _tmp46 * _tmp68 - _tmp67;
  const Scalar _tmp70 = Scalar(1.0) / (_tmp69);
  const Scalar _tmp71 = _tmp48 * _tmp70;
  const Scalar _tmp72 = _tmp19 * _tmp54;
  const Scalar _tmp73 = _tmp30 * _tmp72;
  const Scalar _tmp74 = _tmp64 * _tmp67 - _tmp68 * _tmp73;
  const Scalar _tmp75 = _tmp44 * _tmp54;
  const Scalar _tmp76 = _tmp40 * _tmp75;
  const Scalar _tmp77 = -_tmp52 + _tmp63;
  const Scalar _tmp78 = _tmp44 * _tmp77;
  const Scalar _tmp79 = Scalar(1.0) * _tmp29;
  const Scalar _tmp80 = Scalar(1.0) * _tmp17;
  const Scalar _tmp81 = (-_tmp49 + _tmp80) / (_tmp56 - _tmp79);
  const Scalar _tmp82 = -_tmp40 * _tmp78 - _tmp66 * _tmp71 + _tmp76 -
                        _tmp81 * (_tmp37 * _tmp78 - _tmp46 * _tmp76 - _tmp71 * _tmp74);
  const Scalar _tmp83 = Scalar(1.0) / (_tmp82);
  const Scalar _tmp84 = Scalar(1.0) / (_tmp33);
  const Scalar _tmp85 = _tmp17 * _tmp84;
  const Scalar _tmp86 = _tmp29 * _tmp84;
  const Scalar _tmp87 = -_tmp18 * _tmp86 + _tmp30 * _tmp85;
  const Scalar _tmp88 = _tmp33 * _tmp87;
  const Scalar _tmp89 = _tmp19 * _tmp88;
  const Scalar _tmp90 = _tmp56 * _tmp60;
  const Scalar _tmp91 = -_tmp49 * _tmp67 + _tmp50 * _tmp90 + _tmp68 * _tmp89;
  const Scalar _tmp92 = _tmp70 * _tmp91;
  const Scalar _tmp93 = _tmp70 * _tmp74;
  const Scalar _tmp94 = _tmp66 * _tmp70;
  const Scalar _tmp95 = _tmp46 * _tmp94 - _tmp54 - _tmp81 * (_tmp46 * _tmp93 + _tmp73);
  const Scalar _tmp96 = _tmp36 * _tmp44;
  const Scalar _tmp97 = -_tmp39 * _tmp45 + _tmp40 * _tmp96 + _tmp47 * _tmp89 - _tmp71 * _tmp91;
  const Scalar _tmp98 = _tmp83 * _tmp97;
  const Scalar _tmp99 = _tmp46 * _tmp92 - _tmp89 - _tmp95 * _tmp98;
  const Scalar _tmp100 = Scalar(1.0) / (_tmp97);
  const Scalar _tmp101 = _tmp100 * _tmp82;
  const Scalar _tmp102 = _tmp101 * _tmp99 + _tmp95;
  const Scalar _tmp103 = _tmp102 * _tmp83;
  const Scalar _tmp104 = -_tmp103 * _tmp48 - _tmp46;
  const Scalar _tmp105 = _tmp68 * _tmp70;
  const Scalar _tmp106 = _tmp103 * _tmp44;
  const Scalar _tmp107 = _tmp104 * _tmp105 + _tmp106 * _tmp40 + Scalar(1.0);
  const Scalar _tmp108 = _tmp38 + _tmp8;
  const Scalar _tmp109 = _tmp108 + position_vector(0, 0) - pulley(0, 0);
  const Scalar _tmp110 = std::pow(_tmp109, Scalar(2));
  const Scalar _tmp111 = _tmp23 + _tmp35;
  const Scalar _tmp112 = _tmp111 + position_vector(1, 0) - pulley(0, 1);
  const Scalar _tmp113 = std::pow(_tmp112, Scalar(2));
  const Scalar _tmp114 = _tmp110 + _tmp113;
  const Scalar _tmp115 = std::pow(_tmp114, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp116 = _tmp115 * fh1;
  const Scalar _tmp117 = _tmp109 * _tmp116;
  const Scalar _tmp118 = _tmp107 * _tmp117;
  const Scalar _tmp119 = _tmp111 * _tmp115;
  const Scalar _tmp120 = _tmp108 * _tmp115;
  const Scalar _tmp121 = -_tmp109 * _tmp119 + _tmp112 * _tmp120;
  const Scalar _tmp122 = Scalar(1.0) * _tmp100;
  const Scalar _tmp123 = _tmp122 * _tmp44;
  const Scalar _tmp124 = _tmp122 * _tmp71;
  const Scalar _tmp125 = fh1 * (_tmp123 * _tmp40 - _tmp124 * _tmp68);
  const Scalar _tmp126 = _tmp121 * _tmp125;
  const Scalar _tmp127 = Scalar(1.0) * _tmp70;
  const Scalar _tmp128 = _tmp127 * _tmp81;
  const Scalar _tmp129 = -_tmp127 * _tmp66 + _tmp128 * _tmp74;
  const Scalar _tmp130 = _tmp129 * _tmp83;
  const Scalar _tmp131 = -_tmp130 * _tmp97 - Scalar(1.0) * _tmp92;
  const Scalar _tmp132 = _tmp101 * _tmp131 + _tmp129;
  const Scalar _tmp133 = _tmp48 * _tmp83;
  const Scalar _tmp134 = -_tmp132 * _tmp133 + Scalar(1.0);
  const Scalar _tmp135 = _tmp132 * _tmp83;
  const Scalar _tmp136 = _tmp105 * _tmp134 + _tmp135 * _tmp47;
  const Scalar _tmp137 = _tmp112 * _tmp116;
  const Scalar _tmp138 = _tmp136 * _tmp137;
  const Scalar _tmp139 = _tmp79 * _tmp81 + _tmp80;
  const Scalar _tmp140 = 0;
  const Scalar _tmp141 = _tmp140 * _tmp83;
  const Scalar _tmp142 = _tmp141 * _tmp71;
  const Scalar _tmp143 = _tmp141 * _tmp44;
  const Scalar _tmp144 = Scalar(43.164000000000001) - fv1;
  const Scalar _tmp145 = _tmp144 * (-_tmp142 * _tmp68 + _tmp143 * _tmp40);
  const Scalar _tmp146 =
      std::exp(_tmp118 * _tmp34 + _tmp126 * _tmp34 + _tmp138 * _tmp34 + _tmp145 * _tmp34);
  const Scalar _tmp147 = _tmp109 * _tmp112;
  const Scalar _tmp148 = std::pow(_tmp114, Scalar(Scalar(-3) / Scalar(2)));
  const Scalar _tmp149 = _tmp148 * fh1;
  const Scalar _tmp150 = _tmp147 * _tmp149;
  const Scalar _tmp151 = _tmp136 * _tmp34;
  const Scalar _tmp152 = Scalar(1.0) / (_tmp20);
  const Scalar _tmp153 = _tmp152 * _tmp33;
  const Scalar _tmp154 = _tmp110 * _tmp149;
  const Scalar _tmp155 = _tmp107 * _tmp34;
  const Scalar _tmp156 = std::pow(_tmp43, Scalar(Scalar(-3) / Scalar(2)));
  const Scalar _tmp157 = _tmp156 * _tmp41;
  const Scalar _tmp158 = std::pow(_tmp69, Scalar(-2));
  const Scalar _tmp159 = std::pow(_tmp59, Scalar(Scalar(-3) / Scalar(2)));
  const Scalar _tmp160 = _tmp159 * _tmp50 * _tmp57;
  const Scalar _tmp161 = _tmp159 * _tmp55;
  const Scalar _tmp162 = _tmp152 * _tmp30;
  const Scalar _tmp163 =
      _tmp158 * (_tmp160 - _tmp161 * _tmp46 - _tmp162 * _tmp68 + _tmp46 * _tmp60);
  const Scalar _tmp164 = _tmp163 * _tmp48;
  const Scalar _tmp165 = _tmp122 * _tmp68;
  const Scalar _tmp166 = std::pow(_tmp32, Scalar(Scalar(-3) / Scalar(2)));
  const Scalar _tmp167 = _tmp166 * _tmp29;
  const Scalar _tmp168 = _tmp166 * _tmp17;
  const Scalar _tmp169 = _tmp18 * _tmp30;
  const Scalar _tmp170 = _tmp34 * (_tmp167 * _tmp20 - _tmp168 * _tmp169 - _tmp86);
  const Scalar _tmp171 = _tmp152 * _tmp88;
  const Scalar _tmp172 = _tmp84 * _tmp87;
  const Scalar _tmp173 = _tmp160 * _tmp49 - _tmp161 * _tmp56 - _tmp161 * _tmp89 + _tmp170 * _tmp68 -
                         _tmp171 * _tmp68 + _tmp172 * _tmp68 + _tmp60 * _tmp89 + _tmp90;
  const Scalar _tmp174 = _tmp156 * _tmp37 * _tmp40;
  const Scalar _tmp175 = -_tmp157 * _tmp46 - _tmp162 * _tmp47 + _tmp174 + _tmp44 * _tmp46;
  const Scalar _tmp176 = -_tmp157 * _tmp36 - _tmp157 * _tmp89 + _tmp164 * _tmp91 +
                         _tmp170 * _tmp47 - _tmp171 * _tmp47 + _tmp172 * _tmp47 - _tmp173 * _tmp71 +
                         _tmp174 * _tmp39 - _tmp175 * _tmp92 + _tmp44 * _tmp89 + _tmp96;
  const Scalar _tmp177 = std::pow(_tmp97, Scalar(-2));
  const Scalar _tmp178 = Scalar(1.0) * _tmp177;
  const Scalar _tmp179 = _tmp176 * _tmp178;
  const Scalar _tmp180 = _tmp68 * _tmp71;
  const Scalar _tmp181 = _tmp60 * _tmp71;
  const Scalar _tmp182 = _tmp105 * _tmp175;
  const Scalar _tmp183 = _tmp121 * fh1;
  const Scalar _tmp184 = _tmp183 * _tmp34;
  const Scalar _tmp185 = _tmp174 * _tmp77;
  const Scalar _tmp186 = _tmp160 * _tmp64;
  const Scalar _tmp187 = _tmp161 * _tmp73 + _tmp162 * _tmp62 - _tmp186 - _tmp60 * _tmp73;
  const Scalar _tmp188 = -_tmp161 * _tmp54 + _tmp161 * _tmp64 + _tmp61 - _tmp65;
  const Scalar _tmp189 = -_tmp157 * _tmp54 + _tmp157 * _tmp77 + _tmp164 * _tmp66 -
                         _tmp175 * _tmp94 - _tmp188 * _tmp71 + _tmp75 - _tmp78 -
                         _tmp81 * (_tmp157 * _tmp73 + _tmp162 * _tmp76 + _tmp164 * _tmp74 -
                                   _tmp175 * _tmp93 - _tmp185 - _tmp187 * _tmp71 - _tmp46 * _tmp75);
  const Scalar _tmp190 = std::pow(_tmp82, Scalar(-2));
  const Scalar _tmp191 = _tmp189 * _tmp190;
  const Scalar _tmp192 = _tmp191 * _tmp47;
  const Scalar _tmp193 = _tmp134 * _tmp70;
  const Scalar _tmp194 = _tmp134 * _tmp68;
  const Scalar _tmp195 = _tmp100 * _tmp189;
  const Scalar _tmp196 = _tmp177 * _tmp82;
  const Scalar _tmp197 = _tmp176 * _tmp196;
  const Scalar _tmp198 = Scalar(1.0) * _tmp163;
  const Scalar _tmp199 = _tmp74 * _tmp81;
  const Scalar _tmp200 =
      -_tmp127 * _tmp188 + _tmp128 * _tmp187 - _tmp198 * _tmp199 + _tmp198 * _tmp66;
  const Scalar _tmp201 = _tmp129 * _tmp97;
  const Scalar _tmp202 = _tmp101 * (-_tmp127 * _tmp173 - _tmp130 * _tmp176 + _tmp191 * _tmp201 +
                                    _tmp198 * _tmp91 - _tmp200 * _tmp98) +
                         _tmp131 * _tmp195 - _tmp131 * _tmp197 + _tmp200;
  const Scalar _tmp203 = _tmp132 * _tmp48;
  const Scalar _tmp204 = -_tmp133 * _tmp202 - _tmp135 * _tmp175 + _tmp191 * _tmp203;
  const Scalar _tmp205 = _tmp60 * _tmp70;
  const Scalar _tmp206 = _tmp47 * _tmp83;
  const Scalar _tmp207 = _tmp137 * _tmp34;
  const Scalar _tmp208 = _tmp133 * _tmp140 * _tmp68;
  const Scalar _tmp209 = _tmp140 * _tmp180;
  const Scalar _tmp210 = _tmp144 * _tmp34;
  const Scalar _tmp211 = _tmp111 * _tmp148;
  const Scalar _tmp212 = _tmp108 * _tmp148;
  const Scalar _tmp213 = _tmp110 * _tmp211 - _tmp119 - _tmp147 * _tmp212;
  const Scalar _tmp214 = _tmp125 * _tmp34;
  const Scalar _tmp215 = _tmp126 * _tmp84;
  const Scalar _tmp216 = _tmp138 * _tmp84;
  const Scalar _tmp217 = _tmp116 * _tmp34;
  const Scalar _tmp218 = _tmp145 * _tmp84;
  const Scalar _tmp219 = _tmp118 * _tmp84;
  const Scalar _tmp220 = _tmp104 * _tmp70;
  const Scalar _tmp221 = _tmp104 * _tmp68;
  const Scalar _tmp222 = _tmp102 * _tmp48;
  const Scalar _tmp223 = _tmp83 * _tmp95;
  const Scalar _tmp224 = _tmp46 * _tmp70;
  const Scalar _tmp225 = _tmp163 * _tmp46;
  const Scalar _tmp226 =
      -_tmp162 * _tmp94 + _tmp188 * _tmp224 - _tmp225 * _tmp66 -
      _tmp81 * (-_tmp162 * _tmp54 - _tmp162 * _tmp93 + _tmp187 * _tmp224 - _tmp225 * _tmp74);
  const Scalar _tmp227 = _tmp95 * _tmp97;
  const Scalar _tmp228 =
      _tmp101 * (-_tmp162 * _tmp92 - _tmp170 + _tmp171 - _tmp172 + _tmp173 * _tmp224 -
                 _tmp176 * _tmp223 + _tmp191 * _tmp227 - _tmp225 * _tmp91 - _tmp226 * _tmp98) +
      _tmp195 * _tmp99 - _tmp197 * _tmp99 + _tmp226;
  const Scalar _tmp229 = -_tmp103 * _tmp175 - _tmp133 * _tmp228 + _tmp162 + _tmp191 * _tmp222;
  const Scalar _tmp230 = _tmp117 * _tmp34;
  const Scalar _tmp231 = _tmp141 * _tmp144;
  const Scalar _tmp232 = _tmp116 * _tmp193;
  const Scalar _tmp233 = _tmp122 * fh1;
  const Scalar _tmp234 = _tmp121 * _tmp233;
  const Scalar _tmp235 = _tmp116 * _tmp220;
  const Scalar _tmp236 =
      std::exp(-_tmp109 * _tmp235 - _tmp112 * _tmp232 + _tmp231 * _tmp71 + _tmp234 * _tmp71);
  const Scalar _tmp237 = _tmp179 * _tmp183;
  const Scalar _tmp238 = _tmp137 * _tmp70;
  const Scalar _tmp239 = _tmp231 * _tmp70;
  const Scalar _tmp240 = _tmp117 * _tmp70;
  const Scalar _tmp241 = _tmp140 * _tmp144;
  const Scalar _tmp242 = _tmp191 * _tmp241;
  const Scalar _tmp243 = _tmp134 * _tmp137;
  const Scalar _tmp244 = _tmp234 * _tmp70;
  const Scalar _tmp245 = _tmp133 * _tmp241;
  const Scalar _tmp246 = _tmp104 * _tmp117;
  const Scalar _tmp247 = _tmp213 * _tmp233;
  const Scalar _tmp248 = _tmp103 * _tmp116;
  const Scalar _tmp249 = _tmp116 * _tmp135;
  const Scalar _tmp250 = std::exp(-_tmp109 * _tmp248 - _tmp112 * _tmp249 - _tmp231 - _tmp234);
  const Scalar _tmp251 = _tmp137 * _tmp83;
  const Scalar _tmp252 = _tmp132 * _tmp137;
  const Scalar _tmp253 = _tmp117 * _tmp83;
  const Scalar _tmp254 = _tmp102 * _tmp117;
  const Scalar _tmp255 = _tmp159 * _tmp58;
  const Scalar _tmp256 = _tmp158 * (-_tmp160 * _tmp46 + _tmp19 * _tmp68 + _tmp255 - _tmp60);
  const Scalar _tmp257 = _tmp256 * _tmp48;
  const Scalar _tmp258 = _tmp156 * _tmp42;
  const Scalar _tmp259 = -_tmp174 * _tmp46 + _tmp19 * _tmp47 + _tmp258 - _tmp44;
  const Scalar _tmp260 = -_tmp160 * _tmp54 + _tmp186;
  const Scalar _tmp261 = _tmp160 * _tmp73 - _tmp255 * _tmp64 + _tmp65 - _tmp68 * _tmp72;
  const Scalar _tmp262 = -_tmp174 * _tmp54 + _tmp185 + _tmp257 * _tmp66 - _tmp259 * _tmp94 -
                         _tmp260 * _tmp71 -
                         _tmp81 * (_tmp174 * _tmp73 - _tmp19 * _tmp76 + _tmp257 * _tmp74 -
                                   _tmp258 * _tmp77 - _tmp259 * _tmp93 - _tmp261 * _tmp71 + _tmp78);
  const Scalar _tmp263 = _tmp190 * _tmp262;
  const Scalar _tmp264 = _tmp263 * _tmp47;
  const Scalar _tmp265 = _tmp105 * _tmp259;
  const Scalar _tmp266 = -_tmp113 * _tmp212 + _tmp120 + _tmp147 * _tmp211;
  const Scalar _tmp267 = _tmp172 * _tmp46;
  const Scalar _tmp268 = _tmp34 * (_tmp167 * _tmp169 - _tmp168 * _tmp31 + _tmp85);
  const Scalar _tmp269 = -_tmp160 * _tmp56 - _tmp160 * _tmp89 + _tmp255 * _tmp49 +
                         _tmp267 * _tmp68 + _tmp268 * _tmp68 - _tmp49 * _tmp60;
  const Scalar _tmp270 = -_tmp174 * _tmp36 - _tmp174 * _tmp89 + _tmp257 * _tmp91 +
                         _tmp258 * _tmp39 - _tmp259 * _tmp92 + _tmp267 * _tmp47 + _tmp268 * _tmp47 -
                         _tmp269 * _tmp71 - _tmp39 * _tmp44;
  const Scalar _tmp271 = _tmp196 * _tmp270;
  const Scalar _tmp272 = _tmp256 * _tmp46;
  const Scalar _tmp273 = _tmp19 * _tmp94 + _tmp224 * _tmp260 - _tmp272 * _tmp66 -
                         _tmp81 * (_tmp19 * _tmp93 + _tmp224 * _tmp261 - _tmp272 * _tmp74 + _tmp72);
  const Scalar _tmp274 = _tmp100 * _tmp262;
  const Scalar _tmp275 =
      _tmp101 * (_tmp19 * _tmp92 - _tmp223 * _tmp270 + _tmp224 * _tmp269 + _tmp227 * _tmp263 -
                 _tmp267 - _tmp268 - _tmp272 * _tmp91 - _tmp273 * _tmp98) -
      _tmp271 * _tmp99 + _tmp273 + _tmp274 * _tmp99;
  const Scalar _tmp276 = -_tmp103 * _tmp259 - _tmp133 * _tmp275 - _tmp19 + _tmp222 * _tmp263;
  const Scalar _tmp277 = _tmp113 * _tmp149;
  const Scalar _tmp278 = _tmp178 * _tmp270;
  const Scalar _tmp279 = Scalar(1.0) * _tmp256;
  const Scalar _tmp280 =
      -_tmp127 * _tmp260 + _tmp128 * _tmp261 - _tmp199 * _tmp279 + _tmp279 * _tmp66;
  const Scalar _tmp281 = _tmp101 * (-_tmp127 * _tmp269 - _tmp130 * _tmp270 + _tmp201 * _tmp263 +
                                    _tmp279 * _tmp91 - _tmp280 * _tmp98) -
                         _tmp131 * _tmp271 + _tmp131 * _tmp274 + _tmp280;
  const Scalar _tmp282 = -_tmp133 * _tmp281 - _tmp135 * _tmp259 + _tmp203 * _tmp263;
  const Scalar _tmp283 = _tmp233 * _tmp266;
  const Scalar _tmp284 = _tmp241 * _tmp263;
  const Scalar _tmp285 = _tmp183 * _tmp278;

  // Output terms (1)
  Eigen::Matrix<Scalar, 4, 3> _res;

  _res(0, 0) = 0;
  _res(1, 0) =
      -_tmp146 *
      (-_tmp107 * _tmp217 + _tmp118 * _tmp153 + _tmp126 * _tmp153 + _tmp138 * _tmp153 +
       _tmp145 * _tmp153 + _tmp150 * _tmp151 + _tmp154 * _tmp155 -
       _tmp184 * (-_tmp122 * _tmp157 - _tmp122 * _tmp181 - _tmp122 * _tmp182 + _tmp123 +
                  _tmp124 * _tmp161 + _tmp164 * _tmp165 + _tmp179 * _tmp180 - _tmp179 * _tmp47) -
       _tmp207 * (_tmp105 * _tmp204 - _tmp132 * _tmp192 + _tmp134 * _tmp205 - _tmp135 * _tmp157 +
                  _tmp135 * _tmp44 - _tmp161 * _tmp193 - _tmp163 * _tmp194 + _tmp202 * _tmp206) -
       _tmp210 * (-_tmp140 * _tmp192 - _tmp141 * _tmp157 - _tmp141 * _tmp181 - _tmp141 * _tmp182 +
                  _tmp142 * _tmp161 + _tmp143 + _tmp163 * _tmp208 + _tmp191 * _tmp209) -
       _tmp213 * _tmp214 - _tmp215 - _tmp216 - _tmp218 - _tmp219 -
       _tmp230 * (-_tmp102 * _tmp192 - _tmp103 * _tmp157 + _tmp104 * _tmp205 + _tmp105 * _tmp229 +
                  _tmp106 - _tmp161 * _tmp220 - _tmp163 * _tmp221 + _tmp206 * _tmp228));
  _res(2, 0) =
      -_tmp236 * (-_tmp150 * _tmp193 - _tmp154 * _tmp220 - _tmp163 * _tmp243 + _tmp163 * _tmp245 -
                  _tmp163 * _tmp246 + _tmp164 * _tmp234 - _tmp175 * _tmp239 - _tmp175 * _tmp244 +
                  _tmp204 * _tmp238 + _tmp229 * _tmp240 + _tmp235 + _tmp237 * _tmp71 +
                  _tmp242 * _tmp71 - _tmp247 * _tmp71);
  _res(3, 0) =
      -_tmp250 * (-_tmp103 * _tmp154 - _tmp135 * _tmp150 - _tmp191 * _tmp252 - _tmp191 * _tmp254 +
                  _tmp202 * _tmp251 + _tmp228 * _tmp253 - _tmp237 - _tmp242 + _tmp247 + _tmp248);
  _res(0, 1) = 0;
  _res(1, 1) = -_tmp146 * (-_tmp136 * _tmp217 + _tmp150 * _tmp155 + _tmp151 * _tmp277 -
                           _tmp184 * (-_tmp122 * _tmp174 - _tmp122 * _tmp265 + _tmp124 * _tmp160 +
                                      _tmp165 * _tmp257 + _tmp180 * _tmp278 - _tmp278 * _tmp47) -
                           _tmp207 * (_tmp105 * _tmp282 - _tmp132 * _tmp264 - _tmp135 * _tmp174 -
                                      _tmp160 * _tmp193 - _tmp194 * _tmp256 + _tmp206 * _tmp281) -
                           _tmp210 * (-_tmp140 * _tmp264 - _tmp141 * _tmp174 - _tmp141 * _tmp265 +
                                      _tmp142 * _tmp160 + _tmp208 * _tmp256 + _tmp209 * _tmp263) -
                           _tmp214 * _tmp266 - _tmp215 * _tmp46 - _tmp216 * _tmp46 -
                           _tmp218 * _tmp46 - _tmp219 * _tmp46 -
                           _tmp230 * (-_tmp102 * _tmp264 - _tmp103 * _tmp174 + _tmp105 * _tmp276 -
                                      _tmp160 * _tmp220 + _tmp206 * _tmp275 - _tmp221 * _tmp256));
  _res(2, 1) =
      -_tmp236 * (-_tmp150 * _tmp220 - _tmp193 * _tmp277 + _tmp232 + _tmp234 * _tmp257 +
                  _tmp238 * _tmp282 - _tmp239 * _tmp259 + _tmp240 * _tmp276 - _tmp243 * _tmp256 -
                  _tmp244 * _tmp259 + _tmp245 * _tmp256 - _tmp246 * _tmp256 - _tmp283 * _tmp71 +
                  _tmp284 * _tmp71 + _tmp285 * _tmp71);
  _res(3, 1) = -_tmp250 * (-_tmp103 * _tmp150 - _tmp135 * _tmp277 + _tmp249 + _tmp251 * _tmp281 -
                           _tmp252 * _tmp263 + _tmp253 * _tmp275 - _tmp254 * _tmp263 + _tmp283 -
                           _tmp284 - _tmp285);
  _res(0, 2) = 0;
  _res(1, 2) = 0;
  _res(2, 2) = 0;
  _res(3, 2) = 0;

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
