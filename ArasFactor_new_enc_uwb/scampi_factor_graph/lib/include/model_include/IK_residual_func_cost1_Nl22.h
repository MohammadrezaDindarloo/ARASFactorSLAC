// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

#include <sym/rot3.h>

namespace sym {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: IK_residual_func_cost1_Nl22
 *
 * Args:
 *     fh1: Scalar
 *     fv1: Scalar
 *     DeltaRot: Rot3
 *     position_vector: Matrix31
 *     Rot_init: Rot3
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix41
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 4, 1> IkResidualFuncCost1Nl22(
    const Scalar fh1, const Scalar fv1, const sym::Rot3<Scalar>& DeltaRot,
    const Eigen::Matrix<Scalar, 3, 1>& position_vector, const sym::Rot3<Scalar>& Rot_init,
    const Scalar epsilon) {
  // Total ops: 501

  // Unused inputs
  (void)epsilon;

  // Input arrays
  const Eigen::Matrix<Scalar, 4, 1>& _DeltaRot = DeltaRot.Data();
  const Eigen::Matrix<Scalar, 4, 1>& _Rot_init = Rot_init.Data();

  // Intermediate terms (157)
  const Scalar _tmp0 = Scalar(1.0) / (fh1);
  const Scalar _tmp1 = _DeltaRot[0] * _Rot_init[2] + _DeltaRot[1] * _Rot_init[3] -
                       _DeltaRot[2] * _Rot_init[0] + _DeltaRot[3] * _Rot_init[1];
  const Scalar _tmp2 = -2 * std::pow(_tmp1, Scalar(2));
  const Scalar _tmp3 = -_DeltaRot[0] * _Rot_init[1] + _DeltaRot[1] * _Rot_init[0] +
                       _DeltaRot[2] * _Rot_init[3] + _DeltaRot[3] * _Rot_init[2];
  const Scalar _tmp4 = 1 - 2 * std::pow(_tmp3, Scalar(2));
  const Scalar _tmp5 = Scalar(0.20999999999999999) * _tmp2 + Scalar(0.20999999999999999) * _tmp4;
  const Scalar _tmp6 = -_tmp5;
  const Scalar _tmp7 = _DeltaRot[0] * _Rot_init[3] - _DeltaRot[1] * _Rot_init[2] +
                       _DeltaRot[2] * _Rot_init[1] + _DeltaRot[3] * _Rot_init[0];
  const Scalar _tmp8 = 2 * _tmp7;
  const Scalar _tmp9 = _tmp3 * _tmp8;
  const Scalar _tmp10 = -_DeltaRot[0] * _Rot_init[0] - _DeltaRot[1] * _Rot_init[1] -
                        _DeltaRot[2] * _Rot_init[2] + _DeltaRot[3] * _Rot_init[3];
  const Scalar _tmp11 = 2 * _tmp1;
  const Scalar _tmp12 = _tmp10 * _tmp11;
  const Scalar _tmp13 = _tmp12 + _tmp9;
  const Scalar _tmp14 = -Scalar(0.010999999999999999) * _tmp13;
  const Scalar _tmp15 = _tmp11 * _tmp7;
  const Scalar _tmp16 = 2 * _tmp10 * _tmp3;
  const Scalar _tmp17 = Scalar(0.20999999999999999) * _tmp15 - Scalar(0.20999999999999999) * _tmp16;
  const Scalar _tmp18 = _tmp14 + _tmp17;
  const Scalar _tmp19 = _tmp18 + _tmp6;
  const Scalar _tmp20 = _tmp19 + position_vector(0, 0);
  const Scalar _tmp21 = Scalar(0.20999999999999999) * _tmp15 + Scalar(0.20999999999999999) * _tmp16;
  const Scalar _tmp22 = -_tmp21;
  const Scalar _tmp23 = -2 * std::pow(_tmp7, Scalar(2));
  const Scalar _tmp24 = Scalar(0.20999999999999999) * _tmp23 + Scalar(0.20999999999999999) * _tmp4;
  const Scalar _tmp25 = _tmp11 * _tmp3;
  const Scalar _tmp26 = _tmp10 * _tmp8;
  const Scalar _tmp27 = _tmp25 - _tmp26;
  const Scalar _tmp28 = -Scalar(0.010999999999999999) * _tmp27;
  const Scalar _tmp29 = _tmp24 + _tmp28;
  const Scalar _tmp30 = _tmp22 + _tmp29;
  const Scalar _tmp31 = _tmp30 + position_vector(1, 0);
  const Scalar _tmp32 = std::asinh(_tmp0 * fv1);
  const Scalar _tmp33 = Scalar(9.6622558468725703) * fh1;
  const Scalar _tmp34 = Scalar(0.20999999999999999) * _tmp25 + Scalar(0.20999999999999999) * _tmp26;
  const Scalar _tmp35 = -Scalar(0.010999999999999999) * _tmp2 -
                        Scalar(0.010999999999999999) * _tmp23 + Scalar(-0.010999999999999999);
  const Scalar _tmp36 = -Scalar(0.20999999999999999) * _tmp12 + Scalar(0.20999999999999999) * _tmp9;
  const Scalar _tmp37 = _tmp35 - _tmp36;
  const Scalar _tmp38 = _tmp34 + _tmp37;
  const Scalar _tmp39 = _tmp14 - _tmp17;
  const Scalar _tmp40 = _tmp39 + _tmp6;
  const Scalar _tmp41 = _tmp40 + position_vector(0, 0);
  const Scalar _tmp42 = _tmp41 + Scalar(1.9874742031097401);
  const Scalar _tmp43 = -_tmp24 + _tmp28;
  const Scalar _tmp44 = _tmp22 + _tmp43;
  const Scalar _tmp45 = _tmp44 + position_vector(1, 0);
  const Scalar _tmp46 = _tmp45 + Scalar(8.3196563720703107);
  const Scalar _tmp47 = std::pow(Scalar(std::pow(_tmp42, Scalar(2)) + std::pow(_tmp46, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp48 = _tmp42 * _tmp47;
  const Scalar _tmp49 = _tmp21 + _tmp29;
  const Scalar _tmp50 = _tmp49 + position_vector(1, 0);
  const Scalar _tmp51 = _tmp50 + Scalar(-4.7744369927459998);
  const Scalar _tmp52 = _tmp18 + _tmp5;
  const Scalar _tmp53 = _tmp52 + position_vector(0, 0);
  const Scalar _tmp54 = _tmp53 + Scalar(-2.7171519410699099);
  const Scalar _tmp55 = Scalar(1.0) / (_tmp54);
  const Scalar _tmp56 = _tmp51 * _tmp55;
  const Scalar _tmp57 = _tmp21 + _tmp43;
  const Scalar _tmp58 = _tmp57 + position_vector(1, 0);
  const Scalar _tmp59 = _tmp58 + Scalar(8.3885017487099702);
  const Scalar _tmp60 = _tmp39 + _tmp5;
  const Scalar _tmp61 = _tmp60 + position_vector(0, 0);
  const Scalar _tmp62 = _tmp61 + Scalar(-2.5193355532036801);
  const Scalar _tmp63 = std::pow(Scalar(std::pow(_tmp59, Scalar(2)) + std::pow(_tmp62, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp64 = _tmp62 * _tmp63;
  const Scalar _tmp65 = _tmp59 * _tmp63;
  const Scalar _tmp66 = _tmp56 * _tmp64 - _tmp65;
  const Scalar _tmp67 = _tmp46 * _tmp47;
  const Scalar _tmp68 =
      std::sqrt(Scalar(std::pow(_tmp51, Scalar(2)) + std::pow(_tmp54, Scalar(2))));
  const Scalar _tmp69 = Scalar(1.0) / (_tmp68);
  const Scalar _tmp70 = _tmp55 * _tmp68;
  const Scalar _tmp71 = _tmp70 * (-_tmp49 * _tmp54 * _tmp69 + _tmp51 * _tmp52 * _tmp69);
  const Scalar _tmp72 = -_tmp40 * _tmp67 + _tmp44 * _tmp48 + _tmp48 * _tmp71;
  const Scalar _tmp73 = Scalar(1.0) / (_tmp48 * _tmp56 - _tmp67);
  const Scalar _tmp74 = _tmp66 * _tmp73;
  const Scalar _tmp75 = _tmp57 * _tmp64 - _tmp60 * _tmp65 + _tmp64 * _tmp71 - _tmp72 * _tmp74;
  const Scalar _tmp76 = Scalar(1.0) / (_tmp75);
  const Scalar _tmp77 = Scalar(1.0) * _tmp73;
  const Scalar _tmp78 = _tmp66 * _tmp76 * _tmp77;
  const Scalar _tmp79 = Scalar(1.0) * _tmp76;
  const Scalar _tmp80 = _tmp20 + Scalar(1.7965602546229);
  const Scalar _tmp81 = _tmp31 + Scalar(-4.83288938413423);
  const Scalar _tmp82 = std::pow(Scalar(std::pow(_tmp80, Scalar(2)) + std::pow(_tmp81, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp83 = _tmp80 * _tmp82;
  const Scalar _tmp84 = _tmp81 * _tmp82;
  const Scalar _tmp85 = fh1 * (_tmp19 * _tmp84 - _tmp30 * _tmp83);
  const Scalar _tmp86 = -_tmp34;
  const Scalar _tmp87 = _tmp37 + _tmp86;
  const Scalar _tmp88 = _tmp35 + _tmp36;
  const Scalar _tmp89 = _tmp34 + _tmp88;
  const Scalar _tmp90 = -_tmp48 * _tmp87 + _tmp48 * _tmp89;
  const Scalar _tmp91 = _tmp56 * _tmp73;
  const Scalar _tmp92 = _tmp56 * _tmp89;
  const Scalar _tmp93 = -_tmp48 * _tmp92 + _tmp67 * _tmp87;
  const Scalar _tmp94 = _tmp91 * _tmp93 + _tmp92;
  const Scalar _tmp95 = Scalar(1.0) * _tmp49;
  const Scalar _tmp96 = -_tmp95;
  const Scalar _tmp97 = Scalar(1.0) / (_tmp44 + _tmp96);
  const Scalar _tmp98 = Scalar(1.0) * _tmp52;
  const Scalar _tmp99 = _tmp97 * (-_tmp40 + _tmp98);
  const Scalar _tmp100 = -_tmp89 + _tmp90 * _tmp91 - _tmp94 * _tmp99;
  const Scalar _tmp101 = _tmp86 + _tmp88;
  const Scalar _tmp102 = _tmp101 * _tmp65 - _tmp64 * _tmp92 - _tmp74 * _tmp93;
  const Scalar _tmp103 = -_tmp101 * _tmp64 - _tmp102 * _tmp99 + _tmp64 * _tmp89 - _tmp74 * _tmp90;
  const Scalar _tmp104 = Scalar(1.0) / (_tmp103);
  const Scalar _tmp105 = _tmp104 * _tmp75;
  const Scalar _tmp106 = _tmp103 * _tmp76;
  const Scalar _tmp107 = _tmp106 * (-_tmp100 * _tmp105 - _tmp71 + _tmp72 * _tmp91);
  const Scalar _tmp108 = _tmp100 + _tmp107;
  const Scalar _tmp109 = _tmp104 * _tmp66;
  const Scalar _tmp110 = -_tmp108 * _tmp109 - _tmp56;
  const Scalar _tmp111 = _tmp48 * _tmp73;
  const Scalar _tmp112 = _tmp104 * _tmp64;
  const Scalar _tmp113 = _tmp83 * fh1;
  const Scalar _tmp114 = Scalar(43.164000000000001) - fv1;
  const Scalar _tmp115 = _tmp95 * _tmp99 + _tmp98;
  const Scalar _tmp116 = 0;
  const Scalar _tmp117 = _tmp104 * _tmp116;
  const Scalar _tmp118 = _tmp77 * _tmp93;
  const Scalar _tmp119 = _tmp118 * _tmp99 - _tmp77 * _tmp90;
  const Scalar _tmp120 = _tmp106 * (-_tmp105 * _tmp119 - _tmp72 * _tmp77);
  const Scalar _tmp121 = _tmp119 + _tmp120;
  const Scalar _tmp122 = -_tmp109 * _tmp121 + Scalar(1.0);
  const Scalar _tmp123 = _tmp84 * fh1;
  const Scalar _tmp124 = -_tmp113 * _tmp70 * (_tmp108 * _tmp112 + _tmp110 * _tmp111 + Scalar(1.0)) -
                         _tmp114 * _tmp70 * (-_tmp117 * _tmp48 * _tmp74 + _tmp117 * _tmp64) -
                         _tmp123 * _tmp70 * (_tmp111 * _tmp122 + _tmp112 * _tmp121) -
                         _tmp70 * _tmp85 * (-_tmp48 * _tmp78 + _tmp64 * _tmp79);
  const Scalar _tmp125 = Scalar(1.0) / (_tmp124);
  const Scalar _tmp126 = _tmp57 + _tmp96;
  const Scalar _tmp127 = _tmp126 * _tmp99;
  const Scalar _tmp128 = Scalar(1.0) / (-_tmp127 - _tmp60 + _tmp98);
  const Scalar _tmp129 = Scalar(1.0) * _tmp128;
  const Scalar _tmp130 = _tmp126 * _tmp97;
  const Scalar _tmp131 = _tmp38 * fh1;
  const Scalar _tmp132 = Scalar(5.1796800000000003) * _tmp13 + _tmp131 * _tmp83 + _tmp19 * fv1;
  const Scalar _tmp133 = _tmp106 * _tmp129;
  const Scalar _tmp134 = -_tmp102 * _tmp79 + _tmp126 * _tmp133;
  const Scalar _tmp135 = Scalar(1.0) * _tmp97;
  const Scalar _tmp136 = _tmp102 * _tmp104;
  const Scalar _tmp137 = _tmp126 * _tmp128;
  const Scalar _tmp138 = -_tmp118 + _tmp120 * _tmp137 - _tmp121 * _tmp136;
  const Scalar _tmp139 = _tmp115 * _tmp128;
  const Scalar _tmp140 = -_tmp116 * _tmp136 - _tmp126 * _tmp139 + _tmp96;
  const Scalar _tmp141 = _tmp127 * _tmp129 + Scalar(1.0);
  const Scalar _tmp142 = _tmp129 * _tmp99;
  const Scalar _tmp143 = -_tmp131 * _tmp84 - Scalar(5.1796800000000003) * _tmp27 - _tmp30 * fv1;
  const Scalar _tmp144 = _tmp107 * _tmp137 - _tmp108 * _tmp136 + _tmp94;
  const Scalar _tmp145 = std::asinh(
      _tmp125 * (Scalar(1.0) * _tmp113 * (_tmp107 * _tmp129 - _tmp135 * _tmp144) +
                 Scalar(1.0) * _tmp114 * (-_tmp115 * _tmp129 - _tmp135 * _tmp140 + Scalar(1.0)) +
                 Scalar(1.0) * _tmp123 * (_tmp120 * _tmp129 - _tmp135 * _tmp138) +
                 Scalar(1.0) * _tmp132 * (_tmp129 * _tmp130 - _tmp129) +
                 Scalar(1.0) * _tmp143 * (-_tmp135 * _tmp141 + _tmp142) +
                 Scalar(1.0) * _tmp85 * (_tmp133 - _tmp134 * _tmp135)));
  const Scalar _tmp146 = Scalar(9.6622558468725703) * _tmp124;
  const Scalar _tmp147 = _tmp114 * _tmp117;
  const Scalar _tmp148 =
      _tmp110 * _tmp113 * _tmp73 + _tmp122 * _tmp123 * _tmp73 - _tmp147 * _tmp74 - _tmp78 * _tmp85;
  const Scalar _tmp149 = Scalar(1.0) / (_tmp148);
  const Scalar _tmp150 = _tmp129 * _tmp132;
  const Scalar _tmp151 =
      std::asinh(_tmp149 * (_tmp113 * _tmp144 * _tmp97 + _tmp114 * _tmp140 * _tmp97 +
                            _tmp123 * _tmp138 * _tmp97 - _tmp130 * _tmp150 +
                            _tmp134 * _tmp85 * _tmp97 + _tmp141 * _tmp143 * _tmp97));
  const Scalar _tmp152 = Scalar(9.6622558468725703) * _tmp148;
  const Scalar _tmp153 =
      _tmp104 * _tmp108 * _tmp113 + _tmp104 * _tmp121 * _tmp123 + _tmp147 + _tmp79 * _tmp85;
  const Scalar _tmp154 = Scalar(1.0) / (_tmp153);
  const Scalar _tmp155 = std::asinh(_tmp154 * (-_tmp107 * _tmp113 * _tmp128 + _tmp114 * _tmp139 -
                                               _tmp120 * _tmp123 * _tmp128 - _tmp133 * _tmp85 -
                                               _tmp142 * _tmp143 + _tmp150));
  const Scalar _tmp156 = Scalar(9.6622558468725703) * _tmp153;

  // Output terms (1)
  Eigen::Matrix<Scalar, 4, 1> _res;

  _res(0, 0) =
      -_tmp33 *
          (Scalar(0.86627065637365697) * _tmp0 + std::cosh(Scalar(1.0) * _tmp32) -
           std::cosh(
               Scalar(0.1034955) * _tmp0 *
               (-_tmp32 * _tmp33 -
                Scalar(4.83288938413423) *
                    std::sqrt(Scalar(
                        std::pow(Scalar(1 - Scalar(0.20691555724053495) * _tmp31), Scalar(2)) +
                        Scalar(0.13818785160942856) *
                            std::pow(Scalar(-Scalar(0.55661923802822921) * _tmp20 - 1),
                                     Scalar(2))))))) +
      _tmp38 + position_vector(2, 0);
  _res(1, 0) =
      -_tmp146 *
          (Scalar(0.86564762886483004) * _tmp125 + std::cosh(Scalar(1.0) * _tmp145) -
           std::cosh(Scalar(0.1034955) * _tmp125 *
                     (-_tmp145 * _tmp146 -
                      Scalar(4.7744369927459998) *
                          std::sqrt(Scalar(
                              std::pow(Scalar(1 - Scalar(0.2094487793051498) * _tmp50), Scalar(2)) +
                              Scalar(0.32387954179207445) *
                                  std::pow(Scalar(1 - Scalar(0.36803241838814449) * _tmp53),
                                           Scalar(2))))))) +
      _tmp89 + position_vector(2, 0);
  _res(2, 0) =
      -_tmp152 *
          (Scalar(0.87679799777269396) * _tmp149 + std::cosh(Scalar(1.0) * _tmp151) -
           std::cosh(
               Scalar(0.1034955) * _tmp149 *
               (-_tmp151 * _tmp152 -
                Scalar(8.3196563720703107) *
                    std::sqrt(Scalar(
                        Scalar(0.057067943527034905) *
                            std::pow(Scalar(-Scalar(0.50315118477277876) * _tmp41 - 1), Scalar(2)) +
                        std::pow(Scalar(-Scalar(0.12019727201198747) * _tmp45 - 1),
                                 Scalar(2))))))) +
      _tmp87 + position_vector(2, 0);
  _res(3, 0) =
      _tmp101 -
      _tmp156 *
          (Scalar(0.876505537412406) * _tmp154 + std::cosh(Scalar(1.0) * _tmp155) -
           std::cosh(
               Scalar(0.1034955) * _tmp154 *
               (-_tmp155 * _tmp156 -
                Scalar(8.3885017487099702) *
                    std::sqrt(Scalar(
                        Scalar(0.090199313518583735) *
                            std::pow(Scalar(1 - Scalar(0.39693005512043167) * _tmp61), Scalar(2)) +
                        std::pow(Scalar(-Scalar(0.11921079949155229) * _tmp58 - 1),
                                 Scalar(2))))))) +
      position_vector(2, 0);

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
