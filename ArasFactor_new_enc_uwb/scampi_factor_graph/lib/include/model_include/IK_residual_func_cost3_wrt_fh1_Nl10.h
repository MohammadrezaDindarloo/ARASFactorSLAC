// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

#include <sym/rot3.h>

namespace sym {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: IK_residual_func_cost3_wrt_fh1_Nl10
 *
 * Args:
 *     fh1: Scalar
 *     fv1: Scalar
 *     DeltaRot: Rot3
 *     position_vector: Matrix31
 *     Rot_init: Rot3
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix41
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 4, 1> IkResidualFuncCost3WrtFh1Nl10(
    const Scalar fh1, const Scalar fv1, const sym::Rot3<Scalar>& DeltaRot,
    const Eigen::Matrix<Scalar, 3, 1>& position_vector, const sym::Rot3<Scalar>& Rot_init,
    const Scalar epsilon) {
  // Total ops: 304

  // Unused inputs
  (void)epsilon;

  // Input arrays
  const Eigen::Matrix<Scalar, 4, 1>& _DeltaRot = DeltaRot.Data();
  const Eigen::Matrix<Scalar, 4, 1>& _Rot_init = Rot_init.Data();

  // Intermediate terms (109)
  const Scalar _tmp0 = Scalar(43.164000000000001) - fv1;
  const Scalar _tmp1 = -_DeltaRot[0] * _Rot_init[1] + _DeltaRot[1] * _Rot_init[0] +
                       _DeltaRot[2] * _Rot_init[3] + _DeltaRot[3] * _Rot_init[2];
  const Scalar _tmp2 = -2 * std::pow(_tmp1, Scalar(2));
  const Scalar _tmp3 = _DeltaRot[0] * _Rot_init[2] + _DeltaRot[1] * _Rot_init[3] -
                       _DeltaRot[2] * _Rot_init[0] + _DeltaRot[3] * _Rot_init[1];
  const Scalar _tmp4 = 1 - 2 * std::pow(_tmp3, Scalar(2));
  const Scalar _tmp5 = Scalar(0.20999999999999999) * _tmp2 + Scalar(0.20999999999999999) * _tmp4;
  const Scalar _tmp6 = -_tmp5;
  const Scalar _tmp7 = _DeltaRot[0] * _Rot_init[3] - _DeltaRot[1] * _Rot_init[2] +
                       _DeltaRot[2] * _Rot_init[1] + _DeltaRot[3] * _Rot_init[0];
  const Scalar _tmp8 = 2 * _tmp1;
  const Scalar _tmp9 = _tmp7 * _tmp8;
  const Scalar _tmp10 = -2 * _DeltaRot[0] * _Rot_init[0] - 2 * _DeltaRot[1] * _Rot_init[1] -
                        2 * _DeltaRot[2] * _Rot_init[2] + 2 * _DeltaRot[3] * _Rot_init[3];
  const Scalar _tmp11 = _tmp10 * _tmp3;
  const Scalar _tmp12 =
      -Scalar(0.010999999999999999) * _tmp11 - Scalar(0.010999999999999999) * _tmp9;
  const Scalar _tmp13 = 2 * _tmp3 * _tmp7;
  const Scalar _tmp14 = _tmp1 * _tmp10;
  const Scalar _tmp15 = Scalar(0.20999999999999999) * _tmp13 - Scalar(0.20999999999999999) * _tmp14;
  const Scalar _tmp16 = _tmp12 + _tmp15;
  const Scalar _tmp17 = _tmp16 + _tmp6;
  const Scalar _tmp18 = Scalar(1.0) * _tmp17;
  const Scalar _tmp19 = Scalar(0.20999999999999999) * _tmp13 + Scalar(0.20999999999999999) * _tmp14;
  const Scalar _tmp20 = -_tmp19;
  const Scalar _tmp21 = _tmp3 * _tmp8;
  const Scalar _tmp22 = _tmp10 * _tmp7;
  const Scalar _tmp23 =
      -Scalar(0.010999999999999999) * _tmp21 + Scalar(0.010999999999999999) * _tmp22;
  const Scalar _tmp24 = -2 * std::pow(_tmp7, Scalar(2));
  const Scalar _tmp25 = Scalar(0.20999999999999999) * _tmp2 + Scalar(0.20999999999999999) * _tmp24 +
                        Scalar(0.20999999999999999);
  const Scalar _tmp26 = _tmp23 + _tmp25;
  const Scalar _tmp27 = _tmp20 + _tmp26;
  const Scalar _tmp28 = Scalar(1.0) * _tmp27;
  const Scalar _tmp29 = _tmp23 - _tmp25;
  const Scalar _tmp30 = _tmp20 + _tmp29;
  const Scalar _tmp31 = _tmp12 - _tmp15;
  const Scalar _tmp32 = _tmp31 + _tmp6;
  const Scalar _tmp33 = (_tmp18 - _tmp32) / (-_tmp28 + _tmp30);
  const Scalar _tmp34 = _tmp18 + _tmp28 * _tmp33;
  const Scalar _tmp35 = -Scalar(0.20999999999999999) * _tmp11 + Scalar(0.20999999999999999) * _tmp9;
  const Scalar _tmp36 = -_tmp35;
  const Scalar _tmp37 =
      -Scalar(0.010999999999999999) * _tmp24 - Scalar(0.010999999999999999) * _tmp4;
  const Scalar _tmp38 = Scalar(0.20999999999999999) * _tmp21 + Scalar(0.20999999999999999) * _tmp22;
  const Scalar _tmp39 = _tmp37 + _tmp38;
  const Scalar _tmp40 = _tmp36 + _tmp39;
  const Scalar _tmp41 = _tmp19 + _tmp26;
  const Scalar _tmp42 = _tmp41 + position_vector(1, 0) + Scalar(-4.7744369927459998);
  const Scalar _tmp43 = _tmp16 + _tmp5;
  const Scalar _tmp44 = _tmp43 + position_vector(0, 0) + Scalar(-2.7171519410699099);
  const Scalar _tmp45 = std::pow(Scalar(std::pow(_tmp42, Scalar(2)) + std::pow(_tmp44, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp46 = _tmp44 * _tmp45;
  const Scalar _tmp47 = _tmp40 * _tmp46;
  const Scalar _tmp48 = _tmp35 + _tmp39;
  const Scalar _tmp49 = _tmp36 + _tmp37 - _tmp38;
  const Scalar _tmp50 = _tmp32 + position_vector(0, 0) + Scalar(1.9874742031097401);
  const Scalar _tmp51 = _tmp30 + position_vector(1, 0) + Scalar(8.3196563720703107);
  const Scalar _tmp52 = std::pow(Scalar(std::pow(_tmp50, Scalar(2)) + std::pow(_tmp51, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp53 = _tmp50 * _tmp52;
  const Scalar _tmp54 = _tmp40 * _tmp53 - _tmp49 * _tmp53;
  const Scalar _tmp55 = _tmp27 + position_vector(1, 0) + Scalar(-4.83288938413423);
  const Scalar _tmp56 = _tmp17 + position_vector(0, 0) + Scalar(1.7965602546229);
  const Scalar _tmp57 = Scalar(1.0) / (_tmp56);
  const Scalar _tmp58 = _tmp55 * _tmp57;
  const Scalar _tmp59 = _tmp42 * _tmp45;
  const Scalar _tmp60 = _tmp46 * _tmp58 - _tmp59;
  const Scalar _tmp61 = _tmp51 * _tmp52;
  const Scalar _tmp62 = Scalar(1.0) / (_tmp53 * _tmp58 - _tmp61);
  const Scalar _tmp63 = _tmp60 * _tmp62;
  const Scalar _tmp64 = _tmp40 * _tmp58;
  const Scalar _tmp65 = _tmp49 * _tmp61 - _tmp53 * _tmp64;
  const Scalar _tmp66 = -_tmp33 * (-_tmp47 * _tmp58 + _tmp48 * _tmp59 - _tmp63 * _tmp65) -
                        _tmp46 * _tmp48 + _tmp47 - _tmp54 * _tmp63;
  const Scalar _tmp67 = Scalar(1.0) / (_tmp66);
  const Scalar _tmp68 = 0;
  const Scalar _tmp69 = _tmp53 * _tmp63;
  const Scalar _tmp70 =
      std::sqrt(Scalar(std::pow(_tmp55, Scalar(2)) + std::pow(_tmp56, Scalar(2))));
  const Scalar _tmp71 = _tmp57 * _tmp70;
  const Scalar _tmp72 = Scalar(1.0) / (_tmp70);
  const Scalar _tmp73 = _tmp71 * (_tmp17 * _tmp55 * _tmp72 - _tmp27 * _tmp56 * _tmp72);
  const Scalar _tmp74 = _tmp58 * _tmp62;
  const Scalar _tmp75 = -_tmp33 * (_tmp64 + _tmp65 * _tmp74) - _tmp40 + _tmp54 * _tmp74;
  const Scalar _tmp76 = _tmp30 * _tmp53 - _tmp32 * _tmp61 + _tmp53 * _tmp73;
  const Scalar _tmp77 = _tmp41 * _tmp46 - _tmp43 * _tmp59 + _tmp46 * _tmp73 - _tmp63 * _tmp76;
  const Scalar _tmp78 = _tmp67 * _tmp77;
  const Scalar _tmp79 = Scalar(1.0) / (_tmp77);
  const Scalar _tmp80 = _tmp66 * _tmp79;
  const Scalar _tmp81 = _tmp75 + _tmp80 * (-_tmp73 + _tmp74 * _tmp76 - _tmp75 * _tmp78);
  const Scalar _tmp82 = _tmp46 * _tmp67;
  const Scalar _tmp83 = _tmp60 * _tmp67;
  const Scalar _tmp84 = -_tmp58 - _tmp81 * _tmp83;
  const Scalar _tmp85 = _tmp53 * _tmp62;
  const Scalar _tmp86 = _tmp31 + _tmp5;
  const Scalar _tmp87 = _tmp86 + position_vector(0, 0) + Scalar(-2.5193355532036801);
  const Scalar _tmp88 = _tmp19 + _tmp29;
  const Scalar _tmp89 = _tmp88 + position_vector(1, 0) + Scalar(8.3885017487099702);
  const Scalar _tmp90 = std::pow(Scalar(std::pow(_tmp87, Scalar(2)) + std::pow(_tmp89, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp91 = _tmp87 * _tmp90;
  const Scalar _tmp92 = _tmp71 * _tmp91 * (_tmp81 * _tmp82 + _tmp84 * _tmp85 + Scalar(1.0));
  const Scalar _tmp93 = _tmp89 * _tmp90;
  const Scalar _tmp94 = _tmp86 * _tmp93 - _tmp88 * _tmp91;
  const Scalar _tmp95 = Scalar(1.0) * _tmp79;
  const Scalar _tmp96 = _tmp71 * _tmp94 * (_tmp46 * _tmp95 - _tmp69 * _tmp95);
  const Scalar _tmp97 = Scalar(1.0) * _tmp62;
  const Scalar _tmp98 = _tmp33 * _tmp65 * _tmp97 - _tmp54 * _tmp97;
  const Scalar _tmp99 = _tmp80 * (-_tmp76 * _tmp97 - _tmp78 * _tmp98) + _tmp98;
  const Scalar _tmp100 = -_tmp83 * _tmp99 + Scalar(1.0);
  const Scalar _tmp101 = _tmp71 * _tmp93 * (_tmp100 * _tmp85 + _tmp82 * _tmp99);
  const Scalar _tmp102 = _tmp100 * _tmp62 * _tmp93;
  const Scalar _tmp103 = _tmp62 * _tmp84 * _tmp91;
  const Scalar _tmp104 = _tmp0 * _tmp68;
  const Scalar _tmp105 = _tmp94 * _tmp95;
  const Scalar _tmp106 = _tmp105 * fh1;
  const Scalar _tmp107 = _tmp67 * _tmp81 * _tmp91;
  const Scalar _tmp108 = _tmp67 * _tmp93 * _tmp99;

  // Output terms (1)
  Eigen::Matrix<Scalar, 4, 1> _res;

  _res(0, 0) = -std::exp(-fh1);
  _res(1, 0) = -(-_tmp101 - _tmp92 - _tmp96) *
               std::exp(_tmp0 * _tmp71 * (_tmp46 * _tmp68 - _tmp68 * _tmp69) + _tmp101 * fh1 +
                        _tmp92 * fh1 + _tmp96 * fh1);
  _res(2, 0) = -(_tmp102 + _tmp103 - _tmp105 * _tmp63) *
               std::exp(-_tmp102 * fh1 - _tmp103 * fh1 + _tmp104 * _tmp63 + _tmp106 * _tmp63);
  _res(3, 0) =
      -(_tmp105 + _tmp107 + _tmp108) * std::exp(-_tmp104 - _tmp106 - _tmp107 * fh1 - _tmp108 * fh1);

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
