// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

#include <sym/pose3.h>
#include <sym/rot3.h>

namespace sym {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: FK_residual_func_cost4_wrt_pa
 *
 * Args:
 *     fh1: Scalar
 *     fv1: Scalar
 *     ofset0: Scalar
 *     ofset1: Scalar
 *     ofset2: Scalar
 *     ofset3: Scalar
 *     distance_measure: Matrix41
 *     p_a: Matrix31
 *     p_b: Matrix31
 *     p_c: Matrix31
 *     p_d: Matrix31
 *     DeltaRot: Rot3
 *     TransformationMatrix: Pose3
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix43
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 4, 3> FkResidualFuncCost4WrtPa(
    const Scalar fh1, const Scalar fv1, const Scalar ofset0, const Scalar ofset1,
    const Scalar ofset2, const Scalar ofset3, const Eigen::Matrix<Scalar, 4, 1>& distance_measure,
    const Eigen::Matrix<Scalar, 3, 1>& p_a, const Eigen::Matrix<Scalar, 3, 1>& p_b,
    const Eigen::Matrix<Scalar, 3, 1>& p_c, const Eigen::Matrix<Scalar, 3, 1>& p_d,
    const sym::Rot3<Scalar>& DeltaRot, const sym::Pose3<Scalar>& TransformationMatrix,
    const Scalar epsilon) {
  // Total ops: 757

  // Unused inputs
  (void)ofset0;
  (void)ofset1;
  (void)ofset2;
  (void)ofset3;
  (void)distance_measure;
  (void)epsilon;

  // Input arrays
  const Eigen::Matrix<Scalar, 4, 1>& _DeltaRot = DeltaRot.Data();
  const Eigen::Matrix<Scalar, 7, 1>& _TransformationMatrix = TransformationMatrix.Data();

  // Intermediate terms (269)
  const Scalar _tmp0 =
      _DeltaRot[0] * _TransformationMatrix[2] + _DeltaRot[1] * _TransformationMatrix[3] -
      _DeltaRot[2] * _TransformationMatrix[0] + _DeltaRot[3] * _TransformationMatrix[1];
  const Scalar _tmp1 =
      _DeltaRot[0] * _TransformationMatrix[3] - _DeltaRot[1] * _TransformationMatrix[2] +
      _DeltaRot[2] * _TransformationMatrix[1] + _DeltaRot[3] * _TransformationMatrix[0];
  const Scalar _tmp2 = 2 * _tmp1;
  const Scalar _tmp3 = _tmp0 * _tmp2;
  const Scalar _tmp4 =
      -_DeltaRot[0] * _TransformationMatrix[0] - _DeltaRot[1] * _TransformationMatrix[1] -
      _DeltaRot[2] * _TransformationMatrix[2] + _DeltaRot[3] * _TransformationMatrix[3];
  const Scalar _tmp5 =
      -_DeltaRot[0] * _TransformationMatrix[1] + _DeltaRot[1] * _TransformationMatrix[0] +
      _DeltaRot[2] * _TransformationMatrix[3] + _DeltaRot[3] * _TransformationMatrix[2];
  const Scalar _tmp6 = 2 * _tmp5;
  const Scalar _tmp7 = _tmp4 * _tmp6;
  const Scalar _tmp8 = Scalar(0.20999999999999999) * _tmp3 - Scalar(0.20999999999999999) * _tmp7;
  const Scalar _tmp9 = -_tmp8;
  const Scalar _tmp10 = _tmp1 * _tmp6;
  const Scalar _tmp11 = 2 * _tmp0 * _tmp4;
  const Scalar _tmp12 = _tmp10 + _tmp11;
  const Scalar _tmp13 = -Scalar(0.010999999999999999) * _tmp12;
  const Scalar _tmp14 = -2 * std::pow(_tmp5, Scalar(2));
  const Scalar _tmp15 = 1 - 2 * std::pow(_tmp0, Scalar(2));
  const Scalar _tmp16 = Scalar(0.20999999999999999) * _tmp14 + Scalar(0.20999999999999999) * _tmp15;
  const Scalar _tmp17 = _tmp13 - _tmp16;
  const Scalar _tmp18 = _tmp17 + _tmp9;
  const Scalar _tmp19 = _TransformationMatrix[4] + _tmp18;
  const Scalar _tmp20 = -_tmp19 + p_a(0, 0);
  const Scalar _tmp21 = Scalar(1.0) / (fh1);
  const Scalar _tmp22 = -2 * std::pow(_tmp1, Scalar(2));
  const Scalar _tmp23 = Scalar(0.20999999999999999) * _tmp14 +
                        Scalar(0.20999999999999999) * _tmp22 + Scalar(0.20999999999999999);
  const Scalar _tmp24 = -_tmp23;
  const Scalar _tmp25 = _tmp0 * _tmp6;
  const Scalar _tmp26 = _tmp2 * _tmp4;
  const Scalar _tmp27 = _tmp25 - _tmp26;
  const Scalar _tmp28 = -Scalar(0.010999999999999999) * _tmp27;
  const Scalar _tmp29 = Scalar(0.20999999999999999) * _tmp3 + Scalar(0.20999999999999999) * _tmp7;
  const Scalar _tmp30 = _tmp28 - _tmp29;
  const Scalar _tmp31 = _tmp24 + _tmp30;
  const Scalar _tmp32 = _TransformationMatrix[5] + _tmp31;
  const Scalar _tmp33 = -_tmp32 + p_a(1, 0);
  const Scalar _tmp34 =
      std::sqrt(Scalar(std::pow(_tmp20, Scalar(2)) + std::pow(_tmp33, Scalar(2))));
  const Scalar _tmp35 =
      Scalar(1.0) *
      std::cosh(Scalar(0.1034955) * _tmp21 *
                (-_tmp34 - Scalar(9.6622558468725703) * fh1 * std::asinh(_tmp21 * fv1))) /
      _tmp34;
  const Scalar _tmp36 = _tmp13 + _tmp16;
  const Scalar _tmp37 = _tmp36 + _tmp8;
  const Scalar _tmp38 = _TransformationMatrix[4] + _tmp37;
  const Scalar _tmp39 = _tmp38 - p_c(0, 0);
  const Scalar _tmp40 = _tmp28 + _tmp29;
  const Scalar _tmp41 = _tmp23 + _tmp40;
  const Scalar _tmp42 = _TransformationMatrix[5] + _tmp41;
  const Scalar _tmp43 = _tmp42 - p_c(1, 0);
  const Scalar _tmp44 = std::pow(Scalar(std::pow(_tmp39, Scalar(2)) + std::pow(_tmp43, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp45 = _tmp39 * _tmp44;
  const Scalar _tmp46 = _tmp24 + _tmp40;
  const Scalar _tmp47 = _TransformationMatrix[5] + _tmp46;
  const Scalar _tmp48 = _tmp47 - p_b(1, 0);
  const Scalar _tmp49 = _tmp36 + _tmp9;
  const Scalar _tmp50 = _TransformationMatrix[4] + _tmp49;
  const Scalar _tmp51 = _tmp50 - p_b(0, 0);
  const Scalar _tmp52 = Scalar(1.0) / (_tmp51);
  const Scalar _tmp53 = _tmp48 * _tmp52;
  const Scalar _tmp54 = _tmp43 * _tmp44;
  const Scalar _tmp55 = Scalar(1.0) / (_tmp45 * _tmp53 - _tmp54);
  const Scalar _tmp56 = Scalar(0.20999999999999999) * _tmp25 + Scalar(0.20999999999999999) * _tmp26;
  const Scalar _tmp57 =
      -Scalar(0.010999999999999999) * _tmp15 - Scalar(0.010999999999999999) * _tmp22;
  const Scalar _tmp58 = Scalar(0.20999999999999999) * _tmp10 - Scalar(0.20999999999999999) * _tmp11;
  const Scalar _tmp59 = _tmp57 + _tmp58;
  const Scalar _tmp60 = _tmp56 + _tmp59;
  const Scalar _tmp61 = -_tmp56;
  const Scalar _tmp62 = _tmp59 + _tmp61;
  const Scalar _tmp63 = -_tmp45 * _tmp60 + _tmp45 * _tmp62;
  const Scalar _tmp64 = Scalar(1.0) * _tmp55;
  const Scalar _tmp65 = Scalar(1.0) * _tmp49;
  const Scalar _tmp66 = -_tmp37 + _tmp65;
  const Scalar _tmp67 = Scalar(1.0) * _tmp46;
  const Scalar _tmp68 = -_tmp67;
  const Scalar _tmp69 = Scalar(1.0) / (_tmp41 + _tmp68);
  const Scalar _tmp70 = Scalar(1.0) * _tmp69;
  const Scalar _tmp71 = _tmp53 * _tmp62;
  const Scalar _tmp72 = _tmp55 * (-_tmp45 * _tmp71 + _tmp54 * _tmp60);
  const Scalar _tmp73 = -_tmp63 * _tmp64 + _tmp66 * _tmp70 * _tmp72;
  const Scalar _tmp74 = _tmp57 - _tmp58;
  const Scalar _tmp75 = _tmp56 + _tmp74;
  const Scalar _tmp76 = _tmp23 + _tmp30;
  const Scalar _tmp77 = _TransformationMatrix[5] + _tmp76;
  const Scalar _tmp78 = _tmp77 - p_d(1, 0);
  const Scalar _tmp79 = _tmp17 + _tmp8;
  const Scalar _tmp80 = _TransformationMatrix[4] + _tmp79;
  const Scalar _tmp81 = _tmp80 - p_d(0, 0);
  const Scalar _tmp82 = std::pow(Scalar(std::pow(_tmp78, Scalar(2)) + std::pow(_tmp81, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp83 = _tmp81 * _tmp82;
  const Scalar _tmp84 = _tmp62 * _tmp83;
  const Scalar _tmp85 = _tmp78 * _tmp82;
  const Scalar _tmp86 = _tmp53 * _tmp83 - _tmp85;
  const Scalar _tmp87 = _tmp55 * _tmp86;
  const Scalar _tmp88 = -_tmp53 * _tmp84 - _tmp72 * _tmp86 + _tmp75 * _tmp85;
  const Scalar _tmp89 = _tmp66 * _tmp69;
  const Scalar _tmp90 = -_tmp63 * _tmp87 - _tmp75 * _tmp83 + _tmp84 - _tmp88 * _tmp89;
  const Scalar _tmp91 = Scalar(1.0) / (_tmp90);
  const Scalar _tmp92 =
      std::sqrt(Scalar(std::pow(_tmp48, Scalar(2)) + std::pow(_tmp51, Scalar(2))));
  const Scalar _tmp93 = Scalar(1.0) / (_tmp92);
  const Scalar _tmp94 = _tmp52 * _tmp92;
  const Scalar _tmp95 = _tmp94 * (-_tmp46 * _tmp51 * _tmp93 + _tmp48 * _tmp49 * _tmp93);
  const Scalar _tmp96 = -_tmp37 * _tmp54 + _tmp41 * _tmp45 + _tmp45 * _tmp95;
  const Scalar _tmp97 = _tmp76 * _tmp83 - _tmp79 * _tmp85 + _tmp83 * _tmp95 - _tmp87 * _tmp96;
  const Scalar _tmp98 = _tmp91 * _tmp97;
  const Scalar _tmp99 = Scalar(1.0) / (_tmp97);
  const Scalar _tmp100 = _tmp90 * _tmp99;
  const Scalar _tmp101 = _tmp100 * (-_tmp64 * _tmp96 - _tmp73 * _tmp98);
  const Scalar _tmp102 = _tmp101 + _tmp73;
  const Scalar _tmp103 = _tmp86 * _tmp91;
  const Scalar _tmp104 = _tmp55 * (-_tmp102 * _tmp103 + Scalar(1.0));
  const Scalar _tmp105 = _tmp102 * _tmp91;
  const Scalar _tmp106 = _tmp104 * _tmp45 + _tmp105 * _tmp83;
  const Scalar _tmp107 = _tmp19 - p_a(0, 0);
  const Scalar _tmp108 = std::pow(_tmp107, Scalar(2));
  const Scalar _tmp109 = _tmp32 - p_a(1, 0);
  const Scalar _tmp110 = std::pow(_tmp109, Scalar(2));
  const Scalar _tmp111 = _tmp108 + _tmp110;
  const Scalar _tmp112 = std::pow(_tmp111, Scalar(Scalar(-3) / Scalar(2)));
  const Scalar _tmp113 = _tmp107 * _tmp109 * _tmp112;
  const Scalar _tmp114 = _tmp94 * fh1;
  const Scalar _tmp115 = _tmp108 * _tmp112;
  const Scalar _tmp116 = _tmp53 * _tmp55;
  const Scalar _tmp117 = _tmp53 * _tmp72 + _tmp71;
  const Scalar _tmp118 = _tmp116 * _tmp63 - _tmp117 * _tmp89 - _tmp62;
  const Scalar _tmp119 = _tmp100 * (_tmp116 * _tmp96 - _tmp118 * _tmp98 - _tmp95);
  const Scalar _tmp120 = _tmp118 + _tmp119;
  const Scalar _tmp121 = _tmp55 * (-_tmp103 * _tmp120 - _tmp53);
  const Scalar _tmp122 = _tmp120 * _tmp91;
  const Scalar _tmp123 = _tmp121 * _tmp45 + _tmp122 * _tmp83 + Scalar(1.0);
  const Scalar _tmp124 = _tmp114 * _tmp123;
  const Scalar _tmp125 = std::pow(_tmp111, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp126 = _tmp125 * fh1;
  const Scalar _tmp127 = _tmp126 * _tmp94;
  const Scalar _tmp128 = _tmp123 * _tmp127;
  const Scalar _tmp129 = _tmp125 * _tmp31;
  const Scalar _tmp130 = _tmp113 * _tmp18 - _tmp115 * _tmp31 + _tmp129;
  const Scalar _tmp131 = Scalar(1.0) * _tmp99;
  const Scalar _tmp132 = _tmp64 * _tmp86 * _tmp99;
  const Scalar _tmp133 = _tmp114 * (_tmp131 * _tmp83 - _tmp132 * _tmp45);
  const Scalar _tmp134 =
      -_tmp106 * _tmp113 * _tmp114 - _tmp115 * _tmp124 + _tmp128 - _tmp130 * _tmp133;
  const Scalar _tmp135 = Scalar(43.164000000000001) - fv1;
  const Scalar _tmp136 = _tmp65 + _tmp67 * _tmp89;
  const Scalar _tmp137 = 0;
  const Scalar _tmp138 = _tmp103 * _tmp137 * _tmp55;
  const Scalar _tmp139 = _tmp137 * _tmp91;
  const Scalar _tmp140 = _tmp106 * _tmp127;
  const Scalar _tmp141 = _tmp125 * _tmp18;
  const Scalar _tmp142 = -_tmp107 * _tmp129 + _tmp109 * _tmp141;
  const Scalar _tmp143 = -_tmp107 * _tmp128 - _tmp109 * _tmp140 - _tmp133 * _tmp142 -
                         _tmp135 * _tmp94 * (-_tmp138 * _tmp45 + _tmp139 * _tmp83);
  const Scalar _tmp144 = Scalar(1.0) / (_tmp143);
  const Scalar _tmp145 = _tmp68 + _tmp76;
  const Scalar _tmp146 = _tmp145 * _tmp89;
  const Scalar _tmp147 = Scalar(1.0) / (-_tmp146 + _tmp65 - _tmp79);
  const Scalar _tmp148 = Scalar(1.0) * _tmp147;
  const Scalar _tmp149 = _tmp100 * _tmp148;
  const Scalar _tmp150 = -_tmp131 * _tmp88 + _tmp145 * _tmp149;
  const Scalar _tmp151 = Scalar(1.0) * fh1;
  const Scalar _tmp152 = _tmp151 * (_tmp149 - _tmp150 * _tmp70);
  const Scalar _tmp153 = _tmp88 * _tmp91;
  const Scalar _tmp154 = _tmp145 * _tmp147;
  const Scalar _tmp155 = _tmp117 + _tmp119 * _tmp154 - _tmp120 * _tmp153;
  const Scalar _tmp156 = _tmp119 * _tmp148 - _tmp155 * _tmp70;
  const Scalar _tmp157 = _tmp125 * _tmp151;
  const Scalar _tmp158 = _tmp156 * _tmp157;
  const Scalar _tmp159 = fh1 * (_tmp61 + _tmp74);
  const Scalar _tmp160 = _tmp125 * _tmp159;
  const Scalar _tmp161 = -_tmp109 * _tmp160 - Scalar(5.1796800000000003) * _tmp27 - _tmp31 * fv1;
  const Scalar _tmp162 = _tmp148 * _tmp89;
  const Scalar _tmp163 = _tmp146 * _tmp148 + Scalar(1.0);
  const Scalar _tmp164 = Scalar(1.0) * _tmp162 - Scalar(1.0) * _tmp163 * _tmp70;
  const Scalar _tmp165 = _tmp101 * _tmp154 - _tmp102 * _tmp153 - Scalar(1.0) * _tmp72;
  const Scalar _tmp166 = _tmp101 * _tmp148 - _tmp165 * _tmp70;
  const Scalar _tmp167 = _tmp157 * _tmp166;
  const Scalar _tmp168 = _tmp136 * _tmp147;
  const Scalar _tmp169 = -_tmp137 * _tmp153 - _tmp145 * _tmp168 + _tmp68;
  const Scalar _tmp170 = _tmp107 * _tmp160 + Scalar(5.1796800000000003) * _tmp12 + _tmp18 * fv1;
  const Scalar _tmp171 = _tmp145 * _tmp69;
  const Scalar _tmp172 = _tmp148 * _tmp171;
  const Scalar _tmp173 = -Scalar(1.0) * _tmp148 + Scalar(1.0) * _tmp172;
  const Scalar _tmp174 =
      _tmp107 * _tmp158 + _tmp109 * _tmp167 +
      Scalar(1.0) * _tmp135 * (-_tmp136 * _tmp148 - _tmp169 * _tmp70 + Scalar(1.0)) +
      _tmp142 * _tmp152 + _tmp161 * _tmp164 + _tmp170 * _tmp173;
  const Scalar _tmp175 = std::asinh(_tmp144 * _tmp174);
  const Scalar _tmp176 = Scalar(9.6622558468725703) * _tmp175;
  const Scalar _tmp177 =
      -_tmp143 * _tmp176 - std::sqrt(Scalar(std::pow(Scalar(-_tmp47 + p_b(1, 0)), Scalar(2)) +
                                            std::pow(Scalar(-_tmp50 + p_b(0, 0)), Scalar(2))));
  const Scalar _tmp178 = Scalar(0.1034955) * _tmp144;
  const Scalar _tmp179 = _tmp177 * _tmp178;
  const Scalar _tmp180 = Scalar(1.0) * _tmp175;
  const Scalar _tmp181 = -Scalar(9.6622558468725703) * std::sinh(_tmp179) -
                         Scalar(9.6622558468725703) * std::sinh(_tmp180);
  const Scalar _tmp182 = std::cosh(_tmp179);
  const Scalar _tmp183 = _tmp113 * _tmp159;
  const Scalar _tmp184 = _tmp151 * _tmp156;
  const Scalar _tmp185 = _tmp115 * _tmp159 - _tmp160;
  const Scalar _tmp186 = _tmp151 * _tmp166;
  const Scalar _tmp187 = std::pow(_tmp143, Scalar(-2));
  const Scalar _tmp188 = _tmp174 * _tmp187;
  const Scalar _tmp189 =
      -_tmp134 * _tmp188 + _tmp144 * (_tmp113 * _tmp186 + _tmp115 * _tmp184 + _tmp130 * _tmp152 -
                                      _tmp158 - _tmp164 * _tmp183 + _tmp173 * _tmp185);
  const Scalar _tmp190 =
      std::pow(Scalar(std::pow(_tmp174, Scalar(2)) * _tmp187 + 1), Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp191 = Scalar(9.6622558468725703) * _tmp143;
  const Scalar _tmp192 = _tmp190 * _tmp191;
  const Scalar _tmp193 = Scalar(0.1034955) * _tmp177 * _tmp187;
  const Scalar _tmp194 = Scalar(1.0) * _tmp190 * std::cosh(_tmp180);
  const Scalar _tmp195 = _tmp113 * fh1;
  const Scalar _tmp196 = _tmp121 * _tmp126;
  const Scalar _tmp197 = _tmp115 * fh1;
  const Scalar _tmp198 = _tmp132 * fh1;
  const Scalar _tmp199 = _tmp104 * _tmp195 + _tmp121 * _tmp197 - _tmp130 * _tmp198 - _tmp196;
  const Scalar _tmp200 = _tmp104 * _tmp126;
  const Scalar _tmp201 =
      _tmp107 * _tmp196 + _tmp109 * _tmp200 - _tmp135 * _tmp138 - _tmp142 * _tmp198;
  const Scalar _tmp202 = std::pow(_tmp201, Scalar(-2));
  const Scalar _tmp203 = Scalar(1.0) / (_tmp201);
  const Scalar _tmp204 = _tmp163 * _tmp69;
  const Scalar _tmp205 = _tmp69 * fh1;
  const Scalar _tmp206 = _tmp150 * _tmp205;
  const Scalar _tmp207 = _tmp148 * _tmp170;
  const Scalar _tmp208 = _tmp125 * _tmp205;
  const Scalar _tmp209 = _tmp155 * _tmp208;
  const Scalar _tmp210 = _tmp165 * _tmp208;
  const Scalar _tmp211 = _tmp107 * _tmp209 + _tmp109 * _tmp210 + _tmp135 * _tmp169 * _tmp69 +
                         _tmp142 * _tmp206 + _tmp161 * _tmp204 - _tmp171 * _tmp207;
  const Scalar _tmp212 = std::asinh(_tmp203 * _tmp211);
  const Scalar _tmp213 = Scalar(9.6622558468725703) * _tmp201;
  const Scalar _tmp214 =
      -_tmp212 * _tmp213 - std::sqrt(Scalar(std::pow(Scalar(-_tmp38 + p_c(0, 0)), Scalar(2)) +
                                            std::pow(Scalar(-_tmp42 + p_c(1, 0)), Scalar(2))));
  const Scalar _tmp215 = Scalar(0.1034955) * _tmp202 * _tmp214;
  const Scalar _tmp216 = _tmp202 * _tmp211;
  const Scalar _tmp217 = _tmp165 * _tmp205;
  const Scalar _tmp218 = _tmp155 * _tmp205;
  const Scalar _tmp219 = _tmp148 * _tmp185;
  const Scalar _tmp220 =
      -_tmp199 * _tmp216 + _tmp203 * (_tmp113 * _tmp217 + _tmp115 * _tmp218 + _tmp130 * _tmp206 -
                                      _tmp171 * _tmp219 - _tmp183 * _tmp204 - _tmp209);
  const Scalar _tmp221 =
      std::pow(Scalar(_tmp202 * std::pow(_tmp211, Scalar(2)) + 1), Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp222 = _tmp213 * _tmp221;
  const Scalar _tmp223 = Scalar(9.6622558468725703) * _tmp212;
  const Scalar _tmp224 = Scalar(0.1034955) * _tmp203;
  const Scalar _tmp225 = _tmp214 * _tmp224;
  const Scalar _tmp226 = std::cosh(_tmp225);
  const Scalar _tmp227 = Scalar(1.0) * _tmp212;
  const Scalar _tmp228 = Scalar(1.0) * _tmp221 * std::cosh(_tmp227);
  const Scalar _tmp229 = -Scalar(9.6622558468725703) * std::sinh(_tmp225) -
                         Scalar(9.6622558468725703) * std::sinh(_tmp227);
  const Scalar _tmp230 = _tmp122 * _tmp126;
  const Scalar _tmp231 = _tmp131 * fh1;
  const Scalar _tmp232 = _tmp105 * _tmp195 + _tmp122 * _tmp197 + _tmp130 * _tmp231 - _tmp230;
  const Scalar _tmp233 = _tmp105 * _tmp126;
  const Scalar _tmp234 =
      _tmp107 * _tmp230 + _tmp109 * _tmp233 + _tmp135 * _tmp139 + _tmp142 * _tmp231;
  const Scalar _tmp235 = std::pow(_tmp234, Scalar(-2));
  const Scalar _tmp236 = _tmp126 * _tmp147;
  const Scalar _tmp237 = _tmp101 * _tmp236;
  const Scalar _tmp238 = _tmp119 * _tmp236;
  const Scalar _tmp239 = _tmp149 * fh1;
  const Scalar _tmp240 = -_tmp107 * _tmp238 - _tmp109 * _tmp237 + _tmp135 * _tmp168 -
                         _tmp142 * _tmp239 - _tmp161 * _tmp162 + _tmp207;
  const Scalar _tmp241 = _tmp235 * _tmp240;
  const Scalar _tmp242 = Scalar(1.0) / (_tmp234);
  const Scalar _tmp243 = _tmp119 * _tmp147;
  const Scalar _tmp244 = _tmp101 * _tmp147;
  const Scalar _tmp245 =
      -_tmp232 * _tmp241 + _tmp242 * (-_tmp130 * _tmp239 + _tmp162 * _tmp183 - _tmp195 * _tmp244 -
                                      _tmp197 * _tmp243 + _tmp219 + _tmp238);
  const Scalar _tmp246 =
      std::pow(Scalar(_tmp235 * std::pow(_tmp240, Scalar(2)) + 1), Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp247 = std::asinh(_tmp240 * _tmp242);
  const Scalar _tmp248 = Scalar(1.0) * _tmp247;
  const Scalar _tmp249 = Scalar(1.0) * _tmp246 * std::cosh(_tmp248);
  const Scalar _tmp250 = Scalar(9.6622558468725703) * _tmp234;
  const Scalar _tmp251 =
      -_tmp247 * _tmp250 - std::sqrt(Scalar(std::pow(Scalar(-_tmp77 + p_d(1, 0)), Scalar(2)) +
                                            std::pow(Scalar(-_tmp80 + p_d(0, 0)), Scalar(2))));
  const Scalar _tmp252 = Scalar(0.1034955) * _tmp242;
  const Scalar _tmp253 = _tmp251 * _tmp252;
  const Scalar _tmp254 = std::cosh(_tmp253);
  const Scalar _tmp255 = Scalar(0.1034955) * _tmp235 * _tmp251;
  const Scalar _tmp256 = Scalar(9.6622558468725703) * _tmp247;
  const Scalar _tmp257 = _tmp246 * _tmp250;
  const Scalar _tmp258 = -Scalar(9.6622558468725703) * std::sinh(_tmp248) -
                         Scalar(9.6622558468725703) * std::sinh(_tmp253);
  const Scalar _tmp259 = _tmp110 * _tmp112;
  const Scalar _tmp260 = _tmp259 * fh1;
  const Scalar _tmp261 = -_tmp113 * _tmp31 - _tmp141 + _tmp18 * _tmp259;
  const Scalar _tmp262 =
      -_tmp106 * _tmp260 * _tmp94 - _tmp113 * _tmp124 - _tmp133 * _tmp261 + _tmp140;
  const Scalar _tmp263 = -_tmp159 * _tmp259 + _tmp160;
  const Scalar _tmp264 = _tmp144 * (_tmp113 * _tmp184 + _tmp152 * _tmp261 + _tmp164 * _tmp263 -
                                    _tmp167 + _tmp173 * _tmp183 + _tmp186 * _tmp259) -
                         _tmp188 * _tmp262;
  const Scalar _tmp265 = _tmp104 * _tmp260 + _tmp121 * _tmp195 - _tmp198 * _tmp261 - _tmp200;
  const Scalar _tmp266 = _tmp203 * (_tmp113 * _tmp218 - _tmp172 * _tmp183 + _tmp204 * _tmp263 +
                                    _tmp206 * _tmp261 - _tmp210 + _tmp217 * _tmp259) -
                         _tmp216 * _tmp265;
  const Scalar _tmp267 = _tmp105 * _tmp260 + _tmp122 * _tmp195 + _tmp231 * _tmp261 - _tmp233;
  const Scalar _tmp268 =
      -_tmp241 * _tmp267 + _tmp242 * (_tmp148 * _tmp183 - _tmp162 * _tmp263 - _tmp195 * _tmp243 +
                                      _tmp237 - _tmp239 * _tmp261 - _tmp244 * _tmp260);

  // Output terms (1)
  Eigen::Matrix<Scalar, 4, 3> _res;

  _res(0, 0) = _tmp20 * _tmp35;
  _res(1, 0) =
      _tmp134 * _tmp181 +
      _tmp191 *
          (-_tmp182 * (-_tmp134 * _tmp193 + _tmp178 * (-_tmp134 * _tmp176 - _tmp189 * _tmp192)) -
           _tmp189 * _tmp194);
  _res(2, 0) =
      _tmp199 * _tmp229 +
      _tmp213 *
          (-_tmp220 * _tmp228 -
           _tmp226 * (-_tmp199 * _tmp215 + _tmp224 * (-_tmp199 * _tmp223 - _tmp220 * _tmp222)));
  _res(3, 0) =
      _tmp232 * _tmp258 +
      _tmp250 *
          (-_tmp245 * _tmp249 -
           _tmp254 * (-_tmp232 * _tmp255 + _tmp252 * (-_tmp232 * _tmp256 - _tmp245 * _tmp257)));
  _res(0, 1) = _tmp33 * _tmp35;
  _res(1, 1) =
      _tmp181 * _tmp262 +
      _tmp191 *
          (-_tmp182 * (_tmp178 * (-_tmp176 * _tmp262 - _tmp192 * _tmp264) - _tmp193 * _tmp262) -
           _tmp194 * _tmp264);
  _res(2, 1) =
      _tmp213 *
          (-_tmp226 * (-_tmp215 * _tmp265 + _tmp224 * (-_tmp222 * _tmp266 - _tmp223 * _tmp265)) -
           _tmp228 * _tmp266) +
      _tmp229 * _tmp265;
  _res(3, 1) =
      _tmp250 *
          (-_tmp249 * _tmp268 -
           _tmp254 * (_tmp252 * (-_tmp256 * _tmp267 - _tmp257 * _tmp268) - _tmp255 * _tmp267)) +
      _tmp258 * _tmp267;
  _res(0, 2) = 0;
  _res(1, 2) = 0;
  _res(2, 2) = 0;
  _res(3, 2) = 0;

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
