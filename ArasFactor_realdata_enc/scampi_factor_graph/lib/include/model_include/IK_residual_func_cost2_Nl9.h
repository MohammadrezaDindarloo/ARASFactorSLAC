// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

#include <sym/rot3.h>

namespace sym {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: IK_residual_func_cost2_Nl9
 *
 * Args:
 *     fh1: Scalar
 *     fv1: Scalar
 *     DeltaRot: Rot3
 *     p_a: Matrix31
 *     p_b: Matrix31
 *     p_c: Matrix31
 *     p_d: Matrix31
 *     p_init0: Scalar
 *     p_init1: Scalar
 *     p_init2: Scalar
 *     rot_init_x: Scalar
 *     rot_init_y: Scalar
 *     rot_init_z: Scalar
 *     rot_init_w: Scalar
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix41
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 4, 1> IkResidualFuncCost2Nl9(
    const Scalar fh1, const Scalar fv1, const sym::Rot3<Scalar>& DeltaRot,
    const Eigen::Matrix<Scalar, 3, 1>& p_a, const Eigen::Matrix<Scalar, 3, 1>& p_b,
    const Eigen::Matrix<Scalar, 3, 1>& p_c, const Eigen::Matrix<Scalar, 3, 1>& p_d,
    const Scalar p_init0, const Scalar p_init1, const Scalar p_init2, const Scalar rot_init_x,
    const Scalar rot_init_y, const Scalar rot_init_z, const Scalar rot_init_w,
    const Scalar epsilon) {
  // Total ops: 494

  // Unused inputs
  (void)epsilon;

  // Input arrays
  const Eigen::Matrix<Scalar, 4, 1>& _DeltaRot = DeltaRot.Data();

  // Intermediate terms (164)
  const Scalar _tmp0 = _DeltaRot[0] * rot_init_w - _DeltaRot[1] * rot_init_z +
                       _DeltaRot[2] * rot_init_y + _DeltaRot[3] * rot_init_x;
  const Scalar _tmp1 = -_DeltaRot[0] * rot_init_y + _DeltaRot[1] * rot_init_x +
                       _DeltaRot[2] * rot_init_w + _DeltaRot[3] * rot_init_z;
  const Scalar _tmp2 = 2 * _tmp1;
  const Scalar _tmp3 = _tmp0 * _tmp2;
  const Scalar _tmp4 = -_DeltaRot[0] * rot_init_x - _DeltaRot[1] * rot_init_y -
                       _DeltaRot[2] * rot_init_z + _DeltaRot[3] * rot_init_w;
  const Scalar _tmp5 = _DeltaRot[0] * rot_init_z + _DeltaRot[1] * rot_init_w -
                       _DeltaRot[2] * rot_init_x + _DeltaRot[3] * rot_init_y;
  const Scalar _tmp6 = 2 * _tmp5;
  const Scalar _tmp7 = _tmp4 * _tmp6;
  const Scalar _tmp8 = Scalar(0.20999999999999999) * _tmp3 - Scalar(0.20999999999999999) * _tmp7;
  const Scalar _tmp9 = -2 * std::pow(_tmp5, Scalar(2));
  const Scalar _tmp10 = 1 - 2 * std::pow(_tmp0, Scalar(2));
  const Scalar _tmp11 =
      -Scalar(0.010999999999999999) * _tmp10 - Scalar(0.010999999999999999) * _tmp9;
  const Scalar _tmp12 = _tmp2 * _tmp5;
  const Scalar _tmp13 = 2 * _tmp0 * _tmp4;
  const Scalar _tmp14 = Scalar(0.20999999999999999) * _tmp12 + Scalar(0.20999999999999999) * _tmp13;
  const Scalar _tmp15 = _tmp11 - _tmp14;
  const Scalar _tmp16 = _tmp15 + _tmp8;
  const Scalar _tmp17 = -2 * std::pow(_tmp1, Scalar(2));
  const Scalar _tmp18 = Scalar(0.20999999999999999) * _tmp17 + Scalar(0.20999999999999999) * _tmp9 +
                        Scalar(0.20999999999999999);
  const Scalar _tmp19 = _tmp3 + _tmp7;
  const Scalar _tmp20 = -Scalar(0.010999999999999999) * _tmp19;
  const Scalar _tmp21 = _tmp0 * _tmp6;
  const Scalar _tmp22 = _tmp2 * _tmp4;
  const Scalar _tmp23 = Scalar(0.20999999999999999) * _tmp21 - Scalar(0.20999999999999999) * _tmp22;
  const Scalar _tmp24 = _tmp20 - _tmp23;
  const Scalar _tmp25 = _tmp18 + _tmp24;
  const Scalar _tmp26 = _tmp25 + p_init0;
  const Scalar _tmp27 = Scalar(0.20999999999999999) * _tmp21 + Scalar(0.20999999999999999) * _tmp22;
  const Scalar _tmp28 = _tmp12 - _tmp13;
  const Scalar _tmp29 = -Scalar(0.010999999999999999) * _tmp28;
  const Scalar _tmp30 = Scalar(0.20999999999999999) * _tmp10 + Scalar(0.20999999999999999) * _tmp17;
  const Scalar _tmp31 = _tmp29 - _tmp30;
  const Scalar _tmp32 = _tmp27 + _tmp31;
  const Scalar _tmp33 = _tmp32 + p_init1;
  const Scalar _tmp34 = std::pow(Scalar(-_tmp26 + p_b(0, 0)), Scalar(2)) +
                        std::pow(Scalar(-_tmp33 + p_b(1, 0)), Scalar(2));
  const Scalar _tmp35 = Scalar(1.0) / (fh1);
  const Scalar _tmp36 = std::asinh(_tmp35 * fv1);
  const Scalar _tmp37 = Scalar(9.6622558468725703) * fh1;
  const Scalar _tmp38 = _tmp11 + _tmp14;
  const Scalar _tmp39 = _tmp38 + _tmp8;
  const Scalar _tmp40 = _tmp20 + _tmp23;
  const Scalar _tmp41 = _tmp18 + _tmp40;
  const Scalar _tmp42 = _tmp41 + p_init0;
  const Scalar _tmp43 = _tmp29 + _tmp30;
  const Scalar _tmp44 = _tmp27 + _tmp43;
  const Scalar _tmp45 = _tmp44 + p_init1;
  const Scalar _tmp46 = std::pow(Scalar(-_tmp42 + p_c(0, 0)), Scalar(2)) +
                        std::pow(Scalar(-_tmp45 + p_c(1, 0)), Scalar(2));
  const Scalar _tmp47 = Scalar(43.164000000000001) - fv1;
  const Scalar _tmp48 = Scalar(1.0) * _tmp41;
  const Scalar _tmp49 = Scalar(1.0) * _tmp44;
  const Scalar _tmp50 = -_tmp49;
  const Scalar _tmp51 = -_tmp27;
  const Scalar _tmp52 = _tmp43 + _tmp51;
  const Scalar _tmp53 = Scalar(1.0) / (_tmp50 + _tmp52);
  const Scalar _tmp54 = -_tmp18;
  const Scalar _tmp55 = _tmp40 + _tmp54;
  const Scalar _tmp56 = _tmp48 - _tmp55;
  const Scalar _tmp57 = _tmp53 * _tmp56;
  const Scalar _tmp58 = _tmp48 + _tmp49 * _tmp57;
  const Scalar _tmp59 = _tmp24 + _tmp54;
  const Scalar _tmp60 = _tmp31 + _tmp51;
  const Scalar _tmp61 = _tmp50 + _tmp60;
  const Scalar _tmp62 = _tmp57 * _tmp61;
  const Scalar _tmp63 = Scalar(1.0) / (_tmp48 - _tmp59 - _tmp62);
  const Scalar _tmp64 = Scalar(1.0) * _tmp63;
  const Scalar _tmp65 = 0;
  const Scalar _tmp66 = -_tmp8;
  const Scalar _tmp67 = _tmp15 + _tmp66;
  const Scalar _tmp68 = _tmp59 + p_init0;
  const Scalar _tmp69 = _tmp68 - p_a(0, 0);
  const Scalar _tmp70 = _tmp60 + p_init1;
  const Scalar _tmp71 = _tmp70 - p_a(1, 0);
  const Scalar _tmp72 = std::pow(Scalar(std::pow(_tmp69, Scalar(2)) + std::pow(_tmp71, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp73 = _tmp71 * _tmp72;
  const Scalar _tmp74 = _tmp38 + _tmp66;
  const Scalar _tmp75 = _tmp52 + p_init1;
  const Scalar _tmp76 = _tmp75 - p_d(1, 0);
  const Scalar _tmp77 = _tmp55 + p_init0;
  const Scalar _tmp78 = _tmp77 - p_d(0, 0);
  const Scalar _tmp79 = std::pow(Scalar(std::pow(_tmp76, Scalar(2)) + std::pow(_tmp78, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp80 = _tmp76 * _tmp79;
  const Scalar _tmp81 = _tmp45 - p_c(1, 0);
  const Scalar _tmp82 = _tmp42 - p_c(0, 0);
  const Scalar _tmp83 = Scalar(1.0) / (_tmp82);
  const Scalar _tmp84 = _tmp81 * _tmp83;
  const Scalar _tmp85 = _tmp78 * _tmp79;
  const Scalar _tmp86 = _tmp39 * _tmp85;
  const Scalar _tmp87 = _tmp74 * _tmp80 - _tmp84 * _tmp86;
  const Scalar _tmp88 = _tmp69 * _tmp72;
  const Scalar _tmp89 = -_tmp73 + _tmp84 * _tmp88;
  const Scalar _tmp90 = Scalar(1.0) / (-_tmp80 + _tmp84 * _tmp85);
  const Scalar _tmp91 = _tmp89 * _tmp90;
  const Scalar _tmp92 = _tmp39 * _tmp88;
  const Scalar _tmp93 = _tmp67 * _tmp73 - _tmp84 * _tmp92 - _tmp87 * _tmp91;
  const Scalar _tmp94 = -_tmp74 * _tmp85 + _tmp86;
  const Scalar _tmp95 = -_tmp57 * _tmp93 - _tmp67 * _tmp88 - _tmp91 * _tmp94 + _tmp92;
  const Scalar _tmp96 = Scalar(1.0) / (_tmp95);
  const Scalar _tmp97 = _tmp93 * _tmp96;
  const Scalar _tmp98 = _tmp58 * _tmp63;
  const Scalar _tmp99 = _tmp50 - _tmp61 * _tmp98 - _tmp65 * _tmp97;
  const Scalar _tmp100 = Scalar(1.0) * _tmp53;
  const Scalar _tmp101 = _tmp62 * _tmp64 + Scalar(1.0);
  const Scalar _tmp102 = _tmp57 * _tmp64;
  const Scalar _tmp103 = _tmp33 - p_b(1, 0);
  const Scalar _tmp104 = _tmp26 - p_b(0, 0);
  const Scalar _tmp105 =
      std::pow(Scalar(std::pow(_tmp103, Scalar(2)) + std::pow(_tmp104, Scalar(2))),
               Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp106 = _tmp103 * _tmp105;
  const Scalar _tmp107 = _tmp16 * fh1;
  const Scalar _tmp108 = -_tmp106 * _tmp107 - Scalar(5.1796800000000003) * _tmp28 - _tmp32 * fv1;
  const Scalar _tmp109 = _tmp53 * _tmp61;
  const Scalar _tmp110 = _tmp104 * _tmp105;
  const Scalar _tmp111 = _tmp107 * _tmp110 + Scalar(5.1796800000000003) * _tmp19 + _tmp25 * fv1;
  const Scalar _tmp112 =
      std::sqrt(Scalar(std::pow(_tmp81, Scalar(2)) + std::pow(_tmp82, Scalar(2))));
  const Scalar _tmp113 = Scalar(1.0) / (_tmp112);
  const Scalar _tmp114 = _tmp112 * _tmp83;
  const Scalar _tmp115 = _tmp114 * (_tmp113 * _tmp41 * _tmp81 - _tmp113 * _tmp44 * _tmp82);
  const Scalar _tmp116 = _tmp115 * _tmp85 + _tmp52 * _tmp85 - _tmp55 * _tmp80;
  const Scalar _tmp117 = _tmp115 * _tmp88 - _tmp116 * _tmp91 - _tmp59 * _tmp73 + _tmp60 * _tmp88;
  const Scalar _tmp118 = Scalar(1.0) / (_tmp117);
  const Scalar _tmp119 = Scalar(1.0) * _tmp118;
  const Scalar _tmp120 = _tmp118 * _tmp95;
  const Scalar _tmp121 = _tmp120 * _tmp64;
  const Scalar _tmp122 = -_tmp119 * _tmp93 + _tmp121 * _tmp61;
  const Scalar _tmp123 = fh1 * (_tmp106 * _tmp25 - _tmp110 * _tmp32);
  const Scalar _tmp124 = Scalar(1.0) * _tmp90;
  const Scalar _tmp125 = _tmp100 * _tmp56 * _tmp87 * _tmp90 - _tmp124 * _tmp94;
  const Scalar _tmp126 = _tmp117 * _tmp96;
  const Scalar _tmp127 = _tmp120 * (-_tmp116 * _tmp124 - _tmp125 * _tmp126);
  const Scalar _tmp128 = _tmp61 * _tmp63;
  const Scalar _tmp129 = _tmp125 + _tmp127;
  const Scalar _tmp130 = -_tmp124 * _tmp87 + _tmp127 * _tmp128 - _tmp129 * _tmp97;
  const Scalar _tmp131 = Scalar(1.0) * fh1;
  const Scalar _tmp132 = _tmp84 * _tmp90;
  const Scalar _tmp133 = _tmp132 * _tmp87 + _tmp39 * _tmp84;
  const Scalar _tmp134 = _tmp132 * _tmp94 - _tmp133 * _tmp57 - _tmp39;
  const Scalar _tmp135 = _tmp120 * (-_tmp115 + _tmp116 * _tmp132 - _tmp126 * _tmp134);
  const Scalar _tmp136 = _tmp134 + _tmp135;
  const Scalar _tmp137 = _tmp128 * _tmp135 + _tmp133 - _tmp136 * _tmp97;
  const Scalar _tmp138 = _tmp88 * _tmp96;
  const Scalar _tmp139 = _tmp89 * _tmp96;
  const Scalar _tmp140 = -_tmp136 * _tmp139 - _tmp84;
  const Scalar _tmp141 = _tmp85 * _tmp90;
  const Scalar _tmp142 = _tmp110 * fh1;
  const Scalar _tmp143 = -_tmp129 * _tmp139 + Scalar(1.0);
  const Scalar _tmp144 = _tmp106 * fh1;
  const Scalar _tmp145 = _tmp65 * _tmp96;
  const Scalar _tmp146 = _tmp85 * _tmp91;
  const Scalar _tmp147 = -_tmp114 * _tmp123 * (-_tmp119 * _tmp146 + _tmp119 * _tmp88) -
                         _tmp114 * _tmp142 * (_tmp136 * _tmp138 + _tmp140 * _tmp141 + Scalar(1.0)) -
                         _tmp114 * _tmp144 * (_tmp129 * _tmp138 + _tmp141 * _tmp143) -
                         _tmp114 * _tmp47 * (-_tmp145 * _tmp146 + _tmp145 * _tmp88);
  const Scalar _tmp148 = Scalar(1.0) / (_tmp147);
  const Scalar _tmp149 = std::asinh(
      _tmp148 * (_tmp106 * _tmp131 * (-_tmp100 * _tmp130 + _tmp127 * _tmp64) +
                 Scalar(1.0) * _tmp108 * (-_tmp100 * _tmp101 + _tmp102) +
                 _tmp110 * _tmp131 * (-_tmp100 * _tmp137 + _tmp135 * _tmp64) +
                 Scalar(1.0) * _tmp111 * (_tmp109 * _tmp64 - _tmp64) +
                 Scalar(1.0) * _tmp123 * (-_tmp100 * _tmp122 + _tmp121) +
                 Scalar(1.0) * _tmp47 * (-_tmp100 * _tmp99 - _tmp58 * _tmp64 + Scalar(1.0))));
  const Scalar _tmp150 = Scalar(9.6622558468725703) * _tmp147;
  const Scalar _tmp151 = _tmp111 * _tmp64;
  const Scalar _tmp152 = _tmp119 * _tmp123;
  const Scalar _tmp153 = _tmp145 * _tmp47;
  const Scalar _tmp154 =
      _tmp140 * _tmp142 * _tmp90 + _tmp143 * _tmp144 * _tmp90 - _tmp152 * _tmp91 - _tmp153 * _tmp91;
  const Scalar _tmp155 = Scalar(1.0) / (_tmp154);
  const Scalar _tmp156 =
      std::asinh(_tmp155 * (_tmp101 * _tmp108 * _tmp53 - _tmp109 * _tmp151 +
                            _tmp122 * _tmp123 * _tmp53 + _tmp130 * _tmp144 * _tmp53 +
                            _tmp137 * _tmp142 * _tmp53 + _tmp47 * _tmp53 * _tmp99));
  const Scalar _tmp157 = Scalar(9.6622558468725703) * _tmp154;
  const Scalar _tmp158 = std::pow(Scalar(-_tmp75 + p_d(1, 0)), Scalar(2)) +
                         std::pow(Scalar(-_tmp77 + p_d(0, 0)), Scalar(2));
  const Scalar _tmp159 = std::pow(Scalar(-_tmp68 + p_a(0, 0)), Scalar(2)) +
                         std::pow(Scalar(-_tmp70 + p_a(1, 0)), Scalar(2));
  const Scalar _tmp160 =
      _tmp129 * _tmp144 * _tmp96 + _tmp136 * _tmp142 * _tmp96 + _tmp152 + _tmp153;
  const Scalar _tmp161 = Scalar(1.0) / (_tmp160);
  const Scalar _tmp162 =
      std::asinh(_tmp161 * (-_tmp102 * _tmp108 - _tmp121 * _tmp123 - _tmp127 * _tmp144 * _tmp63 -
                            _tmp135 * _tmp142 * _tmp63 + _tmp151 + _tmp47 * _tmp98));
  const Scalar _tmp163 = Scalar(9.6622558468725703) * _tmp160;

  // Output terms (1)
  Eigen::Matrix<Scalar, 4, 1> _res;

  _res(0, 0) =
      _tmp37 * (-std::sinh(Scalar(1.0) * _tmp36) -
                std::sinh(Scalar(0.1034955) * _tmp35 * (-std::sqrt(_tmp34) - _tmp36 * _tmp37))) -
      std::sqrt(Scalar(_tmp34 + std::pow(Scalar(-_tmp16 + p_b(2, 0) - p_init2), Scalar(2))));
  _res(1, 0) =
      _tmp150 *
          (-std::sinh(Scalar(1.0) * _tmp149) -
           std::sinh(Scalar(0.1034955) * _tmp148 * (-_tmp149 * _tmp150 - std::sqrt(_tmp46)))) -
      std::sqrt(Scalar(_tmp46 + std::pow(Scalar(-_tmp39 + p_c(2, 0) - p_init2), Scalar(2))));
  _res(2, 0) =
      _tmp157 *
          (-std::sinh(Scalar(1.0) * _tmp156) -
           std::sinh(Scalar(0.1034955) * _tmp155 * (-_tmp156 * _tmp157 - std::sqrt(_tmp158)))) -
      std::sqrt(Scalar(_tmp158 + std::pow(Scalar(-_tmp74 + p_d(2, 0) - p_init2), Scalar(2))));
  _res(3, 0) =
      _tmp163 *
          (-std::sinh(Scalar(1.0) * _tmp162) -
           std::sinh(Scalar(0.1034955) * _tmp161 * (-std::sqrt(_tmp159) - _tmp162 * _tmp163))) -
      std::sqrt(Scalar(_tmp159 + std::pow(Scalar(-_tmp67 + p_a(2, 0) - p_init2), Scalar(2))));

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
