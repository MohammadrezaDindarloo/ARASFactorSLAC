// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

#include <sym/pose3.h>
#include <sym/rot3.h>

namespace sym {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: FK_residual_func_cost5_wrt_DeltaRot
 *
 * Args:
 *     fh1: Scalar
 *     fv1: Scalar
 *     uwb_ofset0: Scalar
 *     uwb_ofset1: Scalar
 *     uwb_ofset2: Scalar
 *     uwb_ofset3: Scalar
 *     uwb_measure: Matrix41
 *     p_a: Matrix31
 *     p_b: Matrix31
 *     p_c: Matrix31
 *     p_d: Matrix31
 *     DeltaRot: Rot3
 *     TransformationMatrix: Pose3
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix43
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 4, 3> FkResidualFuncCost5WrtDeltarot(
    const Scalar fh1, const Scalar fv1, const Scalar uwb_ofset0, const Scalar uwb_ofset1,
    const Scalar uwb_ofset2, const Scalar uwb_ofset3,
    const Eigen::Matrix<Scalar, 4, 1>& uwb_measure, const Eigen::Matrix<Scalar, 3, 1>& p_a,
    const Eigen::Matrix<Scalar, 3, 1>& p_b, const Eigen::Matrix<Scalar, 3, 1>& p_c,
    const Eigen::Matrix<Scalar, 3, 1>& p_d, const sym::Rot3<Scalar>& DeltaRot,
    const sym::Pose3<Scalar>& TransformationMatrix, const Scalar epsilon) {
  // Total ops: 525

  // Unused inputs
  (void)fh1;
  (void)fv1;
  (void)uwb_ofset0;
  (void)uwb_ofset1;
  (void)uwb_ofset2;
  (void)uwb_ofset3;
  (void)uwb_measure;
  (void)epsilon;

  // Input arrays
  const Eigen::Matrix<Scalar, 4, 1>& _DeltaRot = DeltaRot.Data();
  const Eigen::Matrix<Scalar, 7, 1>& _TransformationMatrix = TransformationMatrix.Data();

  // Intermediate terms (229)
  const Scalar _tmp0 = _DeltaRot[2] * _TransformationMatrix[3];
  const Scalar _tmp1 = (Scalar(1) / Scalar(2)) * _tmp0;
  const Scalar _tmp2 = _DeltaRot[0] * _TransformationMatrix[1];
  const Scalar _tmp3 = (Scalar(1) / Scalar(2)) * _tmp2;
  const Scalar _tmp4 = _DeltaRot[1] * _TransformationMatrix[0];
  const Scalar _tmp5 = (Scalar(1) / Scalar(2)) * _tmp4;
  const Scalar _tmp6 = _DeltaRot[3] * _TransformationMatrix[2];
  const Scalar _tmp7 = (Scalar(1) / Scalar(2)) * _tmp6;
  const Scalar _tmp8 = _tmp1 - _tmp3 + _tmp5 + _tmp7;
  const Scalar _tmp9 = _DeltaRot[0] * _TransformationMatrix[3];
  const Scalar _tmp10 = _DeltaRot[2] * _TransformationMatrix[1];
  const Scalar _tmp11 = _DeltaRot[3] * _TransformationMatrix[0];
  const Scalar _tmp12 = _DeltaRot[1] * _TransformationMatrix[2];
  const Scalar _tmp13 = _tmp10 + _tmp11 - _tmp12 + _tmp9;
  const Scalar _tmp14 = Scalar(0.41999999999999998) * _tmp13;
  const Scalar _tmp15 = _tmp14 * _tmp8;
  const Scalar _tmp16 = _DeltaRot[3] * _TransformationMatrix[3];
  const Scalar _tmp17 = _DeltaRot[1] * _TransformationMatrix[1];
  const Scalar _tmp18 = _DeltaRot[0] * _TransformationMatrix[0];
  const Scalar _tmp19 = _DeltaRot[2] * _TransformationMatrix[2];
  const Scalar _tmp20 = (Scalar(1) / Scalar(2)) * _tmp16 - Scalar(1) / Scalar(2) * _tmp17 -
                        Scalar(1) / Scalar(2) * _tmp18 - Scalar(1) / Scalar(2) * _tmp19;
  const Scalar _tmp21 = Scalar(0.83999999999999997) * _tmp20;
  const Scalar _tmp22 = _tmp13 * _tmp21;
  const Scalar _tmp23 = -_tmp22;
  const Scalar _tmp24 = _DeltaRot[1] * _TransformationMatrix[3];
  const Scalar _tmp25 = (Scalar(1) / Scalar(2)) * _tmp24;
  const Scalar _tmp26 = _DeltaRot[3] * _TransformationMatrix[1];
  const Scalar _tmp27 = (Scalar(1) / Scalar(2)) * _tmp26;
  const Scalar _tmp28 = _DeltaRot[2] * _TransformationMatrix[0];
  const Scalar _tmp29 = (Scalar(1) / Scalar(2)) * _tmp28;
  const Scalar _tmp30 = _DeltaRot[0] * _TransformationMatrix[2];
  const Scalar _tmp31 = (Scalar(1) / Scalar(2)) * _tmp30;
  const Scalar _tmp32 = -_tmp25 - _tmp27 + _tmp29 - _tmp31;
  const Scalar _tmp33 = _tmp0 - _tmp2 + _tmp4 + _tmp6;
  const Scalar _tmp34 = Scalar(0.83999999999999997) * _tmp33;
  const Scalar _tmp35 = _tmp32 * _tmp34;
  const Scalar _tmp36 = -_tmp35;
  const Scalar _tmp37 = _tmp16 - _tmp17 - _tmp18 - _tmp19;
  const Scalar _tmp38 = Scalar(0.41999999999999998) * _tmp37;
  const Scalar _tmp39 = _tmp32 * _tmp38;
  const Scalar _tmp40 = _tmp36 + _tmp39;
  const Scalar _tmp41 = _tmp24 + _tmp26 - _tmp28 + _tmp30;
  const Scalar _tmp42 = Scalar(0.41999999999999998) * _tmp20;
  const Scalar _tmp43 = _tmp41 * _tmp42;
  const Scalar _tmp44 = (Scalar(1) / Scalar(2)) * _tmp9;
  const Scalar _tmp45 = (Scalar(1) / Scalar(2)) * _tmp10;
  const Scalar _tmp46 = (Scalar(1) / Scalar(2)) * _tmp11;
  const Scalar _tmp47 = (Scalar(1) / Scalar(2)) * _tmp12;
  const Scalar _tmp48 = -_tmp44 - _tmp45 - _tmp46 + _tmp47;
  const Scalar _tmp49 = Scalar(0.41999999999999998) * _tmp48;
  const Scalar _tmp50 = _tmp33 * _tmp49;
  const Scalar _tmp51 = _tmp43 + _tmp50;
  const Scalar _tmp52 = Scalar(0.021999999999999999) * _tmp32;
  const Scalar _tmp53 = _tmp41 * _tmp52;
  const Scalar _tmp54 = Scalar(0.021999999999999999) * _tmp48;
  const Scalar _tmp55 = Scalar(0.021999999999999999) * _tmp33;
  const Scalar _tmp56 = Scalar(0.021999999999999999) * _tmp20;
  const Scalar _tmp57 = _tmp37 * _tmp56;
  const Scalar _tmp58 = -_tmp13 * _tmp54 + _tmp53 + _tmp55 * _tmp8 - _tmp57;
  const Scalar _tmp59 = _tmp51 + _tmp58;
  const Scalar _tmp60 = 2 * _tmp13;
  const Scalar _tmp61 = _tmp41 * _tmp60;
  const Scalar _tmp62 = 2 * _tmp33;
  const Scalar _tmp63 = _tmp37 * _tmp62;
  const Scalar _tmp64 = Scalar(0.20999999999999999) * _tmp61 + Scalar(0.20999999999999999) * _tmp63;
  const Scalar _tmp65 = -_tmp64;
  const Scalar _tmp66 = -2 * std::pow(_tmp13, Scalar(2));
  const Scalar _tmp67 = -2 * std::pow(_tmp33, Scalar(2));
  const Scalar _tmp68 = Scalar(0.20999999999999999) * _tmp66 +
                        Scalar(0.20999999999999999) * _tmp67 + Scalar(0.20999999999999999);
  const Scalar _tmp69 = _tmp41 * _tmp62;
  const Scalar _tmp70 = _tmp37 * _tmp60;
  const Scalar _tmp71 = _TransformationMatrix[5] - Scalar(0.010999999999999999) * _tmp69 +
                        Scalar(0.010999999999999999) * _tmp70;
  const Scalar _tmp72 = -_tmp68 + _tmp71;
  const Scalar _tmp73 = -_tmp65 - _tmp72 + p_a(1, 0);
  const Scalar _tmp74 = 2 * _tmp73;
  const Scalar _tmp75 = Scalar(0.83999999999999997) * _tmp41;
  const Scalar _tmp76 = _tmp75 * _tmp8;
  const Scalar _tmp77 = _tmp20 * _tmp55;
  const Scalar _tmp78 = _tmp13 * _tmp52;
  const Scalar _tmp79 = Scalar(0.021999999999999999) * _tmp37;
  const Scalar _tmp80 = _tmp41 * _tmp54 + _tmp77 + _tmp78 + _tmp79 * _tmp8;
  const Scalar _tmp81 = -_tmp76 + _tmp80;
  const Scalar _tmp82 = -_tmp50;
  const Scalar _tmp83 = -_tmp39;
  const Scalar _tmp84 = _tmp43 + _tmp82 + _tmp83;
  const Scalar _tmp85 = 1 - 2 * std::pow(_tmp41, Scalar(2));
  const Scalar _tmp86 = Scalar(0.20999999999999999) * _tmp67 + Scalar(0.20999999999999999) * _tmp85;
  const Scalar _tmp87 = -_tmp86;
  const Scalar _tmp88 = Scalar(0.20999999999999999) * _tmp61 - Scalar(0.20999999999999999) * _tmp63;
  const Scalar _tmp89 = _tmp13 * _tmp62;
  const Scalar _tmp90 = 2 * _tmp37 * _tmp41;
  const Scalar _tmp91 = _TransformationMatrix[4] - Scalar(0.010999999999999999) * _tmp89 -
                        Scalar(0.010999999999999999) * _tmp90;
  const Scalar _tmp92 = -_tmp88 + _tmp91;
  const Scalar _tmp93 = -_tmp87 - _tmp92 + p_a(0, 0);
  const Scalar _tmp94 = 2 * _tmp93;
  const Scalar _tmp95 = _tmp33 * _tmp42;
  const Scalar _tmp96 = Scalar(0.41999999999999998) * _tmp32;
  const Scalar _tmp97 = _tmp13 * _tmp96;
  const Scalar _tmp98 = _tmp95 + _tmp97;
  const Scalar _tmp99 = _tmp41 * _tmp96;
  const Scalar _tmp100 = _tmp20 * _tmp38;
  const Scalar _tmp101 = _tmp100 + _tmp99;
  const Scalar _tmp102 = _tmp101 + _tmp98;
  const Scalar _tmp103 = _tmp41 * _tmp49;
  const Scalar _tmp104 = _tmp38 * _tmp8;
  const Scalar _tmp105 = Scalar(0.043999999999999997) * _tmp13;
  const Scalar _tmp106 = Scalar(0.043999999999999997) * _tmp41;
  const Scalar _tmp107 = -_tmp105 * _tmp20 - _tmp106 * _tmp8;
  const Scalar _tmp108 = -_tmp103 - _tmp104 + _tmp107;
  const Scalar _tmp109 = _tmp14 * _tmp48;
  const Scalar _tmp110 = Scalar(0.41999999999999998) * _tmp33 * _tmp8;
  const Scalar _tmp111 = _tmp109 + _tmp110;
  const Scalar _tmp112 =
      Scalar(0.20999999999999999) * _tmp89 - Scalar(0.20999999999999999) * _tmp90;
  const Scalar _tmp113 = -_tmp112;
  const Scalar _tmp114 =
      Scalar(0.20999999999999999) * _tmp69 + Scalar(0.20999999999999999) * _tmp70;
  const Scalar _tmp115 = _TransformationMatrix[6] - Scalar(0.010999999999999999) * _tmp66 -
                         Scalar(0.010999999999999999) * _tmp85;
  const Scalar _tmp116 = -_tmp114 + _tmp115;
  const Scalar _tmp117 = -_tmp113 - _tmp116 + p_a(2, 0);
  const Scalar _tmp118 = 2 * _tmp117;
  const Scalar _tmp119 = (Scalar(1) / Scalar(2)) / std::sqrt(Scalar(std::pow(_tmp117, Scalar(2)) +
                                                                    std::pow(_tmp73, Scalar(2)) +
                                                                    std::pow(_tmp93, Scalar(2))));
  const Scalar _tmp120 = _tmp15 + _tmp35;
  const Scalar _tmp121 = _tmp76 + _tmp80;
  const Scalar _tmp122 = -_tmp86 - _tmp92 + p_b(0, 0);
  const Scalar _tmp123 = 2 * _tmp122;
  const Scalar _tmp124 = -_tmp15;
  const Scalar _tmp125 = -_tmp43;
  const Scalar _tmp126 = _tmp125 + _tmp82;
  const Scalar _tmp127 = _tmp124 + _tmp126 + _tmp58 + _tmp83;
  const Scalar _tmp128 = -_tmp64 - _tmp72 + p_b(1, 0);
  const Scalar _tmp129 = 2 * _tmp128;
  const Scalar _tmp130 = -_tmp95 - _tmp97;
  const Scalar _tmp131 = _tmp101 + _tmp130;
  const Scalar _tmp132 = _tmp103 + _tmp104 + _tmp107;
  const Scalar _tmp133 = -_tmp112 - _tmp116 + p_b(2, 0);
  const Scalar _tmp134 = 2 * _tmp133;
  const Scalar _tmp135 = (Scalar(1) / Scalar(2)) / std::sqrt(Scalar(std::pow(_tmp122, Scalar(2)) +
                                                                    std::pow(_tmp128, Scalar(2)) +
                                                                    std::pow(_tmp133, Scalar(2))));
  const Scalar _tmp136 = _tmp68 + _tmp71;
  const Scalar _tmp137 = -_tmp136 - _tmp64 + p_c(1, 0);
  const Scalar _tmp138 = 2 * _tmp137;
  const Scalar _tmp139 = _tmp124 + _tmp125 + _tmp50;
  const Scalar _tmp140 = _tmp88 + _tmp91;
  const Scalar _tmp141 = -_tmp140 - _tmp86 + p_c(0, 0);
  const Scalar _tmp142 = 2 * _tmp141;
  const Scalar _tmp143 = -_tmp109;
  const Scalar _tmp144 = -_tmp110 + _tmp143;
  const Scalar _tmp145 = -_tmp100;
  const Scalar _tmp146 = _tmp145 - _tmp99;
  const Scalar _tmp147 = _tmp130 + _tmp146;
  const Scalar _tmp148 = _tmp114 + _tmp115;
  const Scalar _tmp149 = -_tmp112 - _tmp148 + p_c(2, 0);
  const Scalar _tmp150 = 2 * _tmp149;
  const Scalar _tmp151 = (Scalar(1) / Scalar(2)) / std::sqrt(Scalar(std::pow(_tmp137, Scalar(2)) +
                                                                    std::pow(_tmp141, Scalar(2)) +
                                                                    std::pow(_tmp149, Scalar(2))));
  const Scalar _tmp152 = -_tmp140 - _tmp87 + p_d(0, 0);
  const Scalar _tmp153 = 2 * _tmp152;
  const Scalar _tmp154 = -_tmp136 - _tmp65 + p_d(1, 0);
  const Scalar _tmp155 = 2 * _tmp154;
  const Scalar _tmp156 = _tmp146 + _tmp98;
  const Scalar _tmp157 = -_tmp113 - _tmp148 + p_d(2, 0);
  const Scalar _tmp158 = 2 * _tmp157;
  const Scalar _tmp159 = (Scalar(1) / Scalar(2)) / std::sqrt(Scalar(std::pow(_tmp152, Scalar(2)) +
                                                                    std::pow(_tmp154, Scalar(2)) +
                                                                    std::pow(_tmp157, Scalar(2))));
  const Scalar _tmp160 = _tmp44 + _tmp45 + _tmp46 - _tmp47;
  const Scalar _tmp161 = _tmp160 * _tmp34;
  const Scalar _tmp162 = -_tmp161;
  const Scalar _tmp163 = _tmp33 * _tmp96;
  const Scalar _tmp164 = _tmp160 * _tmp38;
  const Scalar _tmp165 = _tmp163 + _tmp164;
  const Scalar _tmp166 = _tmp162 + _tmp165;
  const Scalar _tmp167 = _tmp14 * _tmp20;
  const Scalar _tmp168 = -_tmp1 + _tmp3 - _tmp5 - _tmp7;
  const Scalar _tmp169 = Scalar(0.41999999999999998) * _tmp168;
  const Scalar _tmp170 = _tmp169 * _tmp41;
  const Scalar _tmp171 = _tmp167 + _tmp170;
  const Scalar _tmp172 = Scalar(0.83999999999999997) * _tmp13;
  const Scalar _tmp173 = _tmp168 * _tmp172;
  const Scalar _tmp174 = Scalar(0.021999999999999999) * _tmp160;
  const Scalar _tmp175 = Scalar(0.021999999999999999) * _tmp168;
  const Scalar _tmp176 = _tmp174 * _tmp41 - _tmp175 * _tmp37 + _tmp77 - _tmp78;
  const Scalar _tmp177 = -_tmp173 + _tmp176;
  const Scalar _tmp178 = _tmp21 * _tmp41;
  const Scalar _tmp179 = _tmp13 * _tmp174 + _tmp168 * _tmp55 + _tmp53 + _tmp57;
  const Scalar _tmp180 = -_tmp178 + _tmp179;
  const Scalar _tmp181 = -_tmp163 - _tmp164;
  const Scalar _tmp182 = _tmp162 + _tmp181;
  const Scalar _tmp183 = Scalar(0.41999999999999998) * _tmp160 * _tmp41;
  const Scalar _tmp184 = _tmp168 * _tmp38;
  const Scalar _tmp185 = -_tmp105 * _tmp168 - _tmp106 * _tmp20;
  const Scalar _tmp186 = _tmp183 + _tmp184 + _tmp185;
  const Scalar _tmp187 = _tmp14 * _tmp160;
  const Scalar _tmp188 = _tmp169 * _tmp33;
  const Scalar _tmp189 = _tmp187 + _tmp188;
  const Scalar _tmp190 = _tmp161 + _tmp171;
  const Scalar _tmp191 = _tmp178 + _tmp179;
  const Scalar _tmp192 = -_tmp167;
  const Scalar _tmp193 = -_tmp170;
  const Scalar _tmp194 = _tmp192 + _tmp193;
  const Scalar _tmp195 = -_tmp188;
  const Scalar _tmp196 = -_tmp187 + _tmp195;
  const Scalar _tmp197 = _tmp173 + _tmp176;
  const Scalar _tmp198 = _tmp161 + _tmp194;
  const Scalar _tmp199 = -_tmp183 - _tmp184 + _tmp185;
  const Scalar _tmp200 = _tmp21 * _tmp33;
  const Scalar _tmp201 = -_tmp200;
  const Scalar _tmp202 = _tmp25 + _tmp27 - _tmp29 + _tmp31;
  const Scalar _tmp203 = _tmp172 * _tmp202;
  const Scalar _tmp204 = -_tmp13 * _tmp175 - _tmp202 * _tmp79 + _tmp41 * _tmp56 + _tmp48 * _tmp55;
  const Scalar _tmp205 = _tmp201 - _tmp203 + _tmp204;
  const Scalar _tmp206 = Scalar(0.41999999999999998) * _tmp202;
  const Scalar _tmp207 = _tmp206 * _tmp41;
  const Scalar _tmp208 = _tmp109 + _tmp207;
  const Scalar _tmp209 = _tmp100 + _tmp188;
  const Scalar _tmp210 = _tmp208 + _tmp209;
  const Scalar _tmp211 = _tmp14 * _tmp168;
  const Scalar _tmp212 = _tmp206 * _tmp37;
  const Scalar _tmp213 = -_tmp105 * _tmp202 - _tmp106 * _tmp48;
  const Scalar _tmp214 = _tmp211 + _tmp212 + _tmp213 + _tmp51;
  const Scalar _tmp215 = _tmp206 * _tmp33;
  const Scalar _tmp216 = _tmp38 * _tmp48;
  const Scalar _tmp217 = _tmp167 + _tmp193 + _tmp215 - _tmp216;
  const Scalar _tmp218 = _tmp145 + _tmp195;
  const Scalar _tmp219 = _tmp48 * _tmp75;
  const Scalar _tmp220 = _tmp13 * _tmp56 + _tmp175 * _tmp41 + _tmp202 * _tmp55 + _tmp37 * _tmp54;
  const Scalar _tmp221 = _tmp201 - _tmp219 + _tmp220;
  const Scalar _tmp222 = _tmp170 + _tmp192 - _tmp215 + _tmp216;
  const Scalar _tmp223 = _tmp200 + _tmp218;
  const Scalar _tmp224 = _tmp219 + _tmp220;
  const Scalar _tmp225 = _tmp143 - _tmp207;
  const Scalar _tmp226 = _tmp203 + _tmp204;
  const Scalar _tmp227 = _tmp126 - _tmp211 - _tmp212 + _tmp213;
  const Scalar _tmp228 = _tmp209 + _tmp225;

  // Output terms (1)
  Eigen::Matrix<Scalar, 4, 3> _res;

  _res(0, 0) = _tmp119 * (_tmp118 * (_tmp102 + _tmp108 + _tmp111) +
                          _tmp74 * (_tmp15 + _tmp23 + _tmp40 + _tmp59) +
                          _tmp94 * (_tmp15 + _tmp36 + _tmp81 + _tmp84));
  _res(1, 0) =
      _tmp135 * (_tmp123 * (_tmp120 + _tmp121 + _tmp84) + _tmp129 * (_tmp127 + _tmp23 + _tmp36) +
                 _tmp134 * (_tmp111 + _tmp131 + _tmp132));
  _res(2, 0) = _tmp151 * (_tmp138 * (_tmp127 + _tmp22 + _tmp35) +
                          _tmp142 * (_tmp121 + _tmp139 + _tmp35 + _tmp39) +
                          _tmp150 * (_tmp132 + _tmp144 + _tmp147));
  _res(3, 0) = _tmp159 * (_tmp153 * (_tmp139 + _tmp40 + _tmp81) +
                          _tmp155 * (_tmp120 + _tmp22 + _tmp39 + _tmp59) +
                          _tmp158 * (_tmp108 + _tmp144 + _tmp156));
  _res(0, 1) =
      _tmp119 * (_tmp118 * (_tmp156 + _tmp186 + _tmp189) + _tmp74 * (_tmp166 + _tmp171 + _tmp177) +
                 _tmp94 * (_tmp171 + _tmp180 + _tmp182));
  _res(1, 1) =
      _tmp135 * (_tmp123 * (_tmp181 + _tmp190 + _tmp191) + _tmp129 * (_tmp177 + _tmp182 + _tmp194) +
                 _tmp134 * (_tmp102 + _tmp186 + _tmp196));
  _res(2, 1) =
      _tmp151 * (_tmp138 * (_tmp181 + _tmp197 + _tmp198) + _tmp142 * (_tmp165 + _tmp191 + _tmp198) +
                 _tmp150 * (_tmp131 + _tmp196 + _tmp199));
  _res(3, 1) =
      _tmp159 * (_tmp153 * (_tmp166 + _tmp180 + _tmp194) + _tmp155 * (_tmp165 + _tmp190 + _tmp197) +
                 _tmp158 * (_tmp147 + _tmp189 + _tmp199));
  _res(0, 2) = _tmp119 * (_tmp118 * (_tmp214 + _tmp217) + _tmp74 * (_tmp205 + _tmp210) +
                          _tmp94 * (_tmp208 + _tmp218 + _tmp221));
  _res(1, 2) = _tmp135 * (_tmp123 * (_tmp208 + _tmp223 + _tmp224) +
                          _tmp129 * (_tmp205 + _tmp218 + _tmp225) + _tmp134 * (_tmp214 + _tmp222));
  _res(2, 2) = _tmp151 * (_tmp138 * (_tmp223 + _tmp225 + _tmp226) +
                          _tmp142 * (_tmp200 + _tmp224 + _tmp228) + _tmp150 * (_tmp222 + _tmp227));
  _res(3, 2) = _tmp159 * (_tmp153 * (_tmp221 + _tmp228) + _tmp155 * (_tmp200 + _tmp210 + _tmp226) +
                          _tmp158 * (_tmp217 + _tmp227));

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
