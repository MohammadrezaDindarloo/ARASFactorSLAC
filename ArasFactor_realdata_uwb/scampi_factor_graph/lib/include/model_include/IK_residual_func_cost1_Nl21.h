// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

#include <sym/rot3.h>

namespace sym {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: IK_residual_func_cost1_Nl21
 *
 * Args:
 *     fh1: Scalar
 *     fv1: Scalar
 *     DeltaRot: Rot3
 *     p_a: Matrix31
 *     p_b: Matrix31
 *     p_c: Matrix31
 *     p_d: Matrix31
 *     p_init0: Scalar
 *     p_init1: Scalar
 *     p_init2: Scalar
 *     rot_init_x: Scalar
 *     rot_init_y: Scalar
 *     rot_init_z: Scalar
 *     rot_init_w: Scalar
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix41
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 4, 1> IkResidualFuncCost1Nl21(
    const Scalar fh1, const Scalar fv1, const sym::Rot3<Scalar>& DeltaRot,
    const Eigen::Matrix<Scalar, 3, 1>& p_a, const Eigen::Matrix<Scalar, 3, 1>& p_b,
    const Eigen::Matrix<Scalar, 3, 1>& p_c, const Eigen::Matrix<Scalar, 3, 1>& p_d,
    const Scalar p_init0, const Scalar p_init1, const Scalar p_init2, const Scalar rot_init_x,
    const Scalar rot_init_y, const Scalar rot_init_z, const Scalar rot_init_w,
    const Scalar epsilon) {
  // Total ops: 483

  // Unused inputs
  (void)epsilon;

  // Input arrays
  const Eigen::Matrix<Scalar, 4, 1>& _DeltaRot = DeltaRot.Data();

  // Intermediate terms (159)
  const Scalar _tmp0 = Scalar(1.0) / (fh1);
  const Scalar _tmp1 = std::asinh(_tmp0 * fv1);
  const Scalar _tmp2 = Scalar(0.1034955) * _tmp0;
  const Scalar _tmp3 = _DeltaRot[0] * rot_init_z + _DeltaRot[1] * rot_init_w -
                       _DeltaRot[2] * rot_init_x + _DeltaRot[3] * rot_init_y;
  const Scalar _tmp4 = _DeltaRot[0] * rot_init_w - _DeltaRot[1] * rot_init_z +
                       _DeltaRot[2] * rot_init_y + _DeltaRot[3] * rot_init_x;
  const Scalar _tmp5 = 2 * _tmp3 * _tmp4;
  const Scalar _tmp6 = -_DeltaRot[0] * rot_init_y + _DeltaRot[1] * rot_init_x +
                       _DeltaRot[2] * rot_init_w + _DeltaRot[3] * rot_init_z;
  const Scalar _tmp7 = -2 * _DeltaRot[0] * rot_init_x - 2 * _DeltaRot[1] * rot_init_y -
                       2 * _DeltaRot[2] * rot_init_z + 2 * _DeltaRot[3] * rot_init_w;
  const Scalar _tmp8 = _tmp6 * _tmp7;
  const Scalar _tmp9 = Scalar(0.20999999999999999) * _tmp5 - Scalar(0.20999999999999999) * _tmp8;
  const Scalar _tmp10 = -2 * std::pow(_tmp6, Scalar(2));
  const Scalar _tmp11 = 1 - 2 * std::pow(_tmp3, Scalar(2));
  const Scalar _tmp12 = Scalar(0.20999999999999999) * _tmp10 + Scalar(0.20999999999999999) * _tmp11;
  const Scalar _tmp13 = 2 * _tmp6;
  const Scalar _tmp14 = _tmp13 * _tmp4;
  const Scalar _tmp15 = _tmp3 * _tmp7;
  const Scalar _tmp16 = _tmp14 + _tmp15;
  const Scalar _tmp17 = -Scalar(0.010999999999999999) * _tmp16;
  const Scalar _tmp18 = -_tmp12 + _tmp17;
  const Scalar _tmp19 = _tmp18 + _tmp9;
  const Scalar _tmp20 = _tmp19 + p_init0;
  const Scalar _tmp21 = Scalar(0.20999999999999999) * _tmp5 + Scalar(0.20999999999999999) * _tmp8;
  const Scalar _tmp22 = -_tmp21;
  const Scalar _tmp23 = _tmp13 * _tmp3;
  const Scalar _tmp24 = _tmp4 * _tmp7;
  const Scalar _tmp25 = _tmp23 - _tmp24;
  const Scalar _tmp26 = -Scalar(0.010999999999999999) * _tmp25;
  const Scalar _tmp27 = -2 * std::pow(_tmp4, Scalar(2));
  const Scalar _tmp28 = Scalar(0.20999999999999999) * _tmp10 +
                        Scalar(0.20999999999999999) * _tmp27 + Scalar(0.20999999999999999);
  const Scalar _tmp29 = _tmp26 + _tmp28;
  const Scalar _tmp30 = _tmp22 + _tmp29;
  const Scalar _tmp31 = _tmp30 + p_init1;
  const Scalar _tmp32 = Scalar(9.6622558468725703) * fh1;
  const Scalar _tmp33 = Scalar(0.20999999999999999) * _tmp23 + Scalar(0.20999999999999999) * _tmp24;
  const Scalar _tmp34 =
      -Scalar(0.010999999999999999) * _tmp11 - Scalar(0.010999999999999999) * _tmp27;
  const Scalar _tmp35 = Scalar(0.20999999999999999) * _tmp14 - Scalar(0.20999999999999999) * _tmp15;
  const Scalar _tmp36 = _tmp34 - _tmp35;
  const Scalar _tmp37 = _tmp33 + _tmp36;
  const Scalar _tmp38 = -_tmp9;
  const Scalar _tmp39 = _tmp18 + _tmp38;
  const Scalar _tmp40 = _tmp39 + p_init0;
  const Scalar _tmp41 = _tmp40 - p_a(0, 0);
  const Scalar _tmp42 = _tmp26 - _tmp28;
  const Scalar _tmp43 = _tmp22 + _tmp42;
  const Scalar _tmp44 = _tmp43 + p_init1;
  const Scalar _tmp45 = _tmp44 - p_a(1, 0);
  const Scalar _tmp46 = std::pow(Scalar(std::pow(_tmp41, Scalar(2)) + std::pow(_tmp45, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp47 = _tmp41 * _tmp46;
  const Scalar _tmp48 = _tmp12 + _tmp17;
  const Scalar _tmp49 = _tmp48 + _tmp9;
  const Scalar _tmp50 = _tmp49 + p_init0;
  const Scalar _tmp51 = _tmp50 - p_c(0, 0);
  const Scalar _tmp52 = _tmp21 + _tmp29;
  const Scalar _tmp53 = _tmp52 + p_init1;
  const Scalar _tmp54 = _tmp53 - p_c(1, 0);
  const Scalar _tmp55 = std::pow(Scalar(std::pow(_tmp51, Scalar(2)) + std::pow(_tmp54, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp56 = _tmp54 * _tmp55;
  const Scalar _tmp57 = _tmp51 * _tmp55;
  const Scalar _tmp58 = _tmp21 + _tmp42;
  const Scalar _tmp59 = _tmp58 + p_init1;
  const Scalar _tmp60 = _tmp59 - p_b(1, 0);
  const Scalar _tmp61 = _tmp38 + _tmp48;
  const Scalar _tmp62 = _tmp61 + p_init0;
  const Scalar _tmp63 = _tmp62 - p_b(0, 0);
  const Scalar _tmp64 =
      std::sqrt(Scalar(std::pow(_tmp60, Scalar(2)) + std::pow(_tmp63, Scalar(2))));
  const Scalar _tmp65 = Scalar(1.0) / (_tmp64);
  const Scalar _tmp66 = Scalar(1.0) / (_tmp63);
  const Scalar _tmp67 = _tmp64 * _tmp66;
  const Scalar _tmp68 = _tmp67 * (-_tmp58 * _tmp63 * _tmp65 + _tmp60 * _tmp61 * _tmp65);
  const Scalar _tmp69 = -_tmp49 * _tmp56 + _tmp52 * _tmp57 + _tmp57 * _tmp68;
  const Scalar _tmp70 = _tmp60 * _tmp66;
  const Scalar _tmp71 = _tmp45 * _tmp46;
  const Scalar _tmp72 = _tmp47 * _tmp70 - _tmp71;
  const Scalar _tmp73 = Scalar(1.0) / (-_tmp56 + _tmp57 * _tmp70);
  const Scalar _tmp74 = _tmp72 * _tmp73;
  const Scalar _tmp75 = -_tmp39 * _tmp71 + _tmp43 * _tmp47 + _tmp47 * _tmp68 - _tmp69 * _tmp74;
  const Scalar _tmp76 = Scalar(1.0) / (_tmp75);
  const Scalar _tmp77 = Scalar(1.0) * _tmp76;
  const Scalar _tmp78 = Scalar(1.0) * _tmp73;
  const Scalar _tmp79 = _tmp72 * _tmp76 * _tmp78;
  const Scalar _tmp80 = _tmp31 - p_d(1, 0);
  const Scalar _tmp81 = _tmp20 - p_d(0, 0);
  const Scalar _tmp82 = std::pow(Scalar(std::pow(_tmp80, Scalar(2)) + std::pow(_tmp81, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp83 = _tmp81 * _tmp82;
  const Scalar _tmp84 = _tmp80 * _tmp82;
  const Scalar _tmp85 = fh1 * (_tmp19 * _tmp84 - _tmp30 * _tmp83);
  const Scalar _tmp86 = -_tmp33;
  const Scalar _tmp87 = _tmp34 + _tmp35;
  const Scalar _tmp88 = _tmp86 + _tmp87;
  const Scalar _tmp89 = _tmp33 + _tmp87;
  const Scalar _tmp90 = _tmp57 * _tmp88 - _tmp57 * _tmp89;
  const Scalar _tmp91 = Scalar(1.0) * _tmp58;
  const Scalar _tmp92 = -_tmp91;
  const Scalar _tmp93 = Scalar(1.0) / (_tmp52 + _tmp92);
  const Scalar _tmp94 = Scalar(1.0) * _tmp61;
  const Scalar _tmp95 = _tmp93 * (-_tmp49 + _tmp94);
  const Scalar _tmp96 = _tmp70 * _tmp88;
  const Scalar _tmp97 = _tmp56 * _tmp89 - _tmp57 * _tmp96;
  const Scalar _tmp98 = _tmp78 * _tmp97;
  const Scalar _tmp99 = -_tmp78 * _tmp90 + _tmp95 * _tmp98;
  const Scalar _tmp100 = _tmp36 + _tmp86;
  const Scalar _tmp101 = _tmp100 * _tmp71 - _tmp47 * _tmp96 - _tmp74 * _tmp97;
  const Scalar _tmp102 = -_tmp100 * _tmp47 - _tmp101 * _tmp95 + _tmp47 * _tmp88 - _tmp74 * _tmp90;
  const Scalar _tmp103 = Scalar(1.0) / (_tmp102);
  const Scalar _tmp104 = _tmp103 * _tmp75;
  const Scalar _tmp105 = _tmp102 * _tmp76;
  const Scalar _tmp106 = _tmp105 * (-_tmp104 * _tmp99 - _tmp69 * _tmp78);
  const Scalar _tmp107 = _tmp103 * (_tmp106 + _tmp99);
  const Scalar _tmp108 = -_tmp107 * _tmp72 + Scalar(1.0);
  const Scalar _tmp109 = _tmp57 * _tmp73;
  const Scalar _tmp110 = _tmp84 * fh1;
  const Scalar _tmp111 = Scalar(43.164000000000001) - fv1;
  const Scalar _tmp112 = _tmp91 * _tmp95 + _tmp94;
  const Scalar _tmp113 = 0;
  const Scalar _tmp114 = _tmp103 * _tmp113;
  const Scalar _tmp115 = _tmp70 * _tmp73;
  const Scalar _tmp116 = _tmp115 * _tmp97 + _tmp96;
  const Scalar _tmp117 = _tmp115 * _tmp90 - _tmp116 * _tmp95 - _tmp88;
  const Scalar _tmp118 = _tmp105 * (-_tmp104 * _tmp117 + _tmp115 * _tmp69 - _tmp68);
  const Scalar _tmp119 = _tmp117 + _tmp118;
  const Scalar _tmp120 = _tmp103 * _tmp119;
  const Scalar _tmp121 = -_tmp120 * _tmp72 - _tmp70;
  const Scalar _tmp122 = _tmp83 * fh1;
  const Scalar _tmp123 = -_tmp110 * _tmp67 * (_tmp107 * _tmp47 + _tmp108 * _tmp109) -
                         _tmp111 * _tmp67 * (_tmp114 * _tmp47 - _tmp114 * _tmp57 * _tmp74) -
                         _tmp122 * _tmp67 * (_tmp109 * _tmp121 + _tmp120 * _tmp47 + Scalar(1.0)) -
                         _tmp67 * _tmp85 * (_tmp47 * _tmp77 - _tmp57 * _tmp79);
  const Scalar _tmp124 = Scalar(1.0) / (_tmp123);
  const Scalar _tmp125 = _tmp43 + _tmp92;
  const Scalar _tmp126 = _tmp125 * _tmp95;
  const Scalar _tmp127 = Scalar(1.0) / (-_tmp126 - _tmp39 + _tmp94);
  const Scalar _tmp128 = Scalar(1.0) * _tmp127;
  const Scalar _tmp129 = _tmp101 * _tmp103;
  const Scalar _tmp130 = _tmp125 * _tmp127;
  const Scalar _tmp131 = _tmp116 + _tmp118 * _tmp130 - _tmp119 * _tmp129;
  const Scalar _tmp132 = Scalar(1.0) * _tmp93;
  const Scalar _tmp133 = _tmp112 * _tmp127;
  const Scalar _tmp134 = -_tmp113 * _tmp129 - _tmp125 * _tmp133 + _tmp92;
  const Scalar _tmp135 = -_tmp101 * _tmp107 + _tmp106 * _tmp130 - _tmp98;
  const Scalar _tmp136 = _tmp128 * _tmp95;
  const Scalar _tmp137 = _tmp93 * (_tmp126 * _tmp128 + Scalar(1.0));
  const Scalar _tmp138 = _tmp37 * fh1;
  const Scalar _tmp139 = -_tmp138 * _tmp84 - Scalar(3.29616) * _tmp25 - _tmp30 * fv1;
  const Scalar _tmp140 = _tmp125 * _tmp128;
  const Scalar _tmp141 = -_tmp101 * _tmp77 + _tmp105 * _tmp140;
  const Scalar _tmp142 = _tmp105 * _tmp128;
  const Scalar _tmp143 = _tmp138 * _tmp83 + Scalar(3.29616) * _tmp16 + _tmp19 * fv1;
  const Scalar _tmp144 = std::asinh(
      _tmp124 * (Scalar(1.0) * _tmp110 * (_tmp106 * _tmp128 - _tmp132 * _tmp135) +
                 Scalar(1.0) * _tmp111 * (-_tmp112 * _tmp128 - _tmp132 * _tmp134 + Scalar(1.0)) +
                 Scalar(1.0) * _tmp122 * (_tmp118 * _tmp128 - _tmp131 * _tmp132) +
                 Scalar(1.0) * _tmp139 * (_tmp136 - Scalar(1.0) * _tmp137) +
                 Scalar(1.0) * _tmp143 * (-_tmp128 + _tmp140 * _tmp93) +
                 Scalar(1.0) * _tmp85 * (-_tmp132 * _tmp141 + _tmp142)));
  const Scalar _tmp145 = Scalar(9.6622558468725703) * _tmp123;
  const Scalar _tmp146 = Scalar(0.1034955) * _tmp124;
  const Scalar _tmp147 = _tmp111 * _tmp114;
  const Scalar _tmp148 =
      _tmp108 * _tmp110 * _tmp73 + _tmp121 * _tmp122 * _tmp73 - _tmp147 * _tmp74 - _tmp79 * _tmp85;
  const Scalar _tmp149 = Scalar(1.0) / (_tmp148);
  const Scalar _tmp150 = _tmp128 * _tmp143;
  const Scalar _tmp151 =
      std::asinh(_tmp149 * (_tmp110 * _tmp135 * _tmp93 + _tmp111 * _tmp134 * _tmp93 +
                            _tmp122 * _tmp131 * _tmp93 - _tmp125 * _tmp150 * _tmp93 +
                            _tmp137 * _tmp139 + _tmp141 * _tmp85 * _tmp93));
  const Scalar _tmp152 = Scalar(9.6622558468725703) * _tmp148;
  const Scalar _tmp153 = Scalar(0.1034955) * _tmp149;
  const Scalar _tmp154 = _tmp107 * _tmp110 + _tmp120 * _tmp122 + _tmp147 + _tmp77 * _tmp85;
  const Scalar _tmp155 = Scalar(1.0) / (_tmp154);
  const Scalar _tmp156 = std::asinh(_tmp155 * (-_tmp106 * _tmp110 * _tmp127 + _tmp111 * _tmp133 -
                                               _tmp118 * _tmp122 * _tmp127 - _tmp136 * _tmp139 -
                                               _tmp142 * _tmp85 + _tmp150));
  const Scalar _tmp157 = Scalar(9.6622558468725703) * _tmp154;
  const Scalar _tmp158 = Scalar(0.1034955) * _tmp155;

  // Output terms (1)
  Eigen::Matrix<Scalar, 4, 1> _res;

  _res(0, 0) =
      -_tmp32 * (_tmp2 * p_d(2, 0) + std::cosh(Scalar(1.0) * _tmp1) -
                 std::cosh(_tmp2 *
                           (-_tmp1 * _tmp32 -
                            std::sqrt(Scalar(std::pow(Scalar(-_tmp20 + p_d(0, 0)), Scalar(2)) +
                                             std::pow(Scalar(-_tmp31 + p_d(1, 0)), Scalar(2))))))) +
      _tmp37 + p_init2;
  _res(1, 0) =
      -_tmp145 *
          (_tmp146 * p_b(2, 0) + std::cosh(Scalar(1.0) * _tmp144) -
           std::cosh(_tmp146 *
                     (-_tmp144 * _tmp145 -
                      std::sqrt(Scalar(std::pow(Scalar(-_tmp59 + p_b(1, 0)), Scalar(2)) +
                                       std::pow(Scalar(-_tmp62 + p_b(0, 0)), Scalar(2))))))) +
      _tmp88 + p_init2;
  _res(2, 0) =
      -_tmp152 *
          (_tmp153 * p_c(2, 0) + std::cosh(Scalar(1.0) * _tmp151) -
           std::cosh(_tmp153 *
                     (-_tmp151 * _tmp152 -
                      std::sqrt(Scalar(std::pow(Scalar(-_tmp50 + p_c(0, 0)), Scalar(2)) +
                                       std::pow(Scalar(-_tmp53 + p_c(1, 0)), Scalar(2))))))) +
      _tmp89 + p_init2;
  _res(3, 0) =
      _tmp100 -
      _tmp157 * (_tmp158 * p_a(2, 0) + std::cosh(Scalar(1.0) * _tmp156) -
                 std::cosh(_tmp158 *
                           (-_tmp156 * _tmp157 -
                            std::sqrt(Scalar(std::pow(Scalar(-_tmp40 + p_a(0, 0)), Scalar(2)) +
                                             std::pow(Scalar(-_tmp44 + p_a(1, 0)), Scalar(2))))))) +
      p_init2;

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
