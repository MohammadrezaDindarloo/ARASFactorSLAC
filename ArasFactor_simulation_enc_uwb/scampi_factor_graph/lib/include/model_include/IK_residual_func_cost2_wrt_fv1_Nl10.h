// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

#include <sym/rot3.h>

namespace sym {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: IK_residual_func_cost2_wrt_fv1_Nl10
 *
 * Args:
 *     fh1: Scalar
 *     fv1: Scalar
 *     DeltaRot: Rot3
 *     p_a: Matrix31
 *     p_b: Matrix31
 *     p_c: Matrix31
 *     p_d: Matrix31
 *     p_init0: Scalar
 *     p_init1: Scalar
 *     p_init2: Scalar
 *     rot_init_x: Scalar
 *     rot_init_y: Scalar
 *     rot_init_z: Scalar
 *     rot_init_w: Scalar
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix41
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 4, 1> IkResidualFuncCost2WrtFv1Nl10(
    const Scalar fh1, const Scalar fv1, const sym::Rot3<Scalar>& DeltaRot,
    const Eigen::Matrix<Scalar, 3, 1>& p_a, const Eigen::Matrix<Scalar, 3, 1>& p_b,
    const Eigen::Matrix<Scalar, 3, 1>& p_c, const Eigen::Matrix<Scalar, 3, 1>& p_d,
    const Scalar p_init0, const Scalar p_init1, const Scalar p_init2, const Scalar rot_init_x,
    const Scalar rot_init_y, const Scalar rot_init_z, const Scalar rot_init_w,
    const Scalar epsilon) {
  // Total ops: 580

  // Unused inputs
  (void)p_init2;
  (void)epsilon;

  // Input arrays
  const Eigen::Matrix<Scalar, 4, 1>& _DeltaRot = DeltaRot.Data();

  // Intermediate terms (190)
  const Scalar _tmp0 = Scalar(1.0) / (fh1);
  const Scalar _tmp1 = std::asinh(_tmp0 * fv1);
  const Scalar _tmp2 = Scalar(1.0) * _tmp0 /
                       std::sqrt(Scalar(1 + std::pow(fv1, Scalar(2)) / std::pow(fh1, Scalar(2))));
  const Scalar _tmp3 = _DeltaRot[0] * rot_init_z + _DeltaRot[1] * rot_init_w -
                       _DeltaRot[2] * rot_init_x + _DeltaRot[3] * rot_init_y;
  const Scalar _tmp4 = -2 * std::pow(_tmp3, Scalar(2));
  const Scalar _tmp5 = -_DeltaRot[0] * rot_init_y + _DeltaRot[1] * rot_init_x +
                       _DeltaRot[2] * rot_init_w + _DeltaRot[3] * rot_init_z;
  const Scalar _tmp6 = 1 - 2 * std::pow(_tmp5, Scalar(2));
  const Scalar _tmp7 = Scalar(0.20999999999999999) * _tmp4 + Scalar(0.20999999999999999) * _tmp6;
  const Scalar _tmp8 = _DeltaRot[0] * rot_init_w - _DeltaRot[1] * rot_init_z +
                       _DeltaRot[2] * rot_init_y + _DeltaRot[3] * rot_init_x;
  const Scalar _tmp9 = 2 * _tmp5;
  const Scalar _tmp10 = _tmp8 * _tmp9;
  const Scalar _tmp11 = -2 * _DeltaRot[0] * rot_init_x - 2 * _DeltaRot[1] * rot_init_y -
                        2 * _DeltaRot[2] * rot_init_z + 2 * _DeltaRot[3] * rot_init_w;
  const Scalar _tmp12 = _tmp11 * _tmp3;
  const Scalar _tmp13 = _tmp10 + _tmp12;
  const Scalar _tmp14 = -Scalar(0.010999999999999999) * _tmp13;
  const Scalar _tmp15 = 2 * _tmp3 * _tmp8;
  const Scalar _tmp16 = _tmp11 * _tmp5;
  const Scalar _tmp17 = Scalar(0.20999999999999999) * _tmp15 - Scalar(0.20999999999999999) * _tmp16;
  const Scalar _tmp18 = _tmp14 - _tmp17;
  const Scalar _tmp19 = _tmp18 + _tmp7;
  const Scalar _tmp20 = _tmp19 + p_init0;
  const Scalar _tmp21 = -2 * std::pow(_tmp8, Scalar(2));
  const Scalar _tmp22 = Scalar(0.20999999999999999) * _tmp21 + Scalar(0.20999999999999999) * _tmp6;
  const Scalar _tmp23 = -_tmp22;
  const Scalar _tmp24 = _tmp3 * _tmp9;
  const Scalar _tmp25 = _tmp11 * _tmp8;
  const Scalar _tmp26 = _tmp24 - _tmp25;
  const Scalar _tmp27 = Scalar(0.010999999999999999) * _tmp26;
  const Scalar _tmp28 = -_tmp27;
  const Scalar _tmp29 = Scalar(0.20999999999999999) * _tmp15 + Scalar(0.20999999999999999) * _tmp16;
  const Scalar _tmp30 = _tmp28 + _tmp29;
  const Scalar _tmp31 = _tmp23 + _tmp30;
  const Scalar _tmp32 = _tmp31 + p_init1;
  const Scalar _tmp33 = Scalar(9.6622558468725703) * fh1;
  const Scalar _tmp34 = -_tmp29;
  const Scalar _tmp35 = _tmp28 + _tmp34;
  const Scalar _tmp36 = _tmp22 + _tmp35;
  const Scalar _tmp37 = _tmp36 + p_init1;
  const Scalar _tmp38 = _tmp37 - p_d(1, 0);
  const Scalar _tmp39 = -_tmp7;
  const Scalar _tmp40 = _tmp14 + _tmp17;
  const Scalar _tmp41 = _tmp39 + _tmp40;
  const Scalar _tmp42 = _tmp41 + p_init0;
  const Scalar _tmp43 = _tmp42 - p_d(0, 0);
  const Scalar _tmp44 = Scalar(1.0) / (_tmp43);
  const Scalar _tmp45 = _tmp38 * _tmp44;
  const Scalar _tmp46 = _tmp40 + _tmp7;
  const Scalar _tmp47 = _tmp46 + p_init0;
  const Scalar _tmp48 = _tmp47 - p_c(0, 0);
  const Scalar _tmp49 = _tmp22 + _tmp30;
  const Scalar _tmp50 = _tmp49 + p_init1;
  const Scalar _tmp51 = _tmp50 - p_c(1, 0);
  const Scalar _tmp52 = std::pow(Scalar(std::pow(_tmp48, Scalar(2)) + std::pow(_tmp51, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp53 = _tmp51 * _tmp52;
  const Scalar _tmp54 = _tmp48 * _tmp52;
  const Scalar _tmp55 = _tmp45 * _tmp54 - _tmp53;
  const Scalar _tmp56 = Scalar(0.20999999999999999) * _tmp24 + Scalar(0.20999999999999999) * _tmp25;
  const Scalar _tmp57 = -Scalar(0.010999999999999999) * _tmp21 -
                        Scalar(0.010999999999999999) * _tmp4 + Scalar(-0.010999999999999999);
  const Scalar _tmp58 = Scalar(0.20999999999999999) * _tmp10 - Scalar(0.20999999999999999) * _tmp12;
  const Scalar _tmp59 = _tmp57 + _tmp58;
  const Scalar _tmp60 = _tmp56 + _tmp59;
  const Scalar _tmp61 = _tmp57 - _tmp58;
  const Scalar _tmp62 = _tmp56 + _tmp61;
  const Scalar _tmp63 = _tmp45 * _tmp62;
  const Scalar _tmp64 = -_tmp56;
  const Scalar _tmp65 = _tmp61 + _tmp64;
  const Scalar _tmp66 = _tmp18 + _tmp39;
  const Scalar _tmp67 = _tmp66 + p_init0;
  const Scalar _tmp68 = _tmp67 - p_a(0, 0);
  const Scalar _tmp69 = _tmp23 + _tmp35;
  const Scalar _tmp70 = _tmp69 + p_init1;
  const Scalar _tmp71 = _tmp70 - p_a(1, 0);
  const Scalar _tmp72 = std::pow(Scalar(std::pow(_tmp68, Scalar(2)) + std::pow(_tmp71, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp73 = _tmp71 * _tmp72;
  const Scalar _tmp74 = _tmp68 * _tmp72;
  const Scalar _tmp75 = -_tmp63 * _tmp74 + _tmp65 * _tmp73;
  const Scalar _tmp76 = Scalar(1.0) / (_tmp45 * _tmp74 - _tmp73);
  const Scalar _tmp77 = _tmp55 * _tmp76;
  const Scalar _tmp78 = _tmp53 * _tmp60 - _tmp54 * _tmp63 - _tmp75 * _tmp77;
  const Scalar _tmp79 = Scalar(1.0) * _tmp36;
  const Scalar _tmp80 = -_tmp79;
  const Scalar _tmp81 = Scalar(1.0) / (_tmp69 + _tmp80);
  const Scalar _tmp82 = Scalar(1.0) * _tmp41;
  const Scalar _tmp83 = -_tmp66 + _tmp82;
  const Scalar _tmp84 = _tmp81 * _tmp83;
  const Scalar _tmp85 = _tmp62 * _tmp74 - _tmp65 * _tmp74;
  const Scalar _tmp86 = -_tmp54 * _tmp60 + _tmp54 * _tmp62 - _tmp77 * _tmp85 - _tmp78 * _tmp84;
  const Scalar _tmp87 = Scalar(1.0) / (_tmp86);
  const Scalar _tmp88 =
      std::sqrt(Scalar(std::pow(_tmp38, Scalar(2)) + std::pow(_tmp43, Scalar(2))));
  const Scalar _tmp89 = Scalar(1.0) / (_tmp88);
  const Scalar _tmp90 = _tmp44 * _tmp88;
  const Scalar _tmp91 = _tmp90 * (-_tmp36 * _tmp43 * _tmp89 + _tmp38 * _tmp41 * _tmp89);
  const Scalar _tmp92 = _tmp76 * (-_tmp66 * _tmp73 + _tmp69 * _tmp74 + _tmp74 * _tmp91);
  const Scalar _tmp93 = _tmp45 * _tmp76;
  const Scalar _tmp94 = _tmp63 + _tmp75 * _tmp93;
  const Scalar _tmp95 = -_tmp62 - _tmp84 * _tmp94 + _tmp85 * _tmp93;
  const Scalar _tmp96 = -_tmp46 * _tmp53 + _tmp49 * _tmp54 + _tmp54 * _tmp91 - _tmp55 * _tmp92;
  const Scalar _tmp97 = _tmp87 * _tmp96;
  const Scalar _tmp98 = Scalar(1.0) / (_tmp96);
  const Scalar _tmp99 = _tmp86 * _tmp98;
  const Scalar _tmp100 = _tmp99 * (_tmp45 * _tmp92 - _tmp91 - _tmp95 * _tmp97);
  const Scalar _tmp101 = _tmp87 * (_tmp100 + _tmp95);
  const Scalar _tmp102 = -_tmp101 * _tmp55 - _tmp45;
  const Scalar _tmp103 = _tmp74 * _tmp76;
  const Scalar _tmp104 = _tmp32 - p_b(1, 0);
  const Scalar _tmp105 = _tmp20 - p_b(0, 0);
  const Scalar _tmp106 =
      std::pow(Scalar(std::pow(_tmp104, Scalar(2)) + std::pow(_tmp105, Scalar(2))),
               Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp107 = _tmp105 * _tmp106;
  const Scalar _tmp108 = _tmp107 * fh1;
  const Scalar _tmp109 = Scalar(1.0) * _tmp76;
  const Scalar _tmp110 = Scalar(1.0) * _tmp81;
  const Scalar _tmp111 = -_tmp109 * _tmp85 + _tmp110 * _tmp75 * _tmp76 * _tmp83;
  const Scalar _tmp112 = _tmp99 * (-_tmp111 * _tmp97 - Scalar(1.0) * _tmp92);
  const Scalar _tmp113 = _tmp87 * (_tmp111 + _tmp112);
  const Scalar _tmp114 = -_tmp113 * _tmp55 + Scalar(1.0);
  const Scalar _tmp115 = _tmp104 * _tmp106;
  const Scalar _tmp116 = _tmp115 * fh1;
  const Scalar _tmp117 = Scalar(1.0) * _tmp98;
  const Scalar _tmp118 = _tmp109 * _tmp55 * _tmp98;
  const Scalar _tmp119 = fh1 * (-_tmp107 * _tmp31 + _tmp115 * _tmp19);
  const Scalar _tmp120 = Scalar(43.164000000000001) - fv1;
  const Scalar _tmp121 = _tmp79 * _tmp84 + _tmp82;
  const Scalar _tmp122 = 0;
  const Scalar _tmp123 = _tmp122 * _tmp77;
  const Scalar _tmp124 = _tmp90 * (_tmp122 * _tmp54 - _tmp123 * _tmp74);
  const Scalar _tmp125 = -_tmp108 * _tmp90 * (_tmp101 * _tmp54 + _tmp102 * _tmp103 + Scalar(1.0)) -
                         _tmp116 * _tmp90 * (_tmp103 * _tmp114 + _tmp113 * _tmp54) -
                         _tmp119 * _tmp90 * (_tmp117 * _tmp54 - _tmp118 * _tmp74) -
                         _tmp120 * _tmp124;
  const Scalar _tmp126 = Scalar(1.0) / (_tmp125);
  const Scalar _tmp127 = _tmp49 + _tmp80;
  const Scalar _tmp128 = _tmp127 * _tmp84;
  const Scalar _tmp129 = Scalar(1.0) / (-_tmp128 - _tmp46 + _tmp82);
  const Scalar _tmp130 = Scalar(1.0) * _tmp129;
  const Scalar _tmp131 = _tmp121 * _tmp129;
  const Scalar _tmp132 = _tmp81 * (-_tmp122 * _tmp78 - _tmp127 * _tmp131 + _tmp80);
  const Scalar _tmp133 = -Scalar(1.0) * _tmp121 * _tmp130 - Scalar(1.0) * _tmp132 + Scalar(1.0);
  const Scalar _tmp134 = fh1 * (_tmp59 + _tmp64);
  const Scalar _tmp135 = _tmp107 * _tmp134 + Scalar(3.29616) * _tmp13 + _tmp19 * fv1;
  const Scalar _tmp136 = _tmp127 * _tmp130;
  const Scalar _tmp137 = -Scalar(1.0) * _tmp130 + Scalar(1.0) * _tmp136 * _tmp81;
  const Scalar _tmp138 = _tmp130 * _tmp99;
  const Scalar _tmp139 = -_tmp117 * _tmp78 + _tmp136 * _tmp99;
  const Scalar _tmp140 = -_tmp115 * _tmp134 - Scalar(3.29616) * _tmp26 - _tmp31 * fv1;
  const Scalar _tmp141 = _tmp130 * _tmp84;
  const Scalar _tmp142 = _tmp128 * _tmp130 + Scalar(1.0);
  const Scalar _tmp143 = -Scalar(1.0) * _tmp110 * _tmp142 + Scalar(1.0) * _tmp141;
  const Scalar _tmp144 = _tmp127 * _tmp129;
  const Scalar _tmp145 = -_tmp109 * _tmp75 + _tmp112 * _tmp144 - _tmp113 * _tmp78;
  const Scalar _tmp146 = _tmp100 * _tmp144 - _tmp101 * _tmp78 + _tmp94;
  const Scalar _tmp147 = Scalar(1.0) * _tmp108 * (_tmp100 * _tmp130 - _tmp110 * _tmp146) +
                         Scalar(1.0) * _tmp116 * (-_tmp110 * _tmp145 + _tmp112 * _tmp130) +
                         Scalar(1.0) * _tmp119 * (-_tmp110 * _tmp139 + _tmp138) +
                         _tmp120 * _tmp133 + _tmp135 * _tmp137 + _tmp140 * _tmp143;
  const Scalar _tmp148 = std::asinh(_tmp126 * _tmp147);
  const Scalar _tmp149 = Scalar(1.0) * _tmp148;
  const Scalar _tmp150 = std::pow(_tmp125, Scalar(-2));
  const Scalar _tmp151 = _tmp124 * _tmp150;
  const Scalar _tmp152 = _tmp22 + _tmp27 + _tmp34;
  const Scalar _tmp153 =
      (_tmp126 * (-_tmp133 + _tmp137 * _tmp19 + _tmp143 * _tmp152) - _tmp147 * _tmp151) /
      std::sqrt(Scalar(std::pow(_tmp147, Scalar(2)) * _tmp150 + 1));
  const Scalar _tmp154 = Scalar(9.6622558468725703) * _tmp125;
  const Scalar _tmp155 =
      -_tmp148 * _tmp154 - std::sqrt(Scalar(std::pow(Scalar(-_tmp37 + p_d(1, 0)), Scalar(2)) +
                                            std::pow(Scalar(-_tmp42 + p_d(0, 0)), Scalar(2))));
  const Scalar _tmp156 = Scalar(0.1034955) * _tmp126;
  const Scalar _tmp157 = _tmp155 * _tmp156;
  const Scalar _tmp158 = Scalar(9.6622558468725703) * _tmp124;
  const Scalar _tmp159 = _tmp130 * _tmp135;
  const Scalar _tmp160 = _tmp127 * _tmp81;
  const Scalar _tmp161 = _tmp142 * _tmp81;
  const Scalar _tmp162 = _tmp108 * _tmp146 * _tmp81 + _tmp116 * _tmp145 * _tmp81 +
                         _tmp119 * _tmp139 * _tmp81 + _tmp120 * _tmp132 + _tmp140 * _tmp161 -
                         _tmp159 * _tmp160;
  const Scalar _tmp163 = _tmp120 * _tmp122;
  const Scalar _tmp164 = _tmp102 * _tmp108 * _tmp76 + _tmp114 * _tmp116 * _tmp76 -
                         _tmp118 * _tmp119 - _tmp163 * _tmp77;
  const Scalar _tmp165 = Scalar(1.0) / (_tmp164);
  const Scalar _tmp166 = std::asinh(_tmp162 * _tmp165);
  const Scalar _tmp167 = Scalar(1.0) * _tmp166;
  const Scalar _tmp168 = Scalar(9.6622558468725703) * _tmp164;
  const Scalar _tmp169 =
      -_tmp166 * _tmp168 - std::sqrt(Scalar(std::pow(Scalar(-_tmp67 + p_a(0, 0)), Scalar(2)) +
                                            std::pow(Scalar(-_tmp70 + p_a(1, 0)), Scalar(2))));
  const Scalar _tmp170 = Scalar(0.1034955) * _tmp165;
  const Scalar _tmp171 = _tmp169 * _tmp170;
  const Scalar _tmp172 = Scalar(9.6622558468725703) * _tmp122;
  const Scalar _tmp173 = _tmp172 * _tmp77;
  const Scalar _tmp174 = std::pow(_tmp164, Scalar(-2));
  const Scalar _tmp175 = _tmp123 * _tmp174;
  const Scalar _tmp176 = _tmp130 * _tmp19;
  const Scalar _tmp177 =
      (-_tmp162 * _tmp175 + _tmp165 * (-_tmp132 + _tmp152 * _tmp161 - _tmp160 * _tmp176)) /
      std::sqrt(Scalar(std::pow(_tmp162, Scalar(2)) * _tmp174 + 1));
  const Scalar _tmp178 = _tmp101 * _tmp108 + _tmp113 * _tmp116 + _tmp117 * _tmp119 + _tmp163;
  const Scalar _tmp179 = Scalar(1.0) / (_tmp178);
  const Scalar _tmp180 = -_tmp100 * _tmp108 * _tmp129 - _tmp112 * _tmp116 * _tmp129 -
                         _tmp119 * _tmp138 + _tmp120 * _tmp131 - _tmp140 * _tmp141 + _tmp159;
  const Scalar _tmp181 = std::asinh(_tmp179 * _tmp180);
  const Scalar _tmp182 = Scalar(9.6622558468725703) * _tmp178;
  const Scalar _tmp183 =
      -_tmp181 * _tmp182 - std::sqrt(Scalar(std::pow(Scalar(-_tmp47 + p_c(0, 0)), Scalar(2)) +
                                            std::pow(Scalar(-_tmp50 + p_c(1, 0)), Scalar(2))));
  const Scalar _tmp184 = Scalar(0.1034955) * _tmp179;
  const Scalar _tmp185 = _tmp183 * _tmp184;
  const Scalar _tmp186 = Scalar(1.0) * _tmp181;
  const Scalar _tmp187 = std::pow(_tmp178, Scalar(-2));
  const Scalar _tmp188 = _tmp122 * _tmp187;
  const Scalar _tmp189 = (_tmp179 * (-_tmp131 - _tmp141 * _tmp152 + _tmp176) + _tmp180 * _tmp188) /
                         std::sqrt(Scalar(std::pow(_tmp180, Scalar(2)) * _tmp187 + 1));

  // Output terms (1)
  Eigen::Matrix<Scalar, 4, 1> _res;

  _res(0, 0) =
      _tmp33 *
      (-_tmp2 * std::cosh(Scalar(1.0) * _tmp1) +
       _tmp2 * std::cosh(Scalar(0.1034955) * _tmp0 *
                         (-_tmp1 * _tmp33 -
                          std::sqrt(Scalar(std::pow(Scalar(-_tmp20 + p_b(0, 0)), Scalar(2)) +
                                           std::pow(Scalar(-_tmp32 + p_b(1, 0)), Scalar(2)))))));
  _res(1, 0) = _tmp154 * (-Scalar(1.0) * _tmp153 * std::cosh(_tmp149) -
                          (-Scalar(0.1034955) * _tmp151 * _tmp155 +
                           _tmp156 * (-_tmp148 * _tmp158 - _tmp153 * _tmp154)) *
                              std::cosh(_tmp157)) +
               _tmp158 * (-std::sinh(_tmp149) - std::sinh(_tmp157));
  _res(2, 0) = _tmp168 * (-Scalar(1.0) * _tmp177 * std::cosh(_tmp167) -
                          (-Scalar(0.1034955) * _tmp169 * _tmp175 +
                           _tmp170 * (-_tmp166 * _tmp173 - _tmp168 * _tmp177)) *
                              std::cosh(_tmp171)) +
               _tmp173 * (-std::sinh(_tmp167) - std::sinh(_tmp171));
  _res(3, 0) = -_tmp172 * (-std::sinh(_tmp185) - std::sinh(_tmp186)) +
               _tmp182 * (-Scalar(1.0) * _tmp189 * std::cosh(_tmp186) -
                          (Scalar(0.1034955) * _tmp183 * _tmp188 +
                           _tmp184 * (_tmp172 * _tmp181 - _tmp182 * _tmp189)) *
                              std::cosh(_tmp185));

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
