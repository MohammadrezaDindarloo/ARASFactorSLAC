// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

#include <sym/rot3.h>

namespace sym {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: IK_residual_func_cost2_Nl9
 *
 * Args:
 *     fh1: Scalar
 *     fv1: Scalar
 *     DeltaRot: Rot3
 *     p_a: Matrix31
 *     p_b: Matrix31
 *     p_c: Matrix31
 *     p_d: Matrix31
 *     p_init0: Scalar
 *     p_init1: Scalar
 *     p_init2: Scalar
 *     rot_init_x: Scalar
 *     rot_init_y: Scalar
 *     rot_init_z: Scalar
 *     rot_init_w: Scalar
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix41
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 4, 1> IkResidualFuncCost2Nl9(
    const Scalar fh1, const Scalar fv1, const sym::Rot3<Scalar>& DeltaRot,
    const Eigen::Matrix<Scalar, 3, 1>& p_a, const Eigen::Matrix<Scalar, 3, 1>& p_b,
    const Eigen::Matrix<Scalar, 3, 1>& p_c, const Eigen::Matrix<Scalar, 3, 1>& p_d,
    const Scalar p_init0, const Scalar p_init1, const Scalar p_init2, const Scalar rot_init_x,
    const Scalar rot_init_y, const Scalar rot_init_z, const Scalar rot_init_w,
    const Scalar epsilon) {
  // Total ops: 498

  // Unused inputs
  (void)epsilon;

  // Input arrays
  const Eigen::Matrix<Scalar, 4, 1>& _DeltaRot = DeltaRot.Data();

  // Intermediate terms (158)
  const Scalar _tmp0 = _DeltaRot[0] * rot_init_w - _DeltaRot[1] * rot_init_z +
                       _DeltaRot[2] * rot_init_y + _DeltaRot[3] * rot_init_x;
  const Scalar _tmp1 = -_DeltaRot[0] * rot_init_y + _DeltaRot[1] * rot_init_x +
                       _DeltaRot[2] * rot_init_w + _DeltaRot[3] * rot_init_z;
  const Scalar _tmp2 = 2 * _tmp0 * _tmp1;
  const Scalar _tmp3 = _DeltaRot[0] * rot_init_z + _DeltaRot[1] * rot_init_w -
                       _DeltaRot[2] * rot_init_x + _DeltaRot[3] * rot_init_y;
  const Scalar _tmp4 = -2 * _DeltaRot[0] * rot_init_x - 2 * _DeltaRot[1] * rot_init_y -
                       2 * _DeltaRot[2] * rot_init_z + 2 * _DeltaRot[3] * rot_init_w;
  const Scalar _tmp5 = _tmp3 * _tmp4;
  const Scalar _tmp6 = Scalar(0.20999999999999999) * _tmp2 - Scalar(0.20999999999999999) * _tmp5;
  const Scalar _tmp7 = -2 * std::pow(_tmp3, Scalar(2));
  const Scalar _tmp8 = -2 * std::pow(_tmp0, Scalar(2));
  const Scalar _tmp9 = -Scalar(0.010999999999999999) * _tmp7 -
                       Scalar(0.010999999999999999) * _tmp8 + Scalar(-0.010999999999999999);
  const Scalar _tmp10 = 2 * _tmp3;
  const Scalar _tmp11 = _tmp1 * _tmp10;
  const Scalar _tmp12 = _tmp0 * _tmp4;
  const Scalar _tmp13 = Scalar(0.20999999999999999) * _tmp11 + Scalar(0.20999999999999999) * _tmp12;
  const Scalar _tmp14 = -_tmp13 + _tmp9;
  const Scalar _tmp15 = _tmp14 + _tmp6;
  const Scalar _tmp16 = 1 - 2 * std::pow(_tmp1, Scalar(2));
  const Scalar _tmp17 = Scalar(0.20999999999999999) * _tmp16 + Scalar(0.20999999999999999) * _tmp7;
  const Scalar _tmp18 = _tmp2 + _tmp5;
  const Scalar _tmp19 = -Scalar(0.010999999999999999) * _tmp18;
  const Scalar _tmp20 = _tmp0 * _tmp10;
  const Scalar _tmp21 = _tmp1 * _tmp4;
  const Scalar _tmp22 = Scalar(0.20999999999999999) * _tmp20 - Scalar(0.20999999999999999) * _tmp21;
  const Scalar _tmp23 = _tmp19 - _tmp22;
  const Scalar _tmp24 = _tmp17 + _tmp23;
  const Scalar _tmp25 = _tmp24 + p_init0;
  const Scalar _tmp26 = Scalar(0.20999999999999999) * _tmp16 + Scalar(0.20999999999999999) * _tmp8;
  const Scalar _tmp27 = -_tmp26;
  const Scalar _tmp28 = _tmp11 - _tmp12;
  const Scalar _tmp29 = -Scalar(0.010999999999999999) * _tmp28;
  const Scalar _tmp30 = Scalar(0.20999999999999999) * _tmp20 + Scalar(0.20999999999999999) * _tmp21;
  const Scalar _tmp31 = _tmp29 + _tmp30;
  const Scalar _tmp32 = _tmp27 + _tmp31;
  const Scalar _tmp33 = _tmp32 + p_init1;
  const Scalar _tmp34 = std::pow(Scalar(-_tmp25 + p_b(0, 0)), Scalar(2)) +
                        std::pow(Scalar(-_tmp33 + p_b(1, 0)), Scalar(2));
  const Scalar _tmp35 = Scalar(1.0) / (fh1);
  const Scalar _tmp36 = std::asinh(_tmp35 * fv1);
  const Scalar _tmp37 = Scalar(9.6622558468725703) * fh1;
  const Scalar _tmp38 = _tmp26 + _tmp31;
  const Scalar _tmp39 = _tmp38 + p_init1;
  const Scalar _tmp40 = _tmp39 - p_c(1, 0);
  const Scalar _tmp41 = _tmp19 + _tmp22;
  const Scalar _tmp42 = _tmp17 + _tmp41;
  const Scalar _tmp43 = _tmp42 + p_init0;
  const Scalar _tmp44 = _tmp43 - p_c(0, 0);
  const Scalar _tmp45 = Scalar(1.0) / (_tmp44);
  const Scalar _tmp46 = _tmp40 * _tmp45;
  const Scalar _tmp47 = _tmp29 - _tmp30;
  const Scalar _tmp48 = _tmp26 + _tmp47;
  const Scalar _tmp49 = _tmp48 + p_init1;
  const Scalar _tmp50 = _tmp49 - p_d(1, 0);
  const Scalar _tmp51 = -_tmp17;
  const Scalar _tmp52 = _tmp41 + _tmp51;
  const Scalar _tmp53 = _tmp52 + p_init0;
  const Scalar _tmp54 = _tmp53 - p_d(0, 0);
  const Scalar _tmp55 = std::pow(Scalar(std::pow(_tmp50, Scalar(2)) + std::pow(_tmp54, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp56 = _tmp50 * _tmp55;
  const Scalar _tmp57 = _tmp54 * _tmp55;
  const Scalar _tmp58 = Scalar(1.0) / (_tmp46 * _tmp57 - _tmp56);
  const Scalar _tmp59 =
      std::sqrt(Scalar(std::pow(_tmp40, Scalar(2)) + std::pow(_tmp44, Scalar(2))));
  const Scalar _tmp60 = Scalar(1.0) / (_tmp59);
  const Scalar _tmp61 = _tmp45 * _tmp59;
  const Scalar _tmp62 = _tmp61 * (-_tmp38 * _tmp44 * _tmp60 + _tmp40 * _tmp42 * _tmp60);
  const Scalar _tmp63 = _tmp58 * (_tmp48 * _tmp57 - _tmp52 * _tmp56 + _tmp57 * _tmp62);
  const Scalar _tmp64 = _tmp13 + _tmp9;
  const Scalar _tmp65 = _tmp6 + _tmp64;
  const Scalar _tmp66 = _tmp46 * _tmp65;
  const Scalar _tmp67 = -_tmp6;
  const Scalar _tmp68 = _tmp64 + _tmp67;
  const Scalar _tmp69 = _tmp58 * (_tmp56 * _tmp68 - _tmp57 * _tmp66);
  const Scalar _tmp70 = _tmp46 * _tmp69 + _tmp66;
  const Scalar _tmp71 = Scalar(1.0) * _tmp38;
  const Scalar _tmp72 = -_tmp71;
  const Scalar _tmp73 = Scalar(1.0) / (_tmp48 + _tmp72);
  const Scalar _tmp74 = Scalar(1.0) * _tmp42;
  const Scalar _tmp75 = _tmp73 * (-_tmp52 + _tmp74);
  const Scalar _tmp76 = _tmp58 * (_tmp57 * _tmp65 - _tmp57 * _tmp68);
  const Scalar _tmp77 = _tmp46 * _tmp76 - _tmp65 - _tmp70 * _tmp75;
  const Scalar _tmp78 = _tmp23 + _tmp51;
  const Scalar _tmp79 = _tmp78 + p_init0;
  const Scalar _tmp80 = _tmp79 - p_a(0, 0);
  const Scalar _tmp81 = _tmp27 + _tmp47;
  const Scalar _tmp82 = _tmp81 + p_init1;
  const Scalar _tmp83 = _tmp82 - p_a(1, 0);
  const Scalar _tmp84 = std::pow(Scalar(std::pow(_tmp80, Scalar(2)) + std::pow(_tmp83, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp85 = _tmp80 * _tmp84;
  const Scalar _tmp86 = _tmp83 * _tmp84;
  const Scalar _tmp87 = _tmp46 * _tmp85 - _tmp86;
  const Scalar _tmp88 = _tmp62 * _tmp85 - _tmp63 * _tmp87 - _tmp78 * _tmp86 + _tmp81 * _tmp85;
  const Scalar _tmp89 = _tmp14 + _tmp67;
  const Scalar _tmp90 = _tmp65 * _tmp85;
  const Scalar _tmp91 = -_tmp46 * _tmp90 - _tmp69 * _tmp87 + _tmp86 * _tmp89;
  const Scalar _tmp92 = -_tmp75 * _tmp91 - _tmp76 * _tmp87 - _tmp85 * _tmp89 + _tmp90;
  const Scalar _tmp93 = Scalar(1.0) / (_tmp92);
  const Scalar _tmp94 = _tmp88 * _tmp93;
  const Scalar _tmp95 = Scalar(1.0) / (_tmp88);
  const Scalar _tmp96 = _tmp92 * _tmp95;
  const Scalar _tmp97 = _tmp96 * (_tmp46 * _tmp63 - _tmp62 - _tmp77 * _tmp94);
  const Scalar _tmp98 = _tmp77 + _tmp97;
  const Scalar _tmp99 = _tmp85 * _tmp93;
  const Scalar _tmp100 = _tmp87 * _tmp93;
  const Scalar _tmp101 = -_tmp100 * _tmp98 - _tmp46;
  const Scalar _tmp102 = _tmp57 * _tmp58;
  const Scalar _tmp103 = _tmp33 - p_b(1, 0);
  const Scalar _tmp104 = _tmp25 - p_b(0, 0);
  const Scalar _tmp105 =
      std::pow(Scalar(std::pow(_tmp103, Scalar(2)) + std::pow(_tmp104, Scalar(2))),
               Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp106 = _tmp104 * _tmp105;
  const Scalar _tmp107 = _tmp106 * fh1;
  const Scalar _tmp108 = Scalar(1.0) * _tmp69;
  const Scalar _tmp109 = _tmp108 * _tmp75 - Scalar(1.0) * _tmp76;
  const Scalar _tmp110 = _tmp96 * (-_tmp109 * _tmp94 - Scalar(1.0) * _tmp63);
  const Scalar _tmp111 = _tmp109 + _tmp110;
  const Scalar _tmp112 = -_tmp100 * _tmp111 + Scalar(1.0);
  const Scalar _tmp113 = _tmp103 * _tmp105;
  const Scalar _tmp114 = _tmp113 * fh1;
  const Scalar _tmp115 = Scalar(43.164000000000001) - fv1;
  const Scalar _tmp116 = _tmp71 * _tmp75 + _tmp74;
  const Scalar _tmp117 = 0;
  const Scalar _tmp118 = _tmp117 * _tmp93;
  const Scalar _tmp119 = _tmp100 * _tmp117;
  const Scalar _tmp120 = Scalar(1.0) * _tmp95;
  const Scalar _tmp121 = fh1 * (-_tmp106 * _tmp32 + _tmp113 * _tmp24);
  const Scalar _tmp122 = -_tmp107 * _tmp61 * (_tmp101 * _tmp102 + _tmp98 * _tmp99 + Scalar(1.0)) -
                         _tmp114 * _tmp61 * (_tmp102 * _tmp112 + _tmp111 * _tmp99) -
                         _tmp115 * _tmp61 * (-_tmp102 * _tmp119 + _tmp118 * _tmp85) -
                         _tmp121 * _tmp61 * (-_tmp102 * _tmp120 * _tmp87 + _tmp120 * _tmp85);
  const Scalar _tmp123 = Scalar(1.0) / (_tmp122);
  const Scalar _tmp124 = _tmp72 + _tmp81;
  const Scalar _tmp125 = _tmp124 * _tmp75;
  const Scalar _tmp126 = Scalar(1.0) / (-_tmp125 + _tmp74 - _tmp78);
  const Scalar _tmp127 = Scalar(1.0) * _tmp126;
  const Scalar _tmp128 = _tmp91 * _tmp93;
  const Scalar _tmp129 = _tmp116 * _tmp126;
  const Scalar _tmp130 = -_tmp117 * _tmp128 - _tmp124 * _tmp129 + _tmp72;
  const Scalar _tmp131 = Scalar(1.0) * _tmp73;
  const Scalar _tmp132 = _tmp125 * _tmp127 + Scalar(1.0);
  const Scalar _tmp133 = _tmp127 * _tmp75;
  const Scalar _tmp134 = _tmp15 * fh1;
  const Scalar _tmp135 = -_tmp113 * _tmp134 - Scalar(3.29616) * _tmp28 - _tmp32 * fv1;
  const Scalar _tmp136 = _tmp124 * _tmp127;
  const Scalar _tmp137 = _tmp106 * _tmp134 + Scalar(3.29616) * _tmp18 + _tmp24 * fv1;
  const Scalar _tmp138 = -_tmp120 * _tmp91 + _tmp136 * _tmp96;
  const Scalar _tmp139 = _tmp127 * _tmp96;
  const Scalar _tmp140 = _tmp124 * _tmp126;
  const Scalar _tmp141 = -_tmp108 + _tmp110 * _tmp140 - _tmp111 * _tmp128;
  const Scalar _tmp142 = -_tmp128 * _tmp98 + _tmp140 * _tmp97 + _tmp70;
  const Scalar _tmp143 = std::asinh(
      _tmp123 * (Scalar(1.0) * _tmp107 * (_tmp127 * _tmp97 - _tmp131 * _tmp142) +
                 Scalar(1.0) * _tmp114 * (_tmp110 * _tmp127 - _tmp131 * _tmp141) +
                 Scalar(1.0) * _tmp115 * (-_tmp116 * _tmp127 - _tmp130 * _tmp131 + Scalar(1.0)) +
                 Scalar(1.0) * _tmp121 * (-_tmp131 * _tmp138 + _tmp139) +
                 Scalar(1.0) * _tmp135 * (-_tmp131 * _tmp132 + _tmp133) +
                 Scalar(1.0) * _tmp137 * (-_tmp127 + _tmp136 * _tmp73)));
  const Scalar _tmp144 = Scalar(9.6622558468725703) * _tmp122;
  const Scalar _tmp145 = std::pow(Scalar(-_tmp39 + p_c(1, 0)), Scalar(2)) +
                         std::pow(Scalar(-_tmp43 + p_c(0, 0)), Scalar(2));
  const Scalar _tmp146 = std::pow(Scalar(-_tmp49 + p_d(1, 0)), Scalar(2)) +
                         std::pow(Scalar(-_tmp53 + p_d(0, 0)), Scalar(2));
  const Scalar _tmp147 = _tmp127 * _tmp137;
  const Scalar _tmp148 = _tmp120 * _tmp121;
  const Scalar _tmp149 = _tmp101 * _tmp107 * _tmp58 + _tmp112 * _tmp114 * _tmp58 -
                         _tmp115 * _tmp119 * _tmp58 - _tmp148 * _tmp58 * _tmp87;
  const Scalar _tmp150 = Scalar(1.0) / (_tmp149);
  const Scalar _tmp151 =
      std::asinh(_tmp150 * (_tmp107 * _tmp142 * _tmp73 + _tmp114 * _tmp141 * _tmp73 +
                            _tmp115 * _tmp130 * _tmp73 + _tmp121 * _tmp138 * _tmp73 -
                            _tmp124 * _tmp147 * _tmp73 + _tmp132 * _tmp135 * _tmp73));
  const Scalar _tmp152 = Scalar(9.6622558468725703) * _tmp149;
  const Scalar _tmp153 = std::pow(Scalar(-_tmp79 + p_a(0, 0)), Scalar(2)) +
                         std::pow(Scalar(-_tmp82 + p_a(1, 0)), Scalar(2));
  const Scalar _tmp154 =
      _tmp107 * _tmp93 * _tmp98 + _tmp111 * _tmp114 * _tmp93 + _tmp115 * _tmp118 + _tmp148;
  const Scalar _tmp155 = Scalar(1.0) / (_tmp154);
  const Scalar _tmp156 =
      std::asinh(_tmp155 * (-_tmp107 * _tmp126 * _tmp97 - _tmp110 * _tmp114 * _tmp126 +
                            _tmp115 * _tmp129 - _tmp121 * _tmp139 - _tmp133 * _tmp135 + _tmp147));
  const Scalar _tmp157 = Scalar(9.6622558468725703) * _tmp154;

  // Output terms (1)
  Eigen::Matrix<Scalar, 4, 1> _res;

  _res(0, 0) =
      _tmp37 * (-std::sinh(Scalar(1.0) * _tmp36) -
                std::sinh(Scalar(0.1034955) * _tmp35 * (-std::sqrt(_tmp34) - _tmp36 * _tmp37))) -
      std::sqrt(Scalar(_tmp34 + std::pow(Scalar(-_tmp15 + p_b(2, 0) - p_init2), Scalar(2))));
  _res(1, 0) =
      _tmp144 *
          (-std::sinh(Scalar(1.0) * _tmp143) -
           std::sinh(Scalar(0.1034955) * _tmp123 * (-_tmp143 * _tmp144 - std::sqrt(_tmp145)))) -
      std::sqrt(Scalar(_tmp145 + std::pow(Scalar(-_tmp65 + p_c(2, 0) - p_init2), Scalar(2))));
  _res(2, 0) =
      _tmp152 *
          (-std::sinh(Scalar(1.0) * _tmp151) -
           std::sinh(Scalar(0.1034955) * _tmp150 * (-std::sqrt(_tmp146) - _tmp151 * _tmp152))) -
      std::sqrt(Scalar(_tmp146 + std::pow(Scalar(-_tmp68 + p_d(2, 0) - p_init2), Scalar(2))));
  _res(3, 0) =
      _tmp157 *
          (-std::sinh(Scalar(1.0) * _tmp156) -
           std::sinh(Scalar(0.1034955) * _tmp155 * (-std::sqrt(_tmp153) - _tmp156 * _tmp157))) -
      std::sqrt(Scalar(_tmp153 + std::pow(Scalar(-_tmp89 + p_a(2, 0) - p_init2), Scalar(2))));

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
