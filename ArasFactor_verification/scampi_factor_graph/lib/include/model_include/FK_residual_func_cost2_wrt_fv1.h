// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

#include <sym/rot3.h>

namespace sym {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: FK_residual_func_cost2_wrt_fv1
 *
 * Args:
 *     fh1: Scalar
 *     fv1: Scalar
 *     p_a: Matrix31
 *     p_b: Matrix31
 *     p_c: Matrix31
 *     p_d: Matrix31
 *     DeltaRot: Rot3
 *     position_vector: Matrix31
 *     Rot_init: Rot3
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix41
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 4, 1> FkResidualFuncCost2WrtFv1(
    const Scalar fh1, const Scalar fv1, const Eigen::Matrix<Scalar, 3, 1>& p_a,
    const Eigen::Matrix<Scalar, 3, 1>& p_b, const Eigen::Matrix<Scalar, 3, 1>& p_c,
    const Eigen::Matrix<Scalar, 3, 1>& p_d, const sym::Rot3<Scalar>& DeltaRot,
    const Eigen::Matrix<Scalar, 3, 1>& position_vector, const sym::Rot3<Scalar>& Rot_init,
    const Scalar epsilon) {
  // Total ops: 575

  // Unused inputs
  (void)epsilon;

  // Input arrays
  const Eigen::Matrix<Scalar, 4, 1>& _DeltaRot = DeltaRot.Data();
  const Eigen::Matrix<Scalar, 4, 1>& _Rot_init = Rot_init.Data();

  // Intermediate terms (188)
  const Scalar _tmp0 = Scalar(1.0) / (fh1);
  const Scalar _tmp1 = _DeltaRot[0] * _Rot_init[3] - _DeltaRot[1] * _Rot_init[2] +
                       _DeltaRot[2] * _Rot_init[1] + _DeltaRot[3] * _Rot_init[0];
  const Scalar _tmp2 = -2 * std::pow(_tmp1, Scalar(2));
  const Scalar _tmp3 = -_DeltaRot[0] * _Rot_init[1] + _DeltaRot[1] * _Rot_init[0] +
                       _DeltaRot[2] * _Rot_init[3] + _DeltaRot[3] * _Rot_init[2];
  const Scalar _tmp4 = -2 * std::pow(_tmp3, Scalar(2));
  const Scalar _tmp5 = Scalar(0.20999999999999999) * _tmp2 + Scalar(0.20999999999999999) * _tmp4 +
                       Scalar(0.20999999999999999);
  const Scalar _tmp6 = -_tmp5;
  const Scalar _tmp7 = _DeltaRot[0] * _Rot_init[2] + _DeltaRot[1] * _Rot_init[3] -
                       _DeltaRot[2] * _Rot_init[0] + _DeltaRot[3] * _Rot_init[1];
  const Scalar _tmp8 = 2 * _tmp1;
  const Scalar _tmp9 = _tmp7 * _tmp8;
  const Scalar _tmp10 = -2 * _DeltaRot[0] * _Rot_init[0] - 2 * _DeltaRot[1] * _Rot_init[1] -
                        2 * _DeltaRot[2] * _Rot_init[2] + 2 * _DeltaRot[3] * _Rot_init[3];
  const Scalar _tmp11 = _tmp10 * _tmp3;
  const Scalar _tmp12 = Scalar(0.20999999999999999) * _tmp11 + Scalar(0.20999999999999999) * _tmp9;
  const Scalar _tmp13 = 2 * _tmp3 * _tmp7;
  const Scalar _tmp14 = _tmp1 * _tmp10;
  const Scalar _tmp15 = _tmp13 - _tmp14;
  const Scalar _tmp16 = Scalar(0.010999999999999999) * _tmp15;
  const Scalar _tmp17 = -_tmp16;
  const Scalar _tmp18 = -_tmp12 + _tmp17;
  const Scalar _tmp19 = _tmp18 + _tmp6;
  const Scalar _tmp20 = _tmp19 + position_vector(1, 0);
  const Scalar _tmp21 = 1 - 2 * std::pow(_tmp7, Scalar(2));
  const Scalar _tmp22 = Scalar(0.20999999999999999) * _tmp21 + Scalar(0.20999999999999999) * _tmp4;
  const Scalar _tmp23 = -_tmp22;
  const Scalar _tmp24 = _tmp3 * _tmp8;
  const Scalar _tmp25 = _tmp10 * _tmp7;
  const Scalar _tmp26 = _tmp24 + _tmp25;
  const Scalar _tmp27 = -Scalar(0.010999999999999999) * _tmp26;
  const Scalar _tmp28 = -Scalar(0.20999999999999999) * _tmp11 + Scalar(0.20999999999999999) * _tmp9;
  const Scalar _tmp29 = _tmp27 - _tmp28;
  const Scalar _tmp30 = _tmp23 + _tmp29;
  const Scalar _tmp31 = _tmp30 + position_vector(0, 0);
  const Scalar _tmp32 = std::asinh(_tmp0 * fv1);
  const Scalar _tmp33 = Scalar(9.6622558468725703) * fh1;
  const Scalar _tmp34 = Scalar(1.0) * _tmp0 /
                        std::sqrt(Scalar(1 + std::pow(fv1, Scalar(2)) / std::pow(fh1, Scalar(2))));
  const Scalar _tmp35 = _tmp12 + _tmp17 + _tmp6;
  const Scalar _tmp36 = _tmp35 + position_vector(1, 0);
  const Scalar _tmp37 = _tmp22 + _tmp29;
  const Scalar _tmp38 = _tmp37 + position_vector(0, 0);
  const Scalar _tmp39 = _tmp31 - p_a(0, 0);
  const Scalar _tmp40 = _tmp20 - p_a(1, 0);
  const Scalar _tmp41 = std::pow(Scalar(std::pow(_tmp39, Scalar(2)) + std::pow(_tmp40, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp42 = _tmp39 * _tmp41;
  const Scalar _tmp43 = Scalar(0.20999999999999999) * _tmp13 + Scalar(0.20999999999999999) * _tmp14;
  const Scalar _tmp44 = -_tmp43;
  const Scalar _tmp45 =
      -Scalar(0.010999999999999999) * _tmp2 - Scalar(0.010999999999999999) * _tmp21;
  const Scalar _tmp46 = Scalar(0.20999999999999999) * _tmp24 - Scalar(0.20999999999999999) * _tmp25;
  const Scalar _tmp47 = _tmp45 - _tmp46;
  const Scalar _tmp48 = fh1 * (_tmp44 + _tmp47);
  const Scalar _tmp49 = Scalar(3.29616) * _tmp26 + _tmp30 * fv1 + _tmp42 * _tmp48;
  const Scalar _tmp50 = _tmp27 + _tmp28;
  const Scalar _tmp51 = _tmp23 + _tmp50;
  const Scalar _tmp52 = Scalar(1.0) * _tmp37;
  const Scalar _tmp53 = Scalar(1.0) * _tmp35;
  const Scalar _tmp54 = -_tmp53;
  const Scalar _tmp55 = _tmp18 + _tmp5;
  const Scalar _tmp56 = _tmp54 + _tmp55;
  const Scalar _tmp57 = _tmp12 + _tmp5;
  const Scalar _tmp58 = _tmp17 + _tmp57;
  const Scalar _tmp59 = Scalar(1.0) / (_tmp54 + _tmp58);
  const Scalar _tmp60 = _tmp22 + _tmp50;
  const Scalar _tmp61 = _tmp52 - _tmp60;
  const Scalar _tmp62 = _tmp59 * _tmp61;
  const Scalar _tmp63 = _tmp56 * _tmp62;
  const Scalar _tmp64 = Scalar(1.0) / (-_tmp51 + _tmp52 - _tmp63);
  const Scalar _tmp65 = Scalar(1.0) * _tmp64;
  const Scalar _tmp66 = _tmp56 * _tmp59;
  const Scalar _tmp67 = Scalar(1.0) * _tmp65 * _tmp66 - Scalar(1.0) * _tmp65;
  const Scalar _tmp68 = Scalar(43.164000000000001) - fv1;
  const Scalar _tmp69 = _tmp52 + _tmp53 * _tmp62;
  const Scalar _tmp70 = _tmp43 + _tmp47;
  const Scalar _tmp71 = _tmp51 + position_vector(0, 0);
  const Scalar _tmp72 = _tmp71 - p_d(0, 0);
  const Scalar _tmp73 = _tmp55 + position_vector(1, 0);
  const Scalar _tmp74 = _tmp73 - p_d(1, 0);
  const Scalar _tmp75 = std::pow(Scalar(std::pow(_tmp72, Scalar(2)) + std::pow(_tmp74, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp76 = _tmp74 * _tmp75;
  const Scalar _tmp77 = _tmp38 - p_b(0, 0);
  const Scalar _tmp78 = Scalar(1.0) / (_tmp77);
  const Scalar _tmp79 = _tmp36 - p_b(1, 0);
  const Scalar _tmp80 = _tmp78 * _tmp79;
  const Scalar _tmp81 = _tmp45 + _tmp46;
  const Scalar _tmp82 = _tmp44 + _tmp81;
  const Scalar _tmp83 = _tmp60 + position_vector(0, 0);
  const Scalar _tmp84 = _tmp83 - p_c(0, 0);
  const Scalar _tmp85 = _tmp58 + position_vector(1, 0);
  const Scalar _tmp86 = _tmp85 - p_c(1, 0);
  const Scalar _tmp87 = std::pow(Scalar(std::pow(_tmp84, Scalar(2)) + std::pow(_tmp86, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp88 = _tmp84 * _tmp87;
  const Scalar _tmp89 = _tmp82 * _tmp88;
  const Scalar _tmp90 = _tmp43 + _tmp81;
  const Scalar _tmp91 = _tmp86 * _tmp87;
  const Scalar _tmp92 = -_tmp80 * _tmp89 + _tmp90 * _tmp91;
  const Scalar _tmp93 = _tmp72 * _tmp75;
  const Scalar _tmp94 = -_tmp76 + _tmp80 * _tmp93;
  const Scalar _tmp95 = Scalar(1.0) / (_tmp80 * _tmp88 - _tmp91);
  const Scalar _tmp96 = _tmp94 * _tmp95;
  const Scalar _tmp97 = _tmp80 * _tmp82;
  const Scalar _tmp98 = _tmp70 * _tmp76 - _tmp92 * _tmp96 - _tmp93 * _tmp97;
  const Scalar _tmp99 = -_tmp88 * _tmp90 + _tmp89;
  const Scalar _tmp100 = -_tmp62 * _tmp98 - _tmp70 * _tmp93 + _tmp82 * _tmp93 - _tmp96 * _tmp99;
  const Scalar _tmp101 = Scalar(1.0) / (_tmp100);
  const Scalar _tmp102 = 0;
  const Scalar _tmp103 = _tmp64 * _tmp69;
  const Scalar _tmp104 = _tmp59 * (-_tmp102 * _tmp98 - _tmp103 * _tmp56 + _tmp54);
  const Scalar _tmp105 = -Scalar(1.0) * _tmp104 - Scalar(1.0) * _tmp65 * _tmp69 + Scalar(1.0);
  const Scalar _tmp106 =
      std::sqrt(Scalar(std::pow(_tmp77, Scalar(2)) + std::pow(_tmp79, Scalar(2))));
  const Scalar _tmp107 = Scalar(1.0) / (_tmp106);
  const Scalar _tmp108 = _tmp106 * _tmp78;
  const Scalar _tmp109 = _tmp108 * (-_tmp107 * _tmp35 * _tmp77 + _tmp107 * _tmp37 * _tmp79);
  const Scalar _tmp110 = _tmp109 * _tmp88 + _tmp58 * _tmp88 - _tmp60 * _tmp91;
  const Scalar _tmp111 = _tmp109 * _tmp93 - _tmp110 * _tmp96 - _tmp51 * _tmp76 + _tmp55 * _tmp93;
  const Scalar _tmp112 = Scalar(1.0) / (_tmp111);
  const Scalar _tmp113 = Scalar(1.0) * _tmp112;
  const Scalar _tmp114 = _tmp100 * _tmp112;
  const Scalar _tmp115 = _tmp114 * _tmp65;
  const Scalar _tmp116 = -_tmp113 * _tmp98 + _tmp115 * _tmp56;
  const Scalar _tmp117 = Scalar(1.0) * _tmp59;
  const Scalar _tmp118 = _tmp40 * _tmp41;
  const Scalar _tmp119 = fh1 * (_tmp118 * _tmp30 - _tmp19 * _tmp42);
  const Scalar _tmp120 = -_tmp118 * _tmp48 - Scalar(3.29616) * _tmp15 - _tmp19 * fv1;
  const Scalar _tmp121 = _tmp59 * (_tmp63 * _tmp65 + Scalar(1.0));
  const Scalar _tmp122 = _tmp62 * _tmp65;
  const Scalar _tmp123 = -Scalar(1.0) * _tmp121 + Scalar(1.0) * _tmp122;
  const Scalar _tmp124 = Scalar(1.0) * _tmp95;
  const Scalar _tmp125 = _tmp117 * _tmp61 * _tmp92 * _tmp95 - _tmp124 * _tmp99;
  const Scalar _tmp126 = _tmp101 * _tmp111;
  const Scalar _tmp127 = _tmp114 * (-_tmp110 * _tmp124 - _tmp125 * _tmp126);
  const Scalar _tmp128 = _tmp56 * _tmp64;
  const Scalar _tmp129 = _tmp101 * (_tmp125 + _tmp127);
  const Scalar _tmp130 = -_tmp124 * _tmp92 + _tmp127 * _tmp128 - _tmp129 * _tmp98;
  const Scalar _tmp131 = _tmp118 * fh1;
  const Scalar _tmp132 = _tmp80 * _tmp95;
  const Scalar _tmp133 = _tmp132 * _tmp92 + _tmp97;
  const Scalar _tmp134 = _tmp132 * _tmp99 - _tmp133 * _tmp62 - _tmp82;
  const Scalar _tmp135 = _tmp114 * (-_tmp109 + _tmp110 * _tmp132 - _tmp126 * _tmp134);
  const Scalar _tmp136 = _tmp101 * (_tmp134 + _tmp135);
  const Scalar _tmp137 = _tmp128 * _tmp135 + _tmp133 - _tmp136 * _tmp98;
  const Scalar _tmp138 = _tmp42 * fh1;
  const Scalar _tmp139 =
      _tmp105 * _tmp68 + Scalar(1.0) * _tmp119 * (_tmp115 - _tmp116 * _tmp117) + _tmp120 * _tmp123 +
      Scalar(1.0) * _tmp131 * (-_tmp117 * _tmp130 + _tmp127 * _tmp65) +
      Scalar(1.0) * _tmp138 * (-_tmp117 * _tmp137 + _tmp135 * _tmp65) + _tmp49 * _tmp67;
  const Scalar _tmp140 = -_tmp136 * _tmp94 - _tmp80;
  const Scalar _tmp141 = _tmp88 * _tmp95;
  const Scalar _tmp142 = -_tmp129 * _tmp94 + Scalar(1.0);
  const Scalar _tmp143 = _tmp102 * _tmp96;
  const Scalar _tmp144 = _tmp108 * (_tmp102 * _tmp93 - _tmp143 * _tmp88);
  const Scalar _tmp145 = -_tmp108 * _tmp119 * (-_tmp113 * _tmp88 * _tmp96 + _tmp113 * _tmp93) -
                         _tmp108 * _tmp131 * (_tmp129 * _tmp93 + _tmp141 * _tmp142) -
                         _tmp108 * _tmp138 * (_tmp136 * _tmp93 + _tmp140 * _tmp141 + Scalar(1.0)) -
                         _tmp144 * _tmp68;
  const Scalar _tmp146 = Scalar(1.0) / (_tmp145);
  const Scalar _tmp147 = std::asinh(_tmp139 * _tmp146);
  const Scalar _tmp148 = Scalar(9.6622558468725703) * _tmp145;
  const Scalar _tmp149 =
      -_tmp147 * _tmp148 - std::sqrt(Scalar(std::pow(Scalar(-_tmp36 + p_b(1, 0)), Scalar(2)) +
                                            std::pow(Scalar(-_tmp38 + p_b(0, 0)), Scalar(2))));
  const Scalar _tmp150 = Scalar(0.1034955) * _tmp146;
  const Scalar _tmp151 = _tmp149 * _tmp150;
  const Scalar _tmp152 = Scalar(1.0) * _tmp147;
  const Scalar _tmp153 = Scalar(9.6622558468725703) * _tmp144;
  const Scalar _tmp154 = std::pow(_tmp145, Scalar(-2));
  const Scalar _tmp155 = _tmp144 * _tmp154;
  const Scalar _tmp156 = _tmp16 + _tmp57;
  const Scalar _tmp157 =
      (-_tmp139 * _tmp155 + _tmp146 * (-_tmp105 + _tmp123 * _tmp156 + _tmp30 * _tmp67)) /
      std::sqrt(Scalar(std::pow(_tmp139, Scalar(2)) * _tmp154 + 1));
  const Scalar _tmp158 = _tmp113 * _tmp119;
  const Scalar _tmp159 = _tmp102 * _tmp68;
  const Scalar _tmp160 =
      _tmp131 * _tmp142 * _tmp95 + _tmp138 * _tmp140 * _tmp95 - _tmp158 * _tmp96 - _tmp159 * _tmp96;
  const Scalar _tmp161 = Scalar(1.0) / (_tmp160);
  const Scalar _tmp162 = _tmp49 * _tmp65;
  const Scalar _tmp163 = _tmp104 * _tmp68 + _tmp116 * _tmp119 * _tmp59 + _tmp120 * _tmp121 +
                         _tmp130 * _tmp131 * _tmp59 + _tmp137 * _tmp138 * _tmp59 - _tmp162 * _tmp66;
  const Scalar _tmp164 = std::asinh(_tmp161 * _tmp163);
  const Scalar _tmp165 = Scalar(1.0) * _tmp164;
  const Scalar _tmp166 = std::pow(_tmp160, Scalar(-2));
  const Scalar _tmp167 = _tmp30 * _tmp65;
  const Scalar _tmp168 = _tmp143 * _tmp166;
  const Scalar _tmp169 =
      (_tmp161 * (-_tmp104 + _tmp121 * _tmp156 - _tmp167 * _tmp66) - _tmp163 * _tmp168) /
      std::sqrt(Scalar(std::pow(_tmp163, Scalar(2)) * _tmp166 + 1));
  const Scalar _tmp170 = Scalar(9.6622558468725703) * _tmp160;
  const Scalar _tmp171 =
      -_tmp164 * _tmp170 - std::sqrt(Scalar(std::pow(Scalar(-_tmp83 + p_c(0, 0)), Scalar(2)) +
                                            std::pow(Scalar(-_tmp85 + p_c(1, 0)), Scalar(2))));
  const Scalar _tmp172 = Scalar(9.6622558468725703) * _tmp102;
  const Scalar _tmp173 = _tmp172 * _tmp96;
  const Scalar _tmp174 = Scalar(0.1034955) * _tmp161;
  const Scalar _tmp175 = _tmp171 * _tmp174;
  const Scalar _tmp176 = _tmp129 * _tmp131 + _tmp136 * _tmp138 + _tmp158 + _tmp159;
  const Scalar _tmp177 = Scalar(1.0) / (_tmp176);
  const Scalar _tmp178 = _tmp103 * _tmp68 - _tmp115 * _tmp119 - _tmp120 * _tmp122 -
                         _tmp127 * _tmp131 * _tmp64 - _tmp135 * _tmp138 * _tmp64 + _tmp162;
  const Scalar _tmp179 = std::asinh(_tmp177 * _tmp178);
  const Scalar _tmp180 = Scalar(1.0) * _tmp179;
  const Scalar _tmp181 = Scalar(9.6622558468725703) * _tmp176;
  const Scalar _tmp182 =
      -_tmp179 * _tmp181 - std::sqrt(Scalar(std::pow(Scalar(-_tmp71 + p_d(0, 0)), Scalar(2)) +
                                            std::pow(Scalar(-_tmp73 + p_d(1, 0)), Scalar(2))));
  const Scalar _tmp183 = Scalar(0.1034955) * _tmp177;
  const Scalar _tmp184 = _tmp182 * _tmp183;
  const Scalar _tmp185 = std::pow(_tmp176, Scalar(-2));
  const Scalar _tmp186 = _tmp102 * _tmp185;
  const Scalar _tmp187 = (_tmp177 * (-_tmp103 - _tmp122 * _tmp156 + _tmp167) + _tmp178 * _tmp186) /
                         std::sqrt(Scalar(std::pow(_tmp178, Scalar(2)) * _tmp185 + 1));

  // Output terms (1)
  Eigen::Matrix<Scalar, 4, 1> _res;

  _res(0, 0) =
      _tmp33 *
      (-_tmp34 * std::cosh(Scalar(1.0) * _tmp32) +
       _tmp34 * std::cosh(Scalar(0.1034955) * _tmp0 *
                          (-_tmp32 * _tmp33 -
                           std::sqrt(Scalar(std::pow(Scalar(-_tmp20 + p_a(1, 0)), Scalar(2)) +
                                            std::pow(Scalar(-_tmp31 + p_a(0, 0)), Scalar(2)))))));
  _res(1, 0) = _tmp148 * (-Scalar(1.0) * _tmp157 * std::cosh(_tmp152) -
                          (-Scalar(0.1034955) * _tmp149 * _tmp155 +
                           _tmp150 * (-_tmp147 * _tmp153 - _tmp148 * _tmp157)) *
                              std::cosh(_tmp151)) +
               _tmp153 * (-std::sinh(_tmp151) - std::sinh(_tmp152));
  _res(2, 0) = _tmp170 * (-Scalar(1.0) * _tmp169 * std::cosh(_tmp165) -
                          (-Scalar(0.1034955) * _tmp168 * _tmp171 +
                           _tmp174 * (-_tmp164 * _tmp173 - _tmp169 * _tmp170)) *
                              std::cosh(_tmp175)) +
               _tmp173 * (-std::sinh(_tmp165) - std::sinh(_tmp175));
  _res(3, 0) = -_tmp172 * (-std::sinh(_tmp180) - std::sinh(_tmp184)) +
               _tmp181 * (-Scalar(1.0) * _tmp187 * std::cosh(_tmp180) -
                          (Scalar(0.1034955) * _tmp182 * _tmp186 +
                           _tmp183 * (_tmp172 * _tmp179 - _tmp181 * _tmp187)) *
                              std::cosh(_tmp184));

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
