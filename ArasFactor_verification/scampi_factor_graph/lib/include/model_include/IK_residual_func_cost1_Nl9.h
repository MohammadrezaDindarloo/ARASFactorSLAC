// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

#include <sym/rot3.h>

namespace sym {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: IK_residual_func_cost1_Nl9
 *
 * Args:
 *     fh1: Scalar
 *     fv1: Scalar
 *     DeltaRot: Rot3
 *     position_vector: Matrix31
 *     Rot_init: Rot3
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix41
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 4, 1> IkResidualFuncCost1Nl9(
    const Scalar fh1, const Scalar fv1, const sym::Rot3<Scalar>& DeltaRot,
    const Eigen::Matrix<Scalar, 3, 1>& position_vector, const sym::Rot3<Scalar>& Rot_init,
    const Scalar epsilon) {
  // Total ops: 506

  // Unused inputs
  (void)epsilon;

  // Input arrays
  const Eigen::Matrix<Scalar, 4, 1>& _DeltaRot = DeltaRot.Data();
  const Eigen::Matrix<Scalar, 4, 1>& _Rot_init = Rot_init.Data();

  // Intermediate terms (157)
  const Scalar _tmp0 = Scalar(1.0) / (fh1);
  const Scalar _tmp1 = _DeltaRot[0] * _Rot_init[3] - _DeltaRot[1] * _Rot_init[2] +
                       _DeltaRot[2] * _Rot_init[1] + _DeltaRot[3] * _Rot_init[0];
  const Scalar _tmp2 = -2 * std::pow(_tmp1, Scalar(2));
  const Scalar _tmp3 = -_DeltaRot[0] * _Rot_init[1] + _DeltaRot[1] * _Rot_init[0] +
                       _DeltaRot[2] * _Rot_init[3] + _DeltaRot[3] * _Rot_init[2];
  const Scalar _tmp4 = 1 - 2 * std::pow(_tmp3, Scalar(2));
  const Scalar _tmp5 = Scalar(0.20999999999999999) * _tmp2 + Scalar(0.20999999999999999) * _tmp4;
  const Scalar _tmp6 = -_tmp5;
  const Scalar _tmp7 = _DeltaRot[0] * _Rot_init[2] + _DeltaRot[1] * _Rot_init[3] -
                       _DeltaRot[2] * _Rot_init[0] + _DeltaRot[3] * _Rot_init[1];
  const Scalar _tmp8 = 2 * _tmp7;
  const Scalar _tmp9 = _tmp3 * _tmp8;
  const Scalar _tmp10 = -2 * _DeltaRot[0] * _Rot_init[0] - 2 * _DeltaRot[1] * _Rot_init[1] -
                        2 * _DeltaRot[2] * _Rot_init[2] + 2 * _DeltaRot[3] * _Rot_init[3];
  const Scalar _tmp11 = _tmp1 * _tmp10;
  const Scalar _tmp12 = -_tmp11 + _tmp9;
  const Scalar _tmp13 = -Scalar(0.010999999999999999) * _tmp12;
  const Scalar _tmp14 = _tmp1 * _tmp8;
  const Scalar _tmp15 = _tmp10 * _tmp3;
  const Scalar _tmp16 = Scalar(0.20999999999999999) * _tmp14 + Scalar(0.20999999999999999) * _tmp15;
  const Scalar _tmp17 = _tmp13 + _tmp16;
  const Scalar _tmp18 = _tmp17 + _tmp6;
  const Scalar _tmp19 = _tmp18 + position_vector(1, 0);
  const Scalar _tmp20 = -2 * std::pow(_tmp7, Scalar(2));
  const Scalar _tmp21 = Scalar(0.20999999999999999) * _tmp20 + Scalar(0.20999999999999999) * _tmp4;
  const Scalar _tmp22 = 2 * _tmp1 * _tmp3;
  const Scalar _tmp23 = _tmp10 * _tmp7;
  const Scalar _tmp24 = _tmp22 + _tmp23;
  const Scalar _tmp25 = -Scalar(0.010999999999999999) * _tmp24;
  const Scalar _tmp26 = Scalar(0.20999999999999999) * _tmp14 - Scalar(0.20999999999999999) * _tmp15;
  const Scalar _tmp27 = _tmp25 - _tmp26;
  const Scalar _tmp28 = _tmp21 + _tmp27;
  const Scalar _tmp29 = _tmp28 + position_vector(0, 0);
  const Scalar _tmp30 = std::asinh(_tmp0 * fv1);
  const Scalar _tmp31 = Scalar(9.6622558468725703) * fh1;
  const Scalar _tmp32 = Scalar(0.20999999999999999) * _tmp11 + Scalar(0.20999999999999999) * _tmp9;
  const Scalar _tmp33 = -_tmp32;
  const Scalar _tmp34 = -Scalar(0.010999999999999999) * _tmp2 -
                        Scalar(0.010999999999999999) * _tmp20 + Scalar(-0.010999999999999999);
  const Scalar _tmp35 = Scalar(0.20999999999999999) * _tmp22 - Scalar(0.20999999999999999) * _tmp23;
  const Scalar _tmp36 = _tmp34 + _tmp35;
  const Scalar _tmp37 = _tmp33 + _tmp36;
  const Scalar _tmp38 = _tmp32 + _tmp36;
  const Scalar _tmp39 = -_tmp21;
  const Scalar _tmp40 = _tmp25 + _tmp26;
  const Scalar _tmp41 = _tmp39 + _tmp40;
  const Scalar _tmp42 = _tmp41 + position_vector(0, 0);
  const Scalar _tmp43 = _tmp42 + Scalar(1.7965602546229);
  const Scalar _tmp44 = _tmp13 - _tmp16;
  const Scalar _tmp45 = _tmp44 + _tmp5;
  const Scalar _tmp46 = _tmp45 + position_vector(1, 0);
  const Scalar _tmp47 = _tmp46 + Scalar(-4.83288938413423);
  const Scalar _tmp48 = std::pow(Scalar(std::pow(_tmp43, Scalar(2)) + std::pow(_tmp47, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp49 = _tmp43 * _tmp48;
  const Scalar _tmp50 = _tmp34 - _tmp35;
  const Scalar _tmp51 = _tmp32 + _tmp50;
  const Scalar _tmp52 = _tmp38 * _tmp49 - _tmp49 * _tmp51;
  const Scalar _tmp53 = _tmp47 * _tmp48;
  const Scalar _tmp54 = _tmp17 + _tmp5;
  const Scalar _tmp55 = _tmp54 + position_vector(1, 0);
  const Scalar _tmp56 = _tmp55 + Scalar(-4.7744369927459998);
  const Scalar _tmp57 = _tmp21 + _tmp40;
  const Scalar _tmp58 = _tmp57 + position_vector(0, 0);
  const Scalar _tmp59 = _tmp58 + Scalar(-2.7171519410699099);
  const Scalar _tmp60 = Scalar(1.0) / (_tmp59);
  const Scalar _tmp61 = _tmp56 * _tmp60;
  const Scalar _tmp62 = Scalar(1.0) / (_tmp49 * _tmp61 - _tmp53);
  const Scalar _tmp63 = _tmp61 * _tmp62;
  const Scalar _tmp64 = _tmp38 * _tmp61;
  const Scalar _tmp65 = -_tmp49 * _tmp64 + _tmp51 * _tmp53;
  const Scalar _tmp66 = _tmp63 * _tmp65 + _tmp64;
  const Scalar _tmp67 = Scalar(1.0) * _tmp54;
  const Scalar _tmp68 = -_tmp67;
  const Scalar _tmp69 = Scalar(1.0) / (_tmp45 + _tmp68);
  const Scalar _tmp70 = Scalar(1.0) * _tmp57;
  const Scalar _tmp71 = _tmp69 * (-_tmp41 + _tmp70);
  const Scalar _tmp72 = -_tmp38 + _tmp52 * _tmp63 - _tmp66 * _tmp71;
  const Scalar _tmp73 = _tmp33 + _tmp50;
  const Scalar _tmp74 = _tmp27 + _tmp39;
  const Scalar _tmp75 = _tmp74 + position_vector(0, 0);
  const Scalar _tmp76 = _tmp75 + Scalar(1.9874742031097401);
  const Scalar _tmp77 = _tmp44 + _tmp6;
  const Scalar _tmp78 = _tmp77 + position_vector(1, 0);
  const Scalar _tmp79 = _tmp78 + Scalar(8.3196563720703107);
  const Scalar _tmp80 = std::pow(Scalar(std::pow(_tmp76, Scalar(2)) + std::pow(_tmp79, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp81 = _tmp76 * _tmp80;
  const Scalar _tmp82 = _tmp79 * _tmp80;
  const Scalar _tmp83 = _tmp61 * _tmp81 - _tmp82;
  const Scalar _tmp84 = _tmp62 * _tmp83;
  const Scalar _tmp85 = -_tmp64 * _tmp81 - _tmp65 * _tmp84 + _tmp73 * _tmp82;
  const Scalar _tmp86 = _tmp38 * _tmp81 - _tmp52 * _tmp84 - _tmp71 * _tmp85 - _tmp73 * _tmp81;
  const Scalar _tmp87 = Scalar(1.0) / (_tmp86);
  const Scalar _tmp88 =
      std::sqrt(Scalar(std::pow(_tmp56, Scalar(2)) + std::pow(_tmp59, Scalar(2))));
  const Scalar _tmp89 = Scalar(1.0) / (_tmp88);
  const Scalar _tmp90 = _tmp60 * _tmp88;
  const Scalar _tmp91 = _tmp90 * (-_tmp54 * _tmp59 * _tmp89 + _tmp56 * _tmp57 * _tmp89);
  const Scalar _tmp92 = -_tmp41 * _tmp53 + _tmp45 * _tmp49 + _tmp49 * _tmp91;
  const Scalar _tmp93 = -_tmp74 * _tmp82 + _tmp77 * _tmp81 + _tmp81 * _tmp91 - _tmp84 * _tmp92;
  const Scalar _tmp94 = _tmp87 * _tmp93;
  const Scalar _tmp95 = Scalar(1.0) / (_tmp93);
  const Scalar _tmp96 = _tmp86 * _tmp95;
  const Scalar _tmp97 = _tmp96 * (_tmp63 * _tmp92 - _tmp72 * _tmp94 - _tmp91);
  const Scalar _tmp98 = _tmp72 + _tmp97;
  const Scalar _tmp99 = _tmp81 * _tmp87;
  const Scalar _tmp100 = _tmp83 * _tmp87;
  const Scalar _tmp101 = -_tmp100 * _tmp98 - _tmp61;
  const Scalar _tmp102 = _tmp49 * _tmp62;
  const Scalar _tmp103 = _tmp19 + Scalar(8.3885017487099702);
  const Scalar _tmp104 = _tmp29 + Scalar(-2.5193355532036801);
  const Scalar _tmp105 =
      std::pow(Scalar(std::pow(_tmp103, Scalar(2)) + std::pow(_tmp104, Scalar(2))),
               Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp106 = _tmp104 * _tmp105;
  const Scalar _tmp107 = _tmp106 * fh1;
  const Scalar _tmp108 = Scalar(1.0) * _tmp62;
  const Scalar _tmp109 = _tmp108 * _tmp65;
  const Scalar _tmp110 = -_tmp108 * _tmp52 + _tmp109 * _tmp71;
  const Scalar _tmp111 = _tmp96 * (-_tmp108 * _tmp92 - _tmp110 * _tmp94);
  const Scalar _tmp112 = _tmp110 + _tmp111;
  const Scalar _tmp113 = -_tmp100 * _tmp112 + Scalar(1.0);
  const Scalar _tmp114 = _tmp103 * _tmp105;
  const Scalar _tmp115 = _tmp114 * fh1;
  const Scalar _tmp116 = _tmp108 * _tmp83 * _tmp95;
  const Scalar _tmp117 = Scalar(1.0) * _tmp95;
  const Scalar _tmp118 = fh1 * (-_tmp106 * _tmp18 + _tmp114 * _tmp28);
  const Scalar _tmp119 = Scalar(43.164000000000001) - fv1;
  const Scalar _tmp120 = _tmp67 * _tmp71 + _tmp70;
  const Scalar _tmp121 = 0;
  const Scalar _tmp122 = _tmp121 * _tmp87;
  const Scalar _tmp123 = _tmp100 * _tmp121;
  const Scalar _tmp124 = -_tmp107 * _tmp90 * (_tmp101 * _tmp102 + _tmp98 * _tmp99 + Scalar(1.0)) -
                         _tmp115 * _tmp90 * (_tmp102 * _tmp113 + _tmp112 * _tmp99) -
                         _tmp118 * _tmp90 * (-_tmp116 * _tmp49 + _tmp117 * _tmp81) -
                         _tmp119 * _tmp90 * (-_tmp102 * _tmp123 + _tmp122 * _tmp81);
  const Scalar _tmp125 = Scalar(1.0) / (_tmp124);
  const Scalar _tmp126 = _tmp68 + _tmp77;
  const Scalar _tmp127 = _tmp126 * _tmp71;
  const Scalar _tmp128 = Scalar(1.0) / (-_tmp127 + _tmp70 - _tmp74);
  const Scalar _tmp129 = _tmp126 * _tmp128;
  const Scalar _tmp130 = _tmp85 * _tmp87;
  const Scalar _tmp131 = _tmp129 * _tmp97 - _tmp130 * _tmp98 + _tmp66;
  const Scalar _tmp132 = Scalar(1.0) * _tmp69;
  const Scalar _tmp133 = Scalar(1.0) * _tmp128;
  const Scalar _tmp134 = _tmp120 * _tmp128;
  const Scalar _tmp135 = _tmp69 * (-_tmp121 * _tmp130 - _tmp126 * _tmp134 + _tmp68);
  const Scalar _tmp136 = _tmp37 * fh1;
  const Scalar _tmp137 = _tmp106 * _tmp136 + Scalar(3.29616) * _tmp24 + _tmp28 * fv1;
  const Scalar _tmp138 = _tmp126 * _tmp69;
  const Scalar _tmp139 = _tmp133 * _tmp96;
  const Scalar _tmp140 = -_tmp117 * _tmp85 + _tmp126 * _tmp139;
  const Scalar _tmp141 = -_tmp109 + _tmp111 * _tmp129 - _tmp112 * _tmp130;
  const Scalar _tmp142 = -_tmp114 * _tmp136 - Scalar(3.29616) * _tmp12 - _tmp18 * fv1;
  const Scalar _tmp143 = _tmp127 * _tmp133 + Scalar(1.0);
  const Scalar _tmp144 = _tmp133 * _tmp71;
  const Scalar _tmp145 =
      std::asinh(_tmp125 * (Scalar(1.0) * _tmp107 * (-_tmp131 * _tmp132 + _tmp133 * _tmp97) +
                            Scalar(1.0) * _tmp115 * (_tmp111 * _tmp133 - _tmp132 * _tmp141) +
                            Scalar(1.0) * _tmp118 * (-_tmp132 * _tmp140 + _tmp139) +
                            Scalar(1.0) * _tmp119 *
                                (-_tmp120 * _tmp133 - Scalar(1.0) * _tmp135 + Scalar(1.0)) +
                            Scalar(1.0) * _tmp137 * (_tmp133 * _tmp138 - _tmp133) +
                            Scalar(1.0) * _tmp142 * (-_tmp132 * _tmp143 + _tmp144)));
  const Scalar _tmp146 = Scalar(9.6622558468725703) * _tmp124;
  const Scalar _tmp147 = _tmp133 * _tmp137;
  const Scalar _tmp148 = _tmp101 * _tmp107 * _tmp62 + _tmp113 * _tmp115 * _tmp62 -
                         _tmp116 * _tmp118 - _tmp119 * _tmp123 * _tmp62;
  const Scalar _tmp149 = Scalar(1.0) / (_tmp148);
  const Scalar _tmp150 =
      std::asinh(_tmp149 * (_tmp107 * _tmp131 * _tmp69 + _tmp115 * _tmp141 * _tmp69 +
                            _tmp118 * _tmp140 * _tmp69 + _tmp119 * _tmp135 - _tmp138 * _tmp147 +
                            _tmp142 * _tmp143 * _tmp69));
  const Scalar _tmp151 = Scalar(9.6622558468725703) * _tmp148;
  const Scalar _tmp152 = _tmp87 * fh1;
  const Scalar _tmp153 = _tmp106 * _tmp152 * _tmp98 + _tmp112 * _tmp114 * _tmp152 +
                         _tmp117 * _tmp118 + _tmp119 * _tmp122;
  const Scalar _tmp154 = Scalar(1.0) / (_tmp153);
  const Scalar _tmp155 =
      std::asinh(_tmp154 * (-_tmp107 * _tmp128 * _tmp97 - _tmp111 * _tmp115 * _tmp128 -
                            _tmp118 * _tmp139 + _tmp119 * _tmp134 - _tmp142 * _tmp144 + _tmp147));
  const Scalar _tmp156 = Scalar(9.6622558468725703) * _tmp153;

  // Output terms (1)
  Eigen::Matrix<Scalar, 4, 1> _res;

  _res(0, 0) =
      -_tmp31 *
          (Scalar(0.876505537412406) * _tmp0 + std::cosh(Scalar(1.0) * _tmp30) -
           std::cosh(
               Scalar(0.1034955) * _tmp0 *
               (-_tmp30 * _tmp31 -
                Scalar(8.3885017487099702) *
                    std::sqrt(Scalar(
                        Scalar(0.090199313518583735) *
                            std::pow(Scalar(1 - Scalar(0.39693005512043167) * _tmp29), Scalar(2)) +
                        std::pow(Scalar(-Scalar(0.11921079949155229) * _tmp19 - 1),
                                 Scalar(2))))))) +
      _tmp37 + position_vector(2, 0);
  _res(1, 0) =
      -_tmp146 *
          (Scalar(0.86564762886483004) * _tmp125 + std::cosh(Scalar(1.0) * _tmp145) -
           std::cosh(Scalar(0.1034955) * _tmp125 *
                     (-_tmp145 * _tmp146 -
                      Scalar(4.7744369927459998) *
                          std::sqrt(Scalar(
                              std::pow(Scalar(1 - Scalar(0.2094487793051498) * _tmp55), Scalar(2)) +
                              Scalar(0.32387954179207445) *
                                  std::pow(Scalar(1 - Scalar(0.36803241838814449) * _tmp58),
                                           Scalar(2))))))) +
      _tmp38 + position_vector(2, 0);
  _res(2, 0) =
      -_tmp151 *
          (Scalar(0.86627065637365697) * _tmp149 + std::cosh(Scalar(1.0) * _tmp150) -
           std::cosh(
               Scalar(0.1034955) * _tmp149 *
               (-_tmp150 * _tmp151 -
                Scalar(4.83288938413423) *
                    std::sqrt(Scalar(
                        std::pow(Scalar(1 - Scalar(0.20691555724053495) * _tmp46), Scalar(2)) +
                        Scalar(0.13818785160942856) *
                            std::pow(Scalar(-Scalar(0.55661923802822921) * _tmp42 - 1),
                                     Scalar(2))))))) +
      _tmp51 + position_vector(2, 0);
  _res(3, 0) =
      -_tmp156 *
          (Scalar(0.87679799777269396) * _tmp154 + std::cosh(Scalar(1.0) * _tmp155) -
           std::cosh(
               Scalar(0.1034955) * _tmp154 *
               (-_tmp155 * _tmp156 -
                Scalar(8.3196563720703107) *
                    std::sqrt(Scalar(
                        Scalar(0.057067943527034905) *
                            std::pow(Scalar(-Scalar(0.50315118477277876) * _tmp75 - 1), Scalar(2)) +
                        std::pow(Scalar(-Scalar(0.12019727201198747) * _tmp78 - 1),
                                 Scalar(2))))))) +
      _tmp73 + position_vector(2, 0);

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
