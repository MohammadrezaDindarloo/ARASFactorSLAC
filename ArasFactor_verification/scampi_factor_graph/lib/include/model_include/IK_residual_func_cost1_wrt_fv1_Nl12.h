// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

#include <sym/rot3.h>

namespace sym {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: IK_residual_func_cost1_wrt_fv1_Nl12
 *
 * Args:
 *     fh1: Scalar
 *     fv1: Scalar
 *     DeltaRot: Rot3
 *     position_vector: Matrix31
 *     Rot_init: Rot3
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix41
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 4, 1> IkResidualFuncCost1WrtFv1Nl12(
    const Scalar fh1, const Scalar fv1, const sym::Rot3<Scalar>& DeltaRot,
    const Eigen::Matrix<Scalar, 3, 1>& position_vector, const sym::Rot3<Scalar>& Rot_init,
    const Scalar epsilon) {
  // Total ops: 604

  // Unused inputs
  (void)epsilon;

  // Input arrays
  const Eigen::Matrix<Scalar, 4, 1>& _DeltaRot = DeltaRot.Data();
  const Eigen::Matrix<Scalar, 4, 1>& _Rot_init = Rot_init.Data();

  // Intermediate terms (186)
  const Scalar _tmp0 = Scalar(1.0) / (fh1);
  const Scalar _tmp1 = std::asinh(_tmp0 * fv1);
  const Scalar _tmp2 = Scalar(1.0) * _tmp0 /
                       std::sqrt(Scalar(1 + std::pow(fv1, Scalar(2)) / std::pow(fh1, Scalar(2))));
  const Scalar _tmp3 = _DeltaRot[0] * _Rot_init[2] + _DeltaRot[1] * _Rot_init[3] -
                       _DeltaRot[2] * _Rot_init[0] + _DeltaRot[3] * _Rot_init[1];
  const Scalar _tmp4 = _DeltaRot[0] * _Rot_init[3] - _DeltaRot[1] * _Rot_init[2] +
                       _DeltaRot[2] * _Rot_init[1] + _DeltaRot[3] * _Rot_init[0];
  const Scalar _tmp5 = 2 * _tmp3 * _tmp4;
  const Scalar _tmp6 = -_DeltaRot[0] * _Rot_init[1] + _DeltaRot[1] * _Rot_init[0] +
                       _DeltaRot[2] * _Rot_init[3] + _DeltaRot[3] * _Rot_init[2];
  const Scalar _tmp7 = -2 * _DeltaRot[0] * _Rot_init[0] - 2 * _DeltaRot[1] * _Rot_init[1] -
                       2 * _DeltaRot[2] * _Rot_init[2] + 2 * _DeltaRot[3] * _Rot_init[3];
  const Scalar _tmp8 = _tmp6 * _tmp7;
  const Scalar _tmp9 = Scalar(0.20999999999999999) * _tmp5 - Scalar(0.20999999999999999) * _tmp8;
  const Scalar _tmp10 = -2 * std::pow(_tmp3, Scalar(2));
  const Scalar _tmp11 = 1 - 2 * std::pow(_tmp6, Scalar(2));
  const Scalar _tmp12 = Scalar(0.20999999999999999) * _tmp10 + Scalar(0.20999999999999999) * _tmp11;
  const Scalar _tmp13 = 2 * _tmp6;
  const Scalar _tmp14 = _tmp13 * _tmp4;
  const Scalar _tmp15 = _tmp3 * _tmp7;
  const Scalar _tmp16 = _tmp14 + _tmp15;
  const Scalar _tmp17 = -Scalar(0.010999999999999999) * _tmp16;
  const Scalar _tmp18 = _tmp12 + _tmp17;
  const Scalar _tmp19 = _tmp18 + _tmp9;
  const Scalar _tmp20 = _tmp19 + position_vector(0, 0);
  const Scalar _tmp21 = Scalar(0.20999999999999999) * _tmp5 + Scalar(0.20999999999999999) * _tmp8;
  const Scalar _tmp22 = -2 * std::pow(_tmp4, Scalar(2));
  const Scalar _tmp23 = Scalar(0.20999999999999999) * _tmp11 + Scalar(0.20999999999999999) * _tmp22;
  const Scalar _tmp24 = _tmp13 * _tmp3;
  const Scalar _tmp25 = _tmp4 * _tmp7;
  const Scalar _tmp26 = _tmp24 - _tmp25;
  const Scalar _tmp27 = Scalar(0.010999999999999999) * _tmp26;
  const Scalar _tmp28 = -_tmp27;
  const Scalar _tmp29 = _tmp23 + _tmp28;
  const Scalar _tmp30 = _tmp21 + _tmp29;
  const Scalar _tmp31 = _tmp30 + position_vector(1, 0);
  const Scalar _tmp32 = Scalar(9.6622558468725703) * fh1;
  const Scalar _tmp33 = -_tmp21;
  const Scalar _tmp34 = -_tmp23;
  const Scalar _tmp35 = _tmp28 + _tmp34;
  const Scalar _tmp36 = _tmp33 + _tmp35;
  const Scalar _tmp37 = _tmp36 + position_vector(1, 0);
  const Scalar _tmp38 = _tmp37 + Scalar(8.3196563720703107);
  const Scalar _tmp39 = -_tmp9;
  const Scalar _tmp40 = -_tmp12 + _tmp17;
  const Scalar _tmp41 = _tmp39 + _tmp40;
  const Scalar _tmp42 = _tmp41 + position_vector(0, 0);
  const Scalar _tmp43 = _tmp42 + Scalar(1.9874742031097401);
  const Scalar _tmp44 =
      std::sqrt(Scalar(std::pow(_tmp38, Scalar(2)) + std::pow(_tmp43, Scalar(2))));
  const Scalar _tmp45 = Scalar(1.0) / (_tmp44);
  const Scalar _tmp46 = Scalar(1.0) / (_tmp43);
  const Scalar _tmp47 = _tmp44 * _tmp46;
  const Scalar _tmp48 = _tmp47 * (-_tmp36 * _tmp43 * _tmp45 + _tmp38 * _tmp41 * _tmp45);
  const Scalar _tmp49 = _tmp40 + _tmp9;
  const Scalar _tmp50 = _tmp49 + position_vector(0, 0);
  const Scalar _tmp51 = _tmp50 + Scalar(1.7965602546229);
  const Scalar _tmp52 = _tmp29 + _tmp33;
  const Scalar _tmp53 = _tmp52 + position_vector(1, 0);
  const Scalar _tmp54 = _tmp53 + Scalar(-4.83288938413423);
  const Scalar _tmp55 = std::pow(Scalar(std::pow(_tmp51, Scalar(2)) + std::pow(_tmp54, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp56 = _tmp51 * _tmp55;
  const Scalar _tmp57 = _tmp54 * _tmp55;
  const Scalar _tmp58 = _tmp38 * _tmp46;
  const Scalar _tmp59 = _tmp56 * _tmp58 - _tmp57;
  const Scalar _tmp60 = _tmp21 + _tmp35;
  const Scalar _tmp61 = _tmp60 + position_vector(1, 0);
  const Scalar _tmp62 = _tmp61 + Scalar(8.3885017487099702);
  const Scalar _tmp63 = _tmp18 + _tmp39;
  const Scalar _tmp64 = _tmp63 + position_vector(0, 0);
  const Scalar _tmp65 = _tmp64 + Scalar(-2.5193355532036801);
  const Scalar _tmp66 = std::pow(Scalar(std::pow(_tmp62, Scalar(2)) + std::pow(_tmp65, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp67 = _tmp62 * _tmp66;
  const Scalar _tmp68 = _tmp65 * _tmp66;
  const Scalar _tmp69 = Scalar(1.0) / (_tmp58 * _tmp68 - _tmp67);
  const Scalar _tmp70 = _tmp69 * (_tmp48 * _tmp68 + _tmp60 * _tmp68 - _tmp63 * _tmp67);
  const Scalar _tmp71 = _tmp48 * _tmp56 - _tmp49 * _tmp57 + _tmp52 * _tmp56 - _tmp59 * _tmp70;
  const Scalar _tmp72 = Scalar(1.0) / (_tmp71);
  const Scalar _tmp73 = Scalar(1.0) * _tmp72;
  const Scalar _tmp74 = _tmp68 * _tmp69;
  const Scalar _tmp75 = _tmp59 * _tmp74;
  const Scalar _tmp76 = _tmp31 + Scalar(-4.7744369927459998);
  const Scalar _tmp77 = _tmp20 + Scalar(-2.7171519410699099);
  const Scalar _tmp78 = std::pow(Scalar(std::pow(_tmp76, Scalar(2)) + std::pow(_tmp77, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp79 = _tmp76 * _tmp78;
  const Scalar _tmp80 = _tmp77 * _tmp78;
  const Scalar _tmp81 = fh1 * (_tmp19 * _tmp79 - _tmp30 * _tmp80);
  const Scalar _tmp82 = Scalar(0.20999999999999999) * _tmp14 - Scalar(0.20999999999999999) * _tmp15;
  const Scalar _tmp83 = -_tmp82;
  const Scalar _tmp84 = -Scalar(0.010999999999999999) * _tmp10 -
                        Scalar(0.010999999999999999) * _tmp22 + Scalar(-0.010999999999999999);
  const Scalar _tmp85 = Scalar(0.20999999999999999) * _tmp24 + Scalar(0.20999999999999999) * _tmp25;
  const Scalar _tmp86 = _tmp84 - _tmp85;
  const Scalar _tmp87 = _tmp83 + _tmp86;
  const Scalar _tmp88 = _tmp84 + _tmp85;
  const Scalar _tmp89 = _tmp83 + _tmp88;
  const Scalar _tmp90 = _tmp82 + _tmp86;
  const Scalar _tmp91 = _tmp69 * (_tmp68 * _tmp87 - _tmp68 * _tmp90);
  const Scalar _tmp92 = _tmp58 * _tmp87;
  const Scalar _tmp93 = _tmp69 * (_tmp67 * _tmp90 - _tmp68 * _tmp92);
  const Scalar _tmp94 = -_tmp56 * _tmp92 + _tmp57 * _tmp89 - _tmp59 * _tmp93;
  const Scalar _tmp95 = Scalar(1.0) * _tmp36;
  const Scalar _tmp96 = -_tmp95;
  const Scalar _tmp97 = Scalar(1.0) / (_tmp60 + _tmp96);
  const Scalar _tmp98 = Scalar(1.0) * _tmp41;
  const Scalar _tmp99 = _tmp97 * (-_tmp63 + _tmp98);
  const Scalar _tmp100 = _tmp56 * _tmp87 - _tmp56 * _tmp89 - _tmp59 * _tmp91 - _tmp94 * _tmp99;
  const Scalar _tmp101 = Scalar(1.0) / (_tmp100);
  const Scalar _tmp102 = Scalar(1.0) * _tmp93;
  const Scalar _tmp103 = _tmp102 * _tmp99 - Scalar(1.0) * _tmp91;
  const Scalar _tmp104 = _tmp101 * _tmp71;
  const Scalar _tmp105 = _tmp100 * _tmp72;
  const Scalar _tmp106 = _tmp105 * (-_tmp103 * _tmp104 - Scalar(1.0) * _tmp70);
  const Scalar _tmp107 = _tmp101 * (_tmp103 + _tmp106);
  const Scalar _tmp108 = -_tmp107 * _tmp59 + Scalar(1.0);
  const Scalar _tmp109 = _tmp79 * fh1;
  const Scalar _tmp110 = Scalar(43.164000000000001) - fv1;
  const Scalar _tmp111 = _tmp95 * _tmp99 + _tmp98;
  const Scalar _tmp112 = 0;
  const Scalar _tmp113 = _tmp47 * (_tmp112 * _tmp56 - _tmp112 * _tmp75);
  const Scalar _tmp114 = _tmp58 * _tmp93 + _tmp92;
  const Scalar _tmp115 = -_tmp114 * _tmp99 + _tmp58 * _tmp91 - _tmp87;
  const Scalar _tmp116 = _tmp105 * (-_tmp104 * _tmp115 - _tmp48 + _tmp58 * _tmp70);
  const Scalar _tmp117 = _tmp101 * (_tmp115 + _tmp116);
  const Scalar _tmp118 = -_tmp117 * _tmp59 - _tmp58;
  const Scalar _tmp119 = _tmp80 * fh1;
  const Scalar _tmp120 = -_tmp109 * _tmp47 * (_tmp107 * _tmp56 + _tmp108 * _tmp74) -
                         _tmp110 * _tmp113 -
                         _tmp119 * _tmp47 * (_tmp117 * _tmp56 + _tmp118 * _tmp74 + Scalar(1.0)) -
                         _tmp47 * _tmp81 * (_tmp56 * _tmp73 - _tmp73 * _tmp75);
  const Scalar _tmp121 = Scalar(1.0) / (_tmp120);
  const Scalar _tmp122 = _tmp52 + _tmp96;
  const Scalar _tmp123 = _tmp122 * _tmp99;
  const Scalar _tmp124 = Scalar(1.0) / (-_tmp123 - _tmp49 + _tmp98);
  const Scalar _tmp125 = Scalar(1.0) * _tmp124;
  const Scalar _tmp126 = _tmp105 * _tmp125;
  const Scalar _tmp127 = _tmp122 * _tmp126 - _tmp73 * _tmp94;
  const Scalar _tmp128 = Scalar(1.0) * _tmp97;
  const Scalar _tmp129 = _tmp111 * _tmp124;
  const Scalar _tmp130 = _tmp97 * (-_tmp112 * _tmp94 - _tmp122 * _tmp129 + _tmp96);
  const Scalar _tmp131 = -Scalar(1.0) * _tmp111 * _tmp125 - Scalar(1.0) * _tmp130 + Scalar(1.0);
  const Scalar _tmp132 = _tmp122 * _tmp124;
  const Scalar _tmp133 = _tmp114 + _tmp116 * _tmp132 - _tmp117 * _tmp94;
  const Scalar _tmp134 = -_tmp102 + _tmp106 * _tmp132 - _tmp107 * _tmp94;
  const Scalar _tmp135 = fh1 * (_tmp82 + _tmp88);
  const Scalar _tmp136 = _tmp135 * _tmp80 + Scalar(3.29616) * _tmp16 + _tmp19 * fv1;
  const Scalar _tmp137 = _tmp122 * _tmp97;
  const Scalar _tmp138 = Scalar(1.0) * _tmp125 * _tmp137 - Scalar(1.0) * _tmp125;
  const Scalar _tmp139 = -_tmp135 * _tmp79 - Scalar(3.29616) * _tmp26 - _tmp30 * fv1;
  const Scalar _tmp140 = _tmp125 * _tmp99;
  const Scalar _tmp141 = _tmp97 * (_tmp123 * _tmp125 + Scalar(1.0));
  const Scalar _tmp142 = Scalar(1.0) * _tmp140 - Scalar(1.0) * _tmp141;
  const Scalar _tmp143 =
      Scalar(1.0) * _tmp109 * (_tmp106 * _tmp125 - _tmp128 * _tmp134) + _tmp110 * _tmp131 +
      Scalar(1.0) * _tmp119 * (_tmp116 * _tmp125 - _tmp128 * _tmp133) + _tmp136 * _tmp138 +
      _tmp139 * _tmp142 + Scalar(1.0) * _tmp81 * (_tmp126 - _tmp127 * _tmp128);
  const Scalar _tmp144 = std::asinh(_tmp121 * _tmp143);
  const Scalar _tmp145 = Scalar(1.0) * _tmp144;
  const Scalar _tmp146 = Scalar(9.6622558468725703) * _tmp120;
  const Scalar _tmp147 =
      -_tmp144 * _tmp146 -
      Scalar(8.3196563720703107) *
          std::sqrt(
              Scalar(std::pow(Scalar(-Scalar(0.12019727201198747) * _tmp37 - 1), Scalar(2)) +
                     Scalar(0.057067943527034905) *
                         std::pow(Scalar(-Scalar(0.50315118477277876) * _tmp42 - 1), Scalar(2))));
  const Scalar _tmp148 = Scalar(0.1034955) * _tmp121;
  const Scalar _tmp149 = _tmp147 * _tmp148;
  const Scalar _tmp150 = Scalar(9.6622558468725703) * _tmp113;
  const Scalar _tmp151 = std::pow(_tmp120, Scalar(-2));
  const Scalar _tmp152 = _tmp113 * _tmp151;
  const Scalar _tmp153 = _tmp27 + _tmp33 + _tmp34;
  const Scalar _tmp154 =
      (_tmp121 * (-_tmp131 + _tmp138 * _tmp19 + _tmp142 * _tmp153) - _tmp143 * _tmp152) /
      std::sqrt(Scalar(std::pow(_tmp143, Scalar(2)) * _tmp151 + 1));
  const Scalar _tmp155 = _tmp125 * _tmp136;
  const Scalar _tmp156 = _tmp109 * _tmp134 * _tmp97 + _tmp110 * _tmp130 +
                         _tmp119 * _tmp133 * _tmp97 + _tmp127 * _tmp81 * _tmp97 -
                         _tmp137 * _tmp155 + _tmp139 * _tmp141;
  const Scalar _tmp157 = _tmp110 * _tmp112;
  const Scalar _tmp158 = _tmp59 * _tmp69;
  const Scalar _tmp159 = _tmp73 * _tmp81;
  const Scalar _tmp160 = _tmp108 * _tmp109 * _tmp69 + _tmp118 * _tmp119 * _tmp69 -
                         _tmp157 * _tmp158 - _tmp158 * _tmp159;
  const Scalar _tmp161 = Scalar(1.0) / (_tmp160);
  const Scalar _tmp162 = std::asinh(_tmp156 * _tmp161);
  const Scalar _tmp163 = Scalar(1.0) * _tmp162;
  const Scalar _tmp164 = Scalar(9.6622558468725703) * _tmp160;
  const Scalar _tmp165 =
      -_tmp162 * _tmp164 -
      Scalar(8.3885017487099702) *
          std::sqrt(
              Scalar(Scalar(0.090199313518583735) *
                         std::pow(Scalar(1 - Scalar(0.39693005512043167) * _tmp64), Scalar(2)) +
                     std::pow(Scalar(-Scalar(0.11921079949155229) * _tmp61 - 1), Scalar(2))));
  const Scalar _tmp166 = Scalar(0.1034955) * _tmp161;
  const Scalar _tmp167 = _tmp165 * _tmp166;
  const Scalar _tmp168 = Scalar(9.6622558468725703) * _tmp112;
  const Scalar _tmp169 = _tmp158 * _tmp168;
  const Scalar _tmp170 = std::pow(_tmp160, Scalar(-2));
  const Scalar _tmp171 = _tmp112 * _tmp158 * _tmp170;
  const Scalar _tmp172 = _tmp125 * _tmp19;
  const Scalar _tmp173 =
      (-_tmp156 * _tmp171 + _tmp161 * (-_tmp130 - _tmp137 * _tmp172 + _tmp141 * _tmp153)) /
      std::sqrt(Scalar(std::pow(_tmp156, Scalar(2)) * _tmp170 + 1));
  const Scalar _tmp174 = -_tmp106 * _tmp109 * _tmp124 + _tmp110 * _tmp129 -
                         _tmp116 * _tmp119 * _tmp124 - _tmp126 * _tmp81 - _tmp139 * _tmp140 +
                         _tmp155;
  const Scalar _tmp175 = _tmp107 * _tmp109 + _tmp117 * _tmp119 + _tmp157 + _tmp159;
  const Scalar _tmp176 = Scalar(1.0) / (_tmp175);
  const Scalar _tmp177 = std::asinh(_tmp174 * _tmp176);
  const Scalar _tmp178 = Scalar(1.0) * _tmp177;
  const Scalar _tmp179 = Scalar(9.6622558468725703) * _tmp175;
  const Scalar _tmp180 =
      -_tmp177 * _tmp179 -
      Scalar(4.83288938413423) *
          std::sqrt(
              Scalar(std::pow(Scalar(1 - Scalar(0.20691555724053495) * _tmp53), Scalar(2)) +
                     Scalar(0.13818785160942856) *
                         std::pow(Scalar(-Scalar(0.55661923802822921) * _tmp50 - 1), Scalar(2))));
  const Scalar _tmp181 = Scalar(0.1034955) * _tmp176;
  const Scalar _tmp182 = _tmp180 * _tmp181;
  const Scalar _tmp183 = std::pow(_tmp175, Scalar(-2));
  const Scalar _tmp184 = _tmp112 * _tmp183;
  const Scalar _tmp185 = (_tmp174 * _tmp184 + _tmp176 * (-_tmp129 - _tmp140 * _tmp153 + _tmp172)) /
                         std::sqrt(Scalar(std::pow(_tmp174, Scalar(2)) * _tmp183 + 1));

  // Output terms (1)
  Eigen::Matrix<Scalar, 4, 1> _res;

  _res(0, 0) =
      -_tmp32 *
      (_tmp2 * std::sinh(Scalar(1.0) * _tmp1) +
       _tmp2 *
           std::sinh(
               Scalar(0.1034955) * _tmp0 *
               (-_tmp1 * _tmp32 -
                Scalar(4.7744369927459998) *
                    std::sqrt(Scalar(
                        Scalar(0.32387954179207445) *
                            std::pow(Scalar(1 - Scalar(0.36803241838814449) * _tmp20), Scalar(2)) +
                        std::pow(Scalar(1 - Scalar(0.2094487793051498) * _tmp31), Scalar(2)))))));
  _res(1, 0) =
      -_tmp146 *
          (-Scalar(0.87679799777269396) * _tmp152 + Scalar(1.0) * _tmp154 * std::sinh(_tmp145) -
           (-Scalar(0.1034955) * _tmp147 * _tmp152 +
            _tmp148 * (-_tmp144 * _tmp150 - _tmp146 * _tmp154)) *
               std::sinh(_tmp149)) -
      _tmp150 * (Scalar(0.87679799777269396) * _tmp121 + std::cosh(_tmp145) - std::cosh(_tmp149));
  _res(2, 0) =
      -_tmp164 *
          (-Scalar(0.876505537412406) * _tmp171 + Scalar(1.0) * _tmp173 * std::sinh(_tmp163) -
           (-Scalar(0.1034955) * _tmp165 * _tmp171 +
            _tmp166 * (-_tmp162 * _tmp169 - _tmp164 * _tmp173)) *
               std::sinh(_tmp167)) -
      _tmp169 * (Scalar(0.876505537412406) * _tmp161 + std::cosh(_tmp163) - std::cosh(_tmp167));
  _res(3, 0) =
      _tmp168 * (Scalar(0.86627065637365697) * _tmp176 + std::cosh(_tmp178) - std::cosh(_tmp182)) -
      _tmp179 *
          (Scalar(0.86627065637365697) * _tmp184 + Scalar(1.0) * _tmp185 * std::sinh(_tmp178) -
           (Scalar(0.1034955) * _tmp180 * _tmp184 +
            _tmp181 * (_tmp168 * _tmp177 - _tmp179 * _tmp185)) *
               std::sinh(_tmp182));

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
