// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

#include <sym/rot3.h>

namespace sym {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: IK_residual_func_cost1_wrt_fv1_Nl9
 *
 * Args:
 *     fh1: Scalar
 *     fv1: Scalar
 *     DeltaRot: Rot3
 *     position_vector: Matrix31
 *     Rot_init: Rot3
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix41
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 4, 1> IkResidualFuncCost1WrtFv1Nl9(
    const Scalar fh1, const Scalar fv1, const sym::Rot3<Scalar>& DeltaRot,
    const Eigen::Matrix<Scalar, 3, 1>& position_vector, const sym::Rot3<Scalar>& Rot_init,
    const Scalar epsilon) {
  // Total ops: 603

  // Unused inputs
  (void)epsilon;

  // Input arrays
  const Eigen::Matrix<Scalar, 4, 1>& _DeltaRot = DeltaRot.Data();
  const Eigen::Matrix<Scalar, 4, 1>& _Rot_init = Rot_init.Data();

  // Intermediate terms (188)
  const Scalar _tmp0 = Scalar(1.0) / (fh1);
  const Scalar _tmp1 = _DeltaRot[0] * _Rot_init[3] - _DeltaRot[1] * _Rot_init[2] +
                       _DeltaRot[2] * _Rot_init[1] + _DeltaRot[3] * _Rot_init[0];
  const Scalar _tmp2 = -2 * std::pow(_tmp1, Scalar(2));
  const Scalar _tmp3 = -_DeltaRot[0] * _Rot_init[1] + _DeltaRot[1] * _Rot_init[0] +
                       _DeltaRot[2] * _Rot_init[3] + _DeltaRot[3] * _Rot_init[2];
  const Scalar _tmp4 = -2 * std::pow(_tmp3, Scalar(2));
  const Scalar _tmp5 = Scalar(0.20999999999999999) * _tmp2 + Scalar(0.20999999999999999) * _tmp4 +
                       Scalar(0.20999999999999999);
  const Scalar _tmp6 = -_tmp5;
  const Scalar _tmp7 = _DeltaRot[0] * _Rot_init[2] + _DeltaRot[1] * _Rot_init[3] -
                       _DeltaRot[2] * _Rot_init[0] + _DeltaRot[3] * _Rot_init[1];
  const Scalar _tmp8 = 2 * _tmp3;
  const Scalar _tmp9 = _tmp7 * _tmp8;
  const Scalar _tmp10 = -2 * _DeltaRot[0] * _Rot_init[0] - 2 * _DeltaRot[1] * _Rot_init[1] -
                        2 * _DeltaRot[2] * _Rot_init[2] + 2 * _DeltaRot[3] * _Rot_init[3];
  const Scalar _tmp11 = _tmp1 * _tmp10;
  const Scalar _tmp12 = -_tmp11 + _tmp9;
  const Scalar _tmp13 = Scalar(0.010999999999999999) * _tmp12;
  const Scalar _tmp14 = -_tmp13;
  const Scalar _tmp15 = 2 * _tmp1 * _tmp7;
  const Scalar _tmp16 = _tmp10 * _tmp3;
  const Scalar _tmp17 = Scalar(0.20999999999999999) * _tmp15 + Scalar(0.20999999999999999) * _tmp16;
  const Scalar _tmp18 = _tmp14 + _tmp17;
  const Scalar _tmp19 = _tmp18 + _tmp6;
  const Scalar _tmp20 = _tmp19 + position_vector(1, 0);
  const Scalar _tmp21 = 1 - 2 * std::pow(_tmp7, Scalar(2));
  const Scalar _tmp22 = Scalar(0.20999999999999999) * _tmp21 + Scalar(0.20999999999999999) * _tmp4;
  const Scalar _tmp23 = _tmp1 * _tmp8;
  const Scalar _tmp24 = _tmp10 * _tmp7;
  const Scalar _tmp25 = _tmp23 + _tmp24;
  const Scalar _tmp26 = -Scalar(0.010999999999999999) * _tmp25;
  const Scalar _tmp27 = Scalar(0.20999999999999999) * _tmp15 - Scalar(0.20999999999999999) * _tmp16;
  const Scalar _tmp28 = _tmp26 - _tmp27;
  const Scalar _tmp29 = _tmp22 + _tmp28;
  const Scalar _tmp30 = _tmp29 + position_vector(0, 0);
  const Scalar _tmp31 = std::asinh(_tmp0 * fv1);
  const Scalar _tmp32 = Scalar(9.6622558468725703) * fh1;
  const Scalar _tmp33 = Scalar(1.0) * _tmp0 /
                        std::sqrt(Scalar(1 + std::pow(fv1, Scalar(2)) / std::pow(fh1, Scalar(2))));
  const Scalar _tmp34 = Scalar(0.20999999999999999) * _tmp23 - Scalar(0.20999999999999999) * _tmp24;
  const Scalar _tmp35 =
      -Scalar(0.010999999999999999) * _tmp2 - Scalar(0.010999999999999999) * _tmp21;
  const Scalar _tmp36 = Scalar(0.20999999999999999) * _tmp11 + Scalar(0.20999999999999999) * _tmp9;
  const Scalar _tmp37 = _tmp35 + _tmp36;
  const Scalar _tmp38 = _tmp34 + _tmp37;
  const Scalar _tmp39 = -_tmp22;
  const Scalar _tmp40 = _tmp26 + _tmp27;
  const Scalar _tmp41 = _tmp39 + _tmp40;
  const Scalar _tmp42 = _tmp41 + position_vector(0, 0);
  const Scalar _tmp43 = _tmp42 + Scalar(1.7965602546229);
  const Scalar _tmp44 = -_tmp17;
  const Scalar _tmp45 = _tmp14 + _tmp44;
  const Scalar _tmp46 = _tmp45 + _tmp5;
  const Scalar _tmp47 = _tmp46 + position_vector(1, 0);
  const Scalar _tmp48 = _tmp47 + Scalar(-4.83288938413423);
  const Scalar _tmp49 = std::pow(Scalar(std::pow(_tmp43, Scalar(2)) + std::pow(_tmp48, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp50 = _tmp43 * _tmp49;
  const Scalar _tmp51 = -_tmp34;
  const Scalar _tmp52 = _tmp37 + _tmp51;
  const Scalar _tmp53 = _tmp38 * _tmp50 - _tmp50 * _tmp52;
  const Scalar _tmp54 = _tmp48 * _tmp49;
  const Scalar _tmp55 = _tmp18 + _tmp5;
  const Scalar _tmp56 = _tmp55 + position_vector(1, 0);
  const Scalar _tmp57 = _tmp56 + Scalar(-4.7744369927459998);
  const Scalar _tmp58 = _tmp22 + _tmp40;
  const Scalar _tmp59 = _tmp58 + position_vector(0, 0);
  const Scalar _tmp60 = _tmp59 + Scalar(-2.7171519410699099);
  const Scalar _tmp61 = Scalar(1.0) / (_tmp60);
  const Scalar _tmp62 = _tmp57 * _tmp61;
  const Scalar _tmp63 = Scalar(1.0) / (_tmp50 * _tmp62 - _tmp54);
  const Scalar _tmp64 = _tmp62 * _tmp63;
  const Scalar _tmp65 = _tmp38 * _tmp62;
  const Scalar _tmp66 = -_tmp50 * _tmp65 + _tmp52 * _tmp54;
  const Scalar _tmp67 = _tmp64 * _tmp66 + _tmp65;
  const Scalar _tmp68 = Scalar(1.0) * _tmp55;
  const Scalar _tmp69 = -_tmp68;
  const Scalar _tmp70 = Scalar(1.0) / (_tmp46 + _tmp69);
  const Scalar _tmp71 = Scalar(1.0) * _tmp58;
  const Scalar _tmp72 = _tmp70 * (-_tmp41 + _tmp71);
  const Scalar _tmp73 = -_tmp38 + _tmp53 * _tmp64 - _tmp67 * _tmp72;
  const Scalar _tmp74 = _tmp35 - _tmp36;
  const Scalar _tmp75 = _tmp51 + _tmp74;
  const Scalar _tmp76 = _tmp28 + _tmp39;
  const Scalar _tmp77 = _tmp76 + position_vector(0, 0);
  const Scalar _tmp78 = _tmp77 + Scalar(1.9874742031097401);
  const Scalar _tmp79 = _tmp45 + _tmp6;
  const Scalar _tmp80 = _tmp79 + position_vector(1, 0);
  const Scalar _tmp81 = _tmp80 + Scalar(8.3196563720703107);
  const Scalar _tmp82 = std::pow(Scalar(std::pow(_tmp78, Scalar(2)) + std::pow(_tmp81, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp83 = _tmp78 * _tmp82;
  const Scalar _tmp84 = _tmp81 * _tmp82;
  const Scalar _tmp85 = _tmp62 * _tmp83 - _tmp84;
  const Scalar _tmp86 = _tmp63 * _tmp85;
  const Scalar _tmp87 = -_tmp65 * _tmp83 - _tmp66 * _tmp86 + _tmp75 * _tmp84;
  const Scalar _tmp88 = _tmp38 * _tmp83 - _tmp53 * _tmp86 - _tmp72 * _tmp87 - _tmp75 * _tmp83;
  const Scalar _tmp89 = Scalar(1.0) / (_tmp88);
  const Scalar _tmp90 =
      std::sqrt(Scalar(std::pow(_tmp57, Scalar(2)) + std::pow(_tmp60, Scalar(2))));
  const Scalar _tmp91 = Scalar(1.0) / (_tmp90);
  const Scalar _tmp92 = _tmp61 * _tmp90;
  const Scalar _tmp93 = _tmp92 * (-_tmp55 * _tmp60 * _tmp91 + _tmp57 * _tmp58 * _tmp91);
  const Scalar _tmp94 = -_tmp41 * _tmp54 + _tmp46 * _tmp50 + _tmp50 * _tmp93;
  const Scalar _tmp95 = -_tmp76 * _tmp84 + _tmp79 * _tmp83 + _tmp83 * _tmp93 - _tmp86 * _tmp94;
  const Scalar _tmp96 = _tmp89 * _tmp95;
  const Scalar _tmp97 = Scalar(1.0) / (_tmp95);
  const Scalar _tmp98 = _tmp88 * _tmp97;
  const Scalar _tmp99 = _tmp98 * (_tmp64 * _tmp94 - _tmp73 * _tmp96 - _tmp93);
  const Scalar _tmp100 = _tmp89 * (_tmp73 + _tmp99);
  const Scalar _tmp101 = -_tmp100 * _tmp85 - _tmp62;
  const Scalar _tmp102 = _tmp50 * _tmp63;
  const Scalar _tmp103 = _tmp30 + Scalar(-2.5193355532036801);
  const Scalar _tmp104 = _tmp20 + Scalar(8.3885017487099702);
  const Scalar _tmp105 =
      std::pow(Scalar(std::pow(_tmp103, Scalar(2)) + std::pow(_tmp104, Scalar(2))),
               Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp106 = _tmp103 * _tmp105;
  const Scalar _tmp107 = _tmp106 * fh1;
  const Scalar _tmp108 = Scalar(1.0) * _tmp63;
  const Scalar _tmp109 = _tmp108 * _tmp66;
  const Scalar _tmp110 = -_tmp108 * _tmp53 + _tmp109 * _tmp72;
  const Scalar _tmp111 = _tmp98 * (-_tmp108 * _tmp94 - _tmp110 * _tmp96);
  const Scalar _tmp112 = _tmp89 * (_tmp110 + _tmp111);
  const Scalar _tmp113 = -_tmp112 * _tmp85 + Scalar(1.0);
  const Scalar _tmp114 = _tmp104 * _tmp105;
  const Scalar _tmp115 = _tmp114 * fh1;
  const Scalar _tmp116 = Scalar(1.0) * _tmp97;
  const Scalar _tmp117 = fh1 * (-_tmp106 * _tmp19 + _tmp114 * _tmp29);
  const Scalar _tmp118 = Scalar(43.164000000000001) - fv1;
  const Scalar _tmp119 = _tmp68 * _tmp72 + _tmp71;
  const Scalar _tmp120 = 0;
  const Scalar _tmp121 = _tmp120 * _tmp86;
  const Scalar _tmp122 = _tmp92 * (_tmp120 * _tmp83 - _tmp121 * _tmp50);
  const Scalar _tmp123 = -_tmp107 * _tmp92 * (_tmp100 * _tmp83 + _tmp101 * _tmp102 + Scalar(1.0)) -
                         _tmp115 * _tmp92 * (_tmp102 * _tmp113 + _tmp112 * _tmp83) -
                         _tmp117 * _tmp92 * (-_tmp116 * _tmp50 * _tmp86 + _tmp116 * _tmp83) -
                         _tmp118 * _tmp122;
  const Scalar _tmp124 = std::pow(_tmp123, Scalar(-2));
  const Scalar _tmp125 = _tmp122 * _tmp124;
  const Scalar _tmp126 = Scalar(1.0) / (_tmp123);
  const Scalar _tmp127 = _tmp69 + _tmp79;
  const Scalar _tmp128 = _tmp127 * _tmp72;
  const Scalar _tmp129 = Scalar(1.0) / (-_tmp128 + _tmp71 - _tmp76);
  const Scalar _tmp130 = _tmp127 * _tmp129;
  const Scalar _tmp131 = -_tmp100 * _tmp87 + _tmp130 * _tmp99 + _tmp67;
  const Scalar _tmp132 = Scalar(1.0) * _tmp70;
  const Scalar _tmp133 = Scalar(1.0) * _tmp129;
  const Scalar _tmp134 = _tmp119 * _tmp129;
  const Scalar _tmp135 = _tmp70 * (-_tmp120 * _tmp87 - _tmp127 * _tmp134 + _tmp69);
  const Scalar _tmp136 = -Scalar(1.0) * _tmp119 * _tmp133 - Scalar(1.0) * _tmp135 + Scalar(1.0);
  const Scalar _tmp137 = fh1 * (_tmp34 + _tmp74);
  const Scalar _tmp138 = _tmp106 * _tmp137 + Scalar(3.29616) * _tmp25 + _tmp29 * fv1;
  const Scalar _tmp139 = _tmp127 * _tmp70;
  const Scalar _tmp140 = Scalar(1.0) * _tmp133 * _tmp139 - Scalar(1.0) * _tmp133;
  const Scalar _tmp141 = _tmp133 * _tmp98;
  const Scalar _tmp142 = -_tmp116 * _tmp87 + _tmp127 * _tmp141;
  const Scalar _tmp143 = -_tmp109 + _tmp111 * _tmp130 - _tmp112 * _tmp87;
  const Scalar _tmp144 = -_tmp114 * _tmp137 - Scalar(3.29616) * _tmp12 - _tmp19 * fv1;
  const Scalar _tmp145 = _tmp70 * (_tmp128 * _tmp133 + Scalar(1.0));
  const Scalar _tmp146 = _tmp133 * _tmp72;
  const Scalar _tmp147 = -Scalar(1.0) * _tmp145 + Scalar(1.0) * _tmp146;
  const Scalar _tmp148 = Scalar(1.0) * _tmp107 * (-_tmp131 * _tmp132 + _tmp133 * _tmp99) +
                         Scalar(1.0) * _tmp115 * (_tmp111 * _tmp133 - _tmp132 * _tmp143) +
                         Scalar(1.0) * _tmp117 * (-_tmp132 * _tmp142 + _tmp141) +
                         _tmp118 * _tmp136 + _tmp138 * _tmp140 + _tmp144 * _tmp147;
  const Scalar _tmp149 = std::asinh(_tmp126 * _tmp148);
  const Scalar _tmp150 = Scalar(9.6622558468725703) * _tmp123;
  const Scalar _tmp151 =
      -_tmp149 * _tmp150 -
      Scalar(4.7744369927459998) *
          std::sqrt(
              Scalar(std::pow(Scalar(1 - Scalar(0.2094487793051498) * _tmp56), Scalar(2)) +
                     Scalar(0.32387954179207445) *
                         std::pow(Scalar(1 - Scalar(0.36803241838814449) * _tmp59), Scalar(2))));
  const Scalar _tmp152 = Scalar(9.6622558468725703) * _tmp122;
  const Scalar _tmp153 = _tmp13 + _tmp44 + _tmp5;
  const Scalar _tmp154 =
      (-_tmp125 * _tmp148 + _tmp126 * (-_tmp136 + _tmp140 * _tmp29 + _tmp147 * _tmp153)) /
      std::sqrt(Scalar(_tmp124 * std::pow(_tmp148, Scalar(2)) + 1));
  const Scalar _tmp155 = Scalar(0.1034955) * _tmp126;
  const Scalar _tmp156 = _tmp151 * _tmp155;
  const Scalar _tmp157 = Scalar(1.0) * _tmp149;
  const Scalar _tmp158 = _tmp133 * _tmp138;
  const Scalar _tmp159 = _tmp107 * _tmp131 * _tmp70 + _tmp115 * _tmp143 * _tmp70 +
                         _tmp117 * _tmp142 * _tmp70 + _tmp118 * _tmp135 - _tmp139 * _tmp158 +
                         _tmp144 * _tmp145;
  const Scalar _tmp160 = _tmp116 * _tmp117;
  const Scalar _tmp161 = _tmp118 * _tmp120;
  const Scalar _tmp162 =
      _tmp101 * _tmp107 * _tmp63 + _tmp113 * _tmp115 * _tmp63 - _tmp160 * _tmp86 - _tmp161 * _tmp86;
  const Scalar _tmp163 = Scalar(1.0) / (_tmp162);
  const Scalar _tmp164 = std::asinh(_tmp159 * _tmp163);
  const Scalar _tmp165 = Scalar(1.0) * _tmp164;
  const Scalar _tmp166 = std::pow(_tmp162, Scalar(-2));
  const Scalar _tmp167 = _tmp133 * _tmp29;
  const Scalar _tmp168 = _tmp121 * _tmp166;
  const Scalar _tmp169 =
      (-_tmp159 * _tmp168 + _tmp163 * (-_tmp135 - _tmp139 * _tmp167 + _tmp145 * _tmp153)) /
      std::sqrt(Scalar(std::pow(_tmp159, Scalar(2)) * _tmp166 + 1));
  const Scalar _tmp170 = Scalar(9.6622558468725703) * _tmp162;
  const Scalar _tmp171 =
      -_tmp164 * _tmp170 -
      Scalar(4.83288938413423) *
          std::sqrt(
              Scalar(std::pow(Scalar(1 - Scalar(0.20691555724053495) * _tmp47), Scalar(2)) +
                     Scalar(0.13818785160942856) *
                         std::pow(Scalar(-Scalar(0.55661923802822921) * _tmp42 - 1), Scalar(2))));
  const Scalar _tmp172 = Scalar(0.1034955) * _tmp163;
  const Scalar _tmp173 = _tmp171 * _tmp172;
  const Scalar _tmp174 = Scalar(9.6622558468725703) * _tmp120;
  const Scalar _tmp175 = _tmp174 * _tmp86;
  const Scalar _tmp176 = _tmp100 * _tmp107 + _tmp112 * _tmp115 + _tmp160 + _tmp161;
  const Scalar _tmp177 = Scalar(1.0) / (_tmp176);
  const Scalar _tmp178 = -_tmp107 * _tmp129 * _tmp99 - _tmp111 * _tmp115 * _tmp129 -
                         _tmp117 * _tmp141 + _tmp118 * _tmp134 - _tmp144 * _tmp146 + _tmp158;
  const Scalar _tmp179 = std::asinh(_tmp177 * _tmp178);
  const Scalar _tmp180 = Scalar(9.6622558468725703) * _tmp176;
  const Scalar _tmp181 =
      -_tmp179 * _tmp180 -
      Scalar(8.3196563720703107) *
          std::sqrt(
              Scalar(Scalar(0.057067943527034905) *
                         std::pow(Scalar(-Scalar(0.50315118477277876) * _tmp77 - 1), Scalar(2)) +
                     std::pow(Scalar(-Scalar(0.12019727201198747) * _tmp80 - 1), Scalar(2))));
  const Scalar _tmp182 = Scalar(0.1034955) * _tmp177;
  const Scalar _tmp183 = _tmp181 * _tmp182;
  const Scalar _tmp184 = std::pow(_tmp176, Scalar(-2));
  const Scalar _tmp185 = _tmp120 * _tmp184;
  const Scalar _tmp186 = (_tmp177 * (-_tmp134 - _tmp146 * _tmp153 + _tmp167) + _tmp178 * _tmp185) /
                         std::sqrt(Scalar(std::pow(_tmp178, Scalar(2)) * _tmp184 + 1));
  const Scalar _tmp187 = Scalar(1.0) * _tmp179;

  // Output terms (1)
  Eigen::Matrix<Scalar, 4, 1> _res;

  _res(0, 0) =
      -_tmp32 *
      (_tmp33 * std::sinh(Scalar(1.0) * _tmp31) +
       _tmp33 *
           std::sinh(
               Scalar(0.1034955) * _tmp0 *
               (-_tmp31 * _tmp32 -
                Scalar(8.3885017487099702) *
                    std::sqrt(Scalar(
                        Scalar(0.090199313518583735) *
                            std::pow(Scalar(1 - Scalar(0.39693005512043167) * _tmp30), Scalar(2)) +
                        std::pow(Scalar(-Scalar(0.11921079949155229) * _tmp20 - 1), Scalar(2)))))));
  _res(1, 0) =
      -_tmp150 *
          (-Scalar(0.86564762886483004) * _tmp125 + Scalar(1.0) * _tmp154 * std::sinh(_tmp157) -
           (-Scalar(0.1034955) * _tmp125 * _tmp151 +
            _tmp155 * (-_tmp149 * _tmp152 - _tmp150 * _tmp154)) *
               std::sinh(_tmp156)) -
      _tmp152 * (Scalar(0.86564762886483004) * _tmp126 - std::cosh(_tmp156) + std::cosh(_tmp157));
  _res(2, 0) =
      -_tmp170 *
          (-Scalar(0.86627065637365697) * _tmp168 + Scalar(1.0) * _tmp169 * std::sinh(_tmp165) -
           (-Scalar(0.1034955) * _tmp168 * _tmp171 +
            _tmp172 * (-_tmp164 * _tmp175 - _tmp169 * _tmp170)) *
               std::sinh(_tmp173)) -
      _tmp175 * (Scalar(0.86627065637365697) * _tmp163 + std::cosh(_tmp165) - std::cosh(_tmp173));
  _res(3, 0) =
      _tmp174 * (Scalar(0.87679799777269396) * _tmp177 - std::cosh(_tmp183) + std::cosh(_tmp187)) -
      _tmp180 *
          (Scalar(0.87679799777269396) * _tmp185 + Scalar(1.0) * _tmp186 * std::sinh(_tmp187) -
           (Scalar(0.1034955) * _tmp181 * _tmp185 +
            _tmp182 * (_tmp174 * _tmp179 - _tmp180 * _tmp186)) *
               std::sinh(_tmp183));

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
