// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

#include <sym/rot3.h>

namespace sym {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: IK_residual_func_cost2_wrt_fh1_Nl17
 *
 * Args:
 *     fh1: Scalar
 *     fv1: Scalar
 *     DeltaRot: Rot3
 *     position_vector: Matrix31
 *     Rot_init: Rot3
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix41
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 4, 1> IkResidualFuncCost2WrtFh1Nl17(
    const Scalar fh1, const Scalar fv1, const sym::Rot3<Scalar>& DeltaRot,
    const Eigen::Matrix<Scalar, 3, 1>& position_vector, const sym::Rot3<Scalar>& Rot_init,
    const Scalar epsilon) {
  // Total ops: 639

  // Unused inputs
  (void)epsilon;

  // Input arrays
  const Eigen::Matrix<Scalar, 4, 1>& _DeltaRot = DeltaRot.Data();
  const Eigen::Matrix<Scalar, 4, 1>& _Rot_init = Rot_init.Data();

  // Intermediate terms (208)
  const Scalar _tmp0 = Scalar(1.0) / (fh1);
  const Scalar _tmp1 = _DeltaRot[0] * _Rot_init[3] - _DeltaRot[1] * _Rot_init[2] +
                       _DeltaRot[2] * _Rot_init[1] + _DeltaRot[3] * _Rot_init[0];
  const Scalar _tmp2 = _DeltaRot[0] * _Rot_init[2] + _DeltaRot[1] * _Rot_init[3] -
                       _DeltaRot[2] * _Rot_init[0] + _DeltaRot[3] * _Rot_init[1];
  const Scalar _tmp3 = 2 * _tmp2;
  const Scalar _tmp4 = _tmp1 * _tmp3;
  const Scalar _tmp5 = -_DeltaRot[0] * _Rot_init[1] + _DeltaRot[1] * _Rot_init[0] +
                       _DeltaRot[2] * _Rot_init[3] + _DeltaRot[3] * _Rot_init[2];
  const Scalar _tmp6 = -2 * _DeltaRot[0] * _Rot_init[0] - 2 * _DeltaRot[1] * _Rot_init[1] -
                       2 * _DeltaRot[2] * _Rot_init[2] + 2 * _DeltaRot[3] * _Rot_init[3];
  const Scalar _tmp7 = _tmp5 * _tmp6;
  const Scalar _tmp8 = Scalar(0.20999999999999999) * _tmp4 - Scalar(0.20999999999999999) * _tmp7;
  const Scalar _tmp9 = 2 * _tmp1 * _tmp5;
  const Scalar _tmp10 = _tmp2 * _tmp6;
  const Scalar _tmp11 = _tmp10 + _tmp9;
  const Scalar _tmp12 = -Scalar(0.010999999999999999) * _tmp11;
  const Scalar _tmp13 = -2 * std::pow(_tmp2, Scalar(2));
  const Scalar _tmp14 = 1 - 2 * std::pow(_tmp5, Scalar(2));
  const Scalar _tmp15 = Scalar(0.20999999999999999) * _tmp13 + Scalar(0.20999999999999999) * _tmp14;
  const Scalar _tmp16 = _tmp12 + _tmp15;
  const Scalar _tmp17 = _tmp16 + _tmp8;
  const Scalar _tmp18 = _tmp17 + position_vector(0, 0);
  const Scalar _tmp19 = Scalar(0.20999999999999999) * _tmp4 + Scalar(0.20999999999999999) * _tmp7;
  const Scalar _tmp20 = _tmp3 * _tmp5;
  const Scalar _tmp21 = _tmp1 * _tmp6;
  const Scalar _tmp22 = _tmp20 - _tmp21;
  const Scalar _tmp23 = -Scalar(0.010999999999999999) * _tmp22;
  const Scalar _tmp24 = -2 * std::pow(_tmp1, Scalar(2));
  const Scalar _tmp25 = Scalar(0.20999999999999999) * _tmp14 + Scalar(0.20999999999999999) * _tmp24;
  const Scalar _tmp26 = _tmp23 + _tmp25;
  const Scalar _tmp27 = _tmp19 + _tmp26;
  const Scalar _tmp28 = _tmp27 + position_vector(1, 0);
  const Scalar _tmp29 = _tmp0 * fv1;
  const Scalar _tmp30 = std::asinh(_tmp29);
  const Scalar _tmp31 = Scalar(9.6622558468725703) * _tmp30;
  const Scalar _tmp32 =
      -Scalar(0.1034955) * _tmp31 * fh1 -
      Scalar(0.49413274378274363) *
          std::sqrt(
              Scalar(Scalar(0.32387954179207445) *
                         std::pow(Scalar(1 - Scalar(0.36803241838814449) * _tmp18), Scalar(2)) +
                     std::pow(Scalar(1 - Scalar(0.2094487793051498) * _tmp28), Scalar(2))));
  const Scalar _tmp33 = _tmp0 * _tmp32;
  const Scalar _tmp34 = std::pow(fh1, Scalar(-2));
  const Scalar _tmp35 =
      std::pow(Scalar(_tmp34 * std::pow(fv1, Scalar(2)) + 1), Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp36 = Scalar(1.0) * _tmp30;
  const Scalar _tmp37 = Scalar(43.164000000000001) - fv1;
  const Scalar _tmp38 = Scalar(0.20999999999999999) * _tmp20 + Scalar(0.20999999999999999) * _tmp21;
  const Scalar _tmp39 = -_tmp38;
  const Scalar _tmp40 = -Scalar(0.010999999999999999) * _tmp13 -
                        Scalar(0.010999999999999999) * _tmp24 + Scalar(-0.010999999999999999);
  const Scalar _tmp41 = -Scalar(0.20999999999999999) * _tmp10 + Scalar(0.20999999999999999) * _tmp9;
  const Scalar _tmp42 = _tmp40 - _tmp41;
  const Scalar _tmp43 = _tmp39 + _tmp42;
  const Scalar _tmp44 = -_tmp8;
  const Scalar _tmp45 = _tmp12 - _tmp15;
  const Scalar _tmp46 = _tmp44 + _tmp45;
  const Scalar _tmp47 = _tmp46 + position_vector(0, 0);
  const Scalar _tmp48 = _tmp47 + Scalar(1.9874742031097401);
  const Scalar _tmp49 = -_tmp19;
  const Scalar _tmp50 = _tmp23 - _tmp25;
  const Scalar _tmp51 = _tmp49 + _tmp50;
  const Scalar _tmp52 = _tmp51 + position_vector(1, 0);
  const Scalar _tmp53 = _tmp52 + Scalar(8.3196563720703107);
  const Scalar _tmp54 = std::pow(Scalar(std::pow(_tmp48, Scalar(2)) + std::pow(_tmp53, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp55 = _tmp48 * _tmp54;
  const Scalar _tmp56 = _tmp53 * _tmp54;
  const Scalar _tmp57 = _tmp26 + _tmp49;
  const Scalar _tmp58 = _tmp57 + position_vector(1, 0);
  const Scalar _tmp59 = _tmp58 + Scalar(-4.83288938413423);
  const Scalar _tmp60 = _tmp45 + _tmp8;
  const Scalar _tmp61 = _tmp60 + position_vector(0, 0);
  const Scalar _tmp62 = _tmp61 + Scalar(1.7965602546229);
  const Scalar _tmp63 = Scalar(1.0) / (_tmp62);
  const Scalar _tmp64 = _tmp59 * _tmp63;
  const Scalar _tmp65 = _tmp55 * _tmp64 - _tmp56;
  const Scalar _tmp66 = _tmp19 + _tmp50;
  const Scalar _tmp67 = _tmp66 + position_vector(1, 0);
  const Scalar _tmp68 = _tmp67 + Scalar(8.3885017487099702);
  const Scalar _tmp69 = _tmp16 + _tmp44;
  const Scalar _tmp70 = _tmp69 + position_vector(0, 0);
  const Scalar _tmp71 = _tmp70 + Scalar(-2.5193355532036801);
  const Scalar _tmp72 = std::pow(Scalar(std::pow(_tmp68, Scalar(2)) + std::pow(_tmp71, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp73 = _tmp71 * _tmp72;
  const Scalar _tmp74 = _tmp68 * _tmp72;
  const Scalar _tmp75 = Scalar(1.0) / (_tmp64 * _tmp73 - _tmp74);
  const Scalar _tmp76 = _tmp40 + _tmp41;
  const Scalar _tmp77 = _tmp39 + _tmp76;
  const Scalar _tmp78 = _tmp38 + _tmp42;
  const Scalar _tmp79 = _tmp73 * _tmp78;
  const Scalar _tmp80 = _tmp75 * (-_tmp64 * _tmp79 + _tmp74 * _tmp77);
  const Scalar _tmp81 = _tmp55 * _tmp78;
  const Scalar _tmp82 = _tmp43 * _tmp56 - _tmp64 * _tmp81 - _tmp65 * _tmp80;
  const Scalar _tmp83 = Scalar(1.0) * _tmp57;
  const Scalar _tmp84 = -_tmp83;
  const Scalar _tmp85 = Scalar(1.0) / (_tmp66 + _tmp84);
  const Scalar _tmp86 = Scalar(1.0) * _tmp60;
  const Scalar _tmp87 = -_tmp69 + _tmp86;
  const Scalar _tmp88 = _tmp85 * _tmp87;
  const Scalar _tmp89 = _tmp75 * (-_tmp73 * _tmp77 + _tmp79);
  const Scalar _tmp90 = -_tmp43 * _tmp55 - _tmp65 * _tmp89 + _tmp81 - _tmp82 * _tmp88;
  const Scalar _tmp91 = Scalar(1.0) / (_tmp90);
  const Scalar _tmp92 = _tmp83 * _tmp88 + _tmp86;
  const Scalar _tmp93 = 0;
  const Scalar _tmp94 = _tmp65 * _tmp75;
  const Scalar _tmp95 = _tmp73 * _tmp94;
  const Scalar _tmp96 =
      std::sqrt(Scalar(std::pow(_tmp59, Scalar(2)) + std::pow(_tmp62, Scalar(2))));
  const Scalar _tmp97 = _tmp63 * _tmp96;
  const Scalar _tmp98 = _tmp28 + Scalar(-4.7744369927459998);
  const Scalar _tmp99 = _tmp18 + Scalar(-2.7171519410699099);
  const Scalar _tmp100 = std::pow(Scalar(std::pow(_tmp98, Scalar(2)) + std::pow(_tmp99, Scalar(2))),
                                  Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp101 = _tmp100 * _tmp98;
  const Scalar _tmp102 = _tmp100 * _tmp99;
  const Scalar _tmp103 = _tmp101 * _tmp17 - _tmp102 * _tmp27;
  const Scalar _tmp104 = Scalar(1.0) / (_tmp96);
  const Scalar _tmp105 = _tmp97 * (-_tmp104 * _tmp57 * _tmp62 + _tmp104 * _tmp59 * _tmp60);
  const Scalar _tmp106 = _tmp75 * (_tmp105 * _tmp73 + _tmp66 * _tmp73 - _tmp69 * _tmp74);
  const Scalar _tmp107 = _tmp105 * _tmp55 - _tmp106 * _tmp65 - _tmp46 * _tmp56 + _tmp51 * _tmp55;
  const Scalar _tmp108 = Scalar(1.0) / (_tmp107);
  const Scalar _tmp109 = Scalar(1.0) * _tmp108;
  const Scalar _tmp110 = _tmp103 * _tmp97 * (_tmp109 * _tmp55 - _tmp109 * _tmp95);
  const Scalar _tmp111 = Scalar(1.0) * _tmp85;
  const Scalar _tmp112 = _tmp111 * _tmp80 * _tmp87 - Scalar(1.0) * _tmp89;
  const Scalar _tmp113 = _tmp107 * _tmp91;
  const Scalar _tmp114 = _tmp108 * _tmp90;
  const Scalar _tmp115 = _tmp114 * (-Scalar(1.0) * _tmp106 - _tmp112 * _tmp113);
  const Scalar _tmp116 = _tmp91 * (_tmp112 + _tmp115);
  const Scalar _tmp117 = _tmp75 * (-_tmp116 * _tmp65 + Scalar(1.0));
  const Scalar _tmp118 = _tmp101 * _tmp97 * (_tmp116 * _tmp55 + _tmp117 * _tmp73);
  const Scalar _tmp119 = _tmp64 * _tmp78 + _tmp64 * _tmp80;
  const Scalar _tmp120 = -_tmp119 * _tmp88 + _tmp64 * _tmp89 - _tmp78;
  const Scalar _tmp121 = _tmp114 * (-_tmp105 + _tmp106 * _tmp64 - _tmp113 * _tmp120);
  const Scalar _tmp122 = _tmp91 * (_tmp120 + _tmp121);
  const Scalar _tmp123 = _tmp75 * (-_tmp122 * _tmp65 - _tmp64);
  const Scalar _tmp124 = _tmp102 * _tmp97 * (_tmp122 * _tmp55 + _tmp123 * _tmp73 + Scalar(1.0));
  const Scalar _tmp125 = -_tmp110 * fh1 - _tmp118 * fh1 - _tmp124 * fh1 -
                         _tmp37 * _tmp97 * (_tmp55 * _tmp93 - _tmp93 * _tmp95);
  const Scalar _tmp126 = Scalar(1.0) / (_tmp125);
  const Scalar _tmp127 = _tmp38 + _tmp76;
  const Scalar _tmp128 = _tmp127 * fh1;
  const Scalar _tmp129 = _tmp102 * _tmp128 + Scalar(3.29616) * _tmp11 + _tmp17 * fv1;
  const Scalar _tmp130 = _tmp51 + _tmp84;
  const Scalar _tmp131 = _tmp130 * _tmp88;
  const Scalar _tmp132 = Scalar(1.0) / (-_tmp131 - _tmp46 + _tmp86);
  const Scalar _tmp133 = Scalar(1.0) * _tmp132;
  const Scalar _tmp134 = _tmp130 * _tmp133;
  const Scalar _tmp135 = _tmp134 * _tmp85;
  const Scalar _tmp136 = -Scalar(1.0) * _tmp133 + Scalar(1.0) * _tmp135;
  const Scalar _tmp137 = _tmp132 * _tmp92;
  const Scalar _tmp138 = -_tmp130 * _tmp137 - _tmp82 * _tmp93 + _tmp84;
  const Scalar _tmp139 = -_tmp101 * _tmp128 - Scalar(3.29616) * _tmp22 - _tmp27 * fv1;
  const Scalar _tmp140 = _tmp131 * _tmp133 + Scalar(1.0);
  const Scalar _tmp141 = _tmp133 * _tmp88;
  const Scalar _tmp142 = -Scalar(1.0) * _tmp111 * _tmp140 + Scalar(1.0) * _tmp141;
  const Scalar _tmp143 = _tmp130 * _tmp132;
  const Scalar _tmp144 = _tmp115 * _tmp143 - _tmp116 * _tmp82 - Scalar(1.0) * _tmp80;
  const Scalar _tmp145 = Scalar(1.0) * _tmp101 * (-_tmp111 * _tmp144 + _tmp115 * _tmp133);
  const Scalar _tmp146 = -_tmp109 * _tmp82 + _tmp114 * _tmp134;
  const Scalar _tmp147 = _tmp114 * _tmp133;
  const Scalar _tmp148 = Scalar(1.0) * _tmp103 * (-_tmp111 * _tmp146 + _tmp147);
  const Scalar _tmp149 = _tmp119 + _tmp121 * _tmp143 - _tmp122 * _tmp82;
  const Scalar _tmp150 = Scalar(1.0) * _tmp102 * (-_tmp111 * _tmp149 + _tmp121 * _tmp133);
  const Scalar _tmp151 =
      _tmp129 * _tmp136 + _tmp139 * _tmp142 + _tmp145 * fh1 + _tmp148 * fh1 + _tmp150 * fh1 +
      Scalar(1.0) * _tmp37 * (-_tmp111 * _tmp138 - _tmp133 * _tmp92 + Scalar(1.0));
  const Scalar _tmp152 = std::asinh(_tmp126 * _tmp151);
  const Scalar _tmp153 = Scalar(9.6622558468725703) * _tmp125;
  const Scalar _tmp154 =
      -_tmp152 * _tmp153 -
      Scalar(4.83288938413423) *
          std::sqrt(
              Scalar(std::pow(Scalar(1 - Scalar(0.20691555724053495) * _tmp58), Scalar(2)) +
                     Scalar(0.13818785160942856) *
                         std::pow(Scalar(-Scalar(0.55661923802822921) * _tmp61 - 1), Scalar(2))));
  const Scalar _tmp155 = Scalar(0.1034955) * _tmp126;
  const Scalar _tmp156 = _tmp154 * _tmp155;
  const Scalar _tmp157 = Scalar(1.0) * _tmp152;
  const Scalar _tmp158 = -_tmp110 - _tmp118 - _tmp124;
  const Scalar _tmp159 = Scalar(9.6622558468725703) * _tmp158;
  const Scalar _tmp160 = std::pow(_tmp125, Scalar(-2));
  const Scalar _tmp161 = _tmp158 * _tmp160;
  const Scalar _tmp162 = _tmp101 * _tmp127;
  const Scalar _tmp163 = _tmp102 * _tmp127;
  const Scalar _tmp164 =
      (_tmp126 * (_tmp136 * _tmp163 - _tmp142 * _tmp162 + _tmp145 + _tmp148 + _tmp150) -
       _tmp151 * _tmp161) /
      std::sqrt(Scalar(std::pow(_tmp151, Scalar(2)) * _tmp160 + 1));
  const Scalar _tmp165 = _tmp101 * _tmp144 * _tmp85;
  const Scalar _tmp166 = _tmp102 * _tmp149 * _tmp85;
  const Scalar _tmp167 = _tmp140 * _tmp85;
  const Scalar _tmp168 = _tmp129 * _tmp133;
  const Scalar _tmp169 = _tmp103 * _tmp146 * _tmp85;
  const Scalar _tmp170 = -_tmp130 * _tmp168 * _tmp85 + _tmp138 * _tmp37 * _tmp85 +
                         _tmp139 * _tmp167 + _tmp165 * fh1 + _tmp166 * fh1 + _tmp169 * fh1;
  const Scalar _tmp171 = _tmp102 * _tmp123;
  const Scalar _tmp172 = _tmp103 * _tmp109;
  const Scalar _tmp173 = _tmp172 * fh1;
  const Scalar _tmp174 = _tmp37 * _tmp93;
  const Scalar _tmp175 = _tmp101 * _tmp117;
  const Scalar _tmp176 = _tmp171 * fh1 - _tmp173 * _tmp94 - _tmp174 * _tmp94 + _tmp175 * fh1;
  const Scalar _tmp177 = Scalar(1.0) / (_tmp176);
  const Scalar _tmp178 = std::asinh(_tmp170 * _tmp177);
  const Scalar _tmp179 = Scalar(1.0) * _tmp178;
  const Scalar _tmp180 = Scalar(9.6622558468725703) * _tmp176;
  const Scalar _tmp181 =
      -_tmp178 * _tmp180 -
      Scalar(8.3885017487099702) *
          std::sqrt(
              Scalar(Scalar(0.090199313518583735) *
                         std::pow(Scalar(1 - Scalar(0.39693005512043167) * _tmp70), Scalar(2)) +
                     std::pow(Scalar(-Scalar(0.11921079949155229) * _tmp67 - 1), Scalar(2))));
  const Scalar _tmp182 = Scalar(0.1034955) * _tmp177;
  const Scalar _tmp183 = _tmp181 * _tmp182;
  const Scalar _tmp184 = _tmp171 - _tmp172 * _tmp94 + _tmp175;
  const Scalar _tmp185 = Scalar(9.6622558468725703) * _tmp184;
  const Scalar _tmp186 = std::pow(_tmp176, Scalar(-2));
  const Scalar _tmp187 = _tmp184 * _tmp186;
  const Scalar _tmp188 = (-_tmp170 * _tmp187 + _tmp177 * (-_tmp135 * _tmp163 - _tmp162 * _tmp167 +
                                                          _tmp165 + _tmp166 + _tmp169)) /
                         std::sqrt(Scalar(std::pow(_tmp170, Scalar(2)) * _tmp186 + 1));
  const Scalar _tmp189 = _tmp102 * _tmp121 * _tmp132;
  const Scalar _tmp190 = _tmp101 * _tmp115 * _tmp132;
  const Scalar _tmp191 = _tmp103 * _tmp147;
  const Scalar _tmp192 = _tmp137 * _tmp37 - _tmp139 * _tmp141 + _tmp168 - _tmp189 * fh1 -
                         _tmp190 * fh1 - _tmp191 * fh1;
  const Scalar _tmp193 = _tmp102 * _tmp122;
  const Scalar _tmp194 = _tmp101 * _tmp116;
  const Scalar _tmp195 = _tmp173 + _tmp174 + _tmp193 * fh1 + _tmp194 * fh1;
  const Scalar _tmp196 = Scalar(1.0) / (_tmp195);
  const Scalar _tmp197 = std::asinh(_tmp192 * _tmp196);
  const Scalar _tmp198 = Scalar(1.0) * _tmp197;
  const Scalar _tmp199 = Scalar(9.6622558468725703) * _tmp195;
  const Scalar _tmp200 =
      -_tmp197 * _tmp199 -
      Scalar(8.3196563720703107) *
          std::sqrt(
              Scalar(Scalar(0.057067943527034905) *
                         std::pow(Scalar(-Scalar(0.50315118477277876) * _tmp47 - 1), Scalar(2)) +
                     std::pow(Scalar(-Scalar(0.12019727201198747) * _tmp52 - 1), Scalar(2))));
  const Scalar _tmp201 = Scalar(0.1034955) * _tmp196;
  const Scalar _tmp202 = _tmp200 * _tmp201;
  const Scalar _tmp203 = _tmp172 + _tmp193 + _tmp194;
  const Scalar _tmp204 = Scalar(9.6622558468725703) * _tmp203;
  const Scalar _tmp205 = std::pow(_tmp195, Scalar(-2));
  const Scalar _tmp206 = _tmp203 * _tmp205;
  const Scalar _tmp207 = (-_tmp192 * _tmp206 + _tmp196 * (_tmp133 * _tmp163 + _tmp141 * _tmp162 -
                                                          _tmp189 - _tmp190 - _tmp191)) /
                         std::sqrt(Scalar(std::pow(_tmp192, Scalar(2)) * _tmp205 + 1));

  // Output terms (1)
  Eigen::Matrix<Scalar, 4, 1> _res;

  _res(0, 0) =
      Scalar(9.6622558468725703) * fh1 *
          (Scalar(1.0) * _tmp34 * _tmp35 * fv1 * std::cosh(_tmp36) -
           (Scalar(0.1034955) * _tmp0 * (Scalar(9.6622558468725703) * _tmp29 * _tmp35 - _tmp31) -
            _tmp32 * _tmp34) *
               std::cosh(_tmp33)) -
      Scalar(9.6622558468725703) * std::sinh(_tmp33) -
      Scalar(9.6622558468725703) * std::sinh(_tmp36);
  _res(1, 0) = _tmp153 * (-Scalar(1.0) * _tmp164 * std::cosh(_tmp157) -
                          (-Scalar(0.1034955) * _tmp154 * _tmp161 +
                           _tmp155 * (-_tmp152 * _tmp159 - _tmp153 * _tmp164)) *
                              std::cosh(_tmp156)) +
               _tmp159 * (-std::sinh(_tmp156) - std::sinh(_tmp157));
  _res(2, 0) = _tmp180 * (-Scalar(1.0) * _tmp188 * std::cosh(_tmp179) -
                          (-Scalar(0.1034955) * _tmp181 * _tmp187 +
                           _tmp182 * (-_tmp178 * _tmp185 - _tmp180 * _tmp188)) *
                              std::cosh(_tmp183)) +
               _tmp185 * (-std::sinh(_tmp179) - std::sinh(_tmp183));
  _res(3, 0) = _tmp199 * (-Scalar(1.0) * _tmp207 * std::cosh(_tmp198) -
                          (-Scalar(0.1034955) * _tmp200 * _tmp206 +
                           _tmp201 * (-_tmp197 * _tmp204 - _tmp199 * _tmp207)) *
                              std::cosh(_tmp202)) +
               _tmp204 * (-std::sinh(_tmp198) - std::sinh(_tmp202));

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
