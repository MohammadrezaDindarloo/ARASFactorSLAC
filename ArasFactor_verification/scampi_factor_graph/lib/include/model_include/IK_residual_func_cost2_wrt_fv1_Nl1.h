// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

#include <sym/rot3.h>

namespace sym {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: IK_residual_func_cost2_wrt_fv1_Nl1
 *
 * Args:
 *     fh1: Scalar
 *     fv1: Scalar
 *     DeltaRot: Rot3
 *     position_vector: Matrix31
 *     Rot_init: Rot3
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix41
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 4, 1> IkResidualFuncCost2WrtFv1Nl1(
    const Scalar fh1, const Scalar fv1, const sym::Rot3<Scalar>& DeltaRot,
    const Eigen::Matrix<Scalar, 3, 1>& position_vector, const sym::Rot3<Scalar>& Rot_init,
    const Scalar epsilon) {
  // Total ops: 599

  // Unused inputs
  (void)epsilon;

  // Input arrays
  const Eigen::Matrix<Scalar, 4, 1>& _DeltaRot = DeltaRot.Data();
  const Eigen::Matrix<Scalar, 4, 1>& _Rot_init = Rot_init.Data();

  // Intermediate terms (191)
  const Scalar _tmp0 = Scalar(1.0) / (fh1);
  const Scalar _tmp1 = std::asinh(_tmp0 * fv1);
  const Scalar _tmp2 = Scalar(1.0) * _tmp0 /
                       std::sqrt(Scalar(1 + std::pow(fv1, Scalar(2)) / std::pow(fh1, Scalar(2))));
  const Scalar _tmp3 = _DeltaRot[0] * _Rot_init[2] + _DeltaRot[1] * _Rot_init[3] -
                       _DeltaRot[2] * _Rot_init[0] + _DeltaRot[3] * _Rot_init[1];
  const Scalar _tmp4 = _DeltaRot[0] * _Rot_init[3] - _DeltaRot[1] * _Rot_init[2] +
                       _DeltaRot[2] * _Rot_init[1] + _DeltaRot[3] * _Rot_init[0];
  const Scalar _tmp5 = 2 * _tmp3 * _tmp4;
  const Scalar _tmp6 = -_DeltaRot[0] * _Rot_init[1] + _DeltaRot[1] * _Rot_init[0] +
                       _DeltaRot[2] * _Rot_init[3] + _DeltaRot[3] * _Rot_init[2];
  const Scalar _tmp7 = -2 * _DeltaRot[0] * _Rot_init[0] - 2 * _DeltaRot[1] * _Rot_init[1] -
                       2 * _DeltaRot[2] * _Rot_init[2] + 2 * _DeltaRot[3] * _Rot_init[3];
  const Scalar _tmp8 = _tmp6 * _tmp7;
  const Scalar _tmp9 = Scalar(0.20999999999999999) * _tmp5 + Scalar(0.20999999999999999) * _tmp8;
  const Scalar _tmp10 = -_tmp9;
  const Scalar _tmp11 = -2 * std::pow(_tmp4, Scalar(2));
  const Scalar _tmp12 = 1 - 2 * std::pow(_tmp6, Scalar(2));
  const Scalar _tmp13 = Scalar(0.20999999999999999) * _tmp11 + Scalar(0.20999999999999999) * _tmp12;
  const Scalar _tmp14 = 2 * _tmp6;
  const Scalar _tmp15 = _tmp14 * _tmp3;
  const Scalar _tmp16 = _tmp4 * _tmp7;
  const Scalar _tmp17 = _tmp15 - _tmp16;
  const Scalar _tmp18 = Scalar(0.010999999999999999) * _tmp17;
  const Scalar _tmp19 = -_tmp18;
  const Scalar _tmp20 = -_tmp13 + _tmp19;
  const Scalar _tmp21 = _tmp10 + _tmp20;
  const Scalar _tmp22 = _tmp21 + position_vector(1, 0);
  const Scalar _tmp23 = -2 * std::pow(_tmp3, Scalar(2));
  const Scalar _tmp24 = Scalar(0.20999999999999999) * _tmp12 + Scalar(0.20999999999999999) * _tmp23;
  const Scalar _tmp25 = -_tmp24;
  const Scalar _tmp26 = _tmp14 * _tmp4;
  const Scalar _tmp27 = _tmp3 * _tmp7;
  const Scalar _tmp28 = _tmp26 + _tmp27;
  const Scalar _tmp29 = -Scalar(0.010999999999999999) * _tmp28;
  const Scalar _tmp30 = Scalar(0.20999999999999999) * _tmp5 - Scalar(0.20999999999999999) * _tmp8;
  const Scalar _tmp31 = _tmp29 - _tmp30;
  const Scalar _tmp32 = _tmp25 + _tmp31;
  const Scalar _tmp33 = _tmp32 + position_vector(0, 0);
  const Scalar _tmp34 = Scalar(9.6622558468725703) * fh1;
  const Scalar _tmp35 = _tmp29 + _tmp30;
  const Scalar _tmp36 = _tmp24 + _tmp35;
  const Scalar _tmp37 = _tmp13 + _tmp9;
  const Scalar _tmp38 = _tmp19 + _tmp37;
  const Scalar _tmp39 = _tmp38 + position_vector(1, 0);
  const Scalar _tmp40 = _tmp39 + Scalar(-4.7744369927459998);
  const Scalar _tmp41 = _tmp36 + position_vector(0, 0);
  const Scalar _tmp42 = _tmp41 + Scalar(-2.7171519410699099);
  const Scalar _tmp43 = std::pow(Scalar(std::pow(_tmp40, Scalar(2)) + std::pow(_tmp42, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp44 = _tmp40 * _tmp43;
  const Scalar _tmp45 = _tmp42 * _tmp43;
  const Scalar _tmp46 = _tmp24 + _tmp31;
  const Scalar _tmp47 = _tmp46 + position_vector(0, 0);
  const Scalar _tmp48 = _tmp47 + Scalar(-2.5193355532036801);
  const Scalar _tmp49 = _tmp20 + _tmp9;
  const Scalar _tmp50 = _tmp49 + position_vector(1, 0);
  const Scalar _tmp51 = _tmp50 + Scalar(8.3885017487099702);
  const Scalar _tmp52 =
      std::sqrt(Scalar(std::pow(_tmp48, Scalar(2)) + std::pow(_tmp51, Scalar(2))));
  const Scalar _tmp53 = Scalar(1.0) / (_tmp52);
  const Scalar _tmp54 = Scalar(1.0) / (_tmp48);
  const Scalar _tmp55 = _tmp52 * _tmp54;
  const Scalar _tmp56 = _tmp55 * (_tmp46 * _tmp51 * _tmp53 - _tmp48 * _tmp49 * _tmp53);
  const Scalar _tmp57 = _tmp25 + _tmp35;
  const Scalar _tmp58 = _tmp57 + position_vector(0, 0);
  const Scalar _tmp59 = _tmp58 + Scalar(1.7965602546229);
  const Scalar _tmp60 = _tmp10 + _tmp13 + _tmp19;
  const Scalar _tmp61 = _tmp60 + position_vector(1, 0);
  const Scalar _tmp62 = _tmp61 + Scalar(-4.83288938413423);
  const Scalar _tmp63 = std::pow(Scalar(std::pow(_tmp59, Scalar(2)) + std::pow(_tmp62, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp64 = _tmp59 * _tmp63;
  const Scalar _tmp65 = _tmp62 * _tmp63;
  const Scalar _tmp66 = _tmp56 * _tmp64 - _tmp57 * _tmp65 + _tmp60 * _tmp64;
  const Scalar _tmp67 = _tmp51 * _tmp54;
  const Scalar _tmp68 = -_tmp44 + _tmp45 * _tmp67;
  const Scalar _tmp69 = Scalar(1.0) / (_tmp64 * _tmp67 - _tmp65);
  const Scalar _tmp70 = _tmp68 * _tmp69;
  const Scalar _tmp71 = -_tmp36 * _tmp44 + _tmp38 * _tmp45 + _tmp45 * _tmp56 - _tmp66 * _tmp70;
  const Scalar _tmp72 = Scalar(1.0) / (_tmp71);
  const Scalar _tmp73 = Scalar(1.0) * _tmp72;
  const Scalar _tmp74 = _tmp64 * _tmp70;
  const Scalar _tmp75 = _tmp33 + Scalar(1.9874742031097401);
  const Scalar _tmp76 = _tmp22 + Scalar(8.3196563720703107);
  const Scalar _tmp77 = std::pow(Scalar(std::pow(_tmp75, Scalar(2)) + std::pow(_tmp76, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp78 = _tmp76 * _tmp77;
  const Scalar _tmp79 = _tmp75 * _tmp77;
  const Scalar _tmp80 = fh1 * (-_tmp21 * _tmp79 + _tmp32 * _tmp78);
  const Scalar _tmp81 = Scalar(0.20999999999999999) * _tmp26 - Scalar(0.20999999999999999) * _tmp27;
  const Scalar _tmp82 = -_tmp81;
  const Scalar _tmp83 = -Scalar(0.010999999999999999) * _tmp11 -
                        Scalar(0.010999999999999999) * _tmp23 + Scalar(-0.010999999999999999);
  const Scalar _tmp84 = Scalar(0.20999999999999999) * _tmp15 + Scalar(0.20999999999999999) * _tmp16;
  const Scalar _tmp85 = _tmp83 + _tmp84;
  const Scalar _tmp86 = _tmp82 + _tmp85;
  const Scalar _tmp87 = _tmp83 - _tmp84;
  const Scalar _tmp88 = _tmp81 + _tmp87;
  const Scalar _tmp89 = -_tmp64 * _tmp86 + _tmp64 * _tmp88;
  const Scalar _tmp90 = _tmp81 + _tmp85;
  const Scalar _tmp91 = _tmp67 * _tmp88;
  const Scalar _tmp92 = -_tmp64 * _tmp91 + _tmp65 * _tmp86;
  const Scalar _tmp93 = _tmp44 * _tmp90 - _tmp45 * _tmp91 - _tmp70 * _tmp92;
  const Scalar _tmp94 = Scalar(1.0) * _tmp49;
  const Scalar _tmp95 = -_tmp94;
  const Scalar _tmp96 = Scalar(1.0) / (_tmp60 + _tmp95);
  const Scalar _tmp97 = Scalar(1.0) * _tmp46;
  const Scalar _tmp98 = -_tmp57 + _tmp97;
  const Scalar _tmp99 = _tmp96 * _tmp98;
  const Scalar _tmp100 = _tmp45 * _tmp88 - _tmp45 * _tmp90 - _tmp70 * _tmp89 - _tmp93 * _tmp99;
  const Scalar _tmp101 = Scalar(1.0) / (_tmp100);
  const Scalar _tmp102 = Scalar(1.0) * _tmp96;
  const Scalar _tmp103 = Scalar(1.0) * _tmp69;
  const Scalar _tmp104 = _tmp102 * _tmp69 * _tmp92 * _tmp98 - _tmp103 * _tmp89;
  const Scalar _tmp105 = _tmp101 * _tmp71;
  const Scalar _tmp106 = _tmp100 * _tmp72;
  const Scalar _tmp107 = _tmp106 * (-_tmp103 * _tmp66 - _tmp104 * _tmp105);
  const Scalar _tmp108 = _tmp101 * (_tmp104 + _tmp107);
  const Scalar _tmp109 = -_tmp108 * _tmp68 + Scalar(1.0);
  const Scalar _tmp110 = _tmp64 * _tmp69;
  const Scalar _tmp111 = _tmp78 * fh1;
  const Scalar _tmp112 = Scalar(43.164000000000001) - fv1;
  const Scalar _tmp113 = _tmp94 * _tmp99 + _tmp97;
  const Scalar _tmp114 = 0;
  const Scalar _tmp115 = _tmp55 * (_tmp114 * _tmp45 - _tmp114 * _tmp74);
  const Scalar _tmp116 = _tmp67 * _tmp69;
  const Scalar _tmp117 = _tmp116 * _tmp92 + _tmp91;
  const Scalar _tmp118 = _tmp116 * _tmp89 - _tmp117 * _tmp99 - _tmp88;
  const Scalar _tmp119 = _tmp106 * (-_tmp105 * _tmp118 + _tmp116 * _tmp66 - _tmp56);
  const Scalar _tmp120 = _tmp101 * (_tmp118 + _tmp119);
  const Scalar _tmp121 = -_tmp120 * _tmp68 - _tmp67;
  const Scalar _tmp122 = _tmp79 * fh1;
  const Scalar _tmp123 = -_tmp111 * _tmp55 * (_tmp108 * _tmp45 + _tmp109 * _tmp110) -
                         _tmp112 * _tmp115 -
                         _tmp122 * _tmp55 * (_tmp110 * _tmp121 + _tmp120 * _tmp45 + Scalar(1.0)) -
                         _tmp55 * _tmp80 * (_tmp45 * _tmp73 - _tmp73 * _tmp74);
  const Scalar _tmp124 = Scalar(1.0) / (_tmp123);
  const Scalar _tmp125 = _tmp38 + _tmp95;
  const Scalar _tmp126 = _tmp125 * _tmp99;
  const Scalar _tmp127 = Scalar(1.0) / (-_tmp126 - _tmp36 + _tmp97);
  const Scalar _tmp128 = Scalar(1.0) * _tmp127;
  const Scalar _tmp129 = _tmp113 * _tmp127;
  const Scalar _tmp130 = _tmp96 * (-_tmp114 * _tmp93 - _tmp125 * _tmp129 + _tmp95);
  const Scalar _tmp131 = -Scalar(1.0) * _tmp113 * _tmp128 - Scalar(1.0) * _tmp130 + Scalar(1.0);
  const Scalar _tmp132 = fh1 * (_tmp82 + _tmp87);
  const Scalar _tmp133 = -_tmp132 * _tmp78 - Scalar(3.29616) * _tmp17 - _tmp21 * fv1;
  const Scalar _tmp134 = _tmp126 * _tmp128 + Scalar(1.0);
  const Scalar _tmp135 = _tmp128 * _tmp99;
  const Scalar _tmp136 = -Scalar(1.0) * _tmp102 * _tmp134 + Scalar(1.0) * _tmp135;
  const Scalar _tmp137 = _tmp125 * _tmp128;
  const Scalar _tmp138 = _tmp106 * _tmp137 - _tmp73 * _tmp93;
  const Scalar _tmp139 = _tmp106 * _tmp128;
  const Scalar _tmp140 = _tmp132 * _tmp79 + Scalar(3.29616) * _tmp28 + _tmp32 * fv1;
  const Scalar _tmp141 = -Scalar(1.0) * _tmp128 + Scalar(1.0) * _tmp137 * _tmp96;
  const Scalar _tmp142 = _tmp125 * _tmp127;
  const Scalar _tmp143 = -_tmp103 * _tmp92 + _tmp107 * _tmp142 - _tmp108 * _tmp93;
  const Scalar _tmp144 = Scalar(1.0) * fh1;
  const Scalar _tmp145 = _tmp117 + _tmp119 * _tmp142 - _tmp120 * _tmp93;
  const Scalar _tmp146 = _tmp112 * _tmp131 + _tmp133 * _tmp136 + _tmp140 * _tmp141 +
                         _tmp144 * _tmp78 * (-_tmp102 * _tmp143 + _tmp107 * _tmp128) +
                         _tmp144 * _tmp79 * (-_tmp102 * _tmp145 + _tmp119 * _tmp128) +
                         Scalar(1.0) * _tmp80 * (-_tmp102 * _tmp138 + _tmp139);
  const Scalar _tmp147 = std::asinh(_tmp124 * _tmp146);
  const Scalar _tmp148 = Scalar(1.0) * _tmp147;
  const Scalar _tmp149 = std::pow(_tmp123, Scalar(-2));
  const Scalar _tmp150 = _tmp115 * _tmp149;
  const Scalar _tmp151 = _tmp18 + _tmp37;
  const Scalar _tmp152 =
      (_tmp124 * (-_tmp131 + _tmp136 * _tmp151 + _tmp141 * _tmp32) - _tmp146 * _tmp150) /
      std::sqrt(Scalar(std::pow(_tmp146, Scalar(2)) * _tmp149 + 1));
  const Scalar _tmp153 = Scalar(9.6622558468725703) * _tmp123;
  const Scalar _tmp154 =
      -_tmp147 * _tmp153 -
      Scalar(8.3885017487099702) *
          std::sqrt(
              Scalar(Scalar(0.090199313518583735) *
                         std::pow(Scalar(1 - Scalar(0.39693005512043167) * _tmp47), Scalar(2)) +
                     std::pow(Scalar(-Scalar(0.11921079949155229) * _tmp50 - 1), Scalar(2))));
  const Scalar _tmp155 = Scalar(0.1034955) * _tmp124;
  const Scalar _tmp156 = _tmp154 * _tmp155;
  const Scalar _tmp157 = Scalar(9.6622558468725703) * _tmp115;
  const Scalar _tmp158 = _tmp69 * fh1;
  const Scalar _tmp159 = _tmp112 * _tmp114;
  const Scalar _tmp160 = _tmp73 * _tmp80;
  const Scalar _tmp161 =
      _tmp109 * _tmp158 * _tmp78 + _tmp121 * _tmp158 * _tmp79 - _tmp159 * _tmp70 - _tmp160 * _tmp70;
  const Scalar _tmp162 = Scalar(1.0) / (_tmp161);
  const Scalar _tmp163 = _tmp134 * _tmp96;
  const Scalar _tmp164 = _tmp128 * _tmp140;
  const Scalar _tmp165 = _tmp125 * _tmp96;
  const Scalar _tmp166 = _tmp111 * _tmp143 * _tmp96 + _tmp112 * _tmp130 +
                         _tmp122 * _tmp145 * _tmp96 + _tmp133 * _tmp163 +
                         _tmp138 * _tmp80 * _tmp96 - _tmp164 * _tmp165;
  const Scalar _tmp167 = std::asinh(_tmp162 * _tmp166);
  const Scalar _tmp168 = Scalar(9.6622558468725703) * _tmp161;
  const Scalar _tmp169 =
      -_tmp167 * _tmp168 -
      Scalar(4.83288938413423) *
          std::sqrt(
              Scalar(std::pow(Scalar(1 - Scalar(0.20691555724053495) * _tmp61), Scalar(2)) +
                     Scalar(0.13818785160942856) *
                         std::pow(Scalar(-Scalar(0.55661923802822921) * _tmp58 - 1), Scalar(2))));
  const Scalar _tmp170 = Scalar(0.1034955) * _tmp162;
  const Scalar _tmp171 = _tmp169 * _tmp170;
  const Scalar _tmp172 = Scalar(9.6622558468725703) * _tmp114;
  const Scalar _tmp173 = _tmp172 * _tmp70;
  const Scalar _tmp174 = std::pow(_tmp161, Scalar(-2));
  const Scalar _tmp175 = _tmp114 * _tmp174 * _tmp70;
  const Scalar _tmp176 = _tmp128 * _tmp32;
  const Scalar _tmp177 =
      (_tmp162 * (-_tmp130 + _tmp151 * _tmp163 - _tmp165 * _tmp176) - _tmp166 * _tmp175) /
      std::sqrt(Scalar(std::pow(_tmp166, Scalar(2)) * _tmp174 + 1));
  const Scalar _tmp178 = Scalar(1.0) * _tmp167;
  const Scalar _tmp179 = -_tmp107 * _tmp111 * _tmp127 + _tmp112 * _tmp129 -
                         _tmp119 * _tmp122 * _tmp127 - _tmp133 * _tmp135 - _tmp139 * _tmp80 +
                         _tmp164;
  const Scalar _tmp180 = _tmp108 * _tmp111 + _tmp120 * _tmp122 + _tmp159 + _tmp160;
  const Scalar _tmp181 = Scalar(1.0) / (_tmp180);
  const Scalar _tmp182 = std::asinh(_tmp179 * _tmp181);
  const Scalar _tmp183 = Scalar(9.6622558468725703) * _tmp180;
  const Scalar _tmp184 =
      -_tmp182 * _tmp183 -
      Scalar(4.7744369927459998) *
          std::sqrt(
              Scalar(std::pow(Scalar(1 - Scalar(0.2094487793051498) * _tmp39), Scalar(2)) +
                     Scalar(0.32387954179207445) *
                         std::pow(Scalar(1 - Scalar(0.36803241838814449) * _tmp41), Scalar(2))));
  const Scalar _tmp185 = Scalar(0.1034955) * _tmp181;
  const Scalar _tmp186 = _tmp184 * _tmp185;
  const Scalar _tmp187 = std::pow(_tmp180, Scalar(-2));
  const Scalar _tmp188 = _tmp114 * _tmp187;
  const Scalar _tmp189 = (_tmp179 * _tmp188 + _tmp181 * (-_tmp129 - _tmp135 * _tmp151 + _tmp176)) /
                         std::sqrt(Scalar(std::pow(_tmp179, Scalar(2)) * _tmp187 + 1));
  const Scalar _tmp190 = Scalar(1.0) * _tmp182;

  // Output terms (1)
  Eigen::Matrix<Scalar, 4, 1> _res;

  _res(0, 0) =
      _tmp34 *
      (-_tmp2 * std::cosh(Scalar(1.0) * _tmp1) +
       _tmp2 * std::cosh(
                   Scalar(0.1034955) * _tmp0 *
                   (-_tmp1 * _tmp34 -
                    Scalar(8.3196563720703107) *
                        std::sqrt(Scalar(
                            std::pow(Scalar(-Scalar(0.12019727201198747) * _tmp22 - 1), Scalar(2)) +
                            Scalar(0.057067943527034905) *
                                std::pow(Scalar(-Scalar(0.50315118477277876) * _tmp33 - 1),
                                         Scalar(2)))))));
  _res(1, 0) = _tmp153 * (-Scalar(1.0) * _tmp152 * std::cosh(_tmp148) -
                          (-Scalar(0.1034955) * _tmp150 * _tmp154 +
                           _tmp155 * (-_tmp147 * _tmp157 - _tmp152 * _tmp153)) *
                              std::cosh(_tmp156)) +
               _tmp157 * (-std::sinh(_tmp148) - std::sinh(_tmp156));
  _res(2, 0) = _tmp168 * (-Scalar(1.0) * _tmp177 * std::cosh(_tmp178) -
                          (-Scalar(0.1034955) * _tmp169 * _tmp175 +
                           _tmp170 * (-_tmp167 * _tmp173 - _tmp168 * _tmp177)) *
                              std::cosh(_tmp171)) +
               _tmp173 * (-std::sinh(_tmp171) - std::sinh(_tmp178));
  _res(3, 0) = -_tmp172 * (-std::sinh(_tmp186) - std::sinh(_tmp190)) +
               _tmp183 * (-Scalar(1.0) * _tmp189 * std::cosh(_tmp190) -
                          (Scalar(0.1034955) * _tmp184 * _tmp188 +
                           _tmp185 * (_tmp172 * _tmp182 - _tmp183 * _tmp189)) *
                              std::cosh(_tmp186));

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
