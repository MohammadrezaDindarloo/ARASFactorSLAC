// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

#include <sym/rot3.h>

namespace sym {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: IK_residual_func_cost2_wrt_fv1_Nl15
 *
 * Args:
 *     fh1: Scalar
 *     fv1: Scalar
 *     DeltaRot: Rot3
 *     position_vector: Matrix31
 *     Rot_init: Rot3
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix41
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 4, 1> IkResidualFuncCost2WrtFv1Nl15(
    const Scalar fh1, const Scalar fv1, const sym::Rot3<Scalar>& DeltaRot,
    const Eigen::Matrix<Scalar, 3, 1>& position_vector, const sym::Rot3<Scalar>& Rot_init,
    const Scalar epsilon) {
  // Total ops: 598

  // Unused inputs
  (void)epsilon;

  // Input arrays
  const Eigen::Matrix<Scalar, 4, 1>& _DeltaRot = DeltaRot.Data();
  const Eigen::Matrix<Scalar, 4, 1>& _Rot_init = Rot_init.Data();

  // Intermediate terms (191)
  const Scalar _tmp0 = Scalar(1.0) / (fh1);
  const Scalar _tmp1 = std::asinh(_tmp0 * fv1);
  const Scalar _tmp2 = Scalar(1.0) * _tmp0 /
                       std::sqrt(Scalar(1 + std::pow(fv1, Scalar(2)) / std::pow(fh1, Scalar(2))));
  const Scalar _tmp3 = _DeltaRot[0] * _Rot_init[3] - _DeltaRot[1] * _Rot_init[2] +
                       _DeltaRot[2] * _Rot_init[1] + _DeltaRot[3] * _Rot_init[0];
  const Scalar _tmp4 = _DeltaRot[0] * _Rot_init[2] + _DeltaRot[1] * _Rot_init[3] -
                       _DeltaRot[2] * _Rot_init[0] + _DeltaRot[3] * _Rot_init[1];
  const Scalar _tmp5 = 2 * _tmp4;
  const Scalar _tmp6 = _tmp3 * _tmp5;
  const Scalar _tmp7 = -_DeltaRot[0] * _Rot_init[1] + _DeltaRot[1] * _Rot_init[0] +
                       _DeltaRot[2] * _Rot_init[3] + _DeltaRot[3] * _Rot_init[2];
  const Scalar _tmp8 = -2 * _DeltaRot[0] * _Rot_init[0] - 2 * _DeltaRot[1] * _Rot_init[1] -
                       2 * _DeltaRot[2] * _Rot_init[2] + 2 * _DeltaRot[3] * _Rot_init[3];
  const Scalar _tmp9 = _tmp7 * _tmp8;
  const Scalar _tmp10 = Scalar(0.20999999999999999) * _tmp6 - Scalar(0.20999999999999999) * _tmp9;
  const Scalar _tmp11 = -2 * std::pow(_tmp7, Scalar(2));
  const Scalar _tmp12 = 1 - 2 * std::pow(_tmp4, Scalar(2));
  const Scalar _tmp13 = Scalar(0.20999999999999999) * _tmp11 + Scalar(0.20999999999999999) * _tmp12;
  const Scalar _tmp14 = 2 * _tmp3 * _tmp7;
  const Scalar _tmp15 = _tmp4 * _tmp8;
  const Scalar _tmp16 = _tmp14 + _tmp15;
  const Scalar _tmp17 = -Scalar(0.010999999999999999) * _tmp16;
  const Scalar _tmp18 = _tmp13 + _tmp17;
  const Scalar _tmp19 = _tmp10 + _tmp18;
  const Scalar _tmp20 = _tmp19 + position_vector(0, 0);
  const Scalar _tmp21 = -2 * std::pow(_tmp3, Scalar(2));
  const Scalar _tmp22 = Scalar(0.20999999999999999) * _tmp11 +
                        Scalar(0.20999999999999999) * _tmp21 + Scalar(0.20999999999999999);
  const Scalar _tmp23 = _tmp5 * _tmp7;
  const Scalar _tmp24 = _tmp3 * _tmp8;
  const Scalar _tmp25 = _tmp23 - _tmp24;
  const Scalar _tmp26 = Scalar(0.010999999999999999) * _tmp25;
  const Scalar _tmp27 = -_tmp26;
  const Scalar _tmp28 = Scalar(0.20999999999999999) * _tmp6 + Scalar(0.20999999999999999) * _tmp9;
  const Scalar _tmp29 = _tmp27 + _tmp28;
  const Scalar _tmp30 = _tmp22 + _tmp29;
  const Scalar _tmp31 = _tmp30 + position_vector(1, 0);
  const Scalar _tmp32 = Scalar(9.6622558468725703) * fh1;
  const Scalar _tmp33 = -_tmp10;
  const Scalar _tmp34 = _tmp18 + _tmp33;
  const Scalar _tmp35 = _tmp34 + position_vector(0, 0);
  const Scalar _tmp36 = _tmp35 + Scalar(-2.5193355532036801);
  const Scalar _tmp37 = Scalar(1.0) / (_tmp36);
  const Scalar _tmp38 = -_tmp22;
  const Scalar _tmp39 = _tmp29 + _tmp38;
  const Scalar _tmp40 = _tmp39 + position_vector(1, 0);
  const Scalar _tmp41 = _tmp40 + Scalar(8.3885017487099702);
  const Scalar _tmp42 = _tmp37 * _tmp41;
  const Scalar _tmp43 = -_tmp13 + _tmp17;
  const Scalar _tmp44 = _tmp10 + _tmp43;
  const Scalar _tmp45 = _tmp44 + position_vector(0, 0);
  const Scalar _tmp46 = _tmp45 + Scalar(1.7965602546229);
  const Scalar _tmp47 = -_tmp28;
  const Scalar _tmp48 = _tmp27 + _tmp47;
  const Scalar _tmp49 = _tmp22 + _tmp48;
  const Scalar _tmp50 = _tmp49 + position_vector(1, 0);
  const Scalar _tmp51 = _tmp50 + Scalar(-4.83288938413423);
  const Scalar _tmp52 = std::pow(Scalar(std::pow(_tmp46, Scalar(2)) + std::pow(_tmp51, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp53 = _tmp46 * _tmp52;
  const Scalar _tmp54 = _tmp51 * _tmp52;
  const Scalar _tmp55 = Scalar(1.0) / (_tmp42 * _tmp53 - _tmp54);
  const Scalar _tmp56 = Scalar(1.0) * _tmp34;
  const Scalar _tmp57 = -_tmp44 + _tmp56;
  const Scalar _tmp58 = Scalar(0.20999999999999999) * _tmp14 - Scalar(0.20999999999999999) * _tmp15;
  const Scalar _tmp59 =
      -Scalar(0.010999999999999999) * _tmp12 - Scalar(0.010999999999999999) * _tmp21;
  const Scalar _tmp60 = Scalar(0.20999999999999999) * _tmp23 + Scalar(0.20999999999999999) * _tmp24;
  const Scalar _tmp61 = _tmp59 - _tmp60;
  const Scalar _tmp62 = _tmp58 + _tmp61;
  const Scalar _tmp63 = _tmp42 * _tmp62;
  const Scalar _tmp64 = -_tmp58;
  const Scalar _tmp65 = _tmp59 + _tmp60;
  const Scalar _tmp66 = _tmp64 + _tmp65;
  const Scalar _tmp67 = -_tmp53 * _tmp63 + _tmp54 * _tmp66;
  const Scalar _tmp68 = Scalar(1.0) * _tmp39;
  const Scalar _tmp69 = -_tmp68;
  const Scalar _tmp70 = Scalar(1.0) / (_tmp49 + _tmp69);
  const Scalar _tmp71 = Scalar(1.0) * _tmp70;
  const Scalar _tmp72 = _tmp53 * _tmp62 - _tmp53 * _tmp66;
  const Scalar _tmp73 = Scalar(1.0) * _tmp55;
  const Scalar _tmp74 = _tmp55 * _tmp57 * _tmp67 * _tmp71 - _tmp72 * _tmp73;
  const Scalar _tmp75 = _tmp61 + _tmp64;
  const Scalar _tmp76 = _tmp33 + _tmp43;
  const Scalar _tmp77 = _tmp76 + position_vector(0, 0);
  const Scalar _tmp78 = _tmp77 + Scalar(1.9874742031097401);
  const Scalar _tmp79 = _tmp38 + _tmp48;
  const Scalar _tmp80 = _tmp79 + position_vector(1, 0);
  const Scalar _tmp81 = _tmp80 + Scalar(8.3196563720703107);
  const Scalar _tmp82 = std::pow(Scalar(std::pow(_tmp78, Scalar(2)) + std::pow(_tmp81, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp83 = _tmp78 * _tmp82;
  const Scalar _tmp84 = _tmp81 * _tmp82;
  const Scalar _tmp85 = _tmp42 * _tmp83 - _tmp84;
  const Scalar _tmp86 = _tmp55 * _tmp85;
  const Scalar _tmp87 = -_tmp63 * _tmp83 - _tmp67 * _tmp86 + _tmp75 * _tmp84;
  const Scalar _tmp88 = _tmp57 * _tmp70;
  const Scalar _tmp89 = _tmp62 * _tmp83 - _tmp72 * _tmp86 - _tmp75 * _tmp83 - _tmp87 * _tmp88;
  const Scalar _tmp90 = Scalar(1.0) / (_tmp89);
  const Scalar _tmp91 =
      std::sqrt(Scalar(std::pow(_tmp36, Scalar(2)) + std::pow(_tmp41, Scalar(2))));
  const Scalar _tmp92 = Scalar(1.0) / (_tmp91);
  const Scalar _tmp93 = _tmp37 * _tmp91;
  const Scalar _tmp94 = _tmp93 * (_tmp34 * _tmp41 * _tmp92 - _tmp36 * _tmp39 * _tmp92);
  const Scalar _tmp95 = -_tmp44 * _tmp54 + _tmp49 * _tmp53 + _tmp53 * _tmp94;
  const Scalar _tmp96 = -_tmp76 * _tmp84 + _tmp79 * _tmp83 + _tmp83 * _tmp94 - _tmp86 * _tmp95;
  const Scalar _tmp97 = _tmp90 * _tmp96;
  const Scalar _tmp98 = Scalar(1.0) / (_tmp96);
  const Scalar _tmp99 = _tmp89 * _tmp98;
  const Scalar _tmp100 = _tmp99 * (-_tmp73 * _tmp95 - _tmp74 * _tmp97);
  const Scalar _tmp101 = _tmp100 + _tmp74;
  const Scalar _tmp102 = _tmp85 * _tmp90;
  const Scalar _tmp103 = -_tmp101 * _tmp102 + Scalar(1.0);
  const Scalar _tmp104 = _tmp53 * _tmp55;
  const Scalar _tmp105 = _tmp83 * _tmp90;
  const Scalar _tmp106 = _tmp31 + Scalar(-4.7744369927459998);
  const Scalar _tmp107 = _tmp20 + Scalar(-2.7171519410699099);
  const Scalar _tmp108 =
      std::pow(Scalar(std::pow(_tmp106, Scalar(2)) + std::pow(_tmp107, Scalar(2))),
               Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp109 = _tmp106 * _tmp108;
  const Scalar _tmp110 = _tmp109 * fh1;
  const Scalar _tmp111 = Scalar(43.164000000000001) - fv1;
  const Scalar _tmp112 = _tmp56 + _tmp68 * _tmp88;
  const Scalar _tmp113 = 0;
  const Scalar _tmp114 = _tmp53 * _tmp86;
  const Scalar _tmp115 = _tmp93 * (-_tmp113 * _tmp114 + _tmp113 * _tmp83);
  const Scalar _tmp116 = _tmp42 * _tmp55;
  const Scalar _tmp117 = _tmp116 * _tmp67 + _tmp63;
  const Scalar _tmp118 = _tmp116 * _tmp72 - _tmp117 * _tmp88 - _tmp62;
  const Scalar _tmp119 = _tmp99 * (_tmp116 * _tmp95 - _tmp118 * _tmp97 - _tmp94);
  const Scalar _tmp120 = _tmp118 + _tmp119;
  const Scalar _tmp121 = -_tmp102 * _tmp120 - _tmp42;
  const Scalar _tmp122 = _tmp107 * _tmp108;
  const Scalar _tmp123 = _tmp122 * fh1;
  const Scalar _tmp124 = Scalar(1.0) * _tmp98;
  const Scalar _tmp125 = fh1 * (_tmp109 * _tmp19 - _tmp122 * _tmp30);
  const Scalar _tmp126 = -_tmp110 * _tmp93 * (_tmp101 * _tmp105 + _tmp103 * _tmp104) -
                         _tmp111 * _tmp115 -
                         _tmp123 * _tmp93 * (_tmp104 * _tmp121 + _tmp105 * _tmp120 + Scalar(1.0)) -
                         _tmp125 * _tmp93 * (-_tmp114 * _tmp124 + _tmp124 * _tmp83);
  const Scalar _tmp127 = Scalar(1.0) / (_tmp126);
  const Scalar _tmp128 = _tmp69 + _tmp79;
  const Scalar _tmp129 = _tmp128 * _tmp88;
  const Scalar _tmp130 = Scalar(1.0) / (-_tmp129 + _tmp56 - _tmp76);
  const Scalar _tmp131 = Scalar(1.0) * _tmp130;
  const Scalar _tmp132 = _tmp131 * _tmp99;
  const Scalar _tmp133 = -_tmp124 * _tmp87 + _tmp128 * _tmp132;
  const Scalar _tmp134 = fh1 * (_tmp58 + _tmp65);
  const Scalar _tmp135 = _tmp122 * _tmp134 + Scalar(3.29616) * _tmp16 + _tmp19 * fv1;
  const Scalar _tmp136 = _tmp128 * _tmp70;
  const Scalar _tmp137 = Scalar(1.0) * _tmp131 * _tmp136 - Scalar(1.0) * _tmp131;
  const Scalar _tmp138 = _tmp112 * _tmp130;
  const Scalar _tmp139 = _tmp70 * (-_tmp113 * _tmp87 - _tmp128 * _tmp138 + _tmp69);
  const Scalar _tmp140 = -Scalar(1.0) * _tmp138 - Scalar(1.0) * _tmp139 + Scalar(1.0);
  const Scalar _tmp141 = -_tmp109 * _tmp134 - Scalar(3.29616) * _tmp25 - _tmp30 * fv1;
  const Scalar _tmp142 = _tmp70 * (_tmp129 * _tmp131 + Scalar(1.0));
  const Scalar _tmp143 = _tmp131 * _tmp88;
  const Scalar _tmp144 = -Scalar(1.0) * _tmp142 + Scalar(1.0) * _tmp143;
  const Scalar _tmp145 = _tmp87 * _tmp90;
  const Scalar _tmp146 = _tmp128 * _tmp130;
  const Scalar _tmp147 = _tmp100 * _tmp146 - _tmp101 * _tmp145 - _tmp67 * _tmp73;
  const Scalar _tmp148 = _tmp117 + _tmp119 * _tmp146 - _tmp120 * _tmp145;
  const Scalar _tmp149 =
      Scalar(1.0) * _tmp110 * (_tmp100 * _tmp131 - _tmp147 * _tmp71) + _tmp111 * _tmp140 +
      Scalar(1.0) * _tmp123 * (_tmp119 * _tmp131 - _tmp148 * _tmp71) +
      Scalar(1.0) * _tmp125 * (_tmp132 - _tmp133 * _tmp71) + _tmp135 * _tmp137 + _tmp141 * _tmp144;
  const Scalar _tmp150 = std::asinh(_tmp127 * _tmp149);
  const Scalar _tmp151 = Scalar(1.0) * _tmp150;
  const Scalar _tmp152 = Scalar(9.6622558468725703) * _tmp126;
  const Scalar _tmp153 =
      -_tmp150 * _tmp152 -
      Scalar(8.3885017487099702) *
          std::sqrt(
              Scalar(Scalar(0.090199313518583735) *
                         std::pow(Scalar(1 - Scalar(0.39693005512043167) * _tmp35), Scalar(2)) +
                     std::pow(Scalar(-Scalar(0.11921079949155229) * _tmp40 - 1), Scalar(2))));
  const Scalar _tmp154 = Scalar(0.1034955) * _tmp127;
  const Scalar _tmp155 = _tmp153 * _tmp154;
  const Scalar _tmp156 = Scalar(9.6622558468725703) * _tmp115;
  const Scalar _tmp157 = std::pow(_tmp126, Scalar(-2));
  const Scalar _tmp158 = _tmp115 * _tmp157;
  const Scalar _tmp159 = _tmp26 + _tmp38 + _tmp47;
  const Scalar _tmp160 =
      (_tmp127 * (_tmp137 * _tmp19 - _tmp140 + _tmp144 * _tmp159) - _tmp149 * _tmp158) /
      std::sqrt(Scalar(std::pow(_tmp149, Scalar(2)) * _tmp157 + 1));
  const Scalar _tmp161 = _tmp131 * _tmp135;
  const Scalar _tmp162 = _tmp110 * _tmp147 * _tmp70 + _tmp111 * _tmp139 +
                         _tmp123 * _tmp148 * _tmp70 + _tmp125 * _tmp133 * _tmp70 -
                         _tmp136 * _tmp161 + _tmp141 * _tmp142;
  const Scalar _tmp163 = _tmp111 * _tmp113;
  const Scalar _tmp164 = _tmp124 * _tmp125;
  const Scalar _tmp165 =
      _tmp103 * _tmp110 * _tmp55 + _tmp121 * _tmp123 * _tmp55 - _tmp163 * _tmp86 - _tmp164 * _tmp86;
  const Scalar _tmp166 = Scalar(1.0) / (_tmp165);
  const Scalar _tmp167 = std::asinh(_tmp162 * _tmp166);
  const Scalar _tmp168 = Scalar(9.6622558468725703) * _tmp165;
  const Scalar _tmp169 =
      -_tmp167 * _tmp168 -
      Scalar(4.83288938413423) *
          std::sqrt(
              Scalar(std::pow(Scalar(1 - Scalar(0.20691555724053495) * _tmp50), Scalar(2)) +
                     Scalar(0.13818785160942856) *
                         std::pow(Scalar(-Scalar(0.55661923802822921) * _tmp45 - 1), Scalar(2))));
  const Scalar _tmp170 = Scalar(0.1034955) * _tmp166;
  const Scalar _tmp171 = _tmp169 * _tmp170;
  const Scalar _tmp172 = Scalar(1.0) * _tmp167;
  const Scalar _tmp173 = Scalar(9.6622558468725703) * _tmp113;
  const Scalar _tmp174 = _tmp173 * _tmp86;
  const Scalar _tmp175 = std::pow(_tmp165, Scalar(-2));
  const Scalar _tmp176 = _tmp113 * _tmp175 * _tmp86;
  const Scalar _tmp177 = _tmp131 * _tmp19;
  const Scalar _tmp178 =
      (-_tmp162 * _tmp176 + _tmp166 * (-_tmp136 * _tmp177 - _tmp139 + _tmp142 * _tmp159)) /
      std::sqrt(Scalar(std::pow(_tmp162, Scalar(2)) * _tmp175 + 1));
  const Scalar _tmp179 =
      _tmp101 * _tmp110 * _tmp90 + _tmp120 * _tmp123 * _tmp90 + _tmp163 + _tmp164;
  const Scalar _tmp180 = Scalar(1.0) / (_tmp179);
  const Scalar _tmp181 = -_tmp100 * _tmp110 * _tmp130 + _tmp111 * _tmp138 -
                         _tmp119 * _tmp123 * _tmp130 - _tmp125 * _tmp132 - _tmp141 * _tmp143 +
                         _tmp161;
  const Scalar _tmp182 = std::asinh(_tmp180 * _tmp181);
  const Scalar _tmp183 = Scalar(1.0) * _tmp182;
  const Scalar _tmp184 = std::pow(_tmp179, Scalar(-2));
  const Scalar _tmp185 = _tmp113 * _tmp184;
  const Scalar _tmp186 = (_tmp180 * (-_tmp138 - _tmp143 * _tmp159 + _tmp177) + _tmp181 * _tmp185) /
                         std::sqrt(Scalar(std::pow(_tmp181, Scalar(2)) * _tmp184 + 1));
  const Scalar _tmp187 = Scalar(9.6622558468725703) * _tmp179;
  const Scalar _tmp188 =
      -_tmp182 * _tmp187 -
      Scalar(8.3196563720703107) *
          std::sqrt(
              Scalar(Scalar(0.057067943527034905) *
                         std::pow(Scalar(-Scalar(0.50315118477277876) * _tmp77 - 1), Scalar(2)) +
                     std::pow(Scalar(-Scalar(0.12019727201198747) * _tmp80 - 1), Scalar(2))));
  const Scalar _tmp189 = Scalar(0.1034955) * _tmp180;
  const Scalar _tmp190 = _tmp188 * _tmp189;

  // Output terms (1)
  Eigen::Matrix<Scalar, 4, 1> _res;

  _res(0, 0) =
      _tmp32 *
      (-_tmp2 * std::cosh(Scalar(1.0) * _tmp1) +
       _tmp2 *
           std::cosh(
               Scalar(0.1034955) * _tmp0 *
               (-_tmp1 * _tmp32 -
                Scalar(4.7744369927459998) *
                    std::sqrt(Scalar(
                        Scalar(0.32387954179207445) *
                            std::pow(Scalar(1 - Scalar(0.36803241838814449) * _tmp20), Scalar(2)) +
                        std::pow(Scalar(1 - Scalar(0.2094487793051498) * _tmp31), Scalar(2)))))));
  _res(1, 0) = _tmp152 * (-Scalar(1.0) * _tmp160 * std::cosh(_tmp151) -
                          (-Scalar(0.1034955) * _tmp153 * _tmp158 +
                           _tmp154 * (-_tmp150 * _tmp156 - _tmp152 * _tmp160)) *
                              std::cosh(_tmp155)) +
               _tmp156 * (-std::sinh(_tmp151) - std::sinh(_tmp155));
  _res(2, 0) = _tmp168 * (-Scalar(1.0) * _tmp178 * std::cosh(_tmp172) -
                          (-Scalar(0.1034955) * _tmp169 * _tmp176 +
                           _tmp170 * (-_tmp167 * _tmp174 - _tmp168 * _tmp178)) *
                              std::cosh(_tmp171)) +
               _tmp174 * (-std::sinh(_tmp171) - std::sinh(_tmp172));
  _res(3, 0) = -_tmp173 * (-std::sinh(_tmp183) - std::sinh(_tmp190)) +
               _tmp187 * (-Scalar(1.0) * _tmp186 * std::cosh(_tmp183) -
                          (Scalar(0.1034955) * _tmp185 * _tmp188 +
                           _tmp189 * (_tmp173 * _tmp182 - _tmp186 * _tmp187)) *
                              std::cosh(_tmp190));

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
