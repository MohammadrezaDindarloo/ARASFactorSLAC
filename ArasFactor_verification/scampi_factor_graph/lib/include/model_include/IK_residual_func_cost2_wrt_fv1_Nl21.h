// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

#include <sym/rot3.h>

namespace sym {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: IK_residual_func_cost2_wrt_fv1_Nl21
 *
 * Args:
 *     fh1: Scalar
 *     fv1: Scalar
 *     DeltaRot: Rot3
 *     position_vector: Matrix31
 *     Rot_init: Rot3
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix41
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 4, 1> IkResidualFuncCost2WrtFv1Nl21(
    const Scalar fh1, const Scalar fv1, const sym::Rot3<Scalar>& DeltaRot,
    const Eigen::Matrix<Scalar, 3, 1>& position_vector, const sym::Rot3<Scalar>& Rot_init,
    const Scalar epsilon) {
  // Total ops: 595

  // Unused inputs
  (void)epsilon;

  // Input arrays
  const Eigen::Matrix<Scalar, 4, 1>& _DeltaRot = DeltaRot.Data();
  const Eigen::Matrix<Scalar, 4, 1>& _Rot_init = Rot_init.Data();

  // Intermediate terms (189)
  const Scalar _tmp0 = Scalar(1.0) / (fh1);
  const Scalar _tmp1 = _DeltaRot[0] * _Rot_init[2] + _DeltaRot[1] * _Rot_init[3] -
                       _DeltaRot[2] * _Rot_init[0] + _DeltaRot[3] * _Rot_init[1];
  const Scalar _tmp2 = _DeltaRot[0] * _Rot_init[3] - _DeltaRot[1] * _Rot_init[2] +
                       _DeltaRot[2] * _Rot_init[1] + _DeltaRot[3] * _Rot_init[0];
  const Scalar _tmp3 = 2 * _tmp1 * _tmp2;
  const Scalar _tmp4 = -_DeltaRot[0] * _Rot_init[1] + _DeltaRot[1] * _Rot_init[0] +
                       _DeltaRot[2] * _Rot_init[3] + _DeltaRot[3] * _Rot_init[2];
  const Scalar _tmp5 = -2 * _DeltaRot[0] * _Rot_init[0] - 2 * _DeltaRot[1] * _Rot_init[1] -
                       2 * _DeltaRot[2] * _Rot_init[2] + 2 * _DeltaRot[3] * _Rot_init[3];
  const Scalar _tmp6 = _tmp4 * _tmp5;
  const Scalar _tmp7 = Scalar(0.20999999999999999) * _tmp3 - Scalar(0.20999999999999999) * _tmp6;
  const Scalar _tmp8 = 2 * _tmp4;
  const Scalar _tmp9 = _tmp2 * _tmp8;
  const Scalar _tmp10 = _tmp1 * _tmp5;
  const Scalar _tmp11 = _tmp10 + _tmp9;
  const Scalar _tmp12 = -Scalar(0.010999999999999999) * _tmp11;
  const Scalar _tmp13 = -2 * std::pow(_tmp1, Scalar(2));
  const Scalar _tmp14 = 1 - 2 * std::pow(_tmp4, Scalar(2));
  const Scalar _tmp15 = Scalar(0.20999999999999999) * _tmp13 + Scalar(0.20999999999999999) * _tmp14;
  const Scalar _tmp16 = _tmp12 - _tmp15;
  const Scalar _tmp17 = _tmp16 + _tmp7;
  const Scalar _tmp18 = _tmp17 + position_vector(0, 0);
  const Scalar _tmp19 = Scalar(0.20999999999999999) * _tmp3 + Scalar(0.20999999999999999) * _tmp6;
  const Scalar _tmp20 = -_tmp19;
  const Scalar _tmp21 = -2 * std::pow(_tmp2, Scalar(2));
  const Scalar _tmp22 = Scalar(0.20999999999999999) * _tmp14 + Scalar(0.20999999999999999) * _tmp21;
  const Scalar _tmp23 = _tmp1 * _tmp8;
  const Scalar _tmp24 = _tmp2 * _tmp5;
  const Scalar _tmp25 = _tmp23 - _tmp24;
  const Scalar _tmp26 = Scalar(0.010999999999999999) * _tmp25;
  const Scalar _tmp27 = -_tmp26;
  const Scalar _tmp28 = _tmp22 + _tmp27;
  const Scalar _tmp29 = _tmp20 + _tmp28;
  const Scalar _tmp30 = _tmp29 + position_vector(1, 0);
  const Scalar _tmp31 = std::asinh(_tmp0 * fv1);
  const Scalar _tmp32 = Scalar(9.6622558468725703) * fh1;
  const Scalar _tmp33 = Scalar(1.0) * _tmp0 /
                        std::sqrt(Scalar(1 + std::pow(fv1, Scalar(2)) / std::pow(fh1, Scalar(2))));
  const Scalar _tmp34 = Scalar(0.20999999999999999) * _tmp23 + Scalar(0.20999999999999999) * _tmp24;
  const Scalar _tmp35 = -_tmp34;
  const Scalar _tmp36 = -Scalar(0.010999999999999999) * _tmp13 -
                        Scalar(0.010999999999999999) * _tmp21 + Scalar(-0.010999999999999999);
  const Scalar _tmp37 = -Scalar(0.20999999999999999) * _tmp10 + Scalar(0.20999999999999999) * _tmp9;
  const Scalar _tmp38 = _tmp36 + _tmp37;
  const Scalar _tmp39 = _tmp35 + _tmp38;
  const Scalar _tmp40 = _tmp19 + _tmp28;
  const Scalar _tmp41 = _tmp40 + position_vector(1, 0);
  const Scalar _tmp42 = _tmp41 + Scalar(-4.7744369927459998);
  const Scalar _tmp43 = _tmp12 + _tmp15;
  const Scalar _tmp44 = _tmp43 + _tmp7;
  const Scalar _tmp45 = _tmp44 + position_vector(0, 0);
  const Scalar _tmp46 = _tmp45 + Scalar(-2.7171519410699099);
  const Scalar _tmp47 = std::pow(Scalar(std::pow(_tmp42, Scalar(2)) + std::pow(_tmp46, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp48 = _tmp46 * _tmp47;
  const Scalar _tmp49 = -_tmp7;
  const Scalar _tmp50 = _tmp43 + _tmp49;
  const Scalar _tmp51 = _tmp50 + position_vector(0, 0);
  const Scalar _tmp52 = _tmp51 + Scalar(-2.5193355532036801);
  const Scalar _tmp53 = Scalar(1.0) / (_tmp52);
  const Scalar _tmp54 = -_tmp22;
  const Scalar _tmp55 = _tmp19 + _tmp54;
  const Scalar _tmp56 = _tmp27 + _tmp55;
  const Scalar _tmp57 = _tmp56 + position_vector(1, 0);
  const Scalar _tmp58 = _tmp57 + Scalar(8.3885017487099702);
  const Scalar _tmp59 = _tmp53 * _tmp58;
  const Scalar _tmp60 = _tmp39 * _tmp59;
  const Scalar _tmp61 = _tmp34 + _tmp38;
  const Scalar _tmp62 = _tmp42 * _tmp47;
  const Scalar _tmp63 = -_tmp48 * _tmp60 + _tmp61 * _tmp62;
  const Scalar _tmp64 = Scalar(1.0) / (_tmp48 * _tmp59 - _tmp62);
  const Scalar _tmp65 = _tmp59 * _tmp64;
  const Scalar _tmp66 = _tmp60 + _tmp63 * _tmp65;
  const Scalar _tmp67 = Scalar(1.0) * _tmp56;
  const Scalar _tmp68 = -_tmp67;
  const Scalar _tmp69 = Scalar(1.0) / (_tmp40 + _tmp68);
  const Scalar _tmp70 = Scalar(1.0) * _tmp50;
  const Scalar _tmp71 = _tmp69 * (-_tmp44 + _tmp70);
  const Scalar _tmp72 = _tmp39 * _tmp48 - _tmp48 * _tmp61;
  const Scalar _tmp73 = -_tmp39 + _tmp65 * _tmp72 - _tmp66 * _tmp71;
  const Scalar _tmp74 =
      std::sqrt(Scalar(std::pow(_tmp52, Scalar(2)) + std::pow(_tmp58, Scalar(2))));
  const Scalar _tmp75 = Scalar(1.0) / (_tmp74);
  const Scalar _tmp76 = _tmp53 * _tmp74;
  const Scalar _tmp77 = _tmp76 * (_tmp50 * _tmp58 * _tmp75 - _tmp52 * _tmp56 * _tmp75);
  const Scalar _tmp78 = _tmp40 * _tmp48 - _tmp44 * _tmp62 + _tmp48 * _tmp77;
  const Scalar _tmp79 = _tmp20 + _tmp27 + _tmp54;
  const Scalar _tmp80 = _tmp79 + position_vector(1, 0);
  const Scalar _tmp81 = _tmp80 + Scalar(8.3196563720703107);
  const Scalar _tmp82 = _tmp16 + _tmp49;
  const Scalar _tmp83 = _tmp82 + position_vector(0, 0);
  const Scalar _tmp84 = _tmp83 + Scalar(1.9874742031097401);
  const Scalar _tmp85 = std::pow(Scalar(std::pow(_tmp81, Scalar(2)) + std::pow(_tmp84, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp86 = _tmp81 * _tmp85;
  const Scalar _tmp87 = _tmp84 * _tmp85;
  const Scalar _tmp88 = _tmp59 * _tmp87 - _tmp86;
  const Scalar _tmp89 = _tmp64 * _tmp88;
  const Scalar _tmp90 = _tmp77 * _tmp87 - _tmp78 * _tmp89 + _tmp79 * _tmp87 - _tmp82 * _tmp86;
  const Scalar _tmp91 = _tmp36 - _tmp37;
  const Scalar _tmp92 = _tmp35 + _tmp91;
  const Scalar _tmp93 = _tmp39 * _tmp87;
  const Scalar _tmp94 = -_tmp59 * _tmp93 - _tmp63 * _tmp89 + _tmp86 * _tmp92;
  const Scalar _tmp95 = -_tmp71 * _tmp94 - _tmp72 * _tmp89 - _tmp87 * _tmp92 + _tmp93;
  const Scalar _tmp96 = Scalar(1.0) / (_tmp95);
  const Scalar _tmp97 = _tmp90 * _tmp96;
  const Scalar _tmp98 = Scalar(1.0) / (_tmp90);
  const Scalar _tmp99 = _tmp95 * _tmp98;
  const Scalar _tmp100 = _tmp99 * (_tmp65 * _tmp78 - _tmp73 * _tmp97 - _tmp77);
  const Scalar _tmp101 = _tmp68 + _tmp79;
  const Scalar _tmp102 = _tmp101 * _tmp71;
  const Scalar _tmp103 = Scalar(1.0) / (-_tmp102 + _tmp70 - _tmp82);
  const Scalar _tmp104 = _tmp101 * _tmp103;
  const Scalar _tmp105 = _tmp96 * (_tmp100 + _tmp73);
  const Scalar _tmp106 = _tmp100 * _tmp104 - _tmp105 * _tmp94 + _tmp66;
  const Scalar _tmp107 = Scalar(1.0) * _tmp69;
  const Scalar _tmp108 = Scalar(1.0) * _tmp103;
  const Scalar _tmp109 = _tmp18 + Scalar(1.7965602546229);
  const Scalar _tmp110 = _tmp30 + Scalar(-4.83288938413423);
  const Scalar _tmp111 =
      std::pow(Scalar(std::pow(_tmp109, Scalar(2)) + std::pow(_tmp110, Scalar(2))),
               Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp112 = _tmp109 * _tmp111;
  const Scalar _tmp113 = _tmp112 * fh1;
  const Scalar _tmp114 = _tmp108 * _tmp99;
  const Scalar _tmp115 = Scalar(1.0) * _tmp98;
  const Scalar _tmp116 = _tmp101 * _tmp114 - _tmp115 * _tmp94;
  const Scalar _tmp117 = _tmp110 * _tmp111;
  const Scalar _tmp118 = fh1 * (-_tmp112 * _tmp29 + _tmp117 * _tmp17);
  const Scalar _tmp119 = Scalar(1.0) * _tmp64;
  const Scalar _tmp120 = _tmp119 * _tmp63;
  const Scalar _tmp121 = -_tmp119 * _tmp72 + _tmp120 * _tmp71;
  const Scalar _tmp122 = _tmp99 * (-_tmp119 * _tmp78 - _tmp121 * _tmp97);
  const Scalar _tmp123 = _tmp96 * (_tmp121 + _tmp122);
  const Scalar _tmp124 = _tmp104 * _tmp122 - _tmp120 - _tmp123 * _tmp94;
  const Scalar _tmp125 = _tmp117 * fh1;
  const Scalar _tmp126 = fh1 * (_tmp34 + _tmp91);
  const Scalar _tmp127 = Scalar(3.29616) * _tmp11 + _tmp112 * _tmp126 + _tmp17 * fv1;
  const Scalar _tmp128 = _tmp101 * _tmp69;
  const Scalar _tmp129 = Scalar(1.0) * _tmp108 * _tmp128 - Scalar(1.0) * _tmp108;
  const Scalar _tmp130 = Scalar(43.164000000000001) - fv1;
  const Scalar _tmp131 = _tmp67 * _tmp71 + _tmp70;
  const Scalar _tmp132 = _tmp103 * _tmp131;
  const Scalar _tmp133 = 0;
  const Scalar _tmp134 = _tmp69 * (-_tmp101 * _tmp132 - _tmp133 * _tmp94 + _tmp68);
  const Scalar _tmp135 = -Scalar(1.0) * _tmp108 * _tmp131 - Scalar(1.0) * _tmp134 + Scalar(1.0);
  const Scalar _tmp136 = -_tmp117 * _tmp126 - Scalar(3.29616) * _tmp25 - _tmp29 * fv1;
  const Scalar _tmp137 = _tmp108 * _tmp71;
  const Scalar _tmp138 = _tmp69 * (_tmp102 * _tmp108 + Scalar(1.0));
  const Scalar _tmp139 = Scalar(1.0) * _tmp137 - Scalar(1.0) * _tmp138;
  const Scalar _tmp140 = Scalar(1.0) * _tmp113 * (_tmp100 * _tmp108 - _tmp106 * _tmp107) +
                         Scalar(1.0) * _tmp118 * (-_tmp107 * _tmp116 + _tmp114) +
                         Scalar(1.0) * _tmp125 * (-_tmp107 * _tmp124 + _tmp108 * _tmp122) +
                         _tmp127 * _tmp129 + _tmp130 * _tmp135 + _tmp136 * _tmp139;
  const Scalar _tmp141 = _tmp133 * _tmp89;
  const Scalar _tmp142 = _tmp76 * (_tmp133 * _tmp87 - _tmp141 * _tmp48);
  const Scalar _tmp143 = -_tmp123 * _tmp88 + Scalar(1.0);
  const Scalar _tmp144 = _tmp48 * _tmp64;
  const Scalar _tmp145 = -_tmp105 * _tmp88 - _tmp59;
  const Scalar _tmp146 = _tmp119 * _tmp88 * _tmp98;
  const Scalar _tmp147 = -_tmp113 * _tmp76 * (_tmp105 * _tmp87 + _tmp144 * _tmp145 + Scalar(1.0)) -
                         _tmp118 * _tmp76 * (_tmp115 * _tmp87 - _tmp146 * _tmp48) -
                         _tmp125 * _tmp76 * (_tmp123 * _tmp87 + _tmp143 * _tmp144) -
                         _tmp130 * _tmp142;
  const Scalar _tmp148 = Scalar(1.0) / (_tmp147);
  const Scalar _tmp149 = std::asinh(_tmp140 * _tmp148);
  const Scalar _tmp150 = Scalar(1.0) * _tmp149;
  const Scalar _tmp151 = std::pow(_tmp147, Scalar(-2));
  const Scalar _tmp152 = _tmp142 * _tmp151;
  const Scalar _tmp153 = _tmp26 + _tmp55;
  const Scalar _tmp154 =
      (-_tmp140 * _tmp152 + _tmp148 * (_tmp129 * _tmp17 - _tmp135 + _tmp139 * _tmp153)) /
      std::sqrt(Scalar(std::pow(_tmp140, Scalar(2)) * _tmp151 + 1));
  const Scalar _tmp155 = Scalar(9.6622558468725703) * _tmp147;
  const Scalar _tmp156 =
      -_tmp149 * _tmp155 -
      Scalar(8.3885017487099702) *
          std::sqrt(
              Scalar(Scalar(0.090199313518583735) *
                         std::pow(Scalar(1 - Scalar(0.39693005512043167) * _tmp51), Scalar(2)) +
                     std::pow(Scalar(-Scalar(0.11921079949155229) * _tmp57 - 1), Scalar(2))));
  const Scalar _tmp157 = Scalar(9.6622558468725703) * _tmp142;
  const Scalar _tmp158 = Scalar(0.1034955) * _tmp148;
  const Scalar _tmp159 = _tmp156 * _tmp158;
  const Scalar _tmp160 = _tmp130 * _tmp133;
  const Scalar _tmp161 = _tmp113 * _tmp145 * _tmp64 - _tmp118 * _tmp146 +
                         _tmp125 * _tmp143 * _tmp64 - _tmp160 * _tmp89;
  const Scalar _tmp162 = Scalar(1.0) / (_tmp161);
  const Scalar _tmp163 = _tmp108 * _tmp127;
  const Scalar _tmp164 = _tmp106 * _tmp113 * _tmp69 + _tmp116 * _tmp118 * _tmp69 +
                         _tmp124 * _tmp125 * _tmp69 - _tmp128 * _tmp163 + _tmp130 * _tmp134 +
                         _tmp136 * _tmp138;
  const Scalar _tmp165 = std::asinh(_tmp162 * _tmp164);
  const Scalar _tmp166 = Scalar(9.6622558468725703) * _tmp161;
  const Scalar _tmp167 =
      -_tmp165 * _tmp166 -
      Scalar(4.7744369927459998) *
          std::sqrt(
              Scalar(std::pow(Scalar(1 - Scalar(0.2094487793051498) * _tmp41), Scalar(2)) +
                     Scalar(0.32387954179207445) *
                         std::pow(Scalar(1 - Scalar(0.36803241838814449) * _tmp45), Scalar(2))));
  const Scalar _tmp168 = Scalar(0.1034955) * _tmp162;
  const Scalar _tmp169 = _tmp167 * _tmp168;
  const Scalar _tmp170 = Scalar(1.0) * _tmp165;
  const Scalar _tmp171 = Scalar(9.6622558468725703) * _tmp133;
  const Scalar _tmp172 = _tmp171 * _tmp89;
  const Scalar _tmp173 = std::pow(_tmp161, Scalar(-2));
  const Scalar _tmp174 = _tmp141 * _tmp173;
  const Scalar _tmp175 = _tmp108 * _tmp17;
  const Scalar _tmp176 =
      (_tmp162 * (-_tmp128 * _tmp175 - _tmp134 + _tmp138 * _tmp153) - _tmp164 * _tmp174) /
      std::sqrt(Scalar(std::pow(_tmp164, Scalar(2)) * _tmp173 + 1));
  const Scalar _tmp177 = -_tmp100 * _tmp103 * _tmp113 - _tmp103 * _tmp122 * _tmp125 -
                         _tmp114 * _tmp118 + _tmp130 * _tmp132 - _tmp136 * _tmp137 + _tmp163;
  const Scalar _tmp178 = _tmp105 * _tmp113 + _tmp115 * _tmp118 + _tmp123 * _tmp125 + _tmp160;
  const Scalar _tmp179 = Scalar(1.0) / (_tmp178);
  const Scalar _tmp180 = std::asinh(_tmp177 * _tmp179);
  const Scalar _tmp181 = Scalar(1.0) * _tmp180;
  const Scalar _tmp182 = Scalar(9.6622558468725703) * _tmp178;
  const Scalar _tmp183 =
      -_tmp180 * _tmp182 -
      Scalar(8.3196563720703107) *
          std::sqrt(
              Scalar(std::pow(Scalar(-Scalar(0.12019727201198747) * _tmp80 - 1), Scalar(2)) +
                     Scalar(0.057067943527034905) *
                         std::pow(Scalar(-Scalar(0.50315118477277876) * _tmp83 - 1), Scalar(2))));
  const Scalar _tmp184 = Scalar(0.1034955) * _tmp179;
  const Scalar _tmp185 = _tmp183 * _tmp184;
  const Scalar _tmp186 = std::pow(_tmp178, Scalar(-2));
  const Scalar _tmp187 = _tmp133 * _tmp186;
  const Scalar _tmp188 = (_tmp177 * _tmp187 + _tmp179 * (-_tmp132 - _tmp137 * _tmp153 + _tmp175)) /
                         std::sqrt(Scalar(std::pow(_tmp177, Scalar(2)) * _tmp186 + 1));

  // Output terms (1)
  Eigen::Matrix<Scalar, 4, 1> _res;

  _res(0, 0) =
      _tmp32 *
      (-_tmp33 * std::cosh(Scalar(1.0) * _tmp31) +
       _tmp33 * std::cosh(
                    Scalar(0.1034955) * _tmp0 *
                    (-_tmp31 * _tmp32 -
                     Scalar(4.83288938413423) *
                         std::sqrt(Scalar(
                             std::pow(Scalar(1 - Scalar(0.20691555724053495) * _tmp30), Scalar(2)) +
                             Scalar(0.13818785160942856) *
                                 std::pow(Scalar(-Scalar(0.55661923802822921) * _tmp18 - 1),
                                          Scalar(2)))))));
  _res(1, 0) = _tmp155 * (-Scalar(1.0) * _tmp154 * std::cosh(_tmp150) -
                          (-Scalar(0.1034955) * _tmp152 * _tmp156 +
                           _tmp158 * (-_tmp149 * _tmp157 - _tmp154 * _tmp155)) *
                              std::cosh(_tmp159)) +
               _tmp157 * (-std::sinh(_tmp150) - std::sinh(_tmp159));
  _res(2, 0) = _tmp166 * (-Scalar(1.0) * _tmp176 * std::cosh(_tmp170) -
                          (-Scalar(0.1034955) * _tmp167 * _tmp174 +
                           _tmp168 * (-_tmp165 * _tmp172 - _tmp166 * _tmp176)) *
                              std::cosh(_tmp169)) +
               _tmp172 * (-std::sinh(_tmp169) - std::sinh(_tmp170));
  _res(3, 0) = -_tmp171 * (-std::sinh(_tmp181) - std::sinh(_tmp185)) +
               _tmp182 * (-Scalar(1.0) * _tmp188 * std::cosh(_tmp181) -
                          (Scalar(0.1034955) * _tmp183 * _tmp187 +
                           _tmp184 * (_tmp171 * _tmp180 - _tmp182 * _tmp188)) *
                              std::cosh(_tmp185));

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
