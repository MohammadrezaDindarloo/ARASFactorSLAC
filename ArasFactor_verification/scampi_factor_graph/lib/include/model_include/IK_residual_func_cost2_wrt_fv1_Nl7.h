// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

#include <sym/rot3.h>

namespace sym {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: IK_residual_func_cost2_wrt_fv1_Nl7
 *
 * Args:
 *     fh1: Scalar
 *     fv1: Scalar
 *     DeltaRot: Rot3
 *     position_vector: Matrix31
 *     Rot_init: Rot3
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix41
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 4, 1> IkResidualFuncCost2WrtFv1Nl7(
    const Scalar fh1, const Scalar fv1, const sym::Rot3<Scalar>& DeltaRot,
    const Eigen::Matrix<Scalar, 3, 1>& position_vector, const sym::Rot3<Scalar>& Rot_init,
    const Scalar epsilon) {
  // Total ops: 595

  // Unused inputs
  (void)epsilon;

  // Input arrays
  const Eigen::Matrix<Scalar, 4, 1>& _DeltaRot = DeltaRot.Data();
  const Eigen::Matrix<Scalar, 4, 1>& _Rot_init = Rot_init.Data();

  // Intermediate terms (192)
  const Scalar _tmp0 = Scalar(1.0) / (fh1);
  const Scalar _tmp1 = _DeltaRot[0] * _Rot_init[3] - _DeltaRot[1] * _Rot_init[2] +
                       _DeltaRot[2] * _Rot_init[1] + _DeltaRot[3] * _Rot_init[0];
  const Scalar _tmp2 = -2 * std::pow(_tmp1, Scalar(2));
  const Scalar _tmp3 = -_DeltaRot[0] * _Rot_init[1] + _DeltaRot[1] * _Rot_init[0] +
                       _DeltaRot[2] * _Rot_init[3] + _DeltaRot[3] * _Rot_init[2];
  const Scalar _tmp4 = 1 - 2 * std::pow(_tmp3, Scalar(2));
  const Scalar _tmp5 = Scalar(0.20999999999999999) * _tmp2 + Scalar(0.20999999999999999) * _tmp4;
  const Scalar _tmp6 = -_tmp5;
  const Scalar _tmp7 = _DeltaRot[0] * _Rot_init[2] + _DeltaRot[1] * _Rot_init[3] -
                       _DeltaRot[2] * _Rot_init[0] + _DeltaRot[3] * _Rot_init[1];
  const Scalar _tmp8 = 2 * _tmp7;
  const Scalar _tmp9 = _tmp3 * _tmp8;
  const Scalar _tmp10 = -2 * _DeltaRot[0] * _Rot_init[0] - 2 * _DeltaRot[1] * _Rot_init[1] -
                        2 * _DeltaRot[2] * _Rot_init[2] + 2 * _DeltaRot[3] * _Rot_init[3];
  const Scalar _tmp11 = _tmp1 * _tmp10;
  const Scalar _tmp12 = -_tmp11 + _tmp9;
  const Scalar _tmp13 = Scalar(0.010999999999999999) * _tmp12;
  const Scalar _tmp14 = -_tmp13;
  const Scalar _tmp15 = _tmp1 * _tmp8;
  const Scalar _tmp16 = _tmp10 * _tmp3;
  const Scalar _tmp17 = Scalar(0.20999999999999999) * _tmp15 + Scalar(0.20999999999999999) * _tmp16;
  const Scalar _tmp18 = _tmp14 + _tmp17;
  const Scalar _tmp19 = _tmp18 + _tmp6;
  const Scalar _tmp20 = _tmp19 + position_vector(1, 0);
  const Scalar _tmp21 = -2 * std::pow(_tmp7, Scalar(2));
  const Scalar _tmp22 = Scalar(0.20999999999999999) * _tmp21 + Scalar(0.20999999999999999) * _tmp4;
  const Scalar _tmp23 = 2 * _tmp1 * _tmp3;
  const Scalar _tmp24 = _tmp10 * _tmp7;
  const Scalar _tmp25 = _tmp23 + _tmp24;
  const Scalar _tmp26 = -Scalar(0.010999999999999999) * _tmp25;
  const Scalar _tmp27 = Scalar(0.20999999999999999) * _tmp15 - Scalar(0.20999999999999999) * _tmp16;
  const Scalar _tmp28 = _tmp26 - _tmp27;
  const Scalar _tmp29 = _tmp22 + _tmp28;
  const Scalar _tmp30 = _tmp29 + position_vector(0, 0);
  const Scalar _tmp31 = std::asinh(_tmp0 * fv1);
  const Scalar _tmp32 = Scalar(9.6622558468725703) * fh1;
  const Scalar _tmp33 = Scalar(1.0) * _tmp0 /
                        std::sqrt(Scalar(1 + std::pow(fv1, Scalar(2)) / std::pow(fh1, Scalar(2))));
  const Scalar _tmp34 = _tmp30 + Scalar(-2.5193355532036801);
  const Scalar _tmp35 = _tmp20 + Scalar(8.3885017487099702);
  const Scalar _tmp36 = std::pow(Scalar(std::pow(_tmp34, Scalar(2)) + std::pow(_tmp35, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp37 = _tmp34 * _tmp36;
  const Scalar _tmp38 = Scalar(0.20999999999999999) * _tmp11 + Scalar(0.20999999999999999) * _tmp9;
  const Scalar _tmp39 = -_tmp38;
  const Scalar _tmp40 = -Scalar(0.010999999999999999) * _tmp2 -
                        Scalar(0.010999999999999999) * _tmp21 + Scalar(-0.010999999999999999);
  const Scalar _tmp41 = Scalar(0.20999999999999999) * _tmp23 - Scalar(0.20999999999999999) * _tmp24;
  const Scalar _tmp42 = _tmp40 + _tmp41;
  const Scalar _tmp43 = fh1 * (_tmp39 + _tmp42);
  const Scalar _tmp44 = Scalar(3.29616) * _tmp25 + _tmp29 * fv1 + _tmp37 * _tmp43;
  const Scalar _tmp45 = -_tmp17;
  const Scalar _tmp46 = _tmp14 + _tmp45;
  const Scalar _tmp47 = _tmp46 + _tmp6;
  const Scalar _tmp48 = Scalar(1.0) * _tmp47;
  const Scalar _tmp49 = -_tmp48;
  const Scalar _tmp50 = _tmp18 + _tmp5;
  const Scalar _tmp51 = _tmp49 + _tmp50;
  const Scalar _tmp52 = _tmp46 + _tmp5;
  const Scalar _tmp53 = Scalar(1.0) / (_tmp49 + _tmp52);
  const Scalar _tmp54 = -_tmp22;
  const Scalar _tmp55 = _tmp26 + _tmp27;
  const Scalar _tmp56 = _tmp54 + _tmp55;
  const Scalar _tmp57 = _tmp28 + _tmp54;
  const Scalar _tmp58 = Scalar(1.0) * _tmp57;
  const Scalar _tmp59 = _tmp53 * (-_tmp56 + _tmp58);
  const Scalar _tmp60 = _tmp51 * _tmp59;
  const Scalar _tmp61 = _tmp22 + _tmp55;
  const Scalar _tmp62 = Scalar(1.0) / (_tmp58 - _tmp60 - _tmp61);
  const Scalar _tmp63 = Scalar(1.0) * _tmp62;
  const Scalar _tmp64 = _tmp51 * _tmp53;
  const Scalar _tmp65 = Scalar(1.0) * _tmp63 * _tmp64 - Scalar(1.0) * _tmp63;
  const Scalar _tmp66 = _tmp47 + position_vector(1, 0);
  const Scalar _tmp67 = _tmp66 + Scalar(8.3196563720703107);
  const Scalar _tmp68 = _tmp57 + position_vector(0, 0);
  const Scalar _tmp69 = _tmp68 + Scalar(1.9874742031097401);
  const Scalar _tmp70 =
      std::sqrt(Scalar(std::pow(_tmp67, Scalar(2)) + std::pow(_tmp69, Scalar(2))));
  const Scalar _tmp71 = Scalar(1.0) / (_tmp70);
  const Scalar _tmp72 = Scalar(1.0) / (_tmp69);
  const Scalar _tmp73 = _tmp70 * _tmp72;
  const Scalar _tmp74 = _tmp73 * (-_tmp47 * _tmp69 * _tmp71 + _tmp57 * _tmp67 * _tmp71);
  const Scalar _tmp75 = _tmp56 + position_vector(0, 0);
  const Scalar _tmp76 = _tmp75 + Scalar(1.7965602546229);
  const Scalar _tmp77 = _tmp52 + position_vector(1, 0);
  const Scalar _tmp78 = _tmp77 + Scalar(-4.83288938413423);
  const Scalar _tmp79 = std::pow(Scalar(std::pow(_tmp76, Scalar(2)) + std::pow(_tmp78, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp80 = _tmp76 * _tmp79;
  const Scalar _tmp81 = _tmp78 * _tmp79;
  const Scalar _tmp82 = _tmp52 * _tmp80 - _tmp56 * _tmp81 + _tmp74 * _tmp80;
  const Scalar _tmp83 = _tmp67 * _tmp72;
  const Scalar _tmp84 = Scalar(1.0) / (_tmp80 * _tmp83 - _tmp81);
  const Scalar _tmp85 = _tmp83 * _tmp84;
  const Scalar _tmp86 = _tmp40 - _tmp41;
  const Scalar _tmp87 = _tmp38 + _tmp86;
  const Scalar _tmp88 = _tmp39 + _tmp86;
  const Scalar _tmp89 = _tmp80 * _tmp88;
  const Scalar _tmp90 = _tmp81 * _tmp87 - _tmp83 * _tmp89;
  const Scalar _tmp91 = _tmp83 * _tmp88;
  const Scalar _tmp92 = _tmp85 * _tmp90 + _tmp91;
  const Scalar _tmp93 = -_tmp80 * _tmp87 + _tmp89;
  const Scalar _tmp94 = -_tmp59 * _tmp92 + _tmp85 * _tmp93 - _tmp88;
  const Scalar _tmp95 = _tmp50 + position_vector(1, 0);
  const Scalar _tmp96 = _tmp95 + Scalar(-4.7744369927459998);
  const Scalar _tmp97 = _tmp61 + position_vector(0, 0);
  const Scalar _tmp98 = _tmp97 + Scalar(-2.7171519410699099);
  const Scalar _tmp99 = std::pow(Scalar(std::pow(_tmp96, Scalar(2)) + std::pow(_tmp98, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp100 = _tmp96 * _tmp99;
  const Scalar _tmp101 = _tmp98 * _tmp99;
  const Scalar _tmp102 = -_tmp100 + _tmp101 * _tmp83;
  const Scalar _tmp103 = _tmp102 * _tmp84;
  const Scalar _tmp104 = _tmp38 + _tmp42;
  const Scalar _tmp105 = _tmp100 * _tmp104 - _tmp101 * _tmp91 - _tmp103 * _tmp90;
  const Scalar _tmp106 =
      -_tmp101 * _tmp104 + _tmp101 * _tmp88 - _tmp103 * _tmp93 - _tmp105 * _tmp59;
  const Scalar _tmp107 = Scalar(1.0) / (_tmp106);
  const Scalar _tmp108 = -_tmp100 * _tmp61 + _tmp101 * _tmp50 + _tmp101 * _tmp74 - _tmp103 * _tmp82;
  const Scalar _tmp109 = _tmp107 * _tmp108;
  const Scalar _tmp110 = Scalar(1.0) / (_tmp108);
  const Scalar _tmp111 = _tmp106 * _tmp110;
  const Scalar _tmp112 = _tmp111 * (-_tmp109 * _tmp94 - _tmp74 + _tmp82 * _tmp85);
  const Scalar _tmp113 = _tmp112 + _tmp94;
  const Scalar _tmp114 = _tmp105 * _tmp107;
  const Scalar _tmp115 = _tmp51 * _tmp62;
  const Scalar _tmp116 = _tmp112 * _tmp115 - _tmp113 * _tmp114 + _tmp92;
  const Scalar _tmp117 = Scalar(1.0) * _tmp53;
  const Scalar _tmp118 = _tmp37 * fh1;
  const Scalar _tmp119 = Scalar(1.0) * _tmp84;
  const Scalar _tmp120 = _tmp119 * _tmp90;
  const Scalar _tmp121 = -_tmp119 * _tmp93 + _tmp120 * _tmp59;
  const Scalar _tmp122 = _tmp111 * (-_tmp109 * _tmp121 - _tmp119 * _tmp82);
  const Scalar _tmp123 = _tmp107 * (_tmp121 + _tmp122);
  const Scalar _tmp124 = -_tmp105 * _tmp123 + _tmp115 * _tmp122 - _tmp120;
  const Scalar _tmp125 = _tmp35 * _tmp36;
  const Scalar _tmp126 = _tmp125 * fh1;
  const Scalar _tmp127 = -Scalar(3.29616) * _tmp12 - _tmp125 * _tmp43 - _tmp19 * fv1;
  const Scalar _tmp128 = _tmp53 * (_tmp60 * _tmp63 + Scalar(1.0));
  const Scalar _tmp129 = _tmp59 * _tmp63;
  const Scalar _tmp130 = -Scalar(1.0) * _tmp128 + Scalar(1.0) * _tmp129;
  const Scalar _tmp131 = _tmp111 * _tmp63;
  const Scalar _tmp132 = Scalar(1.0) * _tmp110;
  const Scalar _tmp133 = -_tmp105 * _tmp132 + _tmp131 * _tmp51;
  const Scalar _tmp134 = fh1 * (_tmp125 * _tmp29 - _tmp19 * _tmp37);
  const Scalar _tmp135 = Scalar(43.164000000000001) - fv1;
  const Scalar _tmp136 = _tmp48 * _tmp59 + _tmp58;
  const Scalar _tmp137 = _tmp136 * _tmp62;
  const Scalar _tmp138 = 0;
  const Scalar _tmp139 = _tmp53 * (-_tmp114 * _tmp138 - _tmp137 * _tmp51 + _tmp49);
  const Scalar _tmp140 = -Scalar(1.0) * _tmp137 - Scalar(1.0) * _tmp139 + Scalar(1.0);
  const Scalar _tmp141 =
      Scalar(1.0) * _tmp118 * (_tmp112 * _tmp63 - _tmp116 * _tmp117) +
      Scalar(1.0) * _tmp126 * (-_tmp117 * _tmp124 + _tmp122 * _tmp63) + _tmp127 * _tmp130 +
      Scalar(1.0) * _tmp134 * (-_tmp117 * _tmp133 + _tmp131) + _tmp135 * _tmp140 + _tmp44 * _tmp65;
  const Scalar _tmp142 = _tmp107 * _tmp138;
  const Scalar _tmp143 = _tmp103 * _tmp142;
  const Scalar _tmp144 = _tmp73 * (_tmp101 * _tmp142 - _tmp143 * _tmp80);
  const Scalar _tmp145 = _tmp107 * _tmp113;
  const Scalar _tmp146 = -_tmp102 * _tmp145 - _tmp83;
  const Scalar _tmp147 = _tmp80 * _tmp84;
  const Scalar _tmp148 = -_tmp102 * _tmp123 + Scalar(1.0);
  const Scalar _tmp149 = -_tmp118 * _tmp73 * (_tmp101 * _tmp145 + _tmp146 * _tmp147 + Scalar(1.0)) -
                         _tmp126 * _tmp73 * (_tmp101 * _tmp123 + _tmp147 * _tmp148) -
                         _tmp134 * _tmp73 * (_tmp101 * _tmp132 - _tmp103 * _tmp132 * _tmp80) -
                         _tmp135 * _tmp144;
  const Scalar _tmp150 = Scalar(1.0) / (_tmp149);
  const Scalar _tmp151 = std::asinh(_tmp141 * _tmp150);
  const Scalar _tmp152 = Scalar(9.6622558468725703) * _tmp149;
  const Scalar _tmp153 =
      -_tmp151 * _tmp152 -
      Scalar(8.3196563720703107) *
          std::sqrt(
              Scalar(std::pow(Scalar(-Scalar(0.12019727201198747) * _tmp66 - 1), Scalar(2)) +
                     Scalar(0.057067943527034905) *
                         std::pow(Scalar(-Scalar(0.50315118477277876) * _tmp68 - 1), Scalar(2))));
  const Scalar _tmp154 = Scalar(0.1034955) * _tmp150;
  const Scalar _tmp155 = _tmp153 * _tmp154;
  const Scalar _tmp156 = Scalar(9.6622558468725703) * _tmp144;
  const Scalar _tmp157 = std::pow(_tmp149, Scalar(-2));
  const Scalar _tmp158 = _tmp144 * _tmp157;
  const Scalar _tmp159 = _tmp13 + _tmp45 + _tmp5;
  const Scalar _tmp160 =
      (-_tmp141 * _tmp158 + _tmp150 * (_tmp130 * _tmp159 - _tmp140 + _tmp29 * _tmp65)) /
      std::sqrt(Scalar(std::pow(_tmp141, Scalar(2)) * _tmp157 + 1));
  const Scalar _tmp161 = Scalar(1.0) * _tmp151;
  const Scalar _tmp162 = _tmp135 * _tmp142;
  const Scalar _tmp163 = _tmp132 * _tmp134;
  const Scalar _tmp164 = -_tmp103 * _tmp162 - _tmp103 * _tmp163 + _tmp118 * _tmp146 * _tmp84 +
                         _tmp126 * _tmp148 * _tmp84;
  const Scalar _tmp165 = Scalar(1.0) / (_tmp164);
  const Scalar _tmp166 = _tmp44 * _tmp63;
  const Scalar _tmp167 = _tmp116 * _tmp118 * _tmp53 + _tmp124 * _tmp126 * _tmp53 +
                         _tmp127 * _tmp128 + _tmp133 * _tmp134 * _tmp53 + _tmp135 * _tmp139 -
                         _tmp166 * _tmp64;
  const Scalar _tmp168 = std::asinh(_tmp165 * _tmp167);
  const Scalar _tmp169 = Scalar(1.0) * _tmp168;
  const Scalar _tmp170 = std::pow(_tmp164, Scalar(-2));
  const Scalar _tmp171 = _tmp143 * _tmp170;
  const Scalar _tmp172 = _tmp29 * _tmp63;
  const Scalar _tmp173 =
      (_tmp165 * (_tmp128 * _tmp159 - _tmp139 - _tmp172 * _tmp64) - _tmp167 * _tmp171) /
      std::sqrt(Scalar(std::pow(_tmp167, Scalar(2)) * _tmp170 + 1));
  const Scalar _tmp174 = Scalar(9.6622558468725703) * _tmp142;
  const Scalar _tmp175 = _tmp103 * _tmp174;
  const Scalar _tmp176 = Scalar(9.6622558468725703) * _tmp164;
  const Scalar _tmp177 = Scalar(0.1034955) * _tmp165;
  const Scalar _tmp178 =
      -_tmp168 * _tmp176 -
      Scalar(4.83288938413423) *
          std::sqrt(
              Scalar(std::pow(Scalar(1 - Scalar(0.20691555724053495) * _tmp77), Scalar(2)) +
                     Scalar(0.13818785160942856) *
                         std::pow(Scalar(-Scalar(0.55661923802822921) * _tmp75 - 1), Scalar(2))));
  const Scalar _tmp179 = _tmp177 * _tmp178;
  const Scalar _tmp180 = _tmp118 * _tmp145 + _tmp123 * _tmp126 + _tmp162 + _tmp163;
  const Scalar _tmp181 = Scalar(1.0) / (_tmp180);
  const Scalar _tmp182 = -_tmp112 * _tmp118 * _tmp62 - _tmp122 * _tmp126 * _tmp62 -
                         _tmp127 * _tmp129 - _tmp131 * _tmp134 + _tmp135 * _tmp137 + _tmp166;
  const Scalar _tmp183 = std::asinh(_tmp181 * _tmp182);
  const Scalar _tmp184 = Scalar(9.6622558468725703) * _tmp180;
  const Scalar _tmp185 =
      -_tmp183 * _tmp184 -
      Scalar(4.7744369927459998) *
          std::sqrt(
              Scalar(std::pow(Scalar(1 - Scalar(0.2094487793051498) * _tmp95), Scalar(2)) +
                     Scalar(0.32387954179207445) *
                         std::pow(Scalar(1 - Scalar(0.36803241838814449) * _tmp97), Scalar(2))));
  const Scalar _tmp186 = Scalar(0.1034955) * _tmp181;
  const Scalar _tmp187 = _tmp185 * _tmp186;
  const Scalar _tmp188 = Scalar(1.0) * _tmp183;
  const Scalar _tmp189 = std::pow(_tmp180, Scalar(-2));
  const Scalar _tmp190 = _tmp142 * _tmp189;
  const Scalar _tmp191 = (_tmp181 * (-_tmp129 * _tmp159 - _tmp137 + _tmp172) + _tmp182 * _tmp190) /
                         std::sqrt(Scalar(std::pow(_tmp182, Scalar(2)) * _tmp189 + 1));

  // Output terms (1)
  Eigen::Matrix<Scalar, 4, 1> _res;

  _res(0, 0) =
      _tmp32 *
      (-_tmp33 * std::cosh(Scalar(1.0) * _tmp31) +
       _tmp33 *
           std::cosh(
               Scalar(0.1034955) * _tmp0 *
               (-_tmp31 * _tmp32 -
                Scalar(8.3885017487099702) *
                    std::sqrt(Scalar(
                        Scalar(0.090199313518583735) *
                            std::pow(Scalar(1 - Scalar(0.39693005512043167) * _tmp30), Scalar(2)) +
                        std::pow(Scalar(-Scalar(0.11921079949155229) * _tmp20 - 1), Scalar(2)))))));
  _res(1, 0) = _tmp152 * (-Scalar(1.0) * _tmp160 * std::cosh(_tmp161) -
                          (-Scalar(0.1034955) * _tmp153 * _tmp158 +
                           _tmp154 * (-_tmp151 * _tmp156 - _tmp152 * _tmp160)) *
                              std::cosh(_tmp155)) +
               _tmp156 * (-std::sinh(_tmp155) - std::sinh(_tmp161));
  _res(2, 0) = _tmp175 * (-std::sinh(_tmp169) - std::sinh(_tmp179)) +
               _tmp176 * (-Scalar(1.0) * _tmp173 * std::cosh(_tmp169) -
                          (-Scalar(0.1034955) * _tmp171 * _tmp178 +
                           _tmp177 * (-_tmp168 * _tmp175 - _tmp173 * _tmp176)) *
                              std::cosh(_tmp179));
  _res(3, 0) = -_tmp174 * (-std::sinh(_tmp187) - std::sinh(_tmp188)) +
               _tmp184 * (-Scalar(1.0) * _tmp191 * std::cosh(_tmp188) -
                          (Scalar(0.1034955) * _tmp185 * _tmp190 +
                           _tmp186 * (_tmp174 * _tmp183 - _tmp184 * _tmp191)) *
                              std::cosh(_tmp187));

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
