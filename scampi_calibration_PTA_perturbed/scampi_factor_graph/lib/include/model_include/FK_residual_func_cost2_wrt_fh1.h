// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

#include <sym/rot3.h>

namespace sym {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: FK_residual_func_cost2_wrt_fh1
 *
 * Args:
 *     fh1: Scalar
 *     fv1: Scalar
 *     fh2: Scalar
 *     fv2: Scalar
 *     fh3: Scalar
 *     fv3: Scalar
 *     fh4: Scalar
 *     fv4: Scalar
 *     p_a: Matrix31
 *     p_b: Matrix31
 *     p_c: Matrix31
 *     p_d: Matrix31
 *     DeltaRot: Rot3
 *     position_vector: Matrix31
 *     rot_init_x: Scalar
 *     rot_init_y: Scalar
 *     rot_init_z: Scalar
 *     rot_init_w: Scalar
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix41
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 4, 1> FkResidualFuncCost2WrtFh1(
    const Scalar fh1, const Scalar fv1, const Scalar fh2, const Scalar fv2, const Scalar fh3,
    const Scalar fv3, const Scalar fh4, const Scalar fv4, const Eigen::Matrix<Scalar, 3, 1>& p_a,
    const Eigen::Matrix<Scalar, 3, 1>& p_b, const Eigen::Matrix<Scalar, 3, 1>& p_c,
    const Eigen::Matrix<Scalar, 3, 1>& p_d, const sym::Rot3<Scalar>& DeltaRot,
    const Eigen::Matrix<Scalar, 3, 1>& position_vector, const Scalar rot_init_x,
    const Scalar rot_init_y, const Scalar rot_init_z, const Scalar rot_init_w,
    const Scalar epsilon) {
  // Total ops: 576

  // Unused inputs
  (void)fh2;
  (void)fv2;
  (void)fh3;
  (void)fv3;
  (void)fh4;
  (void)fv4;
  (void)epsilon;

  // Input arrays
  const Eigen::Matrix<Scalar, 4, 1>& _DeltaRot = DeltaRot.Data();

  // Intermediate terms (204)
  const Scalar _tmp0 = Scalar(43.164000000000001) - fv1;
  const Scalar _tmp1 = _DeltaRot[0] * rot_init_w - _DeltaRot[1] * rot_init_z +
                       _DeltaRot[2] * rot_init_y + _DeltaRot[3] * rot_init_x;
  const Scalar _tmp2 = -2 * std::pow(_tmp1, Scalar(2));
  const Scalar _tmp3 = -_DeltaRot[0] * rot_init_y + _DeltaRot[1] * rot_init_x +
                       _DeltaRot[2] * rot_init_w + _DeltaRot[3] * rot_init_z;
  const Scalar _tmp4 = 1 - 2 * std::pow(_tmp3, Scalar(2));
  const Scalar _tmp5 = Scalar(0.20999999999999999) * _tmp2 + Scalar(0.20999999999999999) * _tmp4;
  const Scalar _tmp6 = _DeltaRot[0] * rot_init_z + _DeltaRot[1] * rot_init_w -
                       _DeltaRot[2] * rot_init_x + _DeltaRot[3] * rot_init_y;
  const Scalar _tmp7 = 2 * _tmp6;
  const Scalar _tmp8 = _tmp1 * _tmp7;
  const Scalar _tmp9 = -_DeltaRot[0] * rot_init_x - _DeltaRot[1] * rot_init_y -
                       _DeltaRot[2] * rot_init_z + _DeltaRot[3] * rot_init_w;
  const Scalar _tmp10 = 2 * _tmp3 * _tmp9;
  const Scalar _tmp11 = Scalar(0.20999999999999999) * _tmp10 + Scalar(0.20999999999999999) * _tmp8;
  const Scalar _tmp12 = _tmp3 * _tmp7;
  const Scalar _tmp13 = 2 * _tmp1;
  const Scalar _tmp14 = _tmp13 * _tmp9;
  const Scalar _tmp15 = _tmp12 - _tmp14;
  const Scalar _tmp16 = -Scalar(0.010999999999999999) * _tmp15;
  const Scalar _tmp17 = -_tmp11 + _tmp16;
  const Scalar _tmp18 = _tmp17 + _tmp5;
  const Scalar _tmp19 = _tmp18 + position_vector(1, 0);
  const Scalar _tmp20 = _tmp19 - p_d(1, 0);
  const Scalar _tmp21 = -2 * std::pow(_tmp6, Scalar(2));
  const Scalar _tmp22 = Scalar(0.20999999999999999) * _tmp21 + Scalar(0.20999999999999999) * _tmp4;
  const Scalar _tmp23 = -_tmp22;
  const Scalar _tmp24 = _tmp13 * _tmp3;
  const Scalar _tmp25 = _tmp7 * _tmp9;
  const Scalar _tmp26 = _tmp24 + _tmp25;
  const Scalar _tmp27 = -Scalar(0.010999999999999999) * _tmp26;
  const Scalar _tmp28 = -Scalar(0.20999999999999999) * _tmp10 + Scalar(0.20999999999999999) * _tmp8;
  const Scalar _tmp29 = _tmp27 + _tmp28;
  const Scalar _tmp30 = _tmp23 + _tmp29;
  const Scalar _tmp31 = _tmp30 + position_vector(0, 0);
  const Scalar _tmp32 = _tmp31 - p_d(0, 0);
  const Scalar _tmp33 = std::pow(Scalar(std::pow(_tmp20, Scalar(2)) + std::pow(_tmp32, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp34 = _tmp32 * _tmp33;
  const Scalar _tmp35 = Scalar(0.20999999999999999) * _tmp24 - Scalar(0.20999999999999999) * _tmp25;
  const Scalar _tmp36 = -Scalar(0.010999999999999999) * _tmp2 -
                        Scalar(0.010999999999999999) * _tmp21 + Scalar(-0.010999999999999999);
  const Scalar _tmp37 = Scalar(0.20999999999999999) * _tmp12 + Scalar(0.20999999999999999) * _tmp14;
  const Scalar _tmp38 = _tmp36 - _tmp37;
  const Scalar _tmp39 = _tmp35 + _tmp38;
  const Scalar _tmp40 = -_tmp5;
  const Scalar _tmp41 = _tmp11 + _tmp16;
  const Scalar _tmp42 = _tmp40 + _tmp41;
  const Scalar _tmp43 = _tmp42 + position_vector(1, 0);
  const Scalar _tmp44 = _tmp43 - p_b(1, 0);
  const Scalar _tmp45 = _tmp27 - _tmp28;
  const Scalar _tmp46 = _tmp22 + _tmp45;
  const Scalar _tmp47 = _tmp46 + position_vector(0, 0);
  const Scalar _tmp48 = _tmp47 - p_b(0, 0);
  const Scalar _tmp49 = Scalar(1.0) / (_tmp48);
  const Scalar _tmp50 = _tmp44 * _tmp49;
  const Scalar _tmp51 = _tmp39 * _tmp50;
  const Scalar _tmp52 = -_tmp35;
  const Scalar _tmp53 = _tmp36 + _tmp37;
  const Scalar _tmp54 = _tmp52 + _tmp53;
  const Scalar _tmp55 = _tmp20 * _tmp33;
  const Scalar _tmp56 = _tmp41 + _tmp5;
  const Scalar _tmp57 = _tmp56 + position_vector(1, 0);
  const Scalar _tmp58 = _tmp57 - p_c(1, 0);
  const Scalar _tmp59 = _tmp22 + _tmp29;
  const Scalar _tmp60 = _tmp59 + position_vector(0, 0);
  const Scalar _tmp61 = _tmp60 - p_c(0, 0);
  const Scalar _tmp62 = std::pow(Scalar(std::pow(_tmp58, Scalar(2)) + std::pow(_tmp61, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp63 = _tmp61 * _tmp62;
  const Scalar _tmp64 = _tmp35 + _tmp53;
  const Scalar _tmp65 = _tmp58 * _tmp62;
  const Scalar _tmp66 = -_tmp51 * _tmp63 + _tmp64 * _tmp65;
  const Scalar _tmp67 = _tmp34 * _tmp50 - _tmp55;
  const Scalar _tmp68 = Scalar(1.0) / (_tmp50 * _tmp63 - _tmp65);
  const Scalar _tmp69 = _tmp67 * _tmp68;
  const Scalar _tmp70 = -_tmp34 * _tmp51 + _tmp54 * _tmp55 - _tmp66 * _tmp69;
  const Scalar _tmp71 = Scalar(1.0) * _tmp42;
  const Scalar _tmp72 = -_tmp71;
  const Scalar _tmp73 = Scalar(1.0) / (_tmp56 + _tmp72);
  const Scalar _tmp74 = Scalar(1.0) * _tmp46;
  const Scalar _tmp75 = -_tmp59 + _tmp74;
  const Scalar _tmp76 = _tmp73 * _tmp75;
  const Scalar _tmp77 = _tmp39 * _tmp63 - _tmp63 * _tmp64;
  const Scalar _tmp78 = _tmp34 * _tmp39 - _tmp34 * _tmp54 - _tmp69 * _tmp77 - _tmp70 * _tmp76;
  const Scalar _tmp79 = Scalar(1.0) / (_tmp78);
  const Scalar _tmp80 = _tmp71 * _tmp76 + _tmp74;
  const Scalar _tmp81 = 0;
  const Scalar _tmp82 = _tmp63 * _tmp69;
  const Scalar _tmp83 =
      std::sqrt(Scalar(std::pow(_tmp44, Scalar(2)) + std::pow(_tmp48, Scalar(2))));
  const Scalar _tmp84 = _tmp49 * _tmp83;
  const Scalar _tmp85 = Scalar(1.0) / (_tmp83);
  const Scalar _tmp86 = _tmp84 * (-_tmp42 * _tmp48 * _tmp85 + _tmp44 * _tmp46 * _tmp85);
  const Scalar _tmp87 = _tmp56 * _tmp63 - _tmp59 * _tmp65 + _tmp63 * _tmp86;
  const Scalar _tmp88 = _tmp50 * _tmp68;
  const Scalar _tmp89 = _tmp51 + _tmp66 * _tmp88;
  const Scalar _tmp90 = -_tmp39 - _tmp76 * _tmp89 + _tmp77 * _tmp88;
  const Scalar _tmp91 = _tmp18 * _tmp34 - _tmp30 * _tmp55 + _tmp34 * _tmp86 - _tmp69 * _tmp87;
  const Scalar _tmp92 = _tmp79 * _tmp91;
  const Scalar _tmp93 = Scalar(1.0) / (_tmp91);
  const Scalar _tmp94 = _tmp78 * _tmp93;
  const Scalar _tmp95 = _tmp94 * (-_tmp86 + _tmp87 * _tmp88 - _tmp90 * _tmp92);
  const Scalar _tmp96 = _tmp90 + _tmp95;
  const Scalar _tmp97 = _tmp79 * _tmp96;
  const Scalar _tmp98 = _tmp67 * _tmp79;
  const Scalar _tmp99 = -_tmp50 - _tmp96 * _tmp98;
  const Scalar _tmp100 = _tmp63 * _tmp68;
  const Scalar _tmp101 = _tmp23 + _tmp45;
  const Scalar _tmp102 = _tmp101 - p_a(0, 0) + position_vector(0, 0);
  const Scalar _tmp103 = _tmp17 + _tmp40;
  const Scalar _tmp104 = _tmp103 - p_a(1, 0) + position_vector(1, 0);
  const Scalar _tmp105 =
      std::pow(Scalar(std::pow(_tmp102, Scalar(2)) + std::pow(_tmp104, Scalar(2))),
               Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp106 = _tmp102 * _tmp105;
  const Scalar _tmp107 = _tmp106 * _tmp84 * (_tmp100 * _tmp99 + _tmp34 * _tmp97 + Scalar(1.0));
  const Scalar _tmp108 = Scalar(1.0) * _tmp73;
  const Scalar _tmp109 = Scalar(1.0) * _tmp68;
  const Scalar _tmp110 = _tmp108 * _tmp66 * _tmp68 * _tmp75 - _tmp109 * _tmp77;
  const Scalar _tmp111 = _tmp94 * (-_tmp109 * _tmp87 - _tmp110 * _tmp92);
  const Scalar _tmp112 = _tmp110 + _tmp111;
  const Scalar _tmp113 = _tmp112 * _tmp79;
  const Scalar _tmp114 = -_tmp112 * _tmp98 + Scalar(1.0);
  const Scalar _tmp115 = _tmp104 * _tmp105;
  const Scalar _tmp116 = _tmp115 * _tmp84 * (_tmp100 * _tmp114 + _tmp113 * _tmp34);
  const Scalar _tmp117 = _tmp101 * _tmp115 - _tmp103 * _tmp106;
  const Scalar _tmp118 = Scalar(1.0) * _tmp93;
  const Scalar _tmp119 = _tmp117 * _tmp84 * (_tmp118 * _tmp34 - _tmp118 * _tmp82);
  const Scalar _tmp120 = -_tmp0 * _tmp84 * (_tmp34 * _tmp81 - _tmp81 * _tmp82) - _tmp107 * fh1 -
                         _tmp116 * fh1 - _tmp119 * fh1;
  const Scalar _tmp121 = Scalar(1.0) / (_tmp120);
  const Scalar _tmp122 = _tmp38 + _tmp52;
  const Scalar _tmp123 = _tmp122 * fh1;
  const Scalar _tmp124 = -_tmp103 * fv1 - _tmp115 * _tmp123 - Scalar(3.29616) * _tmp15;
  const Scalar _tmp125 = _tmp18 + _tmp72;
  const Scalar _tmp126 = _tmp125 * _tmp76;
  const Scalar _tmp127 = Scalar(1.0) / (-_tmp126 - _tmp30 + _tmp74);
  const Scalar _tmp128 = Scalar(1.0) * _tmp127;
  const Scalar _tmp129 = _tmp126 * _tmp128 + Scalar(1.0);
  const Scalar _tmp130 = _tmp128 * _tmp76;
  const Scalar _tmp131 = -Scalar(1.0) * _tmp108 * _tmp129 + Scalar(1.0) * _tmp130;
  const Scalar _tmp132 = _tmp101 * fv1 + _tmp106 * _tmp123 + Scalar(3.29616) * _tmp26;
  const Scalar _tmp133 = _tmp125 * _tmp73;
  const Scalar _tmp134 = Scalar(1.0) * _tmp128 * _tmp133 - Scalar(1.0) * _tmp128;
  const Scalar _tmp135 = _tmp70 * _tmp79;
  const Scalar _tmp136 = _tmp125 * _tmp127;
  const Scalar _tmp137 = -_tmp109 * _tmp66 + _tmp111 * _tmp136 - _tmp112 * _tmp135;
  const Scalar _tmp138 = Scalar(1.0) * _tmp115 * (-_tmp108 * _tmp137 + _tmp111 * _tmp128);
  const Scalar _tmp139 = _tmp128 * _tmp94;
  const Scalar _tmp140 = -_tmp118 * _tmp70 + _tmp125 * _tmp139;
  const Scalar _tmp141 = Scalar(1.0) * _tmp117 * (-_tmp108 * _tmp140 + _tmp139);
  const Scalar _tmp142 = _tmp127 * _tmp80;
  const Scalar _tmp143 = _tmp73 * (-_tmp125 * _tmp142 - _tmp70 * _tmp81 + _tmp72);
  const Scalar _tmp144 = -_tmp135 * _tmp96 + _tmp136 * _tmp95 + _tmp89;
  const Scalar _tmp145 = Scalar(1.0) * _tmp106 * (-_tmp108 * _tmp144 + _tmp128 * _tmp95);
  const Scalar _tmp146 =
      Scalar(1.0) * _tmp0 * (-_tmp128 * _tmp80 - Scalar(1.0) * _tmp143 + Scalar(1.0)) +
      _tmp124 * _tmp131 + _tmp132 * _tmp134 + _tmp138 * fh1 + _tmp141 * fh1 + _tmp145 * fh1;
  const Scalar _tmp147 = std::asinh(_tmp121 * _tmp146);
  const Scalar _tmp148 = Scalar(1.0) * _tmp147;
  const Scalar _tmp149 = std::pow(_tmp120, Scalar(-2));
  const Scalar _tmp150 = _tmp115 * _tmp122;
  const Scalar _tmp151 = _tmp106 * _tmp122;
  const Scalar _tmp152 = -_tmp107 - _tmp116 - _tmp119;
  const Scalar _tmp153 = _tmp149 * _tmp152;
  const Scalar _tmp154 =
      (_tmp121 * (-_tmp131 * _tmp150 + _tmp134 * _tmp151 + _tmp138 + _tmp141 + _tmp145) -
       _tmp146 * _tmp153) /
      std::sqrt(Scalar(std::pow(_tmp146, Scalar(2)) * _tmp149 + 1));
  const Scalar _tmp155 = Scalar(9.6622558468725703) * _tmp120;
  const Scalar _tmp156 =
      -_tmp147 * _tmp155 - std::sqrt(Scalar(std::pow(Scalar(-_tmp43 + p_b(1, 0)), Scalar(2)) +
                                            std::pow(Scalar(-_tmp47 + p_b(0, 0)), Scalar(2))));
  const Scalar _tmp157 = Scalar(0.1034955) * _tmp121;
  const Scalar _tmp158 = _tmp156 * _tmp157;
  const Scalar _tmp159 = Scalar(9.6622558468725703) * _tmp152;
  const Scalar _tmp160 = _tmp115 * _tmp137 * _tmp73;
  const Scalar _tmp161 = _tmp106 * _tmp73;
  const Scalar _tmp162 = _tmp144 * _tmp161;
  const Scalar _tmp163 = _tmp117 * _tmp140 * _tmp73;
  const Scalar _tmp164 = _tmp129 * _tmp73;
  const Scalar _tmp165 = _tmp128 * _tmp132;
  const Scalar _tmp166 = _tmp0 * _tmp143 + _tmp124 * _tmp164 - _tmp133 * _tmp165 + _tmp160 * fh1 +
                         _tmp162 * fh1 + _tmp163 * fh1;
  const Scalar _tmp167 = _tmp0 * _tmp81;
  const Scalar _tmp168 = _tmp106 * _tmp68 * _tmp99;
  const Scalar _tmp169 = _tmp117 * _tmp118;
  const Scalar _tmp170 = _tmp169 * fh1;
  const Scalar _tmp171 = _tmp114 * _tmp115 * _tmp68;
  const Scalar _tmp172 = -_tmp167 * _tmp69 + _tmp168 * fh1 - _tmp170 * _tmp69 + _tmp171 * fh1;
  const Scalar _tmp173 = Scalar(1.0) / (_tmp172);
  const Scalar _tmp174 = std::asinh(_tmp166 * _tmp173);
  const Scalar _tmp175 = Scalar(1.0) * _tmp174;
  const Scalar _tmp176 = std::pow(_tmp172, Scalar(-2));
  const Scalar _tmp177 = _tmp168 - _tmp169 * _tmp69 + _tmp171;
  const Scalar _tmp178 = _tmp176 * _tmp177;
  const Scalar _tmp179 =
      (-_tmp166 * _tmp178 + _tmp173 * (-_tmp122 * _tmp125 * _tmp128 * _tmp161 - _tmp150 * _tmp164 +
                                       _tmp160 + _tmp162 + _tmp163)) /
      std::sqrt(Scalar(std::pow(_tmp166, Scalar(2)) * _tmp176 + 1));
  const Scalar _tmp180 = Scalar(9.6622558468725703) * _tmp172;
  const Scalar _tmp181 =
      -_tmp174 * _tmp180 - std::sqrt(Scalar(std::pow(Scalar(-_tmp57 + p_c(1, 0)), Scalar(2)) +
                                            std::pow(Scalar(-_tmp60 + p_c(0, 0)), Scalar(2))));
  const Scalar _tmp182 = Scalar(0.1034955) * _tmp173;
  const Scalar _tmp183 = _tmp181 * _tmp182;
  const Scalar _tmp184 = Scalar(9.6622558468725703) * _tmp177;
  const Scalar _tmp185 = _tmp111 * _tmp115 * _tmp127;
  const Scalar _tmp186 = _tmp106 * _tmp127 * _tmp95;
  const Scalar _tmp187 = _tmp117 * _tmp139;
  const Scalar _tmp188 =
      _tmp0 * _tmp142 - _tmp124 * _tmp130 + _tmp165 - _tmp185 * fh1 - _tmp186 * fh1 - _tmp187 * fh1;
  const Scalar _tmp189 = _tmp106 * _tmp97;
  const Scalar _tmp190 = _tmp113 * _tmp115;
  const Scalar _tmp191 = _tmp167 + _tmp170 + _tmp189 * fh1 + _tmp190 * fh1;
  const Scalar _tmp192 = Scalar(1.0) / (_tmp191);
  const Scalar _tmp193 = std::asinh(_tmp188 * _tmp192);
  const Scalar _tmp194 = Scalar(1.0) * _tmp193;
  const Scalar _tmp195 = Scalar(9.6622558468725703) * _tmp191;
  const Scalar _tmp196 =
      -_tmp193 * _tmp195 - std::sqrt(Scalar(std::pow(Scalar(-_tmp19 + p_d(1, 0)), Scalar(2)) +
                                            std::pow(Scalar(-_tmp31 + p_d(0, 0)), Scalar(2))));
  const Scalar _tmp197 = Scalar(0.1034955) * _tmp192;
  const Scalar _tmp198 = _tmp196 * _tmp197;
  const Scalar _tmp199 = _tmp169 + _tmp189 + _tmp190;
  const Scalar _tmp200 = Scalar(9.6622558468725703) * _tmp199;
  const Scalar _tmp201 = std::pow(_tmp191, Scalar(-2));
  const Scalar _tmp202 = _tmp199 * _tmp201;
  const Scalar _tmp203 = (-_tmp188 * _tmp202 + _tmp192 * (_tmp128 * _tmp151 + _tmp130 * _tmp150 -
                                                          _tmp185 - _tmp186 - _tmp187)) /
                         std::sqrt(Scalar(std::pow(_tmp188, Scalar(2)) * _tmp201 + 1));

  // Output terms (1)
  Eigen::Matrix<Scalar, 4, 1> _res;

  _res(0, 0) = 0;
  _res(1, 0) = _tmp155 * (-Scalar(1.0) * _tmp154 * std::cosh(_tmp148) -
                          (-Scalar(0.1034955) * _tmp153 * _tmp156 +
                           _tmp157 * (-_tmp147 * _tmp159 - _tmp154 * _tmp155)) *
                              std::cosh(_tmp158)) +
               _tmp159 * (-std::sinh(_tmp148) - std::sinh(_tmp158));
  _res(2, 0) = _tmp180 * (-Scalar(1.0) * _tmp179 * std::cosh(_tmp175) -
                          (-Scalar(0.1034955) * _tmp178 * _tmp181 +
                           _tmp182 * (-_tmp174 * _tmp184 - _tmp179 * _tmp180)) *
                              std::cosh(_tmp183)) +
               _tmp184 * (-std::sinh(_tmp175) - std::sinh(_tmp183));
  _res(3, 0) = _tmp195 * (-Scalar(1.0) * _tmp203 * std::cosh(_tmp194) -
                          (-Scalar(0.1034955) * _tmp196 * _tmp202 +
                           _tmp197 * (-_tmp193 * _tmp200 - _tmp195 * _tmp203)) *
                              std::cosh(_tmp198)) +
               _tmp200 * (-std::sinh(_tmp194) - std::sinh(_tmp198));

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
