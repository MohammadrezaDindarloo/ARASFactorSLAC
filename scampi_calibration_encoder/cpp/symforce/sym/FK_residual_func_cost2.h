// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

#include <sym/rot3.h>

namespace sym {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: FK_residual_func_cost2
 *
 * Args:
 *     fh1: Scalar
 *     fv1: Scalar
 *     ofset0: Scalar
 *     ofset1: Scalar
 *     ofset2: Scalar
 *     ofset3: Scalar
 *     distance_measure: Matrix41
 *     p_a: Matrix31
 *     p_b: Matrix31
 *     p_c: Matrix31
 *     p_d: Matrix31
 *     DeltaRot: Rot3
 *     position_vector: Matrix31
 *     rot_init_x: Scalar
 *     rot_init_y: Scalar
 *     rot_init_z: Scalar
 *     rot_init_w: Scalar
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix41
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 4, 1> FkResidualFuncCost2(
    const Scalar fh1, const Scalar fv1, const Scalar ofset0, const Scalar ofset1,
    const Scalar ofset2, const Scalar ofset3, const Eigen::Matrix<Scalar, 4, 1>& distance_measure,
    const Eigen::Matrix<Scalar, 3, 1>& p_a, const Eigen::Matrix<Scalar, 3, 1>& p_b,
    const Eigen::Matrix<Scalar, 3, 1>& p_c, const Eigen::Matrix<Scalar, 3, 1>& p_d,
    const sym::Rot3<Scalar>& DeltaRot, const Eigen::Matrix<Scalar, 3, 1>& position_vector,
    const Scalar rot_init_x, const Scalar rot_init_y, const Scalar rot_init_z,
    const Scalar rot_init_w, const Scalar epsilon) {
  // Total ops: 498

  // Unused inputs
  (void)ofset0;
  (void)ofset1;
  (void)ofset2;
  (void)ofset3;
  (void)distance_measure;
  (void)epsilon;

  // Input arrays
  const Eigen::Matrix<Scalar, 4, 1>& _DeltaRot = DeltaRot.Data();

  // Intermediate terms (162)
  const Scalar _tmp0 = Scalar(1.0) / (fh1);
  const Scalar _tmp1 = _DeltaRot[0] * rot_init_z + _DeltaRot[1] * rot_init_w -
                       _DeltaRot[2] * rot_init_x + _DeltaRot[3] * rot_init_y;
  const Scalar _tmp2 = _DeltaRot[0] * rot_init_w - _DeltaRot[1] * rot_init_z +
                       _DeltaRot[2] * rot_init_y + _DeltaRot[3] * rot_init_x;
  const Scalar _tmp3 = 2 * _tmp1 * _tmp2;
  const Scalar _tmp4 = -_DeltaRot[0] * rot_init_y + _DeltaRot[1] * rot_init_x +
                       _DeltaRot[2] * rot_init_w + _DeltaRot[3] * rot_init_z;
  const Scalar _tmp5 = -2 * _DeltaRot[0] * rot_init_x - 2 * _DeltaRot[1] * rot_init_y -
                       2 * _DeltaRot[2] * rot_init_z + 2 * _DeltaRot[3] * rot_init_w;
  const Scalar _tmp6 = _tmp4 * _tmp5;
  const Scalar _tmp7 = Scalar(0.20999999999999999) * _tmp3 - Scalar(0.20999999999999999) * _tmp6;
  const Scalar _tmp8 = -_tmp7;
  const Scalar _tmp9 = -2 * std::pow(_tmp1, Scalar(2));
  const Scalar _tmp10 = 1 - 2 * std::pow(_tmp4, Scalar(2));
  const Scalar _tmp11 = Scalar(0.20999999999999999) * _tmp10 + Scalar(0.20999999999999999) * _tmp9;
  const Scalar _tmp12 = 2 * _tmp4;
  const Scalar _tmp13 = _tmp12 * _tmp2;
  const Scalar _tmp14 = _tmp1 * _tmp5;
  const Scalar _tmp15 = _tmp13 + _tmp14;
  const Scalar _tmp16 = -Scalar(0.010999999999999999) * _tmp15;
  const Scalar _tmp17 = -_tmp11 + _tmp16;
  const Scalar _tmp18 = _tmp17 + _tmp8;
  const Scalar _tmp19 = _tmp18 + position_vector(0, 0);
  const Scalar _tmp20 = Scalar(0.20999999999999999) * _tmp3 + Scalar(0.20999999999999999) * _tmp6;
  const Scalar _tmp21 = -_tmp20;
  const Scalar _tmp22 = -2 * std::pow(_tmp2, Scalar(2));
  const Scalar _tmp23 = Scalar(0.20999999999999999) * _tmp10 + Scalar(0.20999999999999999) * _tmp22;
  const Scalar _tmp24 = _tmp1 * _tmp12;
  const Scalar _tmp25 = _tmp2 * _tmp5;
  const Scalar _tmp26 = _tmp24 - _tmp25;
  const Scalar _tmp27 = -Scalar(0.010999999999999999) * _tmp26;
  const Scalar _tmp28 = -_tmp23 + _tmp27;
  const Scalar _tmp29 = _tmp21 + _tmp28;
  const Scalar _tmp30 = _tmp29 + position_vector(1, 0);
  const Scalar _tmp31 = std::pow(Scalar(-_tmp19 + p_a(0, 0)), Scalar(2)) +
                        std::pow(Scalar(-_tmp30 + p_a(1, 0)), Scalar(2));
  const Scalar _tmp32 = std::asinh(_tmp0 * fv1);
  const Scalar _tmp33 = Scalar(9.6622558468725703) * fh1;
  const Scalar _tmp34 = Scalar(0.20999999999999999) * _tmp13 - Scalar(0.20999999999999999) * _tmp14;
  const Scalar _tmp35 = -_tmp34;
  const Scalar _tmp36 = -Scalar(0.010999999999999999) * _tmp22 -
                        Scalar(0.010999999999999999) * _tmp9 + Scalar(-0.010999999999999999);
  const Scalar _tmp37 = Scalar(0.20999999999999999) * _tmp24 + Scalar(0.20999999999999999) * _tmp25;
  const Scalar _tmp38 = _tmp36 - _tmp37;
  const Scalar _tmp39 = _tmp35 + _tmp38;
  const Scalar _tmp40 = _tmp34 + _tmp38;
  const Scalar _tmp41 = _tmp11 + _tmp16;
  const Scalar _tmp42 = _tmp41 + _tmp8;
  const Scalar _tmp43 = _tmp42 + position_vector(0, 0);
  const Scalar _tmp44 = _tmp20 + _tmp28;
  const Scalar _tmp45 = _tmp44 + position_vector(1, 0);
  const Scalar _tmp46 = std::pow(Scalar(-_tmp43 + p_b(0, 0)), Scalar(2)) +
                        std::pow(Scalar(-_tmp45 + p_b(1, 0)), Scalar(2));
  const Scalar _tmp47 = Scalar(43.164000000000001) - fv1;
  const Scalar _tmp48 = _tmp45 - p_b(1, 0);
  const Scalar _tmp49 = _tmp43 - p_b(0, 0);
  const Scalar _tmp50 = Scalar(1.0) / (_tmp49);
  const Scalar _tmp51 = _tmp48 * _tmp50;
  const Scalar _tmp52 = _tmp40 * _tmp51;
  const Scalar _tmp53 = _tmp23 + _tmp27;
  const Scalar _tmp54 = _tmp21 + _tmp53;
  const Scalar _tmp55 = _tmp54 + position_vector(1, 0);
  const Scalar _tmp56 = _tmp55 - p_d(1, 0);
  const Scalar _tmp57 = _tmp17 + _tmp7;
  const Scalar _tmp58 = _tmp57 + position_vector(0, 0);
  const Scalar _tmp59 = _tmp58 - p_d(0, 0);
  const Scalar _tmp60 = std::pow(Scalar(std::pow(_tmp56, Scalar(2)) + std::pow(_tmp59, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp61 = _tmp59 * _tmp60;
  const Scalar _tmp62 = _tmp36 + _tmp37;
  const Scalar _tmp63 = _tmp35 + _tmp62;
  const Scalar _tmp64 = _tmp56 * _tmp60;
  const Scalar _tmp65 = _tmp20 + _tmp53;
  const Scalar _tmp66 = _tmp65 + position_vector(1, 0);
  const Scalar _tmp67 = _tmp66 - p_c(1, 0);
  const Scalar _tmp68 = _tmp41 + _tmp7;
  const Scalar _tmp69 = _tmp68 + position_vector(0, 0);
  const Scalar _tmp70 = _tmp69 - p_c(0, 0);
  const Scalar _tmp71 = std::pow(Scalar(std::pow(_tmp67, Scalar(2)) + std::pow(_tmp70, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp72 = _tmp70 * _tmp71;
  const Scalar _tmp73 = _tmp34 + _tmp62;
  const Scalar _tmp74 = _tmp67 * _tmp71;
  const Scalar _tmp75 = -_tmp52 * _tmp72 + _tmp73 * _tmp74;
  const Scalar _tmp76 = _tmp51 * _tmp61 - _tmp64;
  const Scalar _tmp77 = Scalar(1.0) / (_tmp51 * _tmp72 - _tmp74);
  const Scalar _tmp78 = _tmp76 * _tmp77;
  const Scalar _tmp79 = -_tmp52 * _tmp61 + _tmp63 * _tmp64 - _tmp75 * _tmp78;
  const Scalar _tmp80 = Scalar(1.0) * _tmp44;
  const Scalar _tmp81 = -_tmp80;
  const Scalar _tmp82 = Scalar(1.0) / (_tmp65 + _tmp81);
  const Scalar _tmp83 = Scalar(1.0) * _tmp42;
  const Scalar _tmp84 = -_tmp68 + _tmp83;
  const Scalar _tmp85 = _tmp82 * _tmp84;
  const Scalar _tmp86 = _tmp40 * _tmp72 - _tmp72 * _tmp73;
  const Scalar _tmp87 = _tmp40 * _tmp61 - _tmp61 * _tmp63 - _tmp78 * _tmp86 - _tmp79 * _tmp85;
  const Scalar _tmp88 = Scalar(1.0) / (_tmp87);
  const Scalar _tmp89 = _tmp80 * _tmp85 + _tmp83;
  const Scalar _tmp90 = 0;
  const Scalar _tmp91 = _tmp88 * _tmp90;
  const Scalar _tmp92 = _tmp72 * _tmp78;
  const Scalar _tmp93 =
      std::sqrt(Scalar(std::pow(_tmp48, Scalar(2)) + std::pow(_tmp49, Scalar(2))));
  const Scalar _tmp94 = _tmp50 * _tmp93;
  const Scalar _tmp95 = Scalar(1.0) / (_tmp93);
  const Scalar _tmp96 = _tmp94 * (_tmp42 * _tmp48 * _tmp95 - _tmp44 * _tmp49 * _tmp95);
  const Scalar _tmp97 = _tmp65 * _tmp72 - _tmp68 * _tmp74 + _tmp72 * _tmp96;
  const Scalar _tmp98 = _tmp51 * _tmp77;
  const Scalar _tmp99 = _tmp52 + _tmp75 * _tmp98;
  const Scalar _tmp100 = -_tmp40 - _tmp85 * _tmp99 + _tmp86 * _tmp98;
  const Scalar _tmp101 = _tmp54 * _tmp61 - _tmp57 * _tmp64 + _tmp61 * _tmp96 - _tmp78 * _tmp97;
  const Scalar _tmp102 = _tmp101 * _tmp88;
  const Scalar _tmp103 = Scalar(1.0) / (_tmp101);
  const Scalar _tmp104 = _tmp103 * _tmp87;
  const Scalar _tmp105 = _tmp104 * (-_tmp100 * _tmp102 - _tmp96 + _tmp97 * _tmp98);
  const Scalar _tmp106 = _tmp100 + _tmp105;
  const Scalar _tmp107 = _tmp61 * _tmp88;
  const Scalar _tmp108 = _tmp76 * _tmp88;
  const Scalar _tmp109 = -_tmp106 * _tmp108 - _tmp51;
  const Scalar _tmp110 = _tmp72 * _tmp77;
  const Scalar _tmp111 = _tmp30 - p_a(1, 0);
  const Scalar _tmp112 = _tmp19 - p_a(0, 0);
  const Scalar _tmp113 =
      std::pow(Scalar(std::pow(_tmp111, Scalar(2)) + std::pow(_tmp112, Scalar(2))),
               Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp114 = _tmp112 * _tmp113;
  const Scalar _tmp115 = _tmp114 * fh1;
  const Scalar _tmp116 = Scalar(1.0) * _tmp82;
  const Scalar _tmp117 = Scalar(1.0) * _tmp77;
  const Scalar _tmp118 = _tmp116 * _tmp75 * _tmp77 * _tmp84 - _tmp117 * _tmp86;
  const Scalar _tmp119 = _tmp104 * (-_tmp102 * _tmp118 - _tmp117 * _tmp97);
  const Scalar _tmp120 = _tmp118 + _tmp119;
  const Scalar _tmp121 = -_tmp108 * _tmp120 + Scalar(1.0);
  const Scalar _tmp122 = _tmp111 * _tmp113;
  const Scalar _tmp123 = _tmp122 * fh1;
  const Scalar _tmp124 = Scalar(1.0) * _tmp103;
  const Scalar _tmp125 = fh1 * (-_tmp114 * _tmp29 + _tmp122 * _tmp18);
  const Scalar _tmp126 = -_tmp115 * _tmp94 * (_tmp106 * _tmp107 + _tmp109 * _tmp110 + Scalar(1.0)) -
                         _tmp123 * _tmp94 * (_tmp107 * _tmp120 + _tmp110 * _tmp121) -
                         _tmp125 * _tmp94 * (_tmp124 * _tmp61 - _tmp124 * _tmp92) -
                         _tmp47 * _tmp94 * (_tmp61 * _tmp91 - _tmp91 * _tmp92);
  const Scalar _tmp127 = Scalar(1.0) / (_tmp126);
  const Scalar _tmp128 = _tmp54 + _tmp81;
  const Scalar _tmp129 = _tmp128 * _tmp85;
  const Scalar _tmp130 = Scalar(1.0) / (-_tmp129 - _tmp57 + _tmp83);
  const Scalar _tmp131 = Scalar(1.0) * _tmp130;
  const Scalar _tmp132 = _tmp129 * _tmp131 + Scalar(1.0);
  const Scalar _tmp133 = _tmp39 * fh1;
  const Scalar _tmp134 = -_tmp122 * _tmp133 - Scalar(3.29616) * _tmp26 - _tmp29 * fv1;
  const Scalar _tmp135 = _tmp114 * _tmp133 + Scalar(3.29616) * _tmp15 + _tmp18 * fv1;
  const Scalar _tmp136 = _tmp128 * _tmp82;
  const Scalar _tmp137 = _tmp79 * _tmp88;
  const Scalar _tmp138 = _tmp128 * _tmp130;
  const Scalar _tmp139 = -_tmp117 * _tmp75 + _tmp119 * _tmp138 - _tmp120 * _tmp137;
  const Scalar _tmp140 = _tmp104 * _tmp131;
  const Scalar _tmp141 = -_tmp124 * _tmp79 + _tmp128 * _tmp140;
  const Scalar _tmp142 = _tmp130 * _tmp89;
  const Scalar _tmp143 = -_tmp128 * _tmp142 - _tmp137 * _tmp90 + _tmp81;
  const Scalar _tmp144 = _tmp105 * _tmp138 - _tmp106 * _tmp137 + _tmp99;
  const Scalar _tmp145 = std::asinh(
      _tmp127 * (Scalar(1.0) * _tmp115 * (_tmp105 * _tmp131 - _tmp116 * _tmp144) +
                 Scalar(1.0) * _tmp123 * (-_tmp116 * _tmp139 + _tmp119 * _tmp131) +
                 Scalar(1.0) * _tmp125 * (-_tmp116 * _tmp141 + _tmp140) +
                 Scalar(1.0) * _tmp134 * (-_tmp116 * _tmp132 + _tmp131 * _tmp85) +
                 Scalar(1.0) * _tmp135 * (_tmp131 * _tmp136 - _tmp131) +
                 Scalar(1.0) * _tmp47 * (-_tmp116 * _tmp143 - _tmp131 * _tmp89 + Scalar(1.0))));
  const Scalar _tmp146 = Scalar(9.6622558468725703) * _tmp126;
  const Scalar _tmp147 = std::pow(Scalar(-_tmp66 + p_c(1, 0)), Scalar(2)) +
                         std::pow(Scalar(-_tmp69 + p_c(0, 0)), Scalar(2));
  const Scalar _tmp148 = _tmp82 * fh1;
  const Scalar _tmp149 = _tmp134 * _tmp82;
  const Scalar _tmp150 = _tmp131 * _tmp135;
  const Scalar _tmp151 = _tmp47 * _tmp91;
  const Scalar _tmp152 = _tmp124 * _tmp125;
  const Scalar _tmp153 =
      _tmp109 * _tmp115 * _tmp77 + _tmp121 * _tmp123 * _tmp77 - _tmp151 * _tmp78 - _tmp152 * _tmp78;
  const Scalar _tmp154 = Scalar(1.0) / (_tmp153);
  const Scalar _tmp155 =
      std::asinh(_tmp154 * (_tmp114 * _tmp144 * _tmp148 + _tmp122 * _tmp139 * _tmp148 +
                            _tmp125 * _tmp141 * _tmp82 + _tmp132 * _tmp149 - _tmp136 * _tmp150 +
                            _tmp143 * _tmp47 * _tmp82));
  const Scalar _tmp156 = Scalar(9.6622558468725703) * _tmp153;
  const Scalar _tmp157 = std::pow(Scalar(-_tmp55 + p_d(1, 0)), Scalar(2)) +
                         std::pow(Scalar(-_tmp58 + p_d(0, 0)), Scalar(2));
  const Scalar _tmp158 =
      _tmp106 * _tmp115 * _tmp88 + _tmp120 * _tmp123 * _tmp88 + _tmp151 + _tmp152;
  const Scalar _tmp159 = Scalar(1.0) / (_tmp158);
  const Scalar _tmp160 = std::asinh(
      _tmp159 * (-_tmp105 * _tmp115 * _tmp130 - _tmp119 * _tmp123 * _tmp130 - _tmp125 * _tmp140 -
                 _tmp131 * _tmp149 * _tmp84 + _tmp142 * _tmp47 + _tmp150));
  const Scalar _tmp161 = Scalar(9.6622558468725703) * _tmp158;

  // Output terms (1)
  Eigen::Matrix<Scalar, 4, 1> _res;

  _res(0, 0) =
      _tmp33 * (-std::sinh(Scalar(1.0) * _tmp32) -
                std::sinh(Scalar(0.1034955) * _tmp0 * (-std::sqrt(_tmp31) - _tmp32 * _tmp33))) -
      std::sqrt(Scalar(_tmp31 +
                       std::pow(Scalar(-_tmp39 + p_a(2, 0) - position_vector(2, 0)), Scalar(2))));
  _res(1, 0) =
      _tmp146 *
          (-std::sinh(Scalar(1.0) * _tmp145) -
           std::sinh(Scalar(0.1034955) * _tmp127 * (-_tmp145 * _tmp146 - std::sqrt(_tmp46)))) -
      std::sqrt(Scalar(_tmp46 +
                       std::pow(Scalar(-_tmp40 + p_b(2, 0) - position_vector(2, 0)), Scalar(2))));
  _res(2, 0) =
      _tmp156 *
          (-std::sinh(Scalar(1.0) * _tmp155) -
           std::sinh(Scalar(0.1034955) * _tmp154 * (-std::sqrt(_tmp147) - _tmp155 * _tmp156))) -
      std::sqrt(Scalar(_tmp147 +
                       std::pow(Scalar(-_tmp73 + p_c(2, 0) - position_vector(2, 0)), Scalar(2))));
  _res(3, 0) =
      _tmp161 *
          (-std::sinh(Scalar(1.0) * _tmp160) -
           std::sinh(Scalar(0.1034955) * _tmp159 * (-std::sqrt(_tmp157) - _tmp160 * _tmp161))) -
      std::sqrt(Scalar(_tmp157 +
                       std::pow(Scalar(-_tmp63 + p_d(2, 0) - position_vector(2, 0)), Scalar(2))));

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
