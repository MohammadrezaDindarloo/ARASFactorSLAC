// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

#include <sym/rot3.h>

namespace sym {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: FK_residual_func_cost3_wrt_pd
 *
 * Args:
 *     fh1: Scalar
 *     fv1: Scalar
 *     p_a: Matrix31
 *     p_b: Matrix31
 *     p_c: Matrix31
 *     p_d: Matrix31
 *     DeltaRot: Rot3
 *     position_vector: Matrix31
 *     rot_init_x: Scalar
 *     rot_init_y: Scalar
 *     rot_init_z: Scalar
 *     rot_init_w: Scalar
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix43
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 4, 3> FkResidualFuncCost3WrtPd(
    const Scalar fh1, const Scalar fv1, const Eigen::Matrix<Scalar, 3, 1>& p_a,
    const Eigen::Matrix<Scalar, 3, 1>& p_b, const Eigen::Matrix<Scalar, 3, 1>& p_c,
    const Eigen::Matrix<Scalar, 3, 1>& p_d, const sym::Rot3<Scalar>& DeltaRot,
    const Eigen::Matrix<Scalar, 3, 1>& position_vector, const Scalar rot_init_x,
    const Scalar rot_init_y, const Scalar rot_init_z, const Scalar rot_init_w,
    const Scalar epsilon) {
  // Total ops: 565

  // Unused inputs
  (void)epsilon;

  // Input arrays
  const Eigen::Matrix<Scalar, 4, 1>& _DeltaRot = DeltaRot.Data();

  // Intermediate terms (178)
  const Scalar _tmp0 = _DeltaRot[0] * rot_init_w - _DeltaRot[1] * rot_init_z +
                       _DeltaRot[2] * rot_init_y + _DeltaRot[3] * rot_init_x;
  const Scalar _tmp1 = _DeltaRot[0] * rot_init_z + _DeltaRot[1] * rot_init_w -
                       _DeltaRot[2] * rot_init_x + _DeltaRot[3] * rot_init_y;
  const Scalar _tmp2 = 2 * _tmp1;
  const Scalar _tmp3 = _tmp0 * _tmp2;
  const Scalar _tmp4 = -_DeltaRot[0] * rot_init_y + _DeltaRot[1] * rot_init_x +
                       _DeltaRot[2] * rot_init_w + _DeltaRot[3] * rot_init_z;
  const Scalar _tmp5 = -2 * _DeltaRot[0] * rot_init_x - 2 * _DeltaRot[1] * rot_init_y -
                       2 * _DeltaRot[2] * rot_init_z + 2 * _DeltaRot[3] * rot_init_w;
  const Scalar _tmp6 = _tmp4 * _tmp5;
  const Scalar _tmp7 = Scalar(0.20999999999999999) * _tmp3 - Scalar(0.20999999999999999) * _tmp6;
  const Scalar _tmp8 = -2 * std::pow(_tmp4, Scalar(2));
  const Scalar _tmp9 = 1 - 2 * std::pow(_tmp1, Scalar(2));
  const Scalar _tmp10 = Scalar(0.20999999999999999) * _tmp8 + Scalar(0.20999999999999999) * _tmp9;
  const Scalar _tmp11 = 2 * _tmp0 * _tmp4;
  const Scalar _tmp12 = _tmp1 * _tmp5;
  const Scalar _tmp13 =
      -Scalar(0.010999999999999999) * _tmp11 - Scalar(0.010999999999999999) * _tmp12;
  const Scalar _tmp14 = -_tmp10 + _tmp13;
  const Scalar _tmp15 = _tmp14 + _tmp7;
  const Scalar _tmp16 = _tmp15 - p_d(0, 0) + position_vector(0, 0);
  const Scalar _tmp17 = Scalar(0.20999999999999999) * _tmp3 + Scalar(0.20999999999999999) * _tmp6;
  const Scalar _tmp18 = -_tmp17;
  const Scalar _tmp19 = _tmp2 * _tmp4;
  const Scalar _tmp20 = _tmp0 * _tmp5;
  const Scalar _tmp21 =
      -Scalar(0.010999999999999999) * _tmp19 + Scalar(0.010999999999999999) * _tmp20;
  const Scalar _tmp22 = -2 * std::pow(_tmp0, Scalar(2));
  const Scalar _tmp23 = Scalar(0.20999999999999999) * _tmp22 + Scalar(0.20999999999999999) * _tmp8 +
                        Scalar(0.20999999999999999);
  const Scalar _tmp24 = _tmp21 + _tmp23;
  const Scalar _tmp25 = _tmp18 + _tmp24;
  const Scalar _tmp26 = _tmp25 - p_d(1, 0) + position_vector(1, 0);
  const Scalar _tmp27 = std::pow(_tmp26, Scalar(2));
  const Scalar _tmp28 = std::pow(_tmp16, Scalar(2));
  const Scalar _tmp29 = _tmp27 + _tmp28;
  const Scalar _tmp30 = std::pow(_tmp29, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp31 = _tmp21 - _tmp23;
  const Scalar _tmp32 = _tmp17 + _tmp31;
  const Scalar _tmp33 = _tmp32 - p_b(1, 0) + position_vector(1, 0);
  const Scalar _tmp34 = -_tmp7;
  const Scalar _tmp35 = _tmp10 + _tmp13;
  const Scalar _tmp36 = _tmp34 + _tmp35;
  const Scalar _tmp37 = _tmp36 - p_b(0, 0) + position_vector(0, 0);
  const Scalar _tmp38 = Scalar(1.0) / (_tmp37);
  const Scalar _tmp39 = _tmp33 * _tmp38;
  const Scalar _tmp40 = _tmp30 * _tmp39;
  const Scalar _tmp41 = _tmp16 * _tmp40 - _tmp26 * _tmp30;
  const Scalar _tmp42 =
      -Scalar(0.010999999999999999) * _tmp22 - Scalar(0.010999999999999999) * _tmp9;
  const Scalar _tmp43 = Scalar(0.20999999999999999) * _tmp11 - Scalar(0.20999999999999999) * _tmp12;
  const Scalar _tmp44 = Scalar(0.20999999999999999) * _tmp19 + Scalar(0.20999999999999999) * _tmp20;
  const Scalar _tmp45 = _tmp42 + _tmp43 - _tmp44;
  const Scalar _tmp46 = _tmp30 * _tmp45;
  const Scalar _tmp47 = _tmp16 * _tmp46;
  const Scalar _tmp48 = _tmp42 + _tmp44;
  const Scalar _tmp49 = -_tmp43 + _tmp48;
  const Scalar _tmp50 = _tmp30 * _tmp49;
  const Scalar _tmp51 = _tmp17 + _tmp24;
  const Scalar _tmp52 = _tmp51 - p_c(1, 0) + position_vector(1, 0);
  const Scalar _tmp53 = _tmp35 + _tmp7;
  const Scalar _tmp54 = _tmp53 - p_c(0, 0) + position_vector(0, 0);
  const Scalar _tmp55 = std::pow(Scalar(std::pow(_tmp52, Scalar(2)) + std::pow(_tmp54, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp56 = _tmp54 * _tmp55;
  const Scalar _tmp57 = _tmp52 * _tmp55;
  const Scalar _tmp58 = Scalar(1.0) / (_tmp39 * _tmp56 - _tmp57);
  const Scalar _tmp59 = _tmp45 * _tmp56;
  const Scalar _tmp60 = _tmp43 + _tmp48;
  const Scalar _tmp61 = _tmp58 * (-_tmp39 * _tmp59 + _tmp57 * _tmp60);
  const Scalar _tmp62 = Scalar(1.0) * _tmp32;
  const Scalar _tmp63 = Scalar(1.0) * _tmp36;
  const Scalar _tmp64 = (-_tmp53 + _tmp63) / (_tmp51 - _tmp62);
  const Scalar _tmp65 = _tmp58 * (-_tmp56 * _tmp60 + _tmp59);
  const Scalar _tmp66 = -_tmp16 * _tmp50 - _tmp41 * _tmp65 + _tmp47 -
                        _tmp64 * (_tmp26 * _tmp50 - _tmp39 * _tmp47 - _tmp41 * _tmp61);
  const Scalar _tmp67 = Scalar(1.0) / (_tmp66);
  const Scalar _tmp68 = _tmp62 * _tmp64 + _tmp63;
  const Scalar _tmp69 = 0;
  const Scalar _tmp70 = _tmp67 * _tmp69;
  const Scalar _tmp71 = _tmp56 * _tmp58;
  const Scalar _tmp72 = _tmp70 * _tmp71;
  const Scalar _tmp73 = _tmp30 * _tmp70;
  const Scalar _tmp74 = Scalar(43.164000000000001) - fv1;
  const Scalar _tmp75 =
      std::sqrt(Scalar(std::pow(_tmp33, Scalar(2)) + std::pow(_tmp37, Scalar(2))));
  const Scalar _tmp76 = _tmp38 * _tmp75;
  const Scalar _tmp77 = _tmp74 * _tmp76;
  const Scalar _tmp78 = Scalar(1.0) / (_tmp75);
  const Scalar _tmp79 = _tmp76 * (-_tmp32 * _tmp37 * _tmp78 + _tmp33 * _tmp36 * _tmp78);
  const Scalar _tmp80 = _tmp58 * (_tmp51 * _tmp56 - _tmp53 * _tmp57 + _tmp56 * _tmp79);
  const Scalar _tmp81 = _tmp25 * _tmp30;
  const Scalar _tmp82 = _tmp15 * _tmp30;
  const Scalar _tmp83 = _tmp16 * _tmp30;
  const Scalar _tmp84 = _tmp16 * _tmp81 - _tmp26 * _tmp82 - _tmp41 * _tmp80 + _tmp79 * _tmp83;
  const Scalar _tmp85 = _tmp39 * _tmp45;
  const Scalar _tmp86 = _tmp39 * _tmp65 - _tmp45 - _tmp64 * (_tmp39 * _tmp61 + _tmp85);
  const Scalar _tmp87 = _tmp67 * _tmp86;
  const Scalar _tmp88 = _tmp39 * _tmp80 - _tmp79 - _tmp84 * _tmp87;
  const Scalar _tmp89 = Scalar(1.0) / (_tmp84);
  const Scalar _tmp90 = _tmp66 * _tmp89;
  const Scalar _tmp91 = _tmp86 + _tmp88 * _tmp90;
  const Scalar _tmp92 = _tmp67 * _tmp91;
  const Scalar _tmp93 = _tmp30 * _tmp92;
  const Scalar _tmp94 = -_tmp39 - _tmp41 * _tmp92;
  const Scalar _tmp95 = _tmp18 + _tmp31;
  const Scalar _tmp96 = _tmp95 - p_a(1, 0) + position_vector(1, 0);
  const Scalar _tmp97 = _tmp14 + _tmp34;
  const Scalar _tmp98 = _tmp97 - p_a(0, 0) + position_vector(0, 0);
  const Scalar _tmp99 = std::pow(Scalar(std::pow(_tmp96, Scalar(2)) + std::pow(_tmp98, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp100 = _tmp98 * _tmp99;
  const Scalar _tmp101 = _tmp100 * fh1;
  const Scalar _tmp102 = _tmp101 * _tmp76;
  const Scalar _tmp103 = Scalar(1.0) * _tmp61 * _tmp64 - Scalar(1.0) * _tmp65;
  const Scalar _tmp104 = _tmp103 * _tmp67;
  const Scalar _tmp105 = -_tmp104 * _tmp84 - Scalar(1.0) * _tmp80;
  const Scalar _tmp106 = _tmp105 * _tmp89;
  const Scalar _tmp107 = _tmp103 + _tmp106 * _tmp66;
  const Scalar _tmp108 = _tmp107 * _tmp67;
  const Scalar _tmp109 = _tmp108 * _tmp30;
  const Scalar _tmp110 = _tmp41 * _tmp67;
  const Scalar _tmp111 = -_tmp107 * _tmp110 + Scalar(1.0);
  const Scalar _tmp112 = _tmp96 * _tmp99;
  const Scalar _tmp113 = _tmp112 * fh1;
  const Scalar _tmp114 = _tmp113 * _tmp76;
  const Scalar _tmp115 = Scalar(1.0) * _tmp89;
  const Scalar _tmp116 = _tmp115 * _tmp71;
  const Scalar _tmp117 = _tmp115 * _tmp30;
  const Scalar _tmp118 = fh1 * (-_tmp100 * _tmp95 + _tmp112 * _tmp97);
  const Scalar _tmp119 = _tmp118 * _tmp76;
  const Scalar _tmp120 = std::exp(_tmp102 * (_tmp16 * _tmp93 + _tmp71 * _tmp94 + Scalar(1.0)) +
                                  _tmp114 * (_tmp109 * _tmp16 + _tmp111 * _tmp71) +
                                  _tmp119 * (-_tmp116 * _tmp41 + _tmp117 * _tmp16) +
                                  _tmp77 * (_tmp16 * _tmp73 - _tmp41 * _tmp72));
  const Scalar _tmp121 = std::pow(_tmp29, Scalar(Scalar(-3) / Scalar(2)));
  const Scalar _tmp122 = _tmp121 * _tmp28;
  const Scalar _tmp123 = _tmp121 * _tmp16 * _tmp26;
  const Scalar _tmp124 = _tmp122 * _tmp39 - _tmp123 - _tmp40;
  const Scalar _tmp125 = _tmp122 * _tmp45;
  const Scalar _tmp126 = _tmp123 * _tmp49;
  const Scalar _tmp127 =
      -_tmp122 * _tmp49 - _tmp124 * _tmp65 + _tmp125 - _tmp46 + _tmp50 -
      _tmp64 * (-_tmp124 * _tmp61 - _tmp125 * _tmp39 + _tmp126 + _tmp39 * _tmp46);
  const Scalar _tmp128 = std::pow(_tmp66, Scalar(-2));
  const Scalar _tmp129 = _tmp127 * _tmp128;
  const Scalar _tmp130 = _tmp129 * _tmp41;
  const Scalar _tmp131 = _tmp122 * _tmp25 + _tmp122 * _tmp79 - _tmp123 * _tmp15 - _tmp124 * _tmp80 -
                         _tmp30 * _tmp79 - _tmp81;
  const Scalar _tmp132 = _tmp129 * _tmp84;
  const Scalar _tmp133 = std::pow(_tmp84, Scalar(-2));
  const Scalar _tmp134 = _tmp133 * _tmp66;
  const Scalar _tmp135 = _tmp105 * _tmp134;
  const Scalar _tmp136 =
      _tmp106 * _tmp127 - _tmp131 * _tmp135 + _tmp90 * (_tmp103 * _tmp132 - _tmp104 * _tmp131);
  const Scalar _tmp137 = _tmp107 * _tmp130 - _tmp108 * _tmp124 - _tmp110 * _tmp136;
  const Scalar _tmp138 = _tmp67 * _tmp83;
  const Scalar _tmp139 = _tmp129 * _tmp83;
  const Scalar _tmp140 = _tmp134 * _tmp88;
  const Scalar _tmp141 = _tmp88 * _tmp89;
  const Scalar _tmp142 =
      _tmp127 * _tmp141 - _tmp131 * _tmp140 + _tmp90 * (-_tmp131 * _tmp87 + _tmp132 * _tmp86);
  const Scalar _tmp143 = -_tmp110 * _tmp142 - _tmp124 * _tmp92 + _tmp130 * _tmp91;
  const Scalar _tmp144 = Scalar(1.0) * _tmp133;
  const Scalar _tmp145 = _tmp144 * _tmp41 * _tmp71;
  const Scalar _tmp146 = _tmp144 * _tmp83;
  const Scalar _tmp147 = _tmp69 * _tmp71;
  const Scalar _tmp148 = _tmp70 * _tmp74;
  const Scalar _tmp149 = _tmp148 * _tmp58;
  const Scalar _tmp150 = _tmp101 * _tmp58;
  const Scalar _tmp151 = _tmp115 * _tmp118;
  const Scalar _tmp152 = _tmp41 * _tmp58;
  const Scalar _tmp153 = _tmp113 * _tmp58;
  const Scalar _tmp154 =
      std::exp(-_tmp111 * _tmp153 + _tmp149 * _tmp41 - _tmp150 * _tmp94 + _tmp151 * _tmp152);
  const Scalar _tmp155 = _tmp151 * _tmp58;
  const Scalar _tmp156 = _tmp69 * _tmp74;
  const Scalar _tmp157 = _tmp129 * _tmp156;
  const Scalar _tmp158 = _tmp118 * _tmp144;
  const Scalar _tmp159 = _tmp131 * _tmp158;
  const Scalar _tmp160 = std::exp(-_tmp101 * _tmp92 - _tmp108 * _tmp113 - _tmp148 - _tmp151);
  const Scalar _tmp161 = _tmp101 * _tmp91;
  const Scalar _tmp162 = _tmp107 * _tmp113;
  const Scalar _tmp163 = _tmp101 * _tmp67;
  const Scalar _tmp164 = _tmp121 * _tmp27;
  const Scalar _tmp165 = _tmp123 * _tmp39 - _tmp164 + _tmp30;
  const Scalar _tmp166 =
      _tmp123 * _tmp45 - _tmp126 - _tmp165 * _tmp65 -
      _tmp64 * (-_tmp123 * _tmp85 + _tmp164 * _tmp49 - _tmp165 * _tmp61 - _tmp50);
  const Scalar _tmp167 = _tmp128 * _tmp166;
  const Scalar _tmp168 = _tmp167 * _tmp83;
  const Scalar _tmp169 = _tmp167 * _tmp41;
  const Scalar _tmp170 =
      _tmp123 * _tmp25 + _tmp123 * _tmp79 - _tmp15 * _tmp164 - _tmp165 * _tmp80 + _tmp82;
  const Scalar _tmp171 = _tmp167 * _tmp84;
  const Scalar _tmp172 =
      _tmp106 * _tmp166 - _tmp135 * _tmp170 + _tmp90 * (_tmp103 * _tmp171 - _tmp104 * _tmp170);
  const Scalar _tmp173 = _tmp172 * _tmp67;
  const Scalar _tmp174 = _tmp107 * _tmp169 - _tmp108 * _tmp165 - _tmp110 * _tmp172;
  const Scalar _tmp175 =
      -_tmp140 * _tmp170 + _tmp141 * _tmp166 + _tmp90 * (-_tmp170 * _tmp87 + _tmp171 * _tmp86);
  const Scalar _tmp176 = -_tmp110 * _tmp175 - _tmp165 * _tmp92 + _tmp169 * _tmp91;
  const Scalar _tmp177 = _tmp158 * _tmp170;

  // Output terms (1)
  Eigen::Matrix<Scalar, 4, 3> _res;

  _res(0, 0) = 0;
  _res(1, 0) = -_tmp120 * (-_tmp102 * (_tmp122 * _tmp92 + _tmp138 * _tmp142 - _tmp139 * _tmp91 +
                                       _tmp143 * _tmp71 - _tmp93) -
                           _tmp114 * (-_tmp107 * _tmp139 + _tmp108 * _tmp122 - _tmp109 +
                                      _tmp136 * _tmp138 + _tmp137 * _tmp71) -
                           _tmp119 * (_tmp115 * _tmp122 - _tmp116 * _tmp124 - _tmp117 +
                                      _tmp131 * _tmp145 - _tmp131 * _tmp146) -
                           _tmp77 * (_tmp122 * _tmp70 - _tmp124 * _tmp72 + _tmp130 * _tmp147 -
                                     _tmp139 * _tmp69 - _tmp73));
  _res(2, 0) = -_tmp154 * (-_tmp124 * _tmp149 - _tmp124 * _tmp155 + _tmp137 * _tmp153 +
                           _tmp143 * _tmp150 + _tmp152 * _tmp157 + _tmp152 * _tmp159);
  _res(3, 0) = -_tmp160 * (_tmp113 * _tmp136 * _tmp67 - _tmp129 * _tmp161 - _tmp129 * _tmp162 +
                           _tmp142 * _tmp163 - _tmp157 - _tmp159);
  _res(0, 1) = 0;
  _res(1, 1) =
      -_tmp120 *
      (-_tmp102 * (_tmp123 * _tmp92 + _tmp138 * _tmp175 - _tmp168 * _tmp91 + _tmp176 * _tmp71) -
       _tmp114 * (-_tmp107 * _tmp168 + _tmp108 * _tmp123 + _tmp173 * _tmp83 + _tmp174 * _tmp71) -
       _tmp119 * (_tmp115 * _tmp123 - _tmp116 * _tmp165 + _tmp145 * _tmp170 - _tmp146 * _tmp170) -
       _tmp77 * (_tmp123 * _tmp70 + _tmp147 * _tmp169 - _tmp165 * _tmp72 - _tmp168 * _tmp69));
  _res(2, 1) = -_tmp154 * (-_tmp149 * _tmp165 + _tmp150 * _tmp176 + _tmp152 * _tmp177 +
                           _tmp153 * _tmp174 - _tmp155 * _tmp165 + _tmp156 * _tmp169 * _tmp58);
  _res(3, 1) = -_tmp160 * (_tmp113 * _tmp173 - _tmp156 * _tmp167 - _tmp161 * _tmp167 -
                           _tmp162 * _tmp167 + _tmp163 * _tmp175 - _tmp177);
  _res(0, 2) = 0;
  _res(1, 2) = 0;
  _res(2, 2) = 0;
  _res(3, 2) = 0;

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
