// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

#include <sym/pose3.h>
#include <sym/rot3.h>

namespace sym {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: FK_residual_func_cost1
 *
 * Args:
 *     fh1: Scalar
 *     fv1: Scalar
 *     p_a: Matrix31
 *     p_b: Matrix31
 *     p_c: Matrix31
 *     p_d: Matrix31
 *     DeltaRot: Rot3
 *     TransformationMatrix: Pose3
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix41
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 4, 1> FkResidualFuncCost1(
    const Scalar fh1, const Scalar fv1, const Eigen::Matrix<Scalar, 3, 1>& p_a,
    const Eigen::Matrix<Scalar, 3, 1>& p_b, const Eigen::Matrix<Scalar, 3, 1>& p_c,
    const Eigen::Matrix<Scalar, 3, 1>& p_d, const sym::Rot3<Scalar>& DeltaRot,
    const sym::Pose3<Scalar>& TransformationMatrix, const Scalar epsilon) {
  // Total ops: 479

  // Unused inputs
  (void)epsilon;

  // Input arrays
  const Eigen::Matrix<Scalar, 4, 1>& _DeltaRot = DeltaRot.Data();
  const Eigen::Matrix<Scalar, 7, 1>& _TransformationMatrix = TransformationMatrix.Data();

  // Intermediate terms (157)
  const Scalar _tmp0 =
      _DeltaRot[0] * _TransformationMatrix[3] - _DeltaRot[1] * _TransformationMatrix[2] +
      _DeltaRot[2] * _TransformationMatrix[1] + _DeltaRot[3] * _TransformationMatrix[0];
  const Scalar _tmp1 =
      _DeltaRot[0] * _TransformationMatrix[2] + _DeltaRot[1] * _TransformationMatrix[3] -
      _DeltaRot[2] * _TransformationMatrix[0] + _DeltaRot[3] * _TransformationMatrix[1];
  const Scalar _tmp2 = 2 * _tmp0 * _tmp1;
  const Scalar _tmp3 =
      -_DeltaRot[0] * _TransformationMatrix[1] + _DeltaRot[1] * _TransformationMatrix[0] +
      _DeltaRot[2] * _TransformationMatrix[3] + _DeltaRot[3] * _TransformationMatrix[2];
  const Scalar _tmp4 =
      -2 * _DeltaRot[0] * _TransformationMatrix[0] - 2 * _DeltaRot[1] * _TransformationMatrix[1] -
      2 * _DeltaRot[2] * _TransformationMatrix[2] + 2 * _DeltaRot[3] * _TransformationMatrix[3];
  const Scalar _tmp5 = _tmp3 * _tmp4;
  const Scalar _tmp6 = Scalar(0.20999999999999999) * _tmp2 + Scalar(0.20999999999999999) * _tmp5;
  const Scalar _tmp7 = -_tmp6;
  const Scalar _tmp8 = 2 * _tmp3;
  const Scalar _tmp9 = _tmp1 * _tmp8;
  const Scalar _tmp10 = _tmp0 * _tmp4;
  const Scalar _tmp11 = -_tmp10 + _tmp9;
  const Scalar _tmp12 = -Scalar(0.010999999999999999) * _tmp11;
  const Scalar _tmp13 = -2 * std::pow(_tmp0, Scalar(2));
  const Scalar _tmp14 = -2 * std::pow(_tmp3, Scalar(2));
  const Scalar _tmp15 = Scalar(0.20999999999999999) * _tmp13 +
                        Scalar(0.20999999999999999) * _tmp14 + Scalar(0.20999999999999999);
  const Scalar _tmp16 = _tmp12 - _tmp15;
  const Scalar _tmp17 = _tmp16 + _tmp7;
  const Scalar _tmp18 = _TransformationMatrix[5] + _tmp17;
  const Scalar _tmp19 = 1 - 2 * std::pow(_tmp1, Scalar(2));
  const Scalar _tmp20 = Scalar(0.20999999999999999) * _tmp14 + Scalar(0.20999999999999999) * _tmp19;
  const Scalar _tmp21 = -_tmp20;
  const Scalar _tmp22 = _tmp0 * _tmp8;
  const Scalar _tmp23 = _tmp1 * _tmp4;
  const Scalar _tmp24 = _tmp22 + _tmp23;
  const Scalar _tmp25 = -Scalar(0.010999999999999999) * _tmp24;
  const Scalar _tmp26 = Scalar(0.20999999999999999) * _tmp2 - Scalar(0.20999999999999999) * _tmp5;
  const Scalar _tmp27 = _tmp25 - _tmp26;
  const Scalar _tmp28 = _tmp21 + _tmp27;
  const Scalar _tmp29 = _TransformationMatrix[4] + _tmp28;
  const Scalar _tmp30 = Scalar(1.0) / (fh1);
  const Scalar _tmp31 = std::asinh(_tmp30 * fv1);
  const Scalar _tmp32 = Scalar(9.6622558468725703) * fh1;
  const Scalar _tmp33 = Scalar(0.1034955) * _tmp30;
  const Scalar _tmp34 = Scalar(0.20999999999999999) * _tmp22 - Scalar(0.20999999999999999) * _tmp23;
  const Scalar _tmp35 = -_tmp34;
  const Scalar _tmp36 =
      -Scalar(0.010999999999999999) * _tmp13 - Scalar(0.010999999999999999) * _tmp19;
  const Scalar _tmp37 = Scalar(0.20999999999999999) * _tmp10 + Scalar(0.20999999999999999) * _tmp9;
  const Scalar _tmp38 = _tmp36 - _tmp37;
  const Scalar _tmp39 = _tmp35 + _tmp38;
  const Scalar _tmp40 = Scalar(43.164000000000001) - fv1;
  const Scalar _tmp41 = _tmp36 + _tmp37;
  const Scalar _tmp42 = _tmp35 + _tmp41;
  const Scalar _tmp43 = _tmp12 + _tmp15;
  const Scalar _tmp44 = _tmp43 + _tmp7;
  const Scalar _tmp45 = _TransformationMatrix[5] + _tmp44;
  const Scalar _tmp46 = _tmp45 - p_d(1, 0);
  const Scalar _tmp47 = _tmp25 + _tmp26;
  const Scalar _tmp48 = _tmp21 + _tmp47;
  const Scalar _tmp49 = _TransformationMatrix[4] + _tmp48;
  const Scalar _tmp50 = _tmp49 - p_d(0, 0);
  const Scalar _tmp51 = std::pow(Scalar(std::pow(_tmp46, Scalar(2)) + std::pow(_tmp50, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp52 = _tmp50 * _tmp51;
  const Scalar _tmp53 = _tmp34 + _tmp38;
  const Scalar _tmp54 = _tmp34 + _tmp41;
  const Scalar _tmp55 = _tmp20 + _tmp47;
  const Scalar _tmp56 = _TransformationMatrix[4] + _tmp55;
  const Scalar _tmp57 = _tmp56 - p_c(0, 0);
  const Scalar _tmp58 = _tmp43 + _tmp6;
  const Scalar _tmp59 = _TransformationMatrix[5] + _tmp58;
  const Scalar _tmp60 = _tmp59 - p_c(1, 0);
  const Scalar _tmp61 = std::pow(Scalar(std::pow(_tmp57, Scalar(2)) + std::pow(_tmp60, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp62 = _tmp57 * _tmp61;
  const Scalar _tmp63 = _tmp53 * _tmp62 - _tmp54 * _tmp62;
  const Scalar _tmp64 = _tmp46 * _tmp51;
  const Scalar _tmp65 = _tmp16 + _tmp6;
  const Scalar _tmp66 = _TransformationMatrix[5] + _tmp65;
  const Scalar _tmp67 = _tmp66 - p_b(1, 0);
  const Scalar _tmp68 = _tmp20 + _tmp27;
  const Scalar _tmp69 = _TransformationMatrix[4] + _tmp68;
  const Scalar _tmp70 = _tmp69 - p_b(0, 0);
  const Scalar _tmp71 = Scalar(1.0) / (_tmp70);
  const Scalar _tmp72 = _tmp67 * _tmp71;
  const Scalar _tmp73 = _tmp52 * _tmp72 - _tmp64;
  const Scalar _tmp74 = _tmp60 * _tmp61;
  const Scalar _tmp75 = Scalar(1.0) / (_tmp62 * _tmp72 - _tmp74);
  const Scalar _tmp76 = _tmp73 * _tmp75;
  const Scalar _tmp77 = _tmp53 * _tmp72;
  const Scalar _tmp78 = _tmp75 * (_tmp54 * _tmp74 - _tmp62 * _tmp77);
  const Scalar _tmp79 = _tmp42 * _tmp64 - _tmp52 * _tmp77 - _tmp73 * _tmp78;
  const Scalar _tmp80 = Scalar(1.0) * _tmp65;
  const Scalar _tmp81 = -_tmp80;
  const Scalar _tmp82 = Scalar(1.0) / (_tmp58 + _tmp81);
  const Scalar _tmp83 = Scalar(1.0) * _tmp68;
  const Scalar _tmp84 = _tmp82 * (-_tmp55 + _tmp83);
  const Scalar _tmp85 = -_tmp42 * _tmp52 + _tmp52 * _tmp53 - _tmp63 * _tmp76 - _tmp79 * _tmp84;
  const Scalar _tmp86 = Scalar(1.0) / (_tmp85);
  const Scalar _tmp87 = _tmp80 * _tmp84 + _tmp83;
  const Scalar _tmp88 = 0;
  const Scalar _tmp89 = _tmp62 * _tmp76;
  const Scalar _tmp90 =
      std::sqrt(Scalar(std::pow(_tmp67, Scalar(2)) + std::pow(_tmp70, Scalar(2))));
  const Scalar _tmp91 = _tmp71 * _tmp90;
  const Scalar _tmp92 = Scalar(1.0) * _tmp75;
  const Scalar _tmp93 = Scalar(1.0) * _tmp78;
  const Scalar _tmp94 = -_tmp63 * _tmp92 + _tmp84 * _tmp93;
  const Scalar _tmp95 = Scalar(1.0) / (_tmp90);
  const Scalar _tmp96 = _tmp91 * (-_tmp65 * _tmp70 * _tmp95 + _tmp67 * _tmp68 * _tmp95);
  const Scalar _tmp97 = -_tmp55 * _tmp74 + _tmp58 * _tmp62 + _tmp62 * _tmp96;
  const Scalar _tmp98 = _tmp44 * _tmp52 - _tmp48 * _tmp64 + _tmp52 * _tmp96 - _tmp76 * _tmp97;
  const Scalar _tmp99 = _tmp86 * _tmp98;
  const Scalar _tmp100 = Scalar(1.0) / (_tmp98);
  const Scalar _tmp101 = _tmp100 * _tmp85;
  const Scalar _tmp102 = _tmp101 * (-_tmp92 * _tmp97 - _tmp94 * _tmp99);
  const Scalar _tmp103 = _tmp86 * (_tmp102 + _tmp94);
  const Scalar _tmp104 = -_tmp103 * _tmp73 + Scalar(1.0);
  const Scalar _tmp105 = _tmp62 * _tmp75;
  const Scalar _tmp106 = _tmp29 - p_a(0, 0);
  const Scalar _tmp107 = _tmp18 - p_a(1, 0);
  const Scalar _tmp108 =
      std::pow(Scalar(std::pow(_tmp106, Scalar(2)) + std::pow(_tmp107, Scalar(2))),
               Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp109 = _tmp107 * _tmp108;
  const Scalar _tmp110 = _tmp109 * fh1;
  const Scalar _tmp111 = _tmp72 * _tmp75;
  const Scalar _tmp112 = _tmp72 * _tmp78 + _tmp77;
  const Scalar _tmp113 = _tmp111 * _tmp63 - _tmp112 * _tmp84 - _tmp53;
  const Scalar _tmp114 = _tmp101 * (_tmp111 * _tmp97 - _tmp113 * _tmp99 - _tmp96);
  const Scalar _tmp115 = _tmp86 * (_tmp113 + _tmp114);
  const Scalar _tmp116 = -_tmp115 * _tmp73 - _tmp72;
  const Scalar _tmp117 = _tmp106 * _tmp108;
  const Scalar _tmp118 = _tmp117 * fh1;
  const Scalar _tmp119 = Scalar(1.0) * _tmp100;
  const Scalar _tmp120 = fh1 * (_tmp109 * _tmp28 - _tmp117 * _tmp17);
  const Scalar _tmp121 = -_tmp110 * _tmp91 * (_tmp103 * _tmp52 + _tmp104 * _tmp105) -
                         _tmp118 * _tmp91 * (_tmp105 * _tmp116 + _tmp115 * _tmp52 + Scalar(1.0)) -
                         _tmp120 * _tmp91 * (_tmp119 * _tmp52 - _tmp119 * _tmp89) -
                         _tmp40 * _tmp91 * (_tmp52 * _tmp88 - _tmp88 * _tmp89);
  const Scalar _tmp122 = Scalar(1.0) / (_tmp121);
  const Scalar _tmp123 = Scalar(0.1034955) * _tmp122;
  const Scalar _tmp124 = _tmp44 + _tmp81;
  const Scalar _tmp125 = _tmp124 * _tmp84;
  const Scalar _tmp126 = Scalar(1.0) / (-_tmp125 - _tmp48 + _tmp83);
  const Scalar _tmp127 = Scalar(1.0) * _tmp126;
  const Scalar _tmp128 = _tmp101 * _tmp127;
  const Scalar _tmp129 = -_tmp119 * _tmp79 + _tmp124 * _tmp128;
  const Scalar _tmp130 = Scalar(1.0) * _tmp82;
  const Scalar _tmp131 = _tmp124 * _tmp126;
  const Scalar _tmp132 = _tmp112 + _tmp114 * _tmp131 - _tmp115 * _tmp79;
  const Scalar _tmp133 = _tmp39 * fh1;
  const Scalar _tmp134 = -_tmp109 * _tmp133 - Scalar(5.1796800000000003) * _tmp11 - _tmp17 * fv1;
  const Scalar _tmp135 = _tmp127 * _tmp84;
  const Scalar _tmp136 = _tmp125 * _tmp127 + Scalar(1.0);
  const Scalar _tmp137 = _tmp102 * _tmp131 - _tmp103 * _tmp79 - _tmp93;
  const Scalar _tmp138 = _tmp126 * _tmp87;
  const Scalar _tmp139 = -_tmp124 * _tmp138 - _tmp79 * _tmp88 + _tmp81;
  const Scalar _tmp140 = _tmp124 * _tmp82;
  const Scalar _tmp141 = _tmp117 * _tmp133 + Scalar(5.1796800000000003) * _tmp24 + _tmp28 * fv1;
  const Scalar _tmp142 = std::asinh(
      _tmp122 * (Scalar(1.0) * _tmp110 * (_tmp102 * _tmp127 - _tmp130 * _tmp137) +
                 Scalar(1.0) * _tmp118 * (_tmp114 * _tmp127 - _tmp130 * _tmp132) +
                 Scalar(1.0) * _tmp120 * (_tmp128 - _tmp129 * _tmp130) +
                 Scalar(1.0) * _tmp134 * (-_tmp130 * _tmp136 + _tmp135) +
                 Scalar(1.0) * _tmp141 * (_tmp127 * _tmp140 - _tmp127) +
                 Scalar(1.0) * _tmp40 * (-_tmp127 * _tmp87 - _tmp130 * _tmp139 + Scalar(1.0))));
  const Scalar _tmp143 = Scalar(9.6622558468725703) * _tmp121;
  const Scalar _tmp144 = _tmp40 * _tmp88;
  const Scalar _tmp145 = _tmp119 * _tmp120;
  const Scalar _tmp146 =
      _tmp104 * _tmp110 * _tmp75 + _tmp116 * _tmp118 * _tmp75 - _tmp144 * _tmp76 - _tmp145 * _tmp76;
  const Scalar _tmp147 = Scalar(1.0) / (_tmp146);
  const Scalar _tmp148 = _tmp127 * _tmp141;
  const Scalar _tmp149 =
      std::asinh(_tmp147 * (_tmp110 * _tmp137 * _tmp82 + _tmp118 * _tmp132 * _tmp82 +
                            _tmp120 * _tmp129 * _tmp82 + _tmp134 * _tmp136 * _tmp82 +
                            _tmp139 * _tmp40 * _tmp82 - _tmp140 * _tmp148));
  const Scalar _tmp150 = Scalar(0.1034955) * _tmp147;
  const Scalar _tmp151 = Scalar(9.6622558468725703) * _tmp146;
  const Scalar _tmp152 = _tmp103 * _tmp110 + _tmp115 * _tmp118 + _tmp144 + _tmp145;
  const Scalar _tmp153 = Scalar(1.0) / (_tmp152);
  const Scalar _tmp154 =
      std::asinh(_tmp153 * (-_tmp102 * _tmp110 * _tmp126 - _tmp114 * _tmp118 * _tmp126 -
                            _tmp120 * _tmp128 - _tmp134 * _tmp135 + _tmp138 * _tmp40 + _tmp148));
  const Scalar _tmp155 = Scalar(0.1034955) * _tmp153;
  const Scalar _tmp156 = Scalar(9.6622558468725703) * _tmp152;

  // Output terms (1)
  Eigen::Matrix<Scalar, 4, 1> _res;

  _res(0, 0) =
      _TransformationMatrix[6] -
      _tmp32 * (_tmp33 * p_a(2, 0) + std::cosh(Scalar(1.0) * _tmp31) -
                std::cosh(_tmp33 *
                          (-_tmp31 * _tmp32 -
                           std::sqrt(Scalar(std::pow(Scalar(-_tmp18 + p_a(1, 0)), Scalar(2)) +
                                            std::pow(Scalar(-_tmp29 + p_a(0, 0)), Scalar(2))))))) +
      _tmp39;
  _res(1, 0) =
      _TransformationMatrix[6] -
      _tmp143 * (_tmp123 * p_b(2, 0) + std::cosh(Scalar(1.0) * _tmp142) -
                 std::cosh(_tmp123 *
                           (-_tmp142 * _tmp143 -
                            std::sqrt(Scalar(std::pow(Scalar(-_tmp66 + p_b(1, 0)), Scalar(2)) +
                                             std::pow(Scalar(-_tmp69 + p_b(0, 0)), Scalar(2))))))) +
      _tmp53;
  _res(2, 0) =
      _TransformationMatrix[6] -
      _tmp151 * (_tmp150 * p_c(2, 0) + std::cosh(Scalar(1.0) * _tmp149) -
                 std::cosh(_tmp150 *
                           (-_tmp149 * _tmp151 -
                            std::sqrt(Scalar(std::pow(Scalar(-_tmp56 + p_c(0, 0)), Scalar(2)) +
                                             std::pow(Scalar(-_tmp59 + p_c(1, 0)), Scalar(2))))))) +
      _tmp54;
  _res(3, 0) =
      _TransformationMatrix[6] -
      _tmp156 * (_tmp155 * p_d(2, 0) + std::cosh(Scalar(1.0) * _tmp154) -
                 std::cosh(_tmp155 *
                           (-_tmp154 * _tmp156 -
                            std::sqrt(Scalar(std::pow(Scalar(-_tmp45 + p_d(1, 0)), Scalar(2)) +
                                             std::pow(Scalar(-_tmp49 + p_d(0, 0)), Scalar(2))))))) +
      _tmp42;

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
