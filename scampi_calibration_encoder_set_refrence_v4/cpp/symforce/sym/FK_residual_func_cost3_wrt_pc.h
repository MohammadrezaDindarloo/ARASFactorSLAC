// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

#include <sym/pose3.h>
#include <sym/rot3.h>

namespace sym {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: FK_residual_func_cost3_wrt_pc
 *
 * Args:
 *     fh1: Scalar
 *     fv1: Scalar
 *     p_a: Matrix31
 *     p_b: Matrix31
 *     p_c: Matrix31
 *     p_d: Matrix31
 *     DeltaRot: Rot3
 *     TransformationMatrix: Pose3
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix43
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 4, 3> FkResidualFuncCost3WrtPc(
    const Scalar fh1, const Scalar fv1, const Eigen::Matrix<Scalar, 3, 1>& p_a,
    const Eigen::Matrix<Scalar, 3, 1>& p_b, const Eigen::Matrix<Scalar, 3, 1>& p_c,
    const Eigen::Matrix<Scalar, 3, 1>& p_d, const sym::Rot3<Scalar>& DeltaRot,
    const sym::Pose3<Scalar>& TransformationMatrix, const Scalar epsilon) {
  // Total ops: 660

  // Unused inputs
  (void)epsilon;

  // Input arrays
  const Eigen::Matrix<Scalar, 4, 1>& _DeltaRot = DeltaRot.Data();
  const Eigen::Matrix<Scalar, 7, 1>& _TransformationMatrix = TransformationMatrix.Data();

  // Intermediate terms (219)
  const Scalar _tmp0 =
      _DeltaRot[0] * _TransformationMatrix[2] + _DeltaRot[1] * _TransformationMatrix[3] -
      _DeltaRot[2] * _TransformationMatrix[0] + _DeltaRot[3] * _TransformationMatrix[1];
  const Scalar _tmp1 =
      _DeltaRot[0] * _TransformationMatrix[3] - _DeltaRot[1] * _TransformationMatrix[2] +
      _DeltaRot[2] * _TransformationMatrix[1] + _DeltaRot[3] * _TransformationMatrix[0];
  const Scalar _tmp2 = 2 * _tmp1;
  const Scalar _tmp3 = _tmp0 * _tmp2;
  const Scalar _tmp4 =
      -_DeltaRot[0] * _TransformationMatrix[1] + _DeltaRot[1] * _TransformationMatrix[0] +
      _DeltaRot[2] * _TransformationMatrix[3] + _DeltaRot[3] * _TransformationMatrix[2];
  const Scalar _tmp5 =
      -_DeltaRot[0] * _TransformationMatrix[0] - _DeltaRot[1] * _TransformationMatrix[1] -
      _DeltaRot[2] * _TransformationMatrix[2] + _DeltaRot[3] * _TransformationMatrix[3];
  const Scalar _tmp6 = 2 * _tmp4 * _tmp5;
  const Scalar _tmp7 = Scalar(0.20999999999999999) * _tmp3 - Scalar(0.20999999999999999) * _tmp6;
  const Scalar _tmp8 = _tmp2 * _tmp4;
  const Scalar _tmp9 = 2 * _tmp0;
  const Scalar _tmp10 = _tmp5 * _tmp9;
  const Scalar _tmp11 =
      -Scalar(0.010999999999999999) * _tmp10 - Scalar(0.010999999999999999) * _tmp8;
  const Scalar _tmp12 = -2 * std::pow(_tmp0, Scalar(2));
  const Scalar _tmp13 = 1 - 2 * std::pow(_tmp4, Scalar(2));
  const Scalar _tmp14 = Scalar(0.20999999999999999) * _tmp12 + Scalar(0.20999999999999999) * _tmp13;
  const Scalar _tmp15 = _tmp11 + _tmp14;
  const Scalar _tmp16 = _tmp15 + _tmp7;
  const Scalar _tmp17 = _TransformationMatrix[4] + _tmp16 - p_c(0, 0);
  const Scalar _tmp18 = std::pow(_tmp17, Scalar(2));
  const Scalar _tmp19 = -2 * std::pow(_tmp1, Scalar(2));
  const Scalar _tmp20 = Scalar(0.20999999999999999) * _tmp13 + Scalar(0.20999999999999999) * _tmp19;
  const Scalar _tmp21 = Scalar(0.20999999999999999) * _tmp3 + Scalar(0.20999999999999999) * _tmp6;
  const Scalar _tmp22 = _tmp4 * _tmp9;
  const Scalar _tmp23 = _tmp2 * _tmp5;
  const Scalar _tmp24 =
      -Scalar(0.010999999999999999) * _tmp22 + Scalar(0.010999999999999999) * _tmp23;
  const Scalar _tmp25 = _tmp21 + _tmp24;
  const Scalar _tmp26 = _tmp20 + _tmp25;
  const Scalar _tmp27 = _TransformationMatrix[5] + _tmp26 - p_c(1, 0);
  const Scalar _tmp28 = std::pow(_tmp27, Scalar(2));
  const Scalar _tmp29 = _tmp18 + _tmp28;
  const Scalar _tmp30 = std::pow(_tmp29, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp31 = _tmp17 * _tmp30;
  const Scalar _tmp32 = -_tmp21 + _tmp24;
  const Scalar _tmp33 = _tmp20 + _tmp32;
  const Scalar _tmp34 = _TransformationMatrix[5] + _tmp33 - p_d(1, 0);
  const Scalar _tmp35 = _tmp11 - _tmp14;
  const Scalar _tmp36 = _tmp35 + _tmp7;
  const Scalar _tmp37 = _TransformationMatrix[4] + _tmp36 - p_d(0, 0);
  const Scalar _tmp38 = std::pow(Scalar(std::pow(_tmp34, Scalar(2)) + std::pow(_tmp37, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp39 = _tmp34 * _tmp38;
  const Scalar _tmp40 = -_tmp20;
  const Scalar _tmp41 = _tmp25 + _tmp40;
  const Scalar _tmp42 = _TransformationMatrix[5] + _tmp41 - p_b(1, 0);
  const Scalar _tmp43 = -_tmp7;
  const Scalar _tmp44 = _tmp15 + _tmp43;
  const Scalar _tmp45 = _TransformationMatrix[4] + _tmp44 - p_b(0, 0);
  const Scalar _tmp46 = Scalar(1.0) / (_tmp45);
  const Scalar _tmp47 = _tmp42 * _tmp46;
  const Scalar _tmp48 = _tmp37 * _tmp38;
  const Scalar _tmp49 = -_tmp39 + _tmp47 * _tmp48;
  const Scalar _tmp50 = _tmp30 * _tmp47;
  const Scalar _tmp51 = _tmp27 * _tmp30;
  const Scalar _tmp52 = _tmp17 * _tmp50 - _tmp51;
  const Scalar _tmp53 = Scalar(1.0) / (_tmp52);
  const Scalar _tmp54 = _tmp49 * _tmp53;
  const Scalar _tmp55 = -Scalar(0.20999999999999999) * _tmp10 + Scalar(0.20999999999999999) * _tmp8;
  const Scalar _tmp56 = -Scalar(0.010999999999999999) * _tmp12 -
                        Scalar(0.010999999999999999) * _tmp19 + Scalar(-0.010999999999999999);
  const Scalar _tmp57 = Scalar(0.20999999999999999) * _tmp22 + Scalar(0.20999999999999999) * _tmp23;
  const Scalar _tmp58 = _tmp56 + _tmp57;
  const Scalar _tmp59 = -_tmp55 + _tmp58;
  const Scalar _tmp60 = _tmp55 + _tmp56 - _tmp57;
  const Scalar _tmp61 = _tmp48 * _tmp60;
  const Scalar _tmp62 = _tmp55 + _tmp58;
  const Scalar _tmp63 = _tmp30 * _tmp62;
  const Scalar _tmp64 = _tmp30 * _tmp60;
  const Scalar _tmp65 = _tmp17 * _tmp64;
  const Scalar _tmp66 = -_tmp17 * _tmp63 + _tmp65;
  const Scalar _tmp67 = -_tmp47 * _tmp65 + _tmp51 * _tmp62;
  const Scalar _tmp68 = Scalar(1.0) * _tmp41;
  const Scalar _tmp69 = Scalar(1.0) * _tmp44;
  const Scalar _tmp70 = (-_tmp16 + _tmp69) / (_tmp26 - _tmp68);
  const Scalar _tmp71 = -_tmp48 * _tmp59 - _tmp54 * _tmp66 + _tmp61 -
                        _tmp70 * (_tmp39 * _tmp59 - _tmp47 * _tmp61 - _tmp54 * _tmp67);
  const Scalar _tmp72 = Scalar(1.0) / (_tmp71);
  const Scalar _tmp73 = _tmp68 * _tmp70 + _tmp69;
  const Scalar _tmp74 = 0;
  const Scalar _tmp75 = _tmp72 * _tmp74;
  const Scalar _tmp76 = _tmp54 * _tmp75;
  const Scalar _tmp77 = Scalar(43.164000000000001) - fv1;
  const Scalar _tmp78 =
      std::sqrt(Scalar(std::pow(_tmp42, Scalar(2)) + std::pow(_tmp45, Scalar(2))));
  const Scalar _tmp79 = _tmp46 * _tmp78;
  const Scalar _tmp80 = _tmp77 * _tmp79;
  const Scalar _tmp81 = _tmp16 * _tmp30;
  const Scalar _tmp82 = _tmp26 * _tmp30;
  const Scalar _tmp83 = Scalar(1.0) / (_tmp78);
  const Scalar _tmp84 = _tmp79 * (-_tmp41 * _tmp45 * _tmp83 + _tmp42 * _tmp44 * _tmp83);
  const Scalar _tmp85 = _tmp30 * _tmp84;
  const Scalar _tmp86 = _tmp17 * _tmp82 + _tmp17 * _tmp85 - _tmp27 * _tmp81;
  const Scalar _tmp87 = _tmp33 * _tmp48 - _tmp36 * _tmp39 + _tmp48 * _tmp84 - _tmp54 * _tmp86;
  const Scalar _tmp88 = Scalar(1.0) / (_tmp87);
  const Scalar _tmp89 = Scalar(1.0) * _tmp53;
  const Scalar _tmp90 = _tmp70 * _tmp89;
  const Scalar _tmp91 = -_tmp66 * _tmp89 + _tmp67 * _tmp90;
  const Scalar _tmp92 = _tmp72 * _tmp87;
  const Scalar _tmp93 = -_tmp86 * _tmp89 - _tmp91 * _tmp92;
  const Scalar _tmp94 = _tmp88 * _tmp93;
  const Scalar _tmp95 = _tmp71 * _tmp94 + _tmp91;
  const Scalar _tmp96 = _tmp49 * _tmp72;
  const Scalar _tmp97 = -_tmp95 * _tmp96 + Scalar(1.0);
  const Scalar _tmp98 = _tmp30 * _tmp53;
  const Scalar _tmp99 = _tmp97 * _tmp98;
  const Scalar _tmp100 = _tmp48 * _tmp72;
  const Scalar _tmp101 = _tmp35 + _tmp43;
  const Scalar _tmp102 = _TransformationMatrix[4] + _tmp101 - p_a(0, 0);
  const Scalar _tmp103 = _tmp32 + _tmp40;
  const Scalar _tmp104 = _TransformationMatrix[5] + _tmp103 - p_a(1, 0);
  const Scalar _tmp105 =
      std::pow(Scalar(std::pow(_tmp102, Scalar(2)) + std::pow(_tmp104, Scalar(2))),
               Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp106 = _tmp104 * _tmp105;
  const Scalar _tmp107 = _tmp106 * fh1;
  const Scalar _tmp108 = _tmp107 * _tmp79;
  const Scalar _tmp109 = _tmp47 * _tmp53;
  const Scalar _tmp110 = _tmp47 * _tmp60;
  const Scalar _tmp111 = _tmp109 * _tmp66 - _tmp60 - _tmp70 * (_tmp109 * _tmp67 + _tmp110);
  const Scalar _tmp112 = _tmp109 * _tmp86 - _tmp111 * _tmp92 - _tmp84;
  const Scalar _tmp113 = _tmp112 * _tmp88;
  const Scalar _tmp114 = _tmp111 + _tmp113 * _tmp71;
  const Scalar _tmp115 = -_tmp114 * _tmp96 - _tmp47;
  const Scalar _tmp116 = _tmp115 * _tmp98;
  const Scalar _tmp117 = _tmp102 * _tmp105;
  const Scalar _tmp118 = _tmp117 * fh1;
  const Scalar _tmp119 = _tmp118 * _tmp79;
  const Scalar _tmp120 = Scalar(1.0) * _tmp88;
  const Scalar _tmp121 = _tmp120 * _tmp54;
  const Scalar _tmp122 = fh1 * (_tmp101 * _tmp106 - _tmp103 * _tmp117);
  const Scalar _tmp123 = _tmp122 * _tmp79;
  const Scalar _tmp124 = std::exp(_tmp108 * (_tmp100 * _tmp95 + _tmp17 * _tmp99) +
                                  _tmp119 * (_tmp100 * _tmp114 + _tmp116 * _tmp17 + Scalar(1.0)) +
                                  _tmp123 * (_tmp120 * _tmp48 - _tmp121 * _tmp31) +
                                  _tmp80 * (-_tmp31 * _tmp76 + _tmp48 * _tmp75));
  const Scalar _tmp125 = std::pow(_tmp52, Scalar(-2));
  const Scalar _tmp126 = std::pow(_tmp29, Scalar(Scalar(-3) / Scalar(2)));
  const Scalar _tmp127 = _tmp126 * _tmp17 * _tmp27;
  const Scalar _tmp128 = _tmp126 * _tmp18;
  const Scalar _tmp129 = -_tmp127 + _tmp128 * _tmp47 - _tmp50;
  const Scalar _tmp130 = _tmp125 * _tmp129;
  const Scalar _tmp131 = _tmp130 * _tmp31;
  const Scalar _tmp132 = _tmp74 * _tmp96;
  const Scalar _tmp133 = std::pow(_tmp71, Scalar(-2));
  const Scalar _tmp134 = _tmp133 * _tmp74;
  const Scalar _tmp135 = _tmp125 * _tmp49;
  const Scalar _tmp136 = _tmp135 * _tmp67;
  const Scalar _tmp137 = _tmp128 * _tmp60;
  const Scalar _tmp138 = _tmp127 * _tmp62;
  const Scalar _tmp139 = -_tmp137 * _tmp47 + _tmp138 + _tmp47 * _tmp64;
  const Scalar _tmp140 = -_tmp128 * _tmp62 + _tmp137 + _tmp63 - _tmp64;
  const Scalar _tmp141 = _tmp129 * _tmp66;
  const Scalar _tmp142 =
      _tmp135 * _tmp141 - _tmp140 * _tmp54 - _tmp70 * (_tmp129 * _tmp136 - _tmp139 * _tmp54);
  const Scalar _tmp143 = _tmp142 * _tmp48;
  const Scalar _tmp144 = _tmp30 * _tmp54;
  const Scalar _tmp145 = _tmp31 * _tmp54;
  const Scalar _tmp146 = _tmp134 * _tmp145;
  const Scalar _tmp147 = -_tmp127 * _tmp16 + _tmp128 * _tmp26 + _tmp128 * _tmp84 - _tmp82 - _tmp85;
  const Scalar _tmp148 = _tmp129 * _tmp86;
  const Scalar _tmp149 = _tmp135 * _tmp148 - _tmp147 * _tmp54;
  const Scalar _tmp150 = std::pow(_tmp87, Scalar(-2));
  const Scalar _tmp151 = Scalar(1.0) * _tmp150;
  const Scalar _tmp152 = _tmp149 * _tmp151;
  const Scalar _tmp153 = _tmp120 * _tmp31;
  const Scalar _tmp154 = _tmp129 * _tmp135;
  const Scalar _tmp155 = _tmp128 * _tmp53;
  const Scalar _tmp156 = _tmp114 * _tmp133;
  const Scalar _tmp157 = _tmp133 * _tmp49;
  const Scalar _tmp158 = _tmp142 * _tmp157;
  const Scalar _tmp159 = _tmp125 * _tmp47;
  const Scalar _tmp160 = _tmp47 * _tmp67;
  const Scalar _tmp161 =
      _tmp109 * _tmp140 - _tmp141 * _tmp159 - _tmp70 * (_tmp109 * _tmp139 - _tmp130 * _tmp160);
  const Scalar _tmp162 = _tmp111 * _tmp72;
  const Scalar _tmp163 = _tmp133 * _tmp87;
  const Scalar _tmp164 = _tmp111 * _tmp163;
  const Scalar _tmp165 = _tmp71 * _tmp88;
  const Scalar _tmp166 = _tmp150 * _tmp71;
  const Scalar _tmp167 = _tmp112 * _tmp166;
  const Scalar _tmp168 = _tmp113 * _tmp142 - _tmp149 * _tmp167 + _tmp161 +
                         _tmp165 * (_tmp109 * _tmp147 + _tmp142 * _tmp164 - _tmp148 * _tmp159 -
                                    _tmp149 * _tmp162 - _tmp161 * _tmp92);
  const Scalar _tmp169 = _tmp114 * _tmp158 - _tmp168 * _tmp96;
  const Scalar _tmp170 = _tmp17 * _tmp98;
  const Scalar _tmp171 = _tmp133 * _tmp95;
  const Scalar _tmp172 = _tmp166 * _tmp93;
  const Scalar _tmp173 = _tmp72 * _tmp91;
  const Scalar _tmp174 = Scalar(1.0) * _tmp125;
  const Scalar _tmp175 = _tmp174 * _tmp67 * _tmp70;
  const Scalar _tmp176 =
      -_tmp129 * _tmp175 + _tmp139 * _tmp90 - _tmp140 * _tmp89 + _tmp141 * _tmp174;
  const Scalar _tmp177 = _tmp163 * _tmp91;
  const Scalar _tmp178 = _tmp142 * _tmp94 - _tmp149 * _tmp172 +
                         _tmp165 * (_tmp142 * _tmp177 - _tmp147 * _tmp89 + _tmp148 * _tmp174 -
                                    _tmp149 * _tmp173 - _tmp176 * _tmp92) +
                         _tmp176;
  const Scalar _tmp179 = _tmp158 * _tmp95 - _tmp178 * _tmp96;
  const Scalar _tmp180 = _tmp75 * _tmp77;
  const Scalar _tmp181 = _tmp120 * _tmp122;
  const Scalar _tmp182 = _tmp115 * _tmp53;
  const Scalar _tmp183 = _tmp107 * _tmp53;
  const Scalar _tmp184 =
      std::exp(-_tmp118 * _tmp182 + _tmp180 * _tmp54 + _tmp181 * _tmp54 - _tmp183 * _tmp97);
  const Scalar _tmp185 = _tmp122 * _tmp152;
  const Scalar _tmp186 = _tmp132 * _tmp77;
  const Scalar _tmp187 = _tmp118 * _tmp53;
  const Scalar _tmp188 = _tmp134 * _tmp77;
  const Scalar _tmp189 = _tmp142 * _tmp188;
  const Scalar _tmp190 = _tmp107 * _tmp72;
  const Scalar _tmp191 = _tmp118 * _tmp72;
  const Scalar _tmp192 = std::exp(-_tmp114 * _tmp191 - _tmp180 - _tmp181 - _tmp190 * _tmp95);
  const Scalar _tmp193 = _tmp107 * _tmp171;
  const Scalar _tmp194 = _tmp118 * _tmp156;
  const Scalar _tmp195 = _tmp126 * _tmp28;
  const Scalar _tmp196 = -_tmp110 * _tmp127 + _tmp195 * _tmp62 - _tmp63;
  const Scalar _tmp197 = _tmp127 * _tmp47 - _tmp195 + _tmp30;
  const Scalar _tmp198 = _tmp197 * _tmp66;
  const Scalar _tmp199 = _tmp127 * _tmp60 - _tmp138;
  const Scalar _tmp200 =
      _tmp135 * _tmp198 - _tmp199 * _tmp54 - _tmp70 * (_tmp136 * _tmp197 - _tmp196 * _tmp54);
  const Scalar _tmp201 = _tmp200 * _tmp48;
  const Scalar _tmp202 = _tmp125 * _tmp197;
  const Scalar _tmp203 = _tmp127 * _tmp26 + _tmp127 * _tmp84 - _tmp16 * _tmp195 + _tmp81;
  const Scalar _tmp204 = _tmp197 * _tmp86;
  const Scalar _tmp205 = _tmp135 * _tmp204 - _tmp203 * _tmp54;
  const Scalar _tmp206 =
      _tmp174 * _tmp198 - _tmp175 * _tmp197 + _tmp196 * _tmp90 - _tmp199 * _tmp89;
  const Scalar _tmp207 = _tmp165 * (-_tmp173 * _tmp205 + _tmp174 * _tmp204 + _tmp177 * _tmp200 -
                                    _tmp203 * _tmp89 - _tmp206 * _tmp92) -
                         _tmp172 * _tmp205 + _tmp200 * _tmp94 + _tmp206;
  const Scalar _tmp208 = _tmp157 * _tmp200;
  const Scalar _tmp209 = -_tmp207 * _tmp96 + _tmp208 * _tmp95;
  const Scalar _tmp210 = _tmp202 * _tmp97;
  const Scalar _tmp211 = _tmp115 * _tmp202;
  const Scalar _tmp212 =
      _tmp109 * _tmp199 - _tmp159 * _tmp198 - _tmp70 * (_tmp109 * _tmp196 - _tmp160 * _tmp202);
  const Scalar _tmp213 = _tmp113 * _tmp200 +
                         _tmp165 * (_tmp109 * _tmp203 - _tmp159 * _tmp204 - _tmp162 * _tmp205 +
                                    _tmp164 * _tmp200 - _tmp212 * _tmp92) -
                         _tmp167 * _tmp205 + _tmp212;
  const Scalar _tmp214 = _tmp114 * _tmp208 - _tmp213 * _tmp96;
  const Scalar _tmp215 = _tmp135 * _tmp197;
  const Scalar _tmp216 = _tmp151 * _tmp205;
  const Scalar _tmp217 = _tmp122 * _tmp216;
  const Scalar _tmp218 = _tmp188 * _tmp200;

  // Output terms (1)
  Eigen::Matrix<Scalar, 4, 3> _res;

  _res(0, 0) = 0;
  _res(1, 0) = -_tmp124 * (-_tmp108 * (_tmp100 * _tmp178 - _tmp131 * _tmp97 - _tmp143 * _tmp171 +
                                       _tmp155 * _tmp97 + _tmp170 * _tmp179 - _tmp99) -
                           _tmp119 * (_tmp100 * _tmp168 - _tmp115 * _tmp131 + _tmp115 * _tmp155 -
                                      _tmp116 - _tmp143 * _tmp156 + _tmp169 * _tmp170) -
                           _tmp123 * (_tmp120 * _tmp144 - _tmp121 * _tmp128 + _tmp145 * _tmp152 -
                                      _tmp152 * _tmp48 + _tmp153 * _tmp154) -
                           _tmp80 * (-_tmp128 * _tmp76 + _tmp131 * _tmp132 - _tmp134 * _tmp143 +
                                     _tmp142 * _tmp146 + _tmp144 * _tmp75));
  _res(2, 0) = -_tmp184 * (-_tmp107 * _tmp130 * _tmp97 - _tmp115 * _tmp118 * _tmp130 +
                           _tmp130 * _tmp186 + _tmp154 * _tmp181 + _tmp169 * _tmp187 +
                           _tmp179 * _tmp183 + _tmp185 * _tmp54 + _tmp189 * _tmp54);
  _res(3, 0) = -_tmp192 * (-_tmp142 * _tmp193 - _tmp142 * _tmp194 + _tmp168 * _tmp191 +
                           _tmp178 * _tmp190 - _tmp185 - _tmp189);
  _res(0, 1) = 0;
  _res(1, 1) =
      -_tmp124 *
      (-_tmp108 * (_tmp100 * _tmp207 + _tmp127 * _tmp53 * _tmp97 + _tmp170 * _tmp209 -
                   _tmp171 * _tmp201 - _tmp210 * _tmp31) -
       _tmp119 * (_tmp100 * _tmp213 + _tmp127 * _tmp182 - _tmp156 * _tmp201 + _tmp170 * _tmp214 -
                  _tmp211 * _tmp31) -
       _tmp123 * (-_tmp121 * _tmp127 + _tmp145 * _tmp216 + _tmp153 * _tmp215 - _tmp216 * _tmp48) -
       _tmp80 * (-_tmp127 * _tmp76 + _tmp132 * _tmp202 * _tmp31 - _tmp134 * _tmp201 +
                 _tmp146 * _tmp200));
  _res(2, 1) =
      -_tmp184 * (-_tmp107 * _tmp210 - _tmp118 * _tmp211 + _tmp181 * _tmp215 + _tmp183 * _tmp209 +
                  _tmp186 * _tmp202 + _tmp187 * _tmp214 + _tmp217 * _tmp54 + _tmp218 * _tmp54);
  _res(3, 1) = -_tmp192 * (_tmp190 * _tmp207 + _tmp191 * _tmp213 - _tmp193 * _tmp200 -
                           _tmp194 * _tmp200 - _tmp217 - _tmp218);
  _res(0, 2) = 0;
  _res(1, 2) = 0;
  _res(2, 2) = 0;
  _res(3, 2) = 0;

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
