// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

#include <sym/pose3.h>
#include <sym/rot3.h>

namespace sym {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: FK_residual_func_cost2_wrt_fv1
 *
 * Args:
 *     fh1: Scalar
 *     fv1: Scalar
 *     ofset0: Scalar
 *     ofset1: Scalar
 *     ofset2: Scalar
 *     ofset3: Scalar
 *     distance_measure: Matrix41
 *     p_a: Matrix31
 *     p_b: Matrix31
 *     p_c: Matrix31
 *     p_d: Matrix31
 *     DeltaRot: Rot3
 *     TransformationMatrix: Pose3
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix41
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 4, 1> FkResidualFuncCost2WrtFv1(
    const Scalar fh1, const Scalar fv1, const Scalar ofset0, const Scalar ofset1,
    const Scalar ofset2, const Scalar ofset3, const Eigen::Matrix<Scalar, 4, 1>& distance_measure,
    const Eigen::Matrix<Scalar, 3, 1>& p_a, const Eigen::Matrix<Scalar, 3, 1>& p_b,
    const Eigen::Matrix<Scalar, 3, 1>& p_c, const Eigen::Matrix<Scalar, 3, 1>& p_d,
    const sym::Rot3<Scalar>& DeltaRot, const sym::Pose3<Scalar>& TransformationMatrix,
    const Scalar epsilon) {
  // Total ops: 576

  // Unused inputs
  (void)ofset0;
  (void)ofset1;
  (void)ofset2;
  (void)ofset3;
  (void)distance_measure;
  (void)epsilon;

  // Input arrays
  const Eigen::Matrix<Scalar, 4, 1>& _DeltaRot = DeltaRot.Data();
  const Eigen::Matrix<Scalar, 7, 1>& _TransformationMatrix = TransformationMatrix.Data();

  // Intermediate terms (190)
  const Scalar _tmp0 = Scalar(1.0) / (fh1);
  const Scalar _tmp1 = std::asinh(_tmp0 * fv1);
  const Scalar _tmp2 = Scalar(1.0) * _tmp0 /
                       std::sqrt(Scalar(1 + std::pow(fv1, Scalar(2)) / std::pow(fh1, Scalar(2))));
  const Scalar _tmp3 =
      _DeltaRot[0] * _TransformationMatrix[2] + _DeltaRot[1] * _TransformationMatrix[3] -
      _DeltaRot[2] * _TransformationMatrix[0] + _DeltaRot[3] * _TransformationMatrix[1];
  const Scalar _tmp4 =
      _DeltaRot[0] * _TransformationMatrix[3] - _DeltaRot[1] * _TransformationMatrix[2] +
      _DeltaRot[2] * _TransformationMatrix[1] + _DeltaRot[3] * _TransformationMatrix[0];
  const Scalar _tmp5 = 2 * _tmp4;
  const Scalar _tmp6 = _tmp3 * _tmp5;
  const Scalar _tmp7 =
      -_DeltaRot[0] * _TransformationMatrix[0] - _DeltaRot[1] * _TransformationMatrix[1] -
      _DeltaRot[2] * _TransformationMatrix[2] + _DeltaRot[3] * _TransformationMatrix[3];
  const Scalar _tmp8 =
      -_DeltaRot[0] * _TransformationMatrix[1] + _DeltaRot[1] * _TransformationMatrix[0] +
      _DeltaRot[2] * _TransformationMatrix[3] + _DeltaRot[3] * _TransformationMatrix[2];
  const Scalar _tmp9 = 2 * _tmp8;
  const Scalar _tmp10 = _tmp7 * _tmp9;
  const Scalar _tmp11 = Scalar(0.20999999999999999) * _tmp10 + Scalar(0.20999999999999999) * _tmp6;
  const Scalar _tmp12 = -_tmp11;
  const Scalar _tmp13 = -2 * std::pow(_tmp4, Scalar(2));
  const Scalar _tmp14 = 1 - 2 * std::pow(_tmp8, Scalar(2));
  const Scalar _tmp15 = Scalar(0.20999999999999999) * _tmp13 + Scalar(0.20999999999999999) * _tmp14;
  const Scalar _tmp16 = _tmp3 * _tmp9;
  const Scalar _tmp17 = _tmp5 * _tmp7;
  const Scalar _tmp18 = _tmp16 - _tmp17;
  const Scalar _tmp19 = Scalar(0.010999999999999999) * _tmp18;
  const Scalar _tmp20 = -_tmp19;
  const Scalar _tmp21 = -_tmp15 + _tmp20;
  const Scalar _tmp22 = _tmp12 + _tmp21;
  const Scalar _tmp23 = _TransformationMatrix[5] + _tmp22;
  const Scalar _tmp24 = -2 * std::pow(_tmp3, Scalar(2));
  const Scalar _tmp25 = Scalar(0.20999999999999999) * _tmp14 + Scalar(0.20999999999999999) * _tmp24;
  const Scalar _tmp26 = -_tmp25;
  const Scalar _tmp27 = _tmp5 * _tmp8;
  const Scalar _tmp28 = 2 * _tmp3 * _tmp7;
  const Scalar _tmp29 = _tmp27 + _tmp28;
  const Scalar _tmp30 = -Scalar(0.010999999999999999) * _tmp29;
  const Scalar _tmp31 = -Scalar(0.20999999999999999) * _tmp10 + Scalar(0.20999999999999999) * _tmp6;
  const Scalar _tmp32 = _tmp30 - _tmp31;
  const Scalar _tmp33 = _tmp26 + _tmp32;
  const Scalar _tmp34 = _TransformationMatrix[4] + _tmp33;
  const Scalar _tmp35 = Scalar(9.6622558468725703) * fh1;
  const Scalar _tmp36 = _tmp25 + _tmp32;
  const Scalar _tmp37 = _TransformationMatrix[4] + _tmp36;
  const Scalar _tmp38 = _tmp11 + _tmp21;
  const Scalar _tmp39 = _TransformationMatrix[5] + _tmp38;
  const Scalar _tmp40 = Scalar(43.164000000000001) - fv1;
  const Scalar _tmp41 = _tmp39 - p_b(1, 0);
  const Scalar _tmp42 = _tmp37 - p_b(0, 0);
  const Scalar _tmp43 = Scalar(1.0) / (_tmp42);
  const Scalar _tmp44 = _tmp41 * _tmp43;
  const Scalar _tmp45 = _tmp30 + _tmp31;
  const Scalar _tmp46 = _tmp25 + _tmp45;
  const Scalar _tmp47 = _TransformationMatrix[4] + _tmp46;
  const Scalar _tmp48 = _tmp47 - p_c(0, 0);
  const Scalar _tmp49 = _tmp11 + _tmp15;
  const Scalar _tmp50 = _tmp20 + _tmp49;
  const Scalar _tmp51 = _TransformationMatrix[5] + _tmp50;
  const Scalar _tmp52 = _tmp51 - p_c(1, 0);
  const Scalar _tmp53 = std::pow(Scalar(std::pow(_tmp48, Scalar(2)) + std::pow(_tmp52, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp54 = _tmp48 * _tmp53;
  const Scalar _tmp55 = _tmp52 * _tmp53;
  const Scalar _tmp56 = Scalar(1.0) / (_tmp44 * _tmp54 - _tmp55);
  const Scalar _tmp57 = _tmp54 * _tmp56;
  const Scalar _tmp58 = Scalar(1.0) * _tmp36;
  const Scalar _tmp59 = Scalar(1.0) * _tmp38;
  const Scalar _tmp60 = -_tmp59;
  const Scalar _tmp61 = Scalar(1.0) / (_tmp50 + _tmp60);
  const Scalar _tmp62 = _tmp61 * (-_tmp46 + _tmp58);
  const Scalar _tmp63 = _tmp58 + _tmp59 * _tmp62;
  const Scalar _tmp64 = 0;
  const Scalar _tmp65 = Scalar(0.20999999999999999) * _tmp27 - Scalar(0.20999999999999999) * _tmp28;
  const Scalar _tmp66 = -_tmp65;
  const Scalar _tmp67 = -Scalar(0.010999999999999999) * _tmp13 -
                        Scalar(0.010999999999999999) * _tmp24 + Scalar(-0.010999999999999999);
  const Scalar _tmp68 = Scalar(0.20999999999999999) * _tmp16 + Scalar(0.20999999999999999) * _tmp17;
  const Scalar _tmp69 = _tmp67 + _tmp68;
  const Scalar _tmp70 = _tmp66 + _tmp69;
  const Scalar _tmp71 = _tmp12 + _tmp15 + _tmp20;
  const Scalar _tmp72 = _TransformationMatrix[5] + _tmp71;
  const Scalar _tmp73 = _tmp72 - p_d(1, 0);
  const Scalar _tmp74 = _tmp26 + _tmp45;
  const Scalar _tmp75 = _TransformationMatrix[4] + _tmp74;
  const Scalar _tmp76 = _tmp75 - p_d(0, 0);
  const Scalar _tmp77 = std::pow(Scalar(std::pow(_tmp73, Scalar(2)) + std::pow(_tmp76, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp78 = _tmp76 * _tmp77;
  const Scalar _tmp79 = _tmp67 - _tmp68;
  const Scalar _tmp80 = _tmp65 + _tmp79;
  const Scalar _tmp81 = _tmp73 * _tmp77;
  const Scalar _tmp82 = _tmp44 * _tmp78 - _tmp81;
  const Scalar _tmp83 = _tmp65 + _tmp69;
  const Scalar _tmp84 = _tmp56 * (_tmp54 * _tmp80 - _tmp54 * _tmp83);
  const Scalar _tmp85 = _tmp44 * _tmp80;
  const Scalar _tmp86 = _tmp56 * (-_tmp54 * _tmp85 + _tmp55 * _tmp83);
  const Scalar _tmp87 = _tmp70 * _tmp81 - _tmp78 * _tmp85 - _tmp82 * _tmp86;
  const Scalar _tmp88 = -_tmp62 * _tmp87 - _tmp70 * _tmp78 + _tmp78 * _tmp80 - _tmp82 * _tmp84;
  const Scalar _tmp89 = Scalar(1.0) / (_tmp88);
  const Scalar _tmp90 = _tmp82 * _tmp89;
  const Scalar _tmp91 = _tmp64 * _tmp90;
  const Scalar _tmp92 = _tmp64 * _tmp89;
  const Scalar _tmp93 =
      std::sqrt(Scalar(std::pow(_tmp41, Scalar(2)) + std::pow(_tmp42, Scalar(2))));
  const Scalar _tmp94 = _tmp43 * _tmp93;
  const Scalar _tmp95 = _tmp94 * (-_tmp57 * _tmp91 + _tmp78 * _tmp92);
  const Scalar _tmp96 = Scalar(1.0) * _tmp86;
  const Scalar _tmp97 = _tmp62 * _tmp96 - Scalar(1.0) * _tmp84;
  const Scalar _tmp98 = Scalar(1.0) / (_tmp93);
  const Scalar _tmp99 = _tmp94 * (_tmp36 * _tmp41 * _tmp98 - _tmp38 * _tmp42 * _tmp98);
  const Scalar _tmp100 = _tmp56 * (-_tmp46 * _tmp55 + _tmp50 * _tmp54 + _tmp54 * _tmp99);
  const Scalar _tmp101 = -_tmp100 * _tmp82 + _tmp71 * _tmp78 - _tmp74 * _tmp81 + _tmp78 * _tmp99;
  const Scalar _tmp102 = _tmp101 * _tmp89;
  const Scalar _tmp103 = Scalar(1.0) / (_tmp101);
  const Scalar _tmp104 = _tmp103 * _tmp88;
  const Scalar _tmp105 = _tmp104 * (-Scalar(1.0) * _tmp100 - _tmp102 * _tmp97);
  const Scalar _tmp106 = _tmp105 + _tmp97;
  const Scalar _tmp107 = -_tmp106 * _tmp90 + Scalar(1.0);
  const Scalar _tmp108 = _tmp78 * _tmp89;
  const Scalar _tmp109 = _tmp34 - p_a(0, 0);
  const Scalar _tmp110 = _tmp23 - p_a(1, 0);
  const Scalar _tmp111 =
      std::pow(Scalar(std::pow(_tmp109, Scalar(2)) + std::pow(_tmp110, Scalar(2))),
               Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp112 = _tmp110 * _tmp111;
  const Scalar _tmp113 = _tmp112 * fh1;
  const Scalar _tmp114 = _tmp44 * _tmp86 + _tmp85;
  const Scalar _tmp115 = -_tmp114 * _tmp62 + _tmp44 * _tmp84 - _tmp80;
  const Scalar _tmp116 = _tmp104 * (_tmp100 * _tmp44 - _tmp102 * _tmp115 - _tmp99);
  const Scalar _tmp117 = _tmp115 + _tmp116;
  const Scalar _tmp118 = -_tmp117 * _tmp90 - _tmp44;
  const Scalar _tmp119 = _tmp109 * _tmp111;
  const Scalar _tmp120 = _tmp119 * fh1;
  const Scalar _tmp121 = Scalar(1.0) * _tmp103;
  const Scalar _tmp122 = fh1 * (_tmp112 * _tmp33 - _tmp119 * _tmp22);
  const Scalar _tmp123 = -_tmp113 * _tmp94 * (_tmp106 * _tmp108 + _tmp107 * _tmp57) -
                         _tmp120 * _tmp94 * (_tmp108 * _tmp117 + _tmp118 * _tmp57 + Scalar(1.0)) -
                         _tmp122 * _tmp94 * (-_tmp121 * _tmp57 * _tmp82 + _tmp121 * _tmp78) -
                         _tmp40 * _tmp95;
  const Scalar _tmp124 = Scalar(1.0) / (_tmp123);
  const Scalar _tmp125 = _tmp60 + _tmp71;
  const Scalar _tmp126 = _tmp125 * _tmp62;
  const Scalar _tmp127 = Scalar(1.0) / (-_tmp126 + _tmp58 - _tmp74);
  const Scalar _tmp128 = Scalar(1.0) * _tmp127;
  const Scalar _tmp129 = _tmp104 * _tmp128;
  const Scalar _tmp130 = -_tmp121 * _tmp87 + _tmp125 * _tmp129;
  const Scalar _tmp131 = Scalar(1.0) * _tmp61;
  const Scalar _tmp132 = _tmp87 * _tmp89;
  const Scalar _tmp133 = _tmp125 * _tmp127;
  const Scalar _tmp134 = _tmp114 + _tmp116 * _tmp133 - _tmp117 * _tmp132;
  const Scalar _tmp135 = fh1 * (_tmp66 + _tmp79);
  const Scalar _tmp136 = -_tmp112 * _tmp135 - Scalar(5.1796800000000003) * _tmp18 - _tmp22 * fv1;
  const Scalar _tmp137 = _tmp128 * _tmp62;
  const Scalar _tmp138 = _tmp126 * _tmp128 + Scalar(1.0);
  const Scalar _tmp139 = -Scalar(1.0) * _tmp131 * _tmp138 + Scalar(1.0) * _tmp137;
  const Scalar _tmp140 = _tmp105 * _tmp133 - _tmp106 * _tmp132 - _tmp96;
  const Scalar _tmp141 = _tmp127 * _tmp63;
  const Scalar _tmp142 = _tmp61 * (-_tmp125 * _tmp141 - _tmp132 * _tmp64 + _tmp60);
  const Scalar _tmp143 = -Scalar(1.0) * _tmp141 - Scalar(1.0) * _tmp142 + Scalar(1.0);
  const Scalar _tmp144 = _tmp119 * _tmp135 + Scalar(5.1796800000000003) * _tmp29 + _tmp33 * fv1;
  const Scalar _tmp145 = _tmp125 * _tmp61;
  const Scalar _tmp146 = Scalar(1.0) * _tmp128 * _tmp145 - Scalar(1.0) * _tmp128;
  const Scalar _tmp147 = Scalar(1.0) * _tmp113 * (_tmp105 * _tmp128 - _tmp131 * _tmp140) +
                         Scalar(1.0) * _tmp120 * (_tmp116 * _tmp128 - _tmp131 * _tmp134) +
                         Scalar(1.0) * _tmp122 * (_tmp129 - _tmp130 * _tmp131) + _tmp136 * _tmp139 +
                         _tmp143 * _tmp40 + _tmp144 * _tmp146;
  const Scalar _tmp148 = std::asinh(_tmp124 * _tmp147);
  const Scalar _tmp149 = Scalar(9.6622558468725703) * _tmp123;
  const Scalar _tmp150 =
      -_tmp148 * _tmp149 - std::sqrt(Scalar(std::pow(Scalar(-_tmp37 + p_b(0, 0)), Scalar(2)) +
                                            std::pow(Scalar(-_tmp39 + p_b(1, 0)), Scalar(2))));
  const Scalar _tmp151 = Scalar(0.1034955) * _tmp124;
  const Scalar _tmp152 = _tmp150 * _tmp151;
  const Scalar _tmp153 = Scalar(1.0) * _tmp148;
  const Scalar _tmp154 = Scalar(9.6622558468725703) * _tmp95;
  const Scalar _tmp155 = std::pow(_tmp123, Scalar(-2));
  const Scalar _tmp156 = _tmp155 * _tmp95;
  const Scalar _tmp157 = _tmp19 + _tmp49;
  const Scalar _tmp158 =
      (_tmp124 * (_tmp139 * _tmp157 - _tmp143 + _tmp146 * _tmp33) - _tmp147 * _tmp156) /
      std::sqrt(Scalar(std::pow(_tmp147, Scalar(2)) * _tmp155 + 1));
  const Scalar _tmp159 = _tmp56 * _tmp91;
  const Scalar _tmp160 = _tmp121 * _tmp122;
  const Scalar _tmp161 = _tmp107 * _tmp113 * _tmp56 + _tmp118 * _tmp120 * _tmp56 -
                         _tmp159 * _tmp40 - _tmp160 * _tmp56 * _tmp82;
  const Scalar _tmp162 = Scalar(1.0) / (_tmp161);
  const Scalar _tmp163 = _tmp138 * _tmp61;
  const Scalar _tmp164 = _tmp128 * _tmp144;
  const Scalar _tmp165 = _tmp113 * _tmp140 * _tmp61 + _tmp120 * _tmp134 * _tmp61 +
                         _tmp122 * _tmp130 * _tmp61 + _tmp136 * _tmp163 + _tmp142 * _tmp40 -
                         _tmp145 * _tmp164;
  const Scalar _tmp166 = std::asinh(_tmp162 * _tmp165);
  const Scalar _tmp167 = Scalar(1.0) * _tmp166;
  const Scalar _tmp168 = Scalar(9.6622558468725703) * _tmp161;
  const Scalar _tmp169 =
      -_tmp166 * _tmp168 - std::sqrt(Scalar(std::pow(Scalar(-_tmp47 + p_c(0, 0)), Scalar(2)) +
                                            std::pow(Scalar(-_tmp51 + p_c(1, 0)), Scalar(2))));
  const Scalar _tmp170 = Scalar(0.1034955) * _tmp162;
  const Scalar _tmp171 = _tmp169 * _tmp170;
  const Scalar _tmp172 = Scalar(9.6622558468725703) * _tmp159;
  const Scalar _tmp173 = _tmp128 * _tmp33;
  const Scalar _tmp174 = std::pow(_tmp161, Scalar(-2));
  const Scalar _tmp175 = _tmp159 * _tmp174;
  const Scalar _tmp176 =
      (_tmp162 * (-_tmp142 - _tmp145 * _tmp173 + _tmp157 * _tmp163) - _tmp165 * _tmp175) /
      std::sqrt(Scalar(std::pow(_tmp165, Scalar(2)) * _tmp174 + 1));
  const Scalar _tmp177 =
      _tmp106 * _tmp113 * _tmp89 + _tmp117 * _tmp120 * _tmp89 + _tmp160 + _tmp40 * _tmp92;
  const Scalar _tmp178 = Scalar(1.0) / (_tmp177);
  const Scalar _tmp179 = -_tmp105 * _tmp113 * _tmp127 - _tmp116 * _tmp120 * _tmp127 -
                         _tmp122 * _tmp129 - _tmp136 * _tmp137 + _tmp141 * _tmp40 + _tmp164;
  const Scalar _tmp180 = std::asinh(_tmp178 * _tmp179);
  const Scalar _tmp181 = Scalar(9.6622558468725703) * _tmp177;
  const Scalar _tmp182 =
      -_tmp180 * _tmp181 - std::sqrt(Scalar(std::pow(Scalar(-_tmp72 + p_d(1, 0)), Scalar(2)) +
                                            std::pow(Scalar(-_tmp75 + p_d(0, 0)), Scalar(2))));
  const Scalar _tmp183 = Scalar(0.1034955) * _tmp178;
  const Scalar _tmp184 = _tmp182 * _tmp183;
  const Scalar _tmp185 = Scalar(1.0) * _tmp180;
  const Scalar _tmp186 = Scalar(9.6622558468725703) * _tmp92;
  const Scalar _tmp187 = std::pow(_tmp177, Scalar(-2));
  const Scalar _tmp188 = _tmp187 * _tmp92;
  const Scalar _tmp189 = (_tmp178 * (-_tmp137 * _tmp157 - _tmp141 + _tmp173) + _tmp179 * _tmp188) /
                         std::sqrt(Scalar(std::pow(_tmp179, Scalar(2)) * _tmp187 + 1));

  // Output terms (1)
  Eigen::Matrix<Scalar, 4, 1> _res;

  _res(0, 0) =
      _tmp35 *
      (-_tmp2 * std::cosh(Scalar(1.0) * _tmp1) +
       _tmp2 * std::cosh(Scalar(0.1034955) * _tmp0 *
                         (-_tmp1 * _tmp35 -
                          std::sqrt(Scalar(std::pow(Scalar(-_tmp23 + p_a(1, 0)), Scalar(2)) +
                                           std::pow(Scalar(-_tmp34 + p_a(0, 0)), Scalar(2)))))));
  _res(1, 0) = _tmp149 * (-Scalar(1.0) * _tmp158 * std::cosh(_tmp153) -
                          (-Scalar(0.1034955) * _tmp150 * _tmp156 +
                           _tmp151 * (-_tmp148 * _tmp154 - _tmp149 * _tmp158)) *
                              std::cosh(_tmp152)) +
               _tmp154 * (-std::sinh(_tmp152) - std::sinh(_tmp153));
  _res(2, 0) = _tmp168 * (-Scalar(1.0) * _tmp176 * std::cosh(_tmp167) -
                          (-Scalar(0.1034955) * _tmp169 * _tmp175 +
                           _tmp170 * (-_tmp166 * _tmp172 - _tmp168 * _tmp176)) *
                              std::cosh(_tmp171)) +
               _tmp172 * (-std::sinh(_tmp167) - std::sinh(_tmp171));
  _res(3, 0) = _tmp181 * (-Scalar(1.0) * _tmp189 * std::cosh(_tmp185) -
                          (Scalar(0.1034955) * _tmp182 * _tmp188 +
                           _tmp183 * (_tmp180 * _tmp186 - _tmp181 * _tmp189)) *
                              std::cosh(_tmp184)) -
               _tmp186 * (-std::sinh(_tmp184) - std::sinh(_tmp185));

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
