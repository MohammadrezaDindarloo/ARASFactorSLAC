// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

#include <sym/rot3.h>

namespace sym {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: IK_residual_func_cost2_Nl1
 *
 * Args:
 *     fh1: Scalar
 *     fv1: Scalar
 *     DeltaRot: Rot3
 *     p_a: Matrix31
 *     p_b: Matrix31
 *     p_c: Matrix31
 *     p_d: Matrix31
 *     p_init0: Scalar
 *     p_init1: Scalar
 *     p_init2: Scalar
 *     rot_init_x: Scalar
 *     rot_init_y: Scalar
 *     rot_init_z: Scalar
 *     rot_init_w: Scalar
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix41
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 4, 1> IkResidualFuncCost2Nl1(
    const Scalar fh1, const Scalar fv1, const sym::Rot3<Scalar>& DeltaRot,
    const Eigen::Matrix<Scalar, 3, 1>& p_a, const Eigen::Matrix<Scalar, 3, 1>& p_b,
    const Eigen::Matrix<Scalar, 3, 1>& p_c, const Eigen::Matrix<Scalar, 3, 1>& p_d,
    const Scalar p_init0, const Scalar p_init1, const Scalar p_init2, const Scalar rot_init_x,
    const Scalar rot_init_y, const Scalar rot_init_z, const Scalar rot_init_w,
    const Scalar epsilon) {
  // Total ops: 493

  // Unused inputs
  (void)epsilon;

  // Input arrays
  const Eigen::Matrix<Scalar, 4, 1>& _DeltaRot = DeltaRot.Data();

  // Intermediate terms (160)
  const Scalar _tmp0 = _DeltaRot[0] * rot_init_w - _DeltaRot[1] * rot_init_z +
                       _DeltaRot[2] * rot_init_y + _DeltaRot[3] * rot_init_x;
  const Scalar _tmp1 = -_DeltaRot[0] * rot_init_y + _DeltaRot[1] * rot_init_x +
                       _DeltaRot[2] * rot_init_w + _DeltaRot[3] * rot_init_z;
  const Scalar _tmp2 = 2 * _tmp1;
  const Scalar _tmp3 = _tmp0 * _tmp2;
  const Scalar _tmp4 = _DeltaRot[0] * rot_init_z + _DeltaRot[1] * rot_init_w -
                       _DeltaRot[2] * rot_init_x + _DeltaRot[3] * rot_init_y;
  const Scalar _tmp5 = -_DeltaRot[0] * rot_init_x - _DeltaRot[1] * rot_init_y -
                       _DeltaRot[2] * rot_init_z + _DeltaRot[3] * rot_init_w;
  const Scalar _tmp6 = 2 * _tmp5;
  const Scalar _tmp7 = _tmp4 * _tmp6;
  const Scalar _tmp8 = Scalar(0.20999999999999999) * _tmp3 - Scalar(0.20999999999999999) * _tmp7;
  const Scalar _tmp9 = -_tmp8;
  const Scalar _tmp10 = -2 * std::pow(_tmp0, Scalar(2));
  const Scalar _tmp11 = 1 - 2 * std::pow(_tmp4, Scalar(2));
  const Scalar _tmp12 =
      -Scalar(0.010999999999999999) * _tmp10 - Scalar(0.010999999999999999) * _tmp11;
  const Scalar _tmp13 = _tmp2 * _tmp4;
  const Scalar _tmp14 = _tmp0 * _tmp6;
  const Scalar _tmp15 = Scalar(0.20999999999999999) * _tmp13 + Scalar(0.20999999999999999) * _tmp14;
  const Scalar _tmp16 = _tmp12 - _tmp15;
  const Scalar _tmp17 = _tmp16 + _tmp9;
  const Scalar _tmp18 = 2 * _tmp0 * _tmp4;
  const Scalar _tmp19 = _tmp2 * _tmp5;
  const Scalar _tmp20 = Scalar(0.20999999999999999) * _tmp18 - Scalar(0.20999999999999999) * _tmp19;
  const Scalar _tmp21 = -_tmp20;
  const Scalar _tmp22 = _tmp3 + _tmp7;
  const Scalar _tmp23 = -Scalar(0.010999999999999999) * _tmp22;
  const Scalar _tmp24 = -2 * std::pow(_tmp1, Scalar(2));
  const Scalar _tmp25 = Scalar(0.20999999999999999) * _tmp11 + Scalar(0.20999999999999999) * _tmp24;
  const Scalar _tmp26 = _tmp23 - _tmp25;
  const Scalar _tmp27 = _tmp21 + _tmp26;
  const Scalar _tmp28 = _tmp27 + p_init0;
  const Scalar _tmp29 = Scalar(0.20999999999999999) * _tmp18 + Scalar(0.20999999999999999) * _tmp19;
  const Scalar _tmp30 = -_tmp29;
  const Scalar _tmp31 = Scalar(0.20999999999999999) * _tmp10 +
                        Scalar(0.20999999999999999) * _tmp24 + Scalar(0.20999999999999999);
  const Scalar _tmp32 = _tmp13 - _tmp14;
  const Scalar _tmp33 = -Scalar(0.010999999999999999) * _tmp32;
  const Scalar _tmp34 = -_tmp31 + _tmp33;
  const Scalar _tmp35 = _tmp30 + _tmp34;
  const Scalar _tmp36 = _tmp35 + p_init1;
  const Scalar _tmp37 = std::pow(Scalar(-_tmp28 + p_a(0, 0)), Scalar(2)) +
                        std::pow(Scalar(-_tmp36 + p_a(1, 0)), Scalar(2));
  const Scalar _tmp38 = Scalar(1.0) / (fh1);
  const Scalar _tmp39 = std::asinh(_tmp38 * fv1);
  const Scalar _tmp40 = Scalar(9.6622558468725703) * fh1;
  const Scalar _tmp41 = _tmp16 + _tmp8;
  const Scalar _tmp42 = _tmp23 + _tmp25;
  const Scalar _tmp43 = _tmp21 + _tmp42;
  const Scalar _tmp44 = _tmp43 + p_init0;
  const Scalar _tmp45 = _tmp29 + _tmp34;
  const Scalar _tmp46 = _tmp45 + p_init1;
  const Scalar _tmp47 = std::pow(Scalar(-_tmp44 + p_b(0, 0)), Scalar(2)) +
                        std::pow(Scalar(-_tmp46 + p_b(1, 0)), Scalar(2));
  const Scalar _tmp48 = _tmp20 + _tmp42;
  const Scalar _tmp49 = _tmp48 + p_init0;
  const Scalar _tmp50 = _tmp49 - p_c(0, 0);
  const Scalar _tmp51 = _tmp31 + _tmp33;
  const Scalar _tmp52 = _tmp29 + _tmp51;
  const Scalar _tmp53 = _tmp52 + p_init1;
  const Scalar _tmp54 = _tmp53 - p_c(1, 0);
  const Scalar _tmp55 = std::pow(Scalar(std::pow(_tmp50, Scalar(2)) + std::pow(_tmp54, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp56 = _tmp54 * _tmp55;
  const Scalar _tmp57 = _tmp50 * _tmp55;
  const Scalar _tmp58 = _tmp46 - p_b(1, 0);
  const Scalar _tmp59 = _tmp44 - p_b(0, 0);
  const Scalar _tmp60 =
      std::sqrt(Scalar(std::pow(_tmp58, Scalar(2)) + std::pow(_tmp59, Scalar(2))));
  const Scalar _tmp61 = Scalar(1.0) / (_tmp60);
  const Scalar _tmp62 = Scalar(1.0) / (_tmp59);
  const Scalar _tmp63 = _tmp60 * _tmp62;
  const Scalar _tmp64 = _tmp63 * (_tmp43 * _tmp58 * _tmp61 - _tmp45 * _tmp59 * _tmp61);
  const Scalar _tmp65 = _tmp30 + _tmp51;
  const Scalar _tmp66 = _tmp65 + p_init1;
  const Scalar _tmp67 = _tmp66 - p_d(1, 0);
  const Scalar _tmp68 = _tmp20 + _tmp26;
  const Scalar _tmp69 = _tmp68 + p_init0;
  const Scalar _tmp70 = _tmp69 - p_d(0, 0);
  const Scalar _tmp71 = std::pow(Scalar(std::pow(_tmp67, Scalar(2)) + std::pow(_tmp70, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp72 = _tmp70 * _tmp71;
  const Scalar _tmp73 = _tmp67 * _tmp71;
  const Scalar _tmp74 = _tmp64 * _tmp72 + _tmp65 * _tmp72 - _tmp68 * _tmp73;
  const Scalar _tmp75 = _tmp58 * _tmp62;
  const Scalar _tmp76 = Scalar(1.0) / (_tmp72 * _tmp75 - _tmp73);
  const Scalar _tmp77 = -_tmp56 + _tmp57 * _tmp75;
  const Scalar _tmp78 = _tmp76 * _tmp77;
  const Scalar _tmp79 = -_tmp48 * _tmp56 + _tmp52 * _tmp57 + _tmp57 * _tmp64 - _tmp74 * _tmp78;
  const Scalar _tmp80 = Scalar(1.0) / (_tmp79);
  const Scalar _tmp81 = _tmp12 + _tmp15;
  const Scalar _tmp82 = _tmp81 + _tmp9;
  const Scalar _tmp83 = _tmp41 * _tmp72 - _tmp72 * _tmp82;
  const Scalar _tmp84 = _tmp8 + _tmp81;
  const Scalar _tmp85 = _tmp41 * _tmp75;
  const Scalar _tmp86 = -_tmp72 * _tmp85 + _tmp73 * _tmp82;
  const Scalar _tmp87 = _tmp56 * _tmp84 - _tmp57 * _tmp85 - _tmp78 * _tmp86;
  const Scalar _tmp88 = Scalar(1.0) * _tmp45;
  const Scalar _tmp89 = -_tmp88;
  const Scalar _tmp90 = Scalar(1.0) / (_tmp65 + _tmp89);
  const Scalar _tmp91 = Scalar(1.0) * _tmp43;
  const Scalar _tmp92 = _tmp90 * (-_tmp68 + _tmp91);
  const Scalar _tmp93 = _tmp41 * _tmp57 - _tmp57 * _tmp84 - _tmp78 * _tmp83 - _tmp87 * _tmp92;
  const Scalar _tmp94 = _tmp80 * _tmp93;
  const Scalar _tmp95 = _tmp52 + _tmp89;
  const Scalar _tmp96 = _tmp92 * _tmp95;
  const Scalar _tmp97 = Scalar(1.0) / (-_tmp48 + _tmp91 - _tmp96);
  const Scalar _tmp98 = Scalar(1.0) * _tmp97;
  const Scalar _tmp99 = _tmp95 * _tmp98;
  const Scalar _tmp100 = Scalar(1.0) * _tmp80;
  const Scalar _tmp101 = -_tmp100 * _tmp87 + _tmp94 * _tmp99;
  const Scalar _tmp102 = Scalar(1.0) * _tmp90;
  const Scalar _tmp103 = _tmp94 * _tmp98;
  const Scalar _tmp104 = _tmp28 - p_a(0, 0);
  const Scalar _tmp105 = _tmp36 - p_a(1, 0);
  const Scalar _tmp106 =
      std::pow(Scalar(std::pow(_tmp104, Scalar(2)) + std::pow(_tmp105, Scalar(2))),
               Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp107 = _tmp105 * _tmp106;
  const Scalar _tmp108 = _tmp104 * _tmp106;
  const Scalar _tmp109 = fh1 * (_tmp107 * _tmp27 - _tmp108 * _tmp35);
  const Scalar _tmp110 = _tmp75 * _tmp76;
  const Scalar _tmp111 = _tmp110 * _tmp86 + _tmp85;
  const Scalar _tmp112 = _tmp110 * _tmp83 - _tmp111 * _tmp92 - _tmp41;
  const Scalar _tmp113 = Scalar(1.0) / (_tmp93);
  const Scalar _tmp114 = _tmp113 * _tmp79;
  const Scalar _tmp115 = _tmp94 * (_tmp110 * _tmp74 - _tmp112 * _tmp114 - _tmp64);
  const Scalar _tmp116 = _tmp95 * _tmp97;
  const Scalar _tmp117 = _tmp112 + _tmp115;
  const Scalar _tmp118 = _tmp113 * _tmp87;
  const Scalar _tmp119 = _tmp111 + _tmp115 * _tmp116 - _tmp117 * _tmp118;
  const Scalar _tmp120 = _tmp108 * fh1;
  const Scalar _tmp121 = Scalar(1.0) * _tmp76;
  const Scalar _tmp122 = _tmp121 * _tmp86;
  const Scalar _tmp123 = -_tmp121 * _tmp83 + _tmp122 * _tmp92;
  const Scalar _tmp124 = _tmp94 * (-_tmp114 * _tmp123 - _tmp121 * _tmp74);
  const Scalar _tmp125 = _tmp123 + _tmp124;
  const Scalar _tmp126 = _tmp116 * _tmp124 - _tmp118 * _tmp125 - _tmp122;
  const Scalar _tmp127 = _tmp107 * fh1;
  const Scalar _tmp128 = _tmp17 * fh1;
  const Scalar _tmp129 = -_tmp107 * _tmp128 - Scalar(5.1796800000000003) * _tmp32 - _tmp35 * fv1;
  const Scalar _tmp130 = _tmp90 * (_tmp96 * _tmp98 + Scalar(1.0));
  const Scalar _tmp131 = _tmp92 * _tmp98;
  const Scalar _tmp132 = _tmp108 * _tmp128 + Scalar(5.1796800000000003) * _tmp22 + _tmp27 * fv1;
  const Scalar _tmp133 = Scalar(43.164000000000001) - fv1;
  const Scalar _tmp134 = _tmp88 * _tmp92 + _tmp91;
  const Scalar _tmp135 = _tmp134 * _tmp97;
  const Scalar _tmp136 = 0;
  const Scalar _tmp137 = _tmp90 * (-_tmp135 * _tmp95 - _tmp136 * _tmp87 + _tmp89);
  const Scalar _tmp138 = _tmp113 * _tmp77;
  const Scalar _tmp139 = -_tmp125 * _tmp138 + Scalar(1.0);
  const Scalar _tmp140 = _tmp72 * _tmp76;
  const Scalar _tmp141 = _tmp113 * _tmp57;
  const Scalar _tmp142 = -_tmp117 * _tmp138 - _tmp75;
  const Scalar _tmp143 = _tmp121 * _tmp77 * _tmp80;
  const Scalar _tmp144 = -_tmp109 * _tmp63 * (_tmp100 * _tmp57 - _tmp143 * _tmp72) -
                         _tmp120 * _tmp63 * (_tmp117 * _tmp141 + _tmp140 * _tmp142 + Scalar(1.0)) -
                         _tmp127 * _tmp63 * (_tmp125 * _tmp141 + _tmp139 * _tmp140) -
                         _tmp133 * _tmp63 * (_tmp136 * _tmp57 - _tmp136 * _tmp72 * _tmp78);
  const Scalar _tmp145 = Scalar(1.0) / (_tmp144);
  const Scalar _tmp146 =
      std::asinh(_tmp145 * (Scalar(1.0) * _tmp109 * (-_tmp101 * _tmp102 + _tmp103) +
                            Scalar(1.0) * _tmp120 * (-_tmp102 * _tmp119 + _tmp115 * _tmp98) +
                            Scalar(1.0) * _tmp127 * (-_tmp102 * _tmp126 + _tmp124 * _tmp98) +
                            Scalar(1.0) * _tmp129 * (-Scalar(1.0) * _tmp130 + _tmp131) +
                            Scalar(1.0) * _tmp132 * (_tmp90 * _tmp99 - _tmp98) +
                            Scalar(1.0) * _tmp133 *
                                (-_tmp134 * _tmp98 - Scalar(1.0) * _tmp137 + Scalar(1.0))));
  const Scalar _tmp147 = Scalar(9.6622558468725703) * _tmp144;
  const Scalar _tmp148 = _tmp133 * _tmp136;
  const Scalar _tmp149 = -_tmp109 * _tmp143 + _tmp120 * _tmp142 * _tmp76 +
                         _tmp127 * _tmp139 * _tmp76 - _tmp148 * _tmp78;
  const Scalar _tmp150 = Scalar(1.0) / (_tmp149);
  const Scalar _tmp151 = _tmp132 * _tmp98;
  const Scalar _tmp152 =
      std::asinh(_tmp150 * (_tmp101 * _tmp109 * _tmp90 + _tmp119 * _tmp120 * _tmp90 +
                            _tmp126 * _tmp127 * _tmp90 + _tmp129 * _tmp130 + _tmp133 * _tmp137 -
                            _tmp151 * _tmp90 * _tmp95));
  const Scalar _tmp153 = Scalar(9.6622558468725703) * _tmp149;
  const Scalar _tmp154 = std::pow(Scalar(-_tmp66 + p_d(1, 0)), Scalar(2)) +
                         std::pow(Scalar(-_tmp69 + p_d(0, 0)), Scalar(2));
  const Scalar _tmp155 = std::pow(Scalar(-_tmp49 + p_c(0, 0)), Scalar(2)) +
                         std::pow(Scalar(-_tmp53 + p_c(1, 0)), Scalar(2));
  const Scalar _tmp156 =
      _tmp100 * _tmp109 + _tmp113 * _tmp117 * _tmp120 + _tmp113 * _tmp125 * _tmp127 + _tmp148;
  const Scalar _tmp157 = Scalar(1.0) / (_tmp156);
  const Scalar _tmp158 = std::asinh(_tmp157 * (-_tmp103 * _tmp109 - _tmp115 * _tmp120 * _tmp97 -
                                               _tmp124 * _tmp127 * _tmp97 - _tmp129 * _tmp131 +
                                               _tmp133 * _tmp135 + _tmp151));
  const Scalar _tmp159 = Scalar(9.6622558468725703) * _tmp156;

  // Output terms (1)
  Eigen::Matrix<Scalar, 4, 1> _res;

  _res(0, 0) =
      _tmp40 * (-std::sinh(Scalar(1.0) * _tmp39) -
                std::sinh(Scalar(0.1034955) * _tmp38 * (-std::sqrt(_tmp37) - _tmp39 * _tmp40))) -
      std::sqrt(Scalar(_tmp37 + std::pow(Scalar(-_tmp17 + p_a(2, 0) - p_init2), Scalar(2))));
  _res(1, 0) =
      _tmp147 *
          (-std::sinh(Scalar(1.0) * _tmp146) -
           std::sinh(Scalar(0.1034955) * _tmp145 * (-_tmp146 * _tmp147 - std::sqrt(_tmp47)))) -
      std::sqrt(Scalar(_tmp47 + std::pow(Scalar(-_tmp41 + p_b(2, 0) - p_init2), Scalar(2))));
  _res(2, 0) =
      _tmp153 *
          (-std::sinh(Scalar(1.0) * _tmp152) -
           std::sinh(Scalar(0.1034955) * _tmp150 * (-_tmp152 * _tmp153 - std::sqrt(_tmp154)))) -
      std::sqrt(Scalar(_tmp154 + std::pow(Scalar(-_tmp82 + p_d(2, 0) - p_init2), Scalar(2))));
  _res(3, 0) =
      _tmp159 *
          (-std::sinh(Scalar(1.0) * _tmp158) -
           std::sinh(Scalar(0.1034955) * _tmp157 * (-std::sqrt(_tmp155) - _tmp158 * _tmp159))) -
      std::sqrt(Scalar(_tmp155 + std::pow(Scalar(-_tmp84 + p_c(2, 0) - p_init2), Scalar(2))));

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
