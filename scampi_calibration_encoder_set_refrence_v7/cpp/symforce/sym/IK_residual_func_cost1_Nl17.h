// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

#include <sym/rot3.h>

namespace sym {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: IK_residual_func_cost1_Nl17
 *
 * Args:
 *     fh1: Scalar
 *     fv1: Scalar
 *     DeltaRot: Rot3
 *     p_a: Matrix31
 *     p_b: Matrix31
 *     p_c: Matrix31
 *     p_d: Matrix31
 *     p_init0: Scalar
 *     p_init1: Scalar
 *     p_init2: Scalar
 *     rot_init_x: Scalar
 *     rot_init_y: Scalar
 *     rot_init_z: Scalar
 *     rot_init_w: Scalar
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix41
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 4, 1> IkResidualFuncCost1Nl17(
    const Scalar fh1, const Scalar fv1, const sym::Rot3<Scalar>& DeltaRot,
    const Eigen::Matrix<Scalar, 3, 1>& p_a, const Eigen::Matrix<Scalar, 3, 1>& p_b,
    const Eigen::Matrix<Scalar, 3, 1>& p_c, const Eigen::Matrix<Scalar, 3, 1>& p_d,
    const Scalar p_init0, const Scalar p_init1, const Scalar p_init2, const Scalar rot_init_x,
    const Scalar rot_init_y, const Scalar rot_init_z, const Scalar rot_init_w,
    const Scalar epsilon) {
  // Total ops: 479

  // Unused inputs
  (void)epsilon;

  // Input arrays
  const Eigen::Matrix<Scalar, 4, 1>& _DeltaRot = DeltaRot.Data();

  // Intermediate terms (163)
  const Scalar _tmp0 = Scalar(1.0) / (fh1);
  const Scalar _tmp1 = std::asinh(_tmp0 * fv1);
  const Scalar _tmp2 = Scalar(9.6622558468725703) * fh1;
  const Scalar _tmp3 = -_DeltaRot[0] * rot_init_y + _DeltaRot[1] * rot_init_x +
                       _DeltaRot[2] * rot_init_w + _DeltaRot[3] * rot_init_z;
  const Scalar _tmp4 = -2 * std::pow(_tmp3, Scalar(2));
  const Scalar _tmp5 = _DeltaRot[0] * rot_init_z + _DeltaRot[1] * rot_init_w -
                       _DeltaRot[2] * rot_init_x + _DeltaRot[3] * rot_init_y;
  const Scalar _tmp6 = 1 - 2 * std::pow(_tmp5, Scalar(2));
  const Scalar _tmp7 = Scalar(0.20999999999999999) * _tmp4 + Scalar(0.20999999999999999) * _tmp6;
  const Scalar _tmp8 = _DeltaRot[0] * rot_init_w - _DeltaRot[1] * rot_init_z +
                       _DeltaRot[2] * rot_init_y + _DeltaRot[3] * rot_init_x;
  const Scalar _tmp9 = 2 * _tmp3;
  const Scalar _tmp10 = _tmp8 * _tmp9;
  const Scalar _tmp11 = -_DeltaRot[0] * rot_init_x - _DeltaRot[1] * rot_init_y -
                        _DeltaRot[2] * rot_init_z + _DeltaRot[3] * rot_init_w;
  const Scalar _tmp12 = 2 * _tmp5;
  const Scalar _tmp13 = _tmp11 * _tmp12;
  const Scalar _tmp14 = _tmp10 + _tmp13;
  const Scalar _tmp15 = -Scalar(0.010999999999999999) * _tmp14;
  const Scalar _tmp16 = _tmp12 * _tmp8;
  const Scalar _tmp17 = _tmp11 * _tmp9;
  const Scalar _tmp18 = Scalar(0.20999999999999999) * _tmp16 - Scalar(0.20999999999999999) * _tmp17;
  const Scalar _tmp19 = _tmp15 + _tmp18;
  const Scalar _tmp20 = _tmp19 + _tmp7;
  const Scalar _tmp21 = _tmp20 + p_init0;
  const Scalar _tmp22 = -2 * std::pow(_tmp8, Scalar(2));
  const Scalar _tmp23 = Scalar(0.20999999999999999) * _tmp22 + Scalar(0.20999999999999999) * _tmp4 +
                        Scalar(0.20999999999999999);
  const Scalar _tmp24 = _tmp5 * _tmp9;
  const Scalar _tmp25 = 2 * _tmp11 * _tmp8;
  const Scalar _tmp26 = _tmp24 - _tmp25;
  const Scalar _tmp27 = -Scalar(0.010999999999999999) * _tmp26;
  const Scalar _tmp28 = Scalar(0.20999999999999999) * _tmp16 + Scalar(0.20999999999999999) * _tmp17;
  const Scalar _tmp29 = _tmp27 + _tmp28;
  const Scalar _tmp30 = _tmp23 + _tmp29;
  const Scalar _tmp31 = _tmp30 + p_init1;
  const Scalar _tmp32 = Scalar(0.1034955) * _tmp0;
  const Scalar _tmp33 = Scalar(0.20999999999999999) * _tmp10 - Scalar(0.20999999999999999) * _tmp13;
  const Scalar _tmp34 =
      -Scalar(0.010999999999999999) * _tmp22 - Scalar(0.010999999999999999) * _tmp6;
  const Scalar _tmp35 = Scalar(0.20999999999999999) * _tmp24 + Scalar(0.20999999999999999) * _tmp25;
  const Scalar _tmp36 = _tmp34 + _tmp35;
  const Scalar _tmp37 = _tmp33 + _tmp36;
  const Scalar _tmp38 = -_tmp7;
  const Scalar _tmp39 = _tmp19 + _tmp38;
  const Scalar _tmp40 = _tmp39 + p_init0;
  const Scalar _tmp41 = _tmp27 - _tmp28;
  const Scalar _tmp42 = _tmp23 + _tmp41;
  const Scalar _tmp43 = _tmp42 + p_init1;
  const Scalar _tmp44 = _tmp43 - p_d(1, 0);
  const Scalar _tmp45 = _tmp40 - p_d(0, 0);
  const Scalar _tmp46 = Scalar(1.0) / (_tmp45);
  const Scalar _tmp47 = _tmp44 * _tmp46;
  const Scalar _tmp48 = -_tmp23;
  const Scalar _tmp49 = _tmp29 + _tmp48;
  const Scalar _tmp50 = _tmp49 + p_init1;
  const Scalar _tmp51 = _tmp50 - p_b(1, 0);
  const Scalar _tmp52 = _tmp15 - _tmp18;
  const Scalar _tmp53 = _tmp52 + _tmp7;
  const Scalar _tmp54 = _tmp53 + p_init0;
  const Scalar _tmp55 = _tmp54 - p_b(0, 0);
  const Scalar _tmp56 = std::pow(Scalar(std::pow(_tmp51, Scalar(2)) + std::pow(_tmp55, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp57 = _tmp55 * _tmp56;
  const Scalar _tmp58 =
      std::sqrt(Scalar(std::pow(_tmp44, Scalar(2)) + std::pow(_tmp45, Scalar(2))));
  const Scalar _tmp59 = Scalar(1.0) / (_tmp58);
  const Scalar _tmp60 = _tmp46 * _tmp58;
  const Scalar _tmp61 = _tmp60 * (_tmp39 * _tmp44 * _tmp59 - _tmp42 * _tmp45 * _tmp59);
  const Scalar _tmp62 = _tmp51 * _tmp56;
  const Scalar _tmp63 = _tmp49 * _tmp57 - _tmp53 * _tmp62 + _tmp57 * _tmp61;
  const Scalar _tmp64 = Scalar(1.0) / (_tmp47 * _tmp57 - _tmp62);
  const Scalar _tmp65 = _tmp47 * _tmp64;
  const Scalar _tmp66 = -_tmp33;
  const Scalar _tmp67 = _tmp36 + _tmp66;
  const Scalar _tmp68 = _tmp57 * _tmp67;
  const Scalar _tmp69 = _tmp34 - _tmp35;
  const Scalar _tmp70 = _tmp33 + _tmp69;
  const Scalar _tmp71 = -_tmp57 * _tmp70 + _tmp68;
  const Scalar _tmp72 = -_tmp47 * _tmp68 + _tmp62 * _tmp70;
  const Scalar _tmp73 = _tmp47 * _tmp67 + _tmp65 * _tmp72;
  const Scalar _tmp74 = Scalar(1.0) * _tmp42;
  const Scalar _tmp75 = -_tmp74;
  const Scalar _tmp76 = Scalar(1.0) / (_tmp49 + _tmp75);
  const Scalar _tmp77 = Scalar(1.0) * _tmp39;
  const Scalar _tmp78 = _tmp76 * (-_tmp53 + _tmp77);
  const Scalar _tmp79 = _tmp65 * _tmp71 - _tmp67 - _tmp73 * _tmp78;
  const Scalar _tmp80 = _tmp38 + _tmp52;
  const Scalar _tmp81 = _tmp80 + p_init0;
  const Scalar _tmp82 = _tmp81 - p_a(0, 0);
  const Scalar _tmp83 = _tmp41 + _tmp48;
  const Scalar _tmp84 = _tmp83 + p_init1;
  const Scalar _tmp85 = _tmp84 - p_a(1, 0);
  const Scalar _tmp86 = std::pow(Scalar(std::pow(_tmp82, Scalar(2)) + std::pow(_tmp85, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp87 = _tmp82 * _tmp86;
  const Scalar _tmp88 = _tmp67 * _tmp87;
  const Scalar _tmp89 = _tmp66 + _tmp69;
  const Scalar _tmp90 = _tmp85 * _tmp86;
  const Scalar _tmp91 = _tmp47 * _tmp87 - _tmp90;
  const Scalar _tmp92 = _tmp64 * _tmp91;
  const Scalar _tmp93 = -_tmp47 * _tmp88 - _tmp72 * _tmp92 + _tmp89 * _tmp90;
  const Scalar _tmp94 = -_tmp71 * _tmp92 - _tmp78 * _tmp93 - _tmp87 * _tmp89 + _tmp88;
  const Scalar _tmp95 = Scalar(1.0) / (_tmp94);
  const Scalar _tmp96 = _tmp61 * _tmp87 - _tmp63 * _tmp92 - _tmp80 * _tmp90 + _tmp83 * _tmp87;
  const Scalar _tmp97 = _tmp95 * _tmp96;
  const Scalar _tmp98 = Scalar(1.0) / (_tmp96);
  const Scalar _tmp99 = _tmp94 * _tmp98;
  const Scalar _tmp100 = _tmp99 * (-_tmp61 + _tmp63 * _tmp65 - _tmp79 * _tmp97);
  const Scalar _tmp101 = _tmp100 + _tmp79;
  const Scalar _tmp102 = _tmp91 * _tmp95;
  const Scalar _tmp103 = -_tmp101 * _tmp102 - _tmp47;
  const Scalar _tmp104 = _tmp57 * _tmp64;
  const Scalar _tmp105 = _tmp87 * _tmp95;
  const Scalar _tmp106 = _tmp21 - p_c(0, 0);
  const Scalar _tmp107 = _tmp31 - p_c(1, 0);
  const Scalar _tmp108 =
      std::pow(Scalar(std::pow(_tmp106, Scalar(2)) + std::pow(_tmp107, Scalar(2))),
               Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp109 = _tmp106 * _tmp108;
  const Scalar _tmp110 = _tmp109 * fh1;
  const Scalar _tmp111 = Scalar(1.0) * _tmp98;
  const Scalar _tmp112 = _tmp57 * _tmp92;
  const Scalar _tmp113 = _tmp107 * _tmp108;
  const Scalar _tmp114 = fh1 * (-_tmp109 * _tmp30 + _tmp113 * _tmp20);
  const Scalar _tmp115 = Scalar(1.0) * _tmp64;
  const Scalar _tmp116 = _tmp115 * _tmp72;
  const Scalar _tmp117 = -_tmp115 * _tmp71 + _tmp116 * _tmp78;
  const Scalar _tmp118 = _tmp99 * (-_tmp115 * _tmp63 - _tmp117 * _tmp97);
  const Scalar _tmp119 = _tmp117 + _tmp118;
  const Scalar _tmp120 = -_tmp102 * _tmp119 + Scalar(1.0);
  const Scalar _tmp121 = _tmp113 * fh1;
  const Scalar _tmp122 = Scalar(43.164000000000001) - fv1;
  const Scalar _tmp123 = _tmp74 * _tmp78 + _tmp77;
  const Scalar _tmp124 = 0;
  const Scalar _tmp125 = _tmp124 * _tmp95;
  const Scalar _tmp126 = -_tmp110 * _tmp60 * (_tmp101 * _tmp105 + _tmp103 * _tmp104 + Scalar(1.0)) -
                         _tmp114 * _tmp60 * (-_tmp111 * _tmp112 + _tmp111 * _tmp87) -
                         _tmp121 * _tmp60 * (_tmp104 * _tmp120 + _tmp105 * _tmp119) -
                         _tmp122 * _tmp60 * (-_tmp112 * _tmp125 + _tmp125 * _tmp87);
  const Scalar _tmp127 = Scalar(1.0) / (_tmp126);
  const Scalar _tmp128 = _tmp37 * fh1;
  const Scalar _tmp129 = _tmp109 * _tmp128 + Scalar(5.1796800000000003) * _tmp14 + _tmp20 * fv1;
  const Scalar _tmp130 = _tmp75 + _tmp83;
  const Scalar _tmp131 = _tmp130 * _tmp78;
  const Scalar _tmp132 = Scalar(1.0) / (-_tmp131 + _tmp77 - _tmp80);
  const Scalar _tmp133 = Scalar(1.0) * _tmp132;
  const Scalar _tmp134 = _tmp130 * _tmp76;
  const Scalar _tmp135 = -_tmp113 * _tmp128 - Scalar(5.1796800000000003) * _tmp26 - _tmp30 * fv1;
  const Scalar _tmp136 = _tmp76 * (_tmp131 * _tmp133 + Scalar(1.0));
  const Scalar _tmp137 = _tmp133 * _tmp78;
  const Scalar _tmp138 = _tmp130 * _tmp132;
  const Scalar _tmp139 = _tmp93 * _tmp95;
  const Scalar _tmp140 = _tmp100 * _tmp138 - _tmp101 * _tmp139 + _tmp73;
  const Scalar _tmp141 = Scalar(1.0) * _tmp76;
  const Scalar _tmp142 = _tmp123 * _tmp132;
  const Scalar _tmp143 = -_tmp124 * _tmp139 - _tmp130 * _tmp142 + _tmp75;
  const Scalar _tmp144 = _tmp133 * _tmp99;
  const Scalar _tmp145 = -_tmp111 * _tmp93 + _tmp130 * _tmp144;
  const Scalar _tmp146 = -_tmp116 + _tmp118 * _tmp138 - _tmp119 * _tmp139;
  const Scalar _tmp147 = std::asinh(
      _tmp127 * (Scalar(1.0) * _tmp110 * (_tmp100 * _tmp133 - _tmp140 * _tmp141) +
                 Scalar(1.0) * _tmp114 * (-_tmp141 * _tmp145 + _tmp144) +
                 Scalar(1.0) * _tmp121 * (_tmp118 * _tmp133 - _tmp141 * _tmp146) +
                 Scalar(1.0) * _tmp122 * (-_tmp123 * _tmp133 - _tmp141 * _tmp143 + Scalar(1.0)) +
                 Scalar(1.0) * _tmp129 * (_tmp133 * _tmp134 - _tmp133) +
                 Scalar(1.0) * _tmp135 * (-Scalar(1.0) * _tmp136 + _tmp137)));
  const Scalar _tmp148 = Scalar(9.6622558468725703) * _tmp126;
  const Scalar _tmp149 = Scalar(0.1034955) * _tmp127;
  const Scalar _tmp150 = _tmp122 * _tmp125;
  const Scalar _tmp151 = _tmp111 * _tmp114;
  const Scalar _tmp152 =
      _tmp103 * _tmp110 * _tmp64 + _tmp120 * _tmp121 * _tmp64 - _tmp150 * _tmp92 - _tmp151 * _tmp92;
  const Scalar _tmp153 = Scalar(1.0) / (_tmp152);
  const Scalar _tmp154 = _tmp129 * _tmp133;
  const Scalar _tmp155 =
      std::asinh(_tmp153 * (_tmp110 * _tmp140 * _tmp76 + _tmp114 * _tmp145 * _tmp76 +
                            _tmp121 * _tmp146 * _tmp76 + _tmp122 * _tmp143 * _tmp76 -
                            _tmp134 * _tmp154 + _tmp135 * _tmp136));
  const Scalar _tmp156 = Scalar(9.6622558468725703) * _tmp152;
  const Scalar _tmp157 = Scalar(0.1034955) * _tmp153;
  const Scalar _tmp158 =
      _tmp101 * _tmp110 * _tmp95 + _tmp119 * _tmp121 * _tmp95 + _tmp150 + _tmp151;
  const Scalar _tmp159 = Scalar(1.0) / (_tmp158);
  const Scalar _tmp160 = Scalar(0.1034955) * _tmp159;
  const Scalar _tmp161 = std::asinh(_tmp159 * (-_tmp100 * _tmp110 * _tmp132 - _tmp114 * _tmp144 -
                                               _tmp118 * _tmp121 * _tmp132 + _tmp122 * _tmp142 -
                                               _tmp135 * _tmp137 + _tmp154));
  const Scalar _tmp162 = Scalar(9.6622558468725703) * _tmp158;

  // Output terms (1)
  Eigen::Matrix<Scalar, 4, 1> _res;

  _res(0, 0) =
      -_tmp2 * (_tmp32 * p_c(2, 0) + std::cosh(Scalar(1.0) * _tmp1) -
                std::cosh(_tmp32 *
                          (-_tmp1 * _tmp2 -
                           std::sqrt(Scalar(std::pow(Scalar(-_tmp21 + p_c(0, 0)), Scalar(2)) +
                                            std::pow(Scalar(-_tmp31 + p_c(1, 0)), Scalar(2))))))) +
      _tmp37 + p_init2;
  _res(1, 0) =
      -_tmp148 *
          (_tmp149 * p_d(2, 0) + std::cosh(Scalar(1.0) * _tmp147) -
           std::cosh(_tmp149 *
                     (-_tmp147 * _tmp148 -
                      std::sqrt(Scalar(std::pow(Scalar(-_tmp40 + p_d(0, 0)), Scalar(2)) +
                                       std::pow(Scalar(-_tmp43 + p_d(1, 0)), Scalar(2))))))) +
      _tmp67 + p_init2;
  _res(2, 0) =
      -_tmp156 *
          (_tmp157 * p_b(2, 0) + std::cosh(Scalar(1.0) * _tmp155) -
           std::cosh(_tmp157 *
                     (-_tmp155 * _tmp156 -
                      std::sqrt(Scalar(std::pow(Scalar(-_tmp50 + p_b(1, 0)), Scalar(2)) +
                                       std::pow(Scalar(-_tmp54 + p_b(0, 0)), Scalar(2))))))) +
      _tmp70 + p_init2;
  _res(3, 0) =
      -_tmp162 *
          (_tmp160 * p_a(2, 0) + std::cosh(Scalar(1.0) * _tmp161) -
           std::cosh(_tmp160 *
                     (-_tmp161 * _tmp162 -
                      std::sqrt(Scalar(std::pow(Scalar(-_tmp81 + p_a(0, 0)), Scalar(2)) +
                                       std::pow(Scalar(-_tmp84 + p_a(1, 0)), Scalar(2))))))) +
      _tmp89 + p_init2;

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
