// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

#include <sym/rot3.h>

namespace sym {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: IK_residual_func_cost2_Nl13
 *
 * Args:
 *     fh1: Scalar
 *     fv1: Scalar
 *     DeltaRot: Rot3
 *     p_a: Matrix31
 *     p_b: Matrix31
 *     p_c: Matrix31
 *     p_d: Matrix31
 *     p_init0: Scalar
 *     p_init1: Scalar
 *     p_init2: Scalar
 *     rot_init_x: Scalar
 *     rot_init_y: Scalar
 *     rot_init_z: Scalar
 *     rot_init_w: Scalar
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix41
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 4, 1> IkResidualFuncCost2Nl13(
    const Scalar fh1, const Scalar fv1, const sym::Rot3<Scalar>& DeltaRot,
    const Eigen::Matrix<Scalar, 3, 1>& p_a, const Eigen::Matrix<Scalar, 3, 1>& p_b,
    const Eigen::Matrix<Scalar, 3, 1>& p_c, const Eigen::Matrix<Scalar, 3, 1>& p_d,
    const Scalar p_init0, const Scalar p_init1, const Scalar p_init2, const Scalar rot_init_x,
    const Scalar rot_init_y, const Scalar rot_init_z, const Scalar rot_init_w,
    const Scalar epsilon) {
  // Total ops: 496

  // Unused inputs
  (void)epsilon;

  // Input arrays
  const Eigen::Matrix<Scalar, 4, 1>& _DeltaRot = DeltaRot.Data();

  // Intermediate terms (161)
  const Scalar _tmp0 = _DeltaRot[0] * rot_init_z + _DeltaRot[1] * rot_init_w -
                       _DeltaRot[2] * rot_init_x + _DeltaRot[3] * rot_init_y;
  const Scalar _tmp1 = -_DeltaRot[0] * rot_init_y + _DeltaRot[1] * rot_init_x +
                       _DeltaRot[2] * rot_init_w + _DeltaRot[3] * rot_init_z;
  const Scalar _tmp2 = 2 * _tmp1;
  const Scalar _tmp3 = _tmp0 * _tmp2;
  const Scalar _tmp4 = _DeltaRot[0] * rot_init_w - _DeltaRot[1] * rot_init_z +
                       _DeltaRot[2] * rot_init_y + _DeltaRot[3] * rot_init_x;
  const Scalar _tmp5 = -2 * _DeltaRot[0] * rot_init_x - 2 * _DeltaRot[1] * rot_init_y -
                       2 * _DeltaRot[2] * rot_init_z + 2 * _DeltaRot[3] * rot_init_w;
  const Scalar _tmp6 = _tmp4 * _tmp5;
  const Scalar _tmp7 = Scalar(0.20999999999999999) * _tmp3 + Scalar(0.20999999999999999) * _tmp6;
  const Scalar _tmp8 = -2 * std::pow(_tmp0, Scalar(2));
  const Scalar _tmp9 = -2 * std::pow(_tmp4, Scalar(2));
  const Scalar _tmp10 = -Scalar(0.010999999999999999) * _tmp8 -
                        Scalar(0.010999999999999999) * _tmp9 + Scalar(-0.010999999999999999);
  const Scalar _tmp11 = _tmp2 * _tmp4;
  const Scalar _tmp12 = _tmp0 * _tmp5;
  const Scalar _tmp13 = Scalar(0.20999999999999999) * _tmp11 - Scalar(0.20999999999999999) * _tmp12;
  const Scalar _tmp14 = _tmp10 + _tmp13;
  const Scalar _tmp15 = _tmp14 + _tmp7;
  const Scalar _tmp16 = 2 * _tmp0 * _tmp4;
  const Scalar _tmp17 = _tmp1 * _tmp5;
  const Scalar _tmp18 = Scalar(0.20999999999999999) * _tmp16 - Scalar(0.20999999999999999) * _tmp17;
  const Scalar _tmp19 = 1 - 2 * std::pow(_tmp1, Scalar(2));
  const Scalar _tmp20 = Scalar(0.20999999999999999) * _tmp19 + Scalar(0.20999999999999999) * _tmp8;
  const Scalar _tmp21 = _tmp11 + _tmp12;
  const Scalar _tmp22 = -Scalar(0.010999999999999999) * _tmp21;
  const Scalar _tmp23 = _tmp20 + _tmp22;
  const Scalar _tmp24 = _tmp18 + _tmp23;
  const Scalar _tmp25 = _tmp24 + p_init0;
  const Scalar _tmp26 = Scalar(0.20999999999999999) * _tmp19 + Scalar(0.20999999999999999) * _tmp9;
  const Scalar _tmp27 = _tmp3 - _tmp6;
  const Scalar _tmp28 = -Scalar(0.010999999999999999) * _tmp27;
  const Scalar _tmp29 = Scalar(0.20999999999999999) * _tmp16 + Scalar(0.20999999999999999) * _tmp17;
  const Scalar _tmp30 = _tmp28 + _tmp29;
  const Scalar _tmp31 = _tmp26 + _tmp30;
  const Scalar _tmp32 = _tmp31 + p_init1;
  const Scalar _tmp33 = std::pow(Scalar(-_tmp25 + p_c(0, 0)), Scalar(2)) +
                        std::pow(Scalar(-_tmp32 + p_c(1, 0)), Scalar(2));
  const Scalar _tmp34 = Scalar(1.0) / (fh1);
  const Scalar _tmp35 = std::asinh(_tmp34 * fv1);
  const Scalar _tmp36 = Scalar(9.6622558468725703) * fh1;
  const Scalar _tmp37 = -_tmp26;
  const Scalar _tmp38 = _tmp28 - _tmp29;
  const Scalar _tmp39 = _tmp37 + _tmp38;
  const Scalar _tmp40 = _tmp39 + p_init1;
  const Scalar _tmp41 = _tmp40 - p_a(1, 0);
  const Scalar _tmp42 = -_tmp18;
  const Scalar _tmp43 = -_tmp20 + _tmp22;
  const Scalar _tmp44 = _tmp42 + _tmp43;
  const Scalar _tmp45 = _tmp44 + p_init0;
  const Scalar _tmp46 = _tmp45 - p_a(0, 0);
  const Scalar _tmp47 = Scalar(1.0) / (_tmp46);
  const Scalar _tmp48 = _tmp41 * _tmp47;
  const Scalar _tmp49 =
      std::sqrt(Scalar(std::pow(_tmp41, Scalar(2)) + std::pow(_tmp46, Scalar(2))));
  const Scalar _tmp50 = Scalar(1.0) / (_tmp49);
  const Scalar _tmp51 = _tmp47 * _tmp49;
  const Scalar _tmp52 = _tmp51 * (-_tmp39 * _tmp46 * _tmp50 + _tmp41 * _tmp44 * _tmp50);
  const Scalar _tmp53 = _tmp26 + _tmp38;
  const Scalar _tmp54 = _tmp53 + p_init1;
  const Scalar _tmp55 = _tmp54 - p_d(1, 0);
  const Scalar _tmp56 = _tmp18 + _tmp43;
  const Scalar _tmp57 = _tmp56 + p_init0;
  const Scalar _tmp58 = _tmp57 - p_d(0, 0);
  const Scalar _tmp59 = std::pow(Scalar(std::pow(_tmp55, Scalar(2)) + std::pow(_tmp58, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp60 = _tmp58 * _tmp59;
  const Scalar _tmp61 = _tmp55 * _tmp59;
  const Scalar _tmp62 = _tmp52 * _tmp60 + _tmp53 * _tmp60 - _tmp56 * _tmp61;
  const Scalar _tmp63 = Scalar(1.0) / (_tmp48 * _tmp60 - _tmp61);
  const Scalar _tmp64 = _tmp48 * _tmp63;
  const Scalar _tmp65 = _tmp10 - _tmp13;
  const Scalar _tmp66 = _tmp65 + _tmp7;
  const Scalar _tmp67 = -_tmp7;
  const Scalar _tmp68 = _tmp65 + _tmp67;
  const Scalar _tmp69 = _tmp48 * _tmp68;
  const Scalar _tmp70 = -_tmp60 * _tmp69 + _tmp61 * _tmp66;
  const Scalar _tmp71 = _tmp64 * _tmp70 + _tmp69;
  const Scalar _tmp72 = Scalar(1.0) * _tmp39;
  const Scalar _tmp73 = -_tmp72;
  const Scalar _tmp74 = Scalar(1.0) / (_tmp53 + _tmp73);
  const Scalar _tmp75 = Scalar(1.0) * _tmp44;
  const Scalar _tmp76 = -_tmp56 + _tmp75;
  const Scalar _tmp77 = _tmp74 * _tmp76;
  const Scalar _tmp78 = -_tmp60 * _tmp66 + _tmp60 * _tmp68;
  const Scalar _tmp79 = _tmp64 * _tmp78 - _tmp68 - _tmp71 * _tmp77;
  const Scalar _tmp80 = _tmp30 + _tmp37;
  const Scalar _tmp81 = _tmp80 + p_init1;
  const Scalar _tmp82 = _tmp81 - p_b(1, 0);
  const Scalar _tmp83 = _tmp23 + _tmp42;
  const Scalar _tmp84 = _tmp83 + p_init0;
  const Scalar _tmp85 = _tmp84 - p_b(0, 0);
  const Scalar _tmp86 = std::pow(Scalar(std::pow(_tmp82, Scalar(2)) + std::pow(_tmp85, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp87 = _tmp85 * _tmp86;
  const Scalar _tmp88 = _tmp82 * _tmp86;
  const Scalar _tmp89 = _tmp48 * _tmp87 - _tmp88;
  const Scalar _tmp90 = _tmp63 * _tmp89;
  const Scalar _tmp91 = _tmp14 + _tmp67;
  const Scalar _tmp92 = -_tmp69 * _tmp87 - _tmp70 * _tmp90 + _tmp88 * _tmp91;
  const Scalar _tmp93 = _tmp68 * _tmp87 - _tmp77 * _tmp92 - _tmp78 * _tmp90 - _tmp87 * _tmp91;
  const Scalar _tmp94 = Scalar(1.0) / (_tmp93);
  const Scalar _tmp95 = _tmp52 * _tmp87 - _tmp62 * _tmp90 + _tmp80 * _tmp87 - _tmp83 * _tmp88;
  const Scalar _tmp96 = _tmp94 * _tmp95;
  const Scalar _tmp97 = Scalar(1.0) / (_tmp95);
  const Scalar _tmp98 = _tmp93 * _tmp97;
  const Scalar _tmp99 = _tmp98 * (-_tmp52 + _tmp62 * _tmp64 - _tmp79 * _tmp96);
  const Scalar _tmp100 = _tmp79 + _tmp99;
  const Scalar _tmp101 = _tmp89 * _tmp94;
  const Scalar _tmp102 = -_tmp100 * _tmp101 - _tmp48;
  const Scalar _tmp103 = _tmp60 * _tmp63;
  const Scalar _tmp104 = _tmp87 * _tmp94;
  const Scalar _tmp105 = _tmp25 - p_c(0, 0);
  const Scalar _tmp106 = _tmp32 - p_c(1, 0);
  const Scalar _tmp107 =
      std::pow(Scalar(std::pow(_tmp105, Scalar(2)) + std::pow(_tmp106, Scalar(2))),
               Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp108 = _tmp105 * _tmp107;
  const Scalar _tmp109 = _tmp108 * fh1;
  const Scalar _tmp110 = Scalar(43.164000000000001) - fv1;
  const Scalar _tmp111 = _tmp72 * _tmp77 + _tmp75;
  const Scalar _tmp112 = 0;
  const Scalar _tmp113 = _tmp112 * _tmp94;
  const Scalar _tmp114 = _tmp60 * _tmp90;
  const Scalar _tmp115 = Scalar(1.0) * _tmp97;
  const Scalar _tmp116 = _tmp106 * _tmp107;
  const Scalar _tmp117 = fh1 * (-_tmp108 * _tmp31 + _tmp116 * _tmp24);
  const Scalar _tmp118 = Scalar(1.0) * _tmp63;
  const Scalar _tmp119 = Scalar(1.0) * _tmp74;
  const Scalar _tmp120 = -_tmp118 * _tmp78 + _tmp119 * _tmp63 * _tmp70 * _tmp76;
  const Scalar _tmp121 = _tmp98 * (-_tmp118 * _tmp62 - _tmp120 * _tmp96);
  const Scalar _tmp122 = _tmp120 + _tmp121;
  const Scalar _tmp123 = -_tmp101 * _tmp122 + Scalar(1.0);
  const Scalar _tmp124 = _tmp116 * fh1;
  const Scalar _tmp125 = -_tmp109 * _tmp51 * (_tmp100 * _tmp104 + _tmp102 * _tmp103 + Scalar(1.0)) -
                         _tmp110 * _tmp51 * (-_tmp113 * _tmp114 + _tmp113 * _tmp87) -
                         _tmp117 * _tmp51 * (-_tmp114 * _tmp115 + _tmp115 * _tmp87) -
                         _tmp124 * _tmp51 * (_tmp103 * _tmp123 + _tmp104 * _tmp122);
  const Scalar _tmp126 = Scalar(1.0) / (_tmp125);
  const Scalar _tmp127 = _tmp73 + _tmp80;
  const Scalar _tmp128 = _tmp127 * _tmp77;
  const Scalar _tmp129 = Scalar(1.0) / (-_tmp128 + _tmp75 - _tmp83);
  const Scalar _tmp130 = _tmp111 * _tmp129;
  const Scalar _tmp131 = _tmp92 * _tmp94;
  const Scalar _tmp132 = -_tmp112 * _tmp131 - _tmp127 * _tmp130 + _tmp73;
  const Scalar _tmp133 = Scalar(1.0) * _tmp129;
  const Scalar _tmp134 = _tmp127 * _tmp129;
  const Scalar _tmp135 = -_tmp100 * _tmp131 + _tmp134 * _tmp99 + _tmp71;
  const Scalar _tmp136 = _tmp15 * fh1;
  const Scalar _tmp137 = _tmp108 * _tmp136 + Scalar(5.1796800000000003) * _tmp21 + _tmp24 * fv1;
  const Scalar _tmp138 = _tmp127 * _tmp74;
  const Scalar _tmp139 = _tmp133 * _tmp98;
  const Scalar _tmp140 = -_tmp115 * _tmp92 + _tmp127 * _tmp139;
  const Scalar _tmp141 = -_tmp116 * _tmp136 - Scalar(5.1796800000000003) * _tmp27 - _tmp31 * fv1;
  const Scalar _tmp142 = _tmp128 * _tmp133 + Scalar(1.0);
  const Scalar _tmp143 = _tmp133 * _tmp77;
  const Scalar _tmp144 = -_tmp118 * _tmp70 + _tmp121 * _tmp134 - _tmp122 * _tmp131;
  const Scalar _tmp145 = std::asinh(
      _tmp126 * (Scalar(1.0) * _tmp109 * (-_tmp119 * _tmp135 + _tmp133 * _tmp99) +
                 Scalar(1.0) * _tmp110 * (-_tmp111 * _tmp133 - _tmp119 * _tmp132 + Scalar(1.0)) +
                 Scalar(1.0) * _tmp117 * (-_tmp119 * _tmp140 + _tmp139) +
                 Scalar(1.0) * _tmp124 * (-_tmp119 * _tmp144 + _tmp121 * _tmp133) +
                 Scalar(1.0) * _tmp137 * (_tmp133 * _tmp138 - _tmp133) +
                 Scalar(1.0) * _tmp141 * (-_tmp119 * _tmp142 + _tmp143)));
  const Scalar _tmp146 = Scalar(9.6622558468725703) * _tmp125;
  const Scalar _tmp147 = std::pow(Scalar(-_tmp40 + p_a(1, 0)), Scalar(2)) +
                         std::pow(Scalar(-_tmp45 + p_a(0, 0)), Scalar(2));
  const Scalar _tmp148 = std::pow(Scalar(-_tmp54 + p_d(1, 0)), Scalar(2)) +
                         std::pow(Scalar(-_tmp57 + p_d(0, 0)), Scalar(2));
  const Scalar _tmp149 = _tmp115 * _tmp117;
  const Scalar _tmp150 = _tmp110 * _tmp113;
  const Scalar _tmp151 =
      _tmp102 * _tmp109 * _tmp63 + _tmp123 * _tmp124 * _tmp63 - _tmp149 * _tmp90 - _tmp150 * _tmp90;
  const Scalar _tmp152 = Scalar(1.0) / (_tmp151);
  const Scalar _tmp153 = _tmp133 * _tmp137;
  const Scalar _tmp154 =
      std::asinh(_tmp152 * (_tmp109 * _tmp135 * _tmp74 + _tmp110 * _tmp132 * _tmp74 +
                            _tmp117 * _tmp140 * _tmp74 + _tmp124 * _tmp144 * _tmp74 -
                            _tmp138 * _tmp153 + _tmp141 * _tmp142 * _tmp74));
  const Scalar _tmp155 = Scalar(9.6622558468725703) * _tmp151;
  const Scalar _tmp156 = std::pow(Scalar(-_tmp81 + p_b(1, 0)), Scalar(2)) +
                         std::pow(Scalar(-_tmp84 + p_b(0, 0)), Scalar(2));
  const Scalar _tmp157 =
      _tmp100 * _tmp109 * _tmp94 + _tmp122 * _tmp124 * _tmp94 + _tmp149 + _tmp150;
  const Scalar _tmp158 = Scalar(1.0) / (_tmp157);
  const Scalar _tmp159 =
      std::asinh(_tmp158 * (-_tmp109 * _tmp129 * _tmp99 + _tmp110 * _tmp130 - _tmp117 * _tmp139 -
                            _tmp121 * _tmp124 * _tmp129 - _tmp141 * _tmp143 + _tmp153));
  const Scalar _tmp160 = Scalar(9.6622558468725703) * _tmp157;

  // Output terms (1)
  Eigen::Matrix<Scalar, 4, 1> _res;

  _res(0, 0) =
      _tmp36 * (-std::sinh(Scalar(1.0) * _tmp35) -
                std::sinh(Scalar(0.1034955) * _tmp34 * (-std::sqrt(_tmp33) - _tmp35 * _tmp36))) -
      std::sqrt(Scalar(_tmp33 + std::pow(Scalar(-_tmp15 + p_c(2, 0) - p_init2), Scalar(2))));
  _res(1, 0) =
      _tmp146 *
          (-std::sinh(Scalar(1.0) * _tmp145) -
           std::sinh(Scalar(0.1034955) * _tmp126 * (-_tmp145 * _tmp146 - std::sqrt(_tmp147)))) -
      std::sqrt(Scalar(_tmp147 + std::pow(Scalar(-_tmp68 + p_a(2, 0) - p_init2), Scalar(2))));
  _res(2, 0) =
      _tmp155 *
          (-std::sinh(Scalar(1.0) * _tmp154) -
           std::sinh(Scalar(0.1034955) * _tmp152 * (-std::sqrt(_tmp148) - _tmp154 * _tmp155))) -
      std::sqrt(Scalar(_tmp148 + std::pow(Scalar(-_tmp66 + p_d(2, 0) - p_init2), Scalar(2))));
  _res(3, 0) =
      _tmp160 *
          (-std::sinh(Scalar(1.0) * _tmp159) -
           std::sinh(Scalar(0.1034955) * _tmp158 * (-std::sqrt(_tmp156) - _tmp159 * _tmp160))) -
      std::sqrt(Scalar(_tmp156 + std::pow(Scalar(-_tmp91 + p_b(2, 0) - p_init2), Scalar(2))));

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
